have_func: checking for rb_absint_size()... -------------------- yes

"gcc -o conftest -I/Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/x86_64-darwin19 -I/Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/backward -I/Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0 -I.  -I/usr/local/opt/libyaml/include -I/usr/local/opt/libksba/include -I/usr/local/opt/readline/include -I/usr/local/opt/zlib/include -I/usr/local/opt/openssl@1.1/include -D_XOPEN_SOURCE -D_DARWIN_C_SOURCE -D_DARWIN_UNLIMITED_SELECT -D_REENTRANT   -O3 -ggdb3 -Wall -Wextra -Wdeprecated-declarations -Wdivision-by-zero -Wimplicit-function-declaration -Wimplicit-int -Wpointer-arith -Wshorten-64-to-32 -Wwrite-strings -Wmissing-noreturn -Wno-constant-logical-operand -Wno-long-long -Wno-missing-field-initializers -Wno-overlength-strings -Wno-parentheses-equality -Wno-self-assign -Wno-tautological-compare -Wno-unused-parameter -Wno-unused-value -Wunused-variable -Wextra-tokens  -fno-common -pipe conftest.c  -L. -L/Users/dileepkumar/.rvm/rubies/ruby-2.7.0/lib -L/usr/local/opt/libyaml/lib -L/usr/local/opt/libksba/lib -L/usr/local/opt/readline/lib -L/usr/local/opt/zlib/lib -L/usr/local/opt/openssl@1.1/lib -L. -fstack-protector-strong -L/usr/local/lib -L/usr/local/opt/libyaml/lib -L/usr/local/opt/libksba/lib -L/usr/local/opt/readline/lib -L/usr/local/opt/zlib/lib -L/usr/local/opt/openssl@1.1/lib     -lruby.2.7   "
In file included from conftest.c:1:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby.h:33:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/ruby.h:29:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/defines.h:126:
In file included from /usr/local/include/stdio.h:64:
/usr/local/include/_stdio.h:93:16: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        unsigned char   *_base;
                        ^
/usr/local/include/_stdio.h:93:16: note: insert '_Nullable' if the pointer may be null
        unsigned char   *_base;
                        ^
                          _Nullable 
/usr/local/include/_stdio.h:93:16: note: insert '_Nonnull' if the pointer should never be null
        unsigned char   *_base;
                        ^
                          _Nonnull 
/usr/local/include/_stdio.h:138:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
/usr/local/include/_stdio.h:138:32: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
                                           _Nullable
/usr/local/include/_stdio.h:138:32: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
                                           _Nonnull
/usr/local/include/_stdio.h:138:40: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
/usr/local/include/_stdio.h:138:40: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
                                                   _Nullable
/usr/local/include/_stdio.h:138:40: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
                                                   _Nonnull
/usr/local/include/_stdio.h:139:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
/usr/local/include/_stdio.h:139:35: note: insert '_Nullable' if the pointer may be null
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
                                           _Nullable
/usr/local/include/_stdio.h:139:35: note: insert '_Nonnull' if the pointer should never be null
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
                                           _Nonnull
/usr/local/include/_stdio.h:140:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
/usr/local/include/_stdio.h:140:32: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
                                           _Nullable
/usr/local/include/_stdio.h:140:32: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
                                           _Nonnull
/usr/local/include/_stdio.h:140:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
/usr/local/include/_stdio.h:140:46: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
                                                         _Nullable
/usr/local/include/_stdio.h:140:46: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
                                                         _Nonnull
/usr/local/include/_stdio.h:144:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
/usr/local/include/_stdio.h:144:18: note: insert '_Nullable' if the pointer may be null
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
                          _Nullable 
/usr/local/include/_stdio.h:144:18: note: insert '_Nonnull' if the pointer should never be null
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
                          _Nonnull 
In file included from conftest.c:1:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby.h:33:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/ruby.h:29:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/defines.h:126:
/usr/local/include/stdio.h:67:13: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
extern FILE *__stdinp;
            ^
/usr/local/include/stdio.h:67:13: note: insert '_Nullable' if the pointer may be null
extern FILE *__stdinp;
            ^
              _Nullable 
/usr/local/include/stdio.h:67:13: note: insert '_Nonnull' if the pointer should never be null
extern FILE *__stdinp;
            ^
              _Nonnull 
/usr/local/include/stdio.h:386:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 int (* _Nullable)(void *, const char *, int),
                                        ^
/usr/local/include/stdio.h:386:41: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *, const char *, int),
                                        ^
                                         _Nullable
/usr/local/include/stdio.h:386:41: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *, const char *, int),
                                        ^
                                         _Nonnull
/usr/local/include/stdio.h:386:55: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
/usr/local/include/stdio.h:386:55: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
                                                       _Nullable
/usr/local/include/stdio.h:386:55: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
                                                       _Nonnull
/usr/local/include/stdio.h:387:44: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
/usr/local/include/stdio.h:387:44: note: insert '_Nullable' if the pointer may be null
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
                                            _Nullable
/usr/local/include/stdio.h:387:44: note: insert '_Nonnull' if the pointer should never be null
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
                                            _Nonnull
/usr/local/include/stdio.h:388:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 int (* _Nullable)(void *));
                                        ^
/usr/local/include/stdio.h:388:41: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *));
                                        ^
                                         _Nullable
/usr/local/include/stdio.h:388:41: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *));
                                        ^
                                         _Nonnull
/usr/local/include/stdio.h:384:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
FILE    *funopen(const void *,
        ^
/usr/local/include/stdio.h:384:6: note: insert '_Nullable' if the pointer may be null
FILE    *funopen(const void *,
        ^
          _Nullable 
/usr/local/include/stdio.h:384:6: note: insert '_Nonnull' if the pointer should never be null
FILE    *funopen(const void *,
        ^
          _Nonnull 
In file included from conftest.c:1:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby.h:33:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/ruby.h:29:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/defines.h:134:
/usr/local/include/stdlib.h:134:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   atof(const char *);
                         ^
/usr/local/include/stdlib.h:134:25: note: insert '_Nullable' if the pointer may be null
double   atof(const char *);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:134:25: note: insert '_Nonnull' if the pointer should never be null
double   atof(const char *);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:135:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      atoi(const char *);
                         ^
/usr/local/include/stdlib.h:135:22: note: insert '_Nullable' if the pointer may be null
int      atoi(const char *);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:135:22: note: insert '_Nonnull' if the pointer should never be null
int      atoi(const char *);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:136:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     atol(const char *);
                         ^
/usr/local/include/stdlib.h:136:23: note: insert '_Nullable' if the pointer may be null
long     atol(const char *);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:136:23: note: insert '_Nonnull' if the pointer should never be null
long     atol(const char *);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:139:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         atoll(const char *);
                          ^
/usr/local/include/stdlib.h:139:20: note: insert '_Nullable' if the pointer may be null
         atoll(const char *);
                          ^
                           _Nullable
/usr/local/include/stdlib.h:139:20: note: insert '_Nonnull' if the pointer should never be null
         atoll(const char *);
                          ^
                           _Nonnull
/usr/local/include/stdlib.h:141:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                            ^
/usr/local/include/stdlib.h:141:26: note: insert '_Nullable' if the pointer may be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                            ^
                              _Nullable 
/usr/local/include/stdlib.h:141:26: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                            ^
                              _Nonnull 
/usr/local/include/stdlib.h:141:45: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                                               ^
/usr/local/include/stdlib.h:141:45: note: insert '_Nullable' if the pointer may be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                                               ^
                                                 _Nullable 
/usr/local/include/stdlib.h:141:45: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                                               ^
                                                 _Nonnull 
/usr/local/include/stdlib.h:142:59: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                 ^
/usr/local/include/stdlib.h:142:59: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                 ^
                                                                  _Nullable
/usr/local/include/stdlib.h:142:59: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                 ^
                                                                  _Nonnull
/usr/local/include/stdlib.h:142:73: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                               ^
/usr/local/include/stdlib.h:142:73: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                               ^
                                                                                _Nullable
/usr/local/include/stdlib.h:142:73: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                               ^
                                                                                _Nonnull
/usr/local/include/stdlib.h:141:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch(const void *__key, const void *__base, size_t __nel,
        ^
/usr/local/include/stdlib.h:141:6: note: insert '_Nullable' if the pointer may be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
        ^
          _Nullable 
/usr/local/include/stdlib.h:141:6: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
        ^
          _Nonnull 
/usr/local/include/stdlib.h:147:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getenv(const char *);
                           ^
/usr/local/include/stdlib.h:147:25: note: insert '_Nullable' if the pointer may be null
char    *getenv(const char *);
                           ^
                            _Nullable
/usr/local/include/stdlib.h:147:25: note: insert '_Nonnull' if the pointer should never be null
char    *getenv(const char *);
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:147:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getenv(const char *);
        ^
/usr/local/include/stdlib.h:147:6: note: insert '_Nullable' if the pointer may be null
char    *getenv(const char *);
        ^
          _Nullable 
/usr/local/include/stdlib.h:147:6: note: insert '_Nonnull' if the pointer should never be null
char    *getenv(const char *);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:156:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mblen(const char *__s, size_t __n);
                          ^
/usr/local/include/stdlib.h:156:23: note: insert '_Nullable' if the pointer may be null
int      mblen(const char *__s, size_t __n);
                          ^
                            _Nullable 
/usr/local/include/stdlib.h:156:23: note: insert '_Nonnull' if the pointer should never be null
int      mblen(const char *__s, size_t __n);
                          ^
                            _Nonnull 
/usr/local/include/stdlib.h:157:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                          ^
/usr/local/include/stdlib.h:157:26: note: insert '_Nullable' if the pointer may be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                          ^
                            _Nullable
/usr/local/include/stdlib.h:157:26: note: insert '_Nonnull' if the pointer should never be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                          ^
                            _Nonnull
/usr/local/include/stdlib.h:157:52: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                                                    ^
/usr/local/include/stdlib.h:157:52: note: insert '_Nullable' if the pointer may be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                                                    ^
                                                      _Nullable
/usr/local/include/stdlib.h:157:52: note: insert '_Nonnull' if the pointer should never be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                                                    ^
                                                      _Nonnull
/usr/local/include/stdlib.h:158:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                        ^
/usr/local/include/stdlib.h:158:21: note: insert '_Nullable' if the pointer may be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                        ^
                          _Nullable
/usr/local/include/stdlib.h:158:21: note: insert '_Nonnull' if the pointer should never be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                        ^
                          _Nonnull
/usr/local/include/stdlib.h:158:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                                                 ^
/usr/local/include/stdlib.h:158:46: note: insert '_Nullable' if the pointer may be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                                                 ^
                                                   _Nullable
/usr/local/include/stdlib.h:158:46: note: insert '_Nonnull' if the pointer should never be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                                                 ^
                                                   _Nonnull
/usr/local/include/stdlib.h:160:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort(void *__base, size_t __nel, size_t __width,
                    ^
/usr/local/include/stdlib.h:160:18: note: insert '_Nullable' if the pointer may be null
void     qsort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nullable 
/usr/local/include/stdlib.h:160:18: note: insert '_Nonnull' if the pointer should never be null
void     qsort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nonnull 
/usr/local/include/stdlib.h:161:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
/usr/local/include/stdlib.h:161:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:161:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:161:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
/usr/local/include/stdlib.h:161:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:161:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:165:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                           ^
/usr/local/include/stdlib.h:165:27: note: insert '_Nullable' if the pointer may be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                           ^
                            _Nullable
/usr/local/include/stdlib.h:165:27: note: insert '_Nonnull' if the pointer should never be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:165:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                   ^
/usr/local/include/stdlib.h:165:35: note: insert '_Nullable' if the pointer may be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                   ^
                                    _Nullable
/usr/local/include/stdlib.h:165:35: note: insert '_Nonnull' if the pointer should never be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                   ^
                                    _Nonnull
/usr/local/include/stdlib.h:165:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                    ^
/usr/local/include/stdlib.h:165:36: note: insert '_Nullable' if the pointer may be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                    ^
                                     _Nullable
/usr/local/include/stdlib.h:165:36: note: insert '_Nonnull' if the pointer should never be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                    ^
                                     _Nonnull
/usr/local/include/stdlib.h:166:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                           ^
/usr/local/include/stdlib.h:166:26: note: insert '_Nullable' if the pointer may be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                           ^
                            _Nullable
/usr/local/include/stdlib.h:166:26: note: insert '_Nonnull' if the pointer should never be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:166:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                   ^
/usr/local/include/stdlib.h:166:34: note: insert '_Nullable' if the pointer may be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                   ^
                                    _Nullable
/usr/local/include/stdlib.h:166:34: note: insert '_Nonnull' if the pointer should never be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                   ^
                                    _Nonnull
/usr/local/include/stdlib.h:166:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                    ^
/usr/local/include/stdlib.h:166:35: note: insert '_Nullable' if the pointer may be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                    ^
                                     _Nullable
/usr/local/include/stdlib.h:166:35: note: insert '_Nonnull' if the pointer should never be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                    ^
                                     _Nonnull
/usr/local/include/stdlib.h:167:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     strtol(const char *__str, char **__endptr, int __base);
                           ^
/usr/local/include/stdlib.h:167:25: note: insert '_Nullable' if the pointer may be null
long     strtol(const char *__str, char **__endptr, int __base);
                           ^
                             _Nullable 
/usr/local/include/stdlib.h:167:25: note: insert '_Nonnull' if the pointer should never be null
long     strtol(const char *__str, char **__endptr, int __base);
                           ^
                             _Nonnull 
/usr/local/include/stdlib.h:167:38: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     strtol(const char *__str, char **__endptr, int __base);
                                        ^
/usr/local/include/stdlib.h:167:38: note: insert '_Nullable' if the pointer may be null
long     strtol(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nullable
/usr/local/include/stdlib.h:167:38: note: insert '_Nonnull' if the pointer should never be null
long     strtol(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nonnull
/usr/local/include/stdlib.h:167:39: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     strtol(const char *__str, char **__endptr, int __base);
                                         ^
/usr/local/include/stdlib.h:167:39: note: insert '_Nullable' if the pointer may be null
long     strtol(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nullable 
/usr/local/include/stdlib.h:167:39: note: insert '_Nonnull' if the pointer should never be null
long     strtol(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nonnull 
/usr/local/include/stdlib.h:169:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtold(const char *, char **);
                            ^
/usr/local/include/stdlib.h:169:22: note: insert '_Nullable' if the pointer may be null
         strtold(const char *, char **);
                            ^
                             _Nullable
/usr/local/include/stdlib.h:169:22: note: insert '_Nonnull' if the pointer should never be null
         strtold(const char *, char **);
                            ^
                             _Nonnull
/usr/local/include/stdlib.h:169:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtold(const char *, char **);
                                    ^
/usr/local/include/stdlib.h:169:30: note: insert '_Nullable' if the pointer may be null
         strtold(const char *, char **);
                                    ^
                                     _Nullable
/usr/local/include/stdlib.h:169:30: note: insert '_Nonnull' if the pointer should never be null
         strtold(const char *, char **);
                                    ^
                                     _Nonnull
/usr/local/include/stdlib.h:169:31: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtold(const char *, char **);
                                     ^
/usr/local/include/stdlib.h:169:31: note: insert '_Nullable' if the pointer may be null
         strtold(const char *, char **);
                                     ^
                                      _Nullable
/usr/local/include/stdlib.h:169:31: note: insert '_Nonnull' if the pointer should never be null
         strtold(const char *, char **);
                                     ^
                                      _Nonnull
/usr/local/include/stdlib.h:172:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoll(const char *__str, char **__endptr, int __base);
                            ^
/usr/local/include/stdlib.h:172:22: note: insert '_Nullable' if the pointer may be null
         strtoll(const char *__str, char **__endptr, int __base);
                            ^
                              _Nullable 
/usr/local/include/stdlib.h:172:22: note: insert '_Nonnull' if the pointer should never be null
         strtoll(const char *__str, char **__endptr, int __base);
                            ^
                              _Nonnull 
/usr/local/include/stdlib.h:172:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoll(const char *__str, char **__endptr, int __base);
                                         ^
/usr/local/include/stdlib.h:172:35: note: insert '_Nullable' if the pointer may be null
         strtoll(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nullable
/usr/local/include/stdlib.h:172:35: note: insert '_Nonnull' if the pointer should never be null
         strtoll(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nonnull
/usr/local/include/stdlib.h:172:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoll(const char *__str, char **__endptr, int __base);
                                          ^
/usr/local/include/stdlib.h:172:36: note: insert '_Nullable' if the pointer may be null
         strtoll(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nullable 
/usr/local/include/stdlib.h:172:36: note: insert '_Nonnull' if the pointer should never be null
         strtoll(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nonnull 
/usr/local/include/stdlib.h:175:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoul(const char *__str, char **__endptr, int __base);
                            ^
/usr/local/include/stdlib.h:175:22: note: insert '_Nullable' if the pointer may be null
         strtoul(const char *__str, char **__endptr, int __base);
                            ^
                              _Nullable 
/usr/local/include/stdlib.h:175:22: note: insert '_Nonnull' if the pointer should never be null
         strtoul(const char *__str, char **__endptr, int __base);
                            ^
                              _Nonnull 
/usr/local/include/stdlib.h:175:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoul(const char *__str, char **__endptr, int __base);
                                         ^
/usr/local/include/stdlib.h:175:35: note: insert '_Nullable' if the pointer may be null
         strtoul(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nullable
/usr/local/include/stdlib.h:175:35: note: insert '_Nonnull' if the pointer should never be null
         strtoul(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nonnull
/usr/local/include/stdlib.h:175:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoul(const char *__str, char **__endptr, int __base);
                                          ^
/usr/local/include/stdlib.h:175:36: note: insert '_Nullable' if the pointer may be null
         strtoul(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nullable 
/usr/local/include/stdlib.h:175:36: note: insert '_Nonnull' if the pointer should never be null
         strtoul(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nonnull 
/usr/local/include/stdlib.h:178:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoull(const char *__str, char **__endptr, int __base);
                             ^
/usr/local/include/stdlib.h:178:23: note: insert '_Nullable' if the pointer may be null
         strtoull(const char *__str, char **__endptr, int __base);
                             ^
                               _Nullable 
/usr/local/include/stdlib.h:178:23: note: insert '_Nonnull' if the pointer should never be null
         strtoull(const char *__str, char **__endptr, int __base);
                             ^
                               _Nonnull 
/usr/local/include/stdlib.h:178:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoull(const char *__str, char **__endptr, int __base);
                                          ^
/usr/local/include/stdlib.h:178:36: note: insert '_Nullable' if the pointer may be null
         strtoull(const char *__str, char **__endptr, int __base);
                                          ^
                                           _Nullable
/usr/local/include/stdlib.h:178:36: note: insert '_Nonnull' if the pointer should never be null
         strtoull(const char *__str, char **__endptr, int __base);
                                          ^
                                           _Nonnull
/usr/local/include/stdlib.h:178:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoull(const char *__str, char **__endptr, int __base);
                                           ^
/usr/local/include/stdlib.h:178:37: note: insert '_Nullable' if the pointer may be null
         strtoull(const char *__str, char **__endptr, int __base);
                                           ^
                                             _Nullable 
/usr/local/include/stdlib.h:178:37: note: insert '_Nonnull' if the pointer should never be null
         strtoull(const char *__str, char **__endptr, int __base);
                                           ^
                                             _Nonnull 
/usr/local/include/stdlib.h:190:24: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      system(const char *) __DARWIN_ALIAS_C(system);
                           ^
/usr/local/include/stdlib.h:190:24: note: insert '_Nullable' if the pointer may be null
int      system(const char *) __DARWIN_ALIAS_C(system);
                           ^
                            _Nullable
/usr/local/include/stdlib.h:190:24: note: insert '_Nonnull' if the pointer should never be null
int      system(const char *) __DARWIN_ALIAS_C(system);
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:194:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                       ^
/usr/local/include/stdlib.h:194:23: note: insert '_Nullable' if the pointer may be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                       ^
                         _Nullable
/usr/local/include/stdlib.h:194:23: note: insert '_Nonnull' if the pointer should never be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                       ^
                         _Nonnull
/usr/local/include/stdlib.h:194:51: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                                                   ^
/usr/local/include/stdlib.h:194:51: note: insert '_Nullable' if the pointer may be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                                                   ^
                                                     _Nullable
/usr/local/include/stdlib.h:194:51: note: insert '_Nonnull' if the pointer should never be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                                                   ^
                                                     _Nonnull
/usr/local/include/stdlib.h:195:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      wctomb(char *, wchar_t);
                     ^
/usr/local/include/stdlib.h:195:18: note: insert '_Nullable' if the pointer may be null
int      wctomb(char *, wchar_t);
                     ^
                      _Nullable
/usr/local/include/stdlib.h:195:18: note: insert '_Nonnull' if the pointer should never be null
int      wctomb(char *, wchar_t);
                     ^
                      _Nonnull
/usr/local/include/stdlib.h:199:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     a64l(const char *);
                         ^
/usr/local/include/stdlib.h:199:23: note: insert '_Nullable' if the pointer may be null
long     a64l(const char *);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:199:23: note: insert '_Nonnull' if the pointer should never be null
long     a64l(const char *);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:201:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
/usr/local/include/stdlib.h:201:29: note: insert '_Nullable' if the pointer may be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nullable 
/usr/local/include/stdlib.h:201:29: note: insert '_Nonnull' if the pointer should never be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nonnull 
/usr/local/include/stdlib.h:201:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
/usr/local/include/stdlib.h:201:46: note: insert '_Nullable' if the pointer may be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nullable 
/usr/local/include/stdlib.h:201:46: note: insert '_Nonnull' if the pointer should never be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nonnull 
/usr/local/include/stdlib.h:201:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
/usr/local/include/stdlib.h:201:6: note: insert '_Nullable' if the pointer may be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nullable 
/usr/local/include/stdlib.h:201:6: note: insert '_Nonnull' if the pointer should never be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nonnull 
/usr/local/include/stdlib.h:202:31: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
double   erand48(unsigned short[3]);
                               ^
/usr/local/include/stdlib.h:202:31: note: insert '_Nullable' if the array parameter may be null
double   erand48(unsigned short[3]);
                               ^
                                _Nullable 
/usr/local/include/stdlib.h:202:31: note: insert '_Nonnull' if the array parameter should never be null
double   erand48(unsigned short[3]);
                               ^
                                _Nonnull 
/usr/local/include/stdlib.h:203:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
/usr/local/include/stdlib.h:203:29: note: insert '_Nullable' if the pointer may be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nullable 
/usr/local/include/stdlib.h:203:29: note: insert '_Nonnull' if the pointer should never be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nonnull 
/usr/local/include/stdlib.h:203:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
/usr/local/include/stdlib.h:203:46: note: insert '_Nullable' if the pointer may be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nullable 
/usr/local/include/stdlib.h:203:46: note: insert '_Nonnull' if the pointer should never be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nonnull 
/usr/local/include/stdlib.h:203:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
/usr/local/include/stdlib.h:203:6: note: insert '_Nullable' if the pointer may be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nullable 
/usr/local/include/stdlib.h:203:6: note: insert '_Nonnull' if the pointer should never be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nonnull 
/usr/local/include/stdlib.h:204:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *gcvt(double, int, char *); /* LEGACY */
                                ^
/usr/local/include/stdlib.h:204:30: note: insert '_Nullable' if the pointer may be null
char    *gcvt(double, int, char *); /* LEGACY */
                                ^
                                 _Nullable
/usr/local/include/stdlib.h:204:30: note: insert '_Nonnull' if the pointer should never be null
char    *gcvt(double, int, char *); /* LEGACY */
                                ^
                                 _Nonnull
/usr/local/include/stdlib.h:204:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *gcvt(double, int, char *); /* LEGACY */
        ^
/usr/local/include/stdlib.h:204:6: note: insert '_Nullable' if the pointer may be null
char    *gcvt(double, int, char *); /* LEGACY */
        ^
          _Nullable 
/usr/local/include/stdlib.h:204:6: note: insert '_Nonnull' if the pointer should never be null
char    *gcvt(double, int, char *); /* LEGACY */
        ^
          _Nonnull 
/usr/local/include/stdlib.h:205:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                        ^
/usr/local/include/stdlib.h:205:21: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                        ^
                         _Nullable
/usr/local/include/stdlib.h:205:21: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                        ^
                         _Nonnull
/usr/local/include/stdlib.h:205:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                         ^
/usr/local/include/stdlib.h:205:22: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:205:22: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:205:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                 ^
/usr/local/include/stdlib.h:205:30: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                 ^
                                   _Nullable
/usr/local/include/stdlib.h:205:30: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                 ^
                                   _Nonnull
/usr/local/include/stdlib.h:205:38: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                         ^
/usr/local/include/stdlib.h:205:38: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                         ^
                                          _Nullable
/usr/local/include/stdlib.h:205:38: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                         ^
                                          _Nonnull
/usr/local/include/stdlib.h:205:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                                 ^
/usr/local/include/stdlib.h:205:46: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:205:46: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:205:47: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                                  ^
/usr/local/include/stdlib.h:205:47: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                                  ^
                                                   _Nullable
/usr/local/include/stdlib.h:205:47: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                                  ^
                                                   _Nonnull
/usr/local/include/stdlib.h:208:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
                                  ^
/usr/local/include/stdlib.h:208:32: note: insert '_Nullable' if the pointer may be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
                                  ^
                                   _Nullable
/usr/local/include/stdlib.h:208:32: note: insert '_Nonnull' if the pointer should never be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
                                  ^
                                   _Nonnull
/usr/local/include/stdlib.h:208:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
        ^
/usr/local/include/stdlib.h:208:6: note: insert '_Nullable' if the pointer may be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
        ^
          _Nullable 
/usr/local/include/stdlib.h:208:6: note: insert '_Nonnull' if the pointer should never be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
        ^
          _Nonnull 
/usr/local/include/stdlib.h:212:29: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
long     jrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
/usr/local/include/stdlib.h:212:29: note: insert '_Nullable' if the array parameter may be null
long     jrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nullable 
/usr/local/include/stdlib.h:212:29: note: insert '_Nonnull' if the array parameter should never be null
long     jrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nonnull 
/usr/local/include/stdlib.h:213:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *l64a(long);
        ^
/usr/local/include/stdlib.h:213:6: note: insert '_Nullable' if the pointer may be null
char    *l64a(long);
        ^
          _Nullable 
/usr/local/include/stdlib.h:213:6: note: insert '_Nonnull' if the pointer should never be null
char    *l64a(long);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:214:29: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
void     lcong48(unsigned short[7]);
                               ^
/usr/local/include/stdlib.h:214:29: note: insert '_Nullable' if the array parameter may be null
void     lcong48(unsigned short[7]);
                               ^
                                _Nullable 
/usr/local/include/stdlib.h:214:29: note: insert '_Nonnull' if the array parameter should never be null
void     lcong48(unsigned short[7]);
                               ^
                                _Nonnull 
/usr/local/include/stdlib.h:216:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *mktemp(char *);
                     ^
/usr/local/include/stdlib.h:216:19: note: insert '_Nullable' if the pointer may be null
char    *mktemp(char *);
                     ^
                      _Nullable
/usr/local/include/stdlib.h:216:19: note: insert '_Nonnull' if the pointer should never be null
char    *mktemp(char *);
                     ^
                      _Nonnull
/usr/local/include/stdlib.h:216:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *mktemp(char *);
        ^
/usr/local/include/stdlib.h:216:6: note: insert '_Nullable' if the pointer may be null
char    *mktemp(char *);
        ^
          _Nullable 
/usr/local/include/stdlib.h:216:6: note: insert '_Nonnull' if the pointer should never be null
char    *mktemp(char *);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:217:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mkstemp(char *);
                      ^
/usr/local/include/stdlib.h:217:19: note: insert '_Nullable' if the pointer may be null
int      mkstemp(char *);
                      ^
                       _Nullable
/usr/local/include/stdlib.h:217:19: note: insert '_Nonnull' if the pointer should never be null
int      mkstemp(char *);
                      ^
                       _Nonnull
/usr/local/include/stdlib.h:219:29: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
long     nrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
/usr/local/include/stdlib.h:219:29: note: insert '_Nullable' if the array parameter may be null
long     nrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nullable 
/usr/local/include/stdlib.h:219:29: note: insert '_Nonnull' if the array parameter should never be null
long     nrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nonnull 
/usr/local/include/stdlib.h:221:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ptsname(int);
        ^
/usr/local/include/stdlib.h:221:6: note: insert '_Nullable' if the pointer may be null
char    *ptsname(int);
        ^
          _Nullable 
/usr/local/include/stdlib.h:221:6: note: insert '_Nonnull' if the pointer should never be null
char    *ptsname(int);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:224:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int ptsname_r(int fildes, char *buffer, size_t buflen) __API_AVAILABLE(macos(10.13.4), ios(11.3), tvos(11.3), watchos(4.3));
                               ^
/usr/local/include/stdlib.h:224:32: note: insert '_Nullable' if the pointer may be null
int ptsname_r(int fildes, char *buffer, size_t buflen) __API_AVAILABLE(macos(10.13.4), ios(11.3), tvos(11.3), watchos(4.3));
                               ^
                                 _Nullable 
/usr/local/include/stdlib.h:224:32: note: insert '_Nonnull' if the pointer should never be null
int ptsname_r(int fildes, char *buffer, size_t buflen) __API_AVAILABLE(macos(10.13.4), ios(11.3), tvos(11.3), watchos(4.3));
                               ^
                                 _Nonnull 
/usr/local/include/stdlib.h:227:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      putenv(char *) __DARWIN_ALIAS(putenv);
                     ^
/usr/local/include/stdlib.h:227:18: note: insert '_Nullable' if the pointer may be null
int      putenv(char *) __DARWIN_ALIAS(putenv);
                     ^
                      _Nullable
/usr/local/include/stdlib.h:227:18: note: insert '_Nonnull' if the pointer should never be null
int      putenv(char *) __DARWIN_ALIAS(putenv);
                     ^
                      _Nonnull
/usr/local/include/stdlib.h:229:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      rand_r(unsigned *) __swift_unavailable("Use arc4random instead.");
                         ^
/usr/local/include/stdlib.h:229:22: note: insert '_Nullable' if the pointer may be null
int      rand_r(unsigned *) __swift_unavailable("Use arc4random instead.");
                         ^
                          _Nullable
/usr/local/include/stdlib.h:229:22: note: insert '_Nonnull' if the pointer should never be null
int      rand_r(unsigned *) __swift_unavailable("Use arc4random instead.");
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:231:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                             ^
/usr/local/include/stdlib.h:231:27: note: insert '_Nullable' if the pointer may be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                             ^
                               _Nullable
/usr/local/include/stdlib.h:231:27: note: insert '_Nonnull' if the pointer should never be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                             ^
                               _Nonnull
/usr/local/include/stdlib.h:231:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                                                ^
/usr/local/include/stdlib.h:231:46: note: insert '_Nullable' if the pointer may be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                                                ^
                                                  _Nullable
/usr/local/include/stdlib.h:231:46: note: insert '_Nonnull' if the pointer should never be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                                                ^
                                                  _Nonnull
/usr/local/include/stdlib.h:231:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
        ^
/usr/local/include/stdlib.h:231:6: note: insert '_Nullable' if the pointer may be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
        ^
          _Nullable 
/usr/local/include/stdlib.h:231:6: note: insert '_Nonnull' if the pointer should never be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:236:24: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
        *seed48(unsigned short[3]);
                              ^
/usr/local/include/stdlib.h:236:24: note: insert '_Nullable' if the array parameter may be null
        *seed48(unsigned short[3]);
                              ^
                               _Nullable 
/usr/local/include/stdlib.h:236:24: note: insert '_Nonnull' if the array parameter should never be null
        *seed48(unsigned short[3]);
                              ^
                               _Nonnull 
/usr/local/include/stdlib.h:236:2: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        *seed48(unsigned short[3]);
        ^
/usr/local/include/stdlib.h:236:2: note: insert '_Nullable' if the pointer may be null
        *seed48(unsigned short[3]);
        ^
          _Nullable 
/usr/local/include/stdlib.h:236:2: note: insert '_Nonnull' if the pointer should never be null
        *seed48(unsigned short[3]);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:237:24: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                           ^
/usr/local/include/stdlib.h:237:24: note: insert '_Nullable' if the pointer may be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                           ^
                             _Nullable
/usr/local/include/stdlib.h:237:24: note: insert '_Nonnull' if the pointer should never be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                           ^
                             _Nonnull
/usr/local/include/stdlib.h:237:45: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                                                ^
/usr/local/include/stdlib.h:237:45: note: insert '_Nullable' if the pointer may be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                                                ^
                                                  _Nullable
/usr/local/include/stdlib.h:237:45: note: insert '_Nonnull' if the pointer should never be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                                                ^
                                                  _Nonnull
/usr/local/include/stdlib.h:239:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     setkey(const char *) __DARWIN_ALIAS(setkey);
                           ^
/usr/local/include/stdlib.h:239:25: note: insert '_Nullable' if the pointer may be null
void     setkey(const char *) __DARWIN_ALIAS(setkey);
                           ^
                            _Nullable
/usr/local/include/stdlib.h:239:25: note: insert '_Nonnull' if the pointer should never be null
void     setkey(const char *) __DARWIN_ALIAS(setkey);
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:243:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *setstate(const char *);
                             ^
/usr/local/include/stdlib.h:243:27: note: insert '_Nullable' if the pointer may be null
char    *setstate(const char *);
                             ^
                              _Nullable
/usr/local/include/stdlib.h:243:27: note: insert '_Nonnull' if the pointer should never be null
char    *setstate(const char *);
                             ^
                              _Nonnull
/usr/local/include/stdlib.h:243:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *setstate(const char *);
        ^
/usr/local/include/stdlib.h:243:6: note: insert '_Nullable' if the pointer may be null
char    *setstate(const char *);
        ^
          _Nullable 
/usr/local/include/stdlib.h:243:6: note: insert '_Nonnull' if the pointer should never be null
char    *setstate(const char *);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:252:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      unsetenv(const char *) __DARWIN_ALIAS(unsetenv);
                             ^
/usr/local/include/stdlib.h:252:26: note: insert '_Nullable' if the pointer may be null
int      unsetenv(const char *) __DARWIN_ALIAS(unsetenv);
                             ^
                              _Nullable
/usr/local/include/stdlib.h:252:26: note: insert '_Nonnull' if the pointer should never be null
int      unsetenv(const char *) __DARWIN_ALIAS(unsetenv);
                             ^
                              _Nonnull
/usr/local/include/stdlib.h:265:42: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     arc4random_addrandom(unsigned char * /*dat*/, int /*datlen*/)
                                            ^
/usr/local/include/stdlib.h:265:42: note: insert '_Nullable' if the pointer may be null
void     arc4random_addrandom(unsigned char * /*dat*/, int /*datlen*/)
                                            ^
                                              _Nullable
/usr/local/include/stdlib.h:265:42: note: insert '_Nonnull' if the pointer should never be null
void     arc4random_addrandom(unsigned char * /*dat*/, int /*datlen*/)
                                            ^
                                              _Nonnull
/usr/local/include/stdlib.h:270:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     arc4random_buf(void * __buf, size_t __nbytes) __OSX_AVAILABLE_STARTING(__MAC_10_7, __IPHONE_4_3);
                             ^
/usr/local/include/stdlib.h:270:27: note: insert '_Nullable' if the pointer may be null
void     arc4random_buf(void * __buf, size_t __nbytes) __OSX_AVAILABLE_STARTING(__MAC_10_7, __IPHONE_4_3);
                             ^
                               _Nullable
/usr/local/include/stdlib.h:270:27: note: insert '_Nonnull' if the pointer should never be null
void     arc4random_buf(void * __buf, size_t __nbytes) __OSX_AVAILABLE_STARTING(__MAC_10_7, __IPHONE_4_3);
                             ^
                               _Nonnull
/usr/local/include/stdlib.h:276:28: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                              ^
/usr/local/include/stdlib.h:276:28: note: insert '_Nullable' if the pointer may be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                              ^
                                _Nullable 
/usr/local/include/stdlib.h:276:28: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                              ^
                                _Nonnull 
/usr/local/include/stdlib.h:276:47: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                                                 ^
/usr/local/include/stdlib.h:276:47: note: insert '_Nullable' if the pointer may be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                                                 ^
                                                   _Nullable 
/usr/local/include/stdlib.h:276:47: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                                                 ^
                                                   _Nonnull 
/usr/local/include/stdlib.h:277:59: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                 ^
/usr/local/include/stdlib.h:277:59: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                 ^
                                                                  _Nullable
/usr/local/include/stdlib.h:277:59: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                 ^
                                                                  _Nonnull
/usr/local/include/stdlib.h:277:73: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                               ^
/usr/local/include/stdlib.h:277:73: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                               ^
                                                                                _Nullable
/usr/local/include/stdlib.h:277:73: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                               ^
                                                                                _Nonnull
/usr/local/include/stdlib.h:276:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
        ^
/usr/local/include/stdlib.h:276:6: note: insert '_Nullable' if the pointer may be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
        ^
          _Nullable 
/usr/local/include/stdlib.h:276:6: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
        ^
          _Nonnull 
/usr/local/include/stdlib.h:281:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *cgetcap(char *, const char *, int);
                      ^
/usr/local/include/stdlib.h:281:20: note: insert '_Nullable' if the pointer may be null
char    *cgetcap(char *, const char *, int);
                      ^
                       _Nullable
/usr/local/include/stdlib.h:281:20: note: insert '_Nonnull' if the pointer should never be null
char    *cgetcap(char *, const char *, int);
                      ^
                       _Nonnull
/usr/local/include/stdlib.h:281:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *cgetcap(char *, const char *, int);
                                    ^
/usr/local/include/stdlib.h:281:34: note: insert '_Nullable' if the pointer may be null
char    *cgetcap(char *, const char *, int);
                                    ^
                                     _Nullable
/usr/local/include/stdlib.h:281:34: note: insert '_Nonnull' if the pointer should never be null
char    *cgetcap(char *, const char *, int);
                                    ^
                                     _Nonnull
/usr/local/include/stdlib.h:281:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *cgetcap(char *, const char *, int);
        ^
/usr/local/include/stdlib.h:281:6: note: insert '_Nullable' if the pointer may be null
char    *cgetcap(char *, const char *, int);
        ^
          _Nullable 
/usr/local/include/stdlib.h:281:6: note: insert '_Nonnull' if the pointer should never be null
char    *cgetcap(char *, const char *, int);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:283:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                      ^
/usr/local/include/stdlib.h:283:19: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                      ^
                       _Nullable
/usr/local/include/stdlib.h:283:19: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                      ^
                       _Nonnull
/usr/local/include/stdlib.h:283:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                       ^
/usr/local/include/stdlib.h:283:20: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                       ^
                        _Nullable
/usr/local/include/stdlib.h:283:20: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                       ^
                        _Nonnull
/usr/local/include/stdlib.h:283:28: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                               ^
/usr/local/include/stdlib.h:283:28: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                               ^
                                _Nullable
/usr/local/include/stdlib.h:283:28: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                               ^
                                _Nonnull
/usr/local/include/stdlib.h:283:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                                ^
/usr/local/include/stdlib.h:283:29: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                                ^
                                 _Nullable
/usr/local/include/stdlib.h:283:29: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                                ^
                                 _Nonnull
/usr/local/include/stdlib.h:283:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                                              ^
/usr/local/include/stdlib.h:283:43: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                                              ^
                                               _Nullable
/usr/local/include/stdlib.h:283:43: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                                              ^
                                               _Nonnull
/usr/local/include/stdlib.h:284:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                        ^
/usr/local/include/stdlib.h:284:21: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                        ^
                         _Nullable
/usr/local/include/stdlib.h:284:21: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                        ^
                         _Nonnull
/usr/local/include/stdlib.h:284:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                         ^
/usr/local/include/stdlib.h:284:22: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:284:22: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:284:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                                 ^
/usr/local/include/stdlib.h:284:30: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                                 ^
                                  _Nullable
/usr/local/include/stdlib.h:284:30: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                                 ^
                                  _Nonnull
/usr/local/include/stdlib.h:284:31: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                                  ^
/usr/local/include/stdlib.h:284:31: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                                  ^
                                   _Nullable
/usr/local/include/stdlib.h:284:31: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                                  ^
                                   _Nonnull
/usr/local/include/stdlib.h:285:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetmatch(const char *, const char *);
                              ^
/usr/local/include/stdlib.h:285:27: note: insert '_Nullable' if the pointer may be null
int      cgetmatch(const char *, const char *);
                              ^
                               _Nullable
/usr/local/include/stdlib.h:285:27: note: insert '_Nonnull' if the pointer should never be null
int      cgetmatch(const char *, const char *);
                              ^
                               _Nonnull
/usr/local/include/stdlib.h:285:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetmatch(const char *, const char *);
                                            ^
/usr/local/include/stdlib.h:285:41: note: insert '_Nullable' if the pointer may be null
int      cgetmatch(const char *, const char *);
                                            ^
                                             _Nullable
/usr/local/include/stdlib.h:285:41: note: insert '_Nonnull' if the pointer should never be null
int      cgetmatch(const char *, const char *);
                                            ^
                                             _Nonnull
/usr/local/include/stdlib.h:286:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                       ^
/usr/local/include/stdlib.h:286:20: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                       ^
                        _Nullable
/usr/local/include/stdlib.h:286:20: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                       ^
                        _Nonnull
/usr/local/include/stdlib.h:286:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                        ^
/usr/local/include/stdlib.h:286:21: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                        ^
                         _Nullable
/usr/local/include/stdlib.h:286:21: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                        ^
                         _Nonnull
/usr/local/include/stdlib.h:286:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                                ^
/usr/local/include/stdlib.h:286:29: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                                ^
                                 _Nullable
/usr/local/include/stdlib.h:286:29: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                                ^
                                 _Nonnull
/usr/local/include/stdlib.h:286:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                                 ^
/usr/local/include/stdlib.h:286:30: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                                 ^
                                  _Nullable
/usr/local/include/stdlib.h:286:30: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                                 ^
                                  _Nonnull
/usr/local/include/stdlib.h:287:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnum(char *, const char *, long *);
                      ^
/usr/local/include/stdlib.h:287:19: note: insert '_Nullable' if the pointer may be null
int      cgetnum(char *, const char *, long *);
                      ^
                       _Nullable
/usr/local/include/stdlib.h:287:19: note: insert '_Nonnull' if the pointer should never be null
int      cgetnum(char *, const char *, long *);
                      ^
                       _Nonnull
/usr/local/include/stdlib.h:287:33: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnum(char *, const char *, long *);
                                    ^
/usr/local/include/stdlib.h:287:33: note: insert '_Nullable' if the pointer may be null
int      cgetnum(char *, const char *, long *);
                                    ^
                                     _Nullable
/usr/local/include/stdlib.h:287:33: note: insert '_Nonnull' if the pointer should never be null
int      cgetnum(char *, const char *, long *);
                                    ^
                                     _Nonnull
/usr/local/include/stdlib.h:287:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnum(char *, const char *, long *);
                                            ^
/usr/local/include/stdlib.h:287:41: note: insert '_Nullable' if the pointer may be null
int      cgetnum(char *, const char *, long *);
                                            ^
                                             _Nullable
/usr/local/include/stdlib.h:287:41: note: insert '_Nonnull' if the pointer should never be null
int      cgetnum(char *, const char *, long *);
                                            ^
                                             _Nonnull
/usr/local/include/stdlib.h:288:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetset(const char *);
                            ^
/usr/local/include/stdlib.h:288:25: note: insert '_Nullable' if the pointer may be null
int      cgetset(const char *);
                            ^
                             _Nullable
/usr/local/include/stdlib.h:288:25: note: insert '_Nonnull' if the pointer should never be null
int      cgetset(const char *);
                            ^
                             _Nonnull
/usr/local/include/stdlib.h:289:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                      ^
/usr/local/include/stdlib.h:289:19: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                      ^
                       _Nullable
/usr/local/include/stdlib.h:289:19: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                      ^
                       _Nonnull
/usr/local/include/stdlib.h:289:33: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                                    ^
/usr/local/include/stdlib.h:289:33: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                                    ^
                                     _Nullable
/usr/local/include/stdlib.h:289:33: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                                    ^
                                     _Nonnull
/usr/local/include/stdlib.h:289:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                                            ^
/usr/local/include/stdlib.h:289:41: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                                            ^
                                             _Nullable
/usr/local/include/stdlib.h:289:41: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                                            ^
                                             _Nonnull
/usr/local/include/stdlib.h:289:42: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                                             ^
/usr/local/include/stdlib.h:289:42: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                                             ^
                                              _Nullable
/usr/local/include/stdlib.h:289:42: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                                             ^
                                              _Nonnull
/usr/local/include/stdlib.h:290:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                       ^
/usr/local/include/stdlib.h:290:20: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                       ^
                        _Nullable
/usr/local/include/stdlib.h:290:20: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                       ^
                        _Nonnull
/usr/local/include/stdlib.h:290:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                                     ^
/usr/local/include/stdlib.h:290:34: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                                     ^
                                      _Nullable
/usr/local/include/stdlib.h:290:34: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                                     ^
                                      _Nonnull
/usr/local/include/stdlib.h:290:42: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                                             ^
/usr/local/include/stdlib.h:290:42: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                                             ^
                                              _Nullable
/usr/local/include/stdlib.h:290:42: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                                             ^
                                              _Nonnull
/usr/local/include/stdlib.h:290:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                                              ^
/usr/local/include/stdlib.h:290:43: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                                              ^
                                               _Nullable
/usr/local/include/stdlib.h:290:43: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                                              ^
                                               _Nonnull
/usr/local/include/stdlib.h:293:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *devname(dev_t, mode_t);
        ^
/usr/local/include/stdlib.h:293:6: note: insert '_Nullable' if the pointer may be null
char    *devname(dev_t, mode_t);
        ^
          _Nullable 
/usr/local/include/stdlib.h:293:6: note: insert '_Nonnull' if the pointer should never be null
char    *devname(dev_t, mode_t);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:294:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *devname_r(dev_t, mode_t, char *buf, int len);
                                       ^
/usr/local/include/stdlib.h:294:37: note: insert '_Nullable' if the pointer may be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
                                       ^
                                         _Nullable 
/usr/local/include/stdlib.h:294:37: note: insert '_Nonnull' if the pointer should never be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
                                       ^
                                         _Nonnull 
/usr/local/include/stdlib.h:294:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *devname_r(dev_t, mode_t, char *buf, int len);
        ^
/usr/local/include/stdlib.h:294:6: note: insert '_Nullable' if the pointer may be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
        ^
          _Nullable 
/usr/local/include/stdlib.h:294:6: note: insert '_Nonnull' if the pointer should never be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:295:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getbsize(int *, long *);
                      ^
/usr/local/include/stdlib.h:295:20: note: insert '_Nullable' if the pointer may be null
char    *getbsize(int *, long *);
                      ^
                       _Nullable
/usr/local/include/stdlib.h:295:20: note: insert '_Nonnull' if the pointer should never be null
char    *getbsize(int *, long *);
                      ^
                       _Nonnull
/usr/local/include/stdlib.h:295:28: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getbsize(int *, long *);
                              ^
/usr/local/include/stdlib.h:295:28: note: insert '_Nullable' if the pointer may be null
char    *getbsize(int *, long *);
                              ^
                               _Nullable
/usr/local/include/stdlib.h:295:28: note: insert '_Nonnull' if the pointer should never be null
char    *getbsize(int *, long *);
                              ^
                               _Nonnull
/usr/local/include/stdlib.h:295:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getbsize(int *, long *);
        ^
/usr/local/include/stdlib.h:295:6: note: insert '_Nullable' if the pointer may be null
char    *getbsize(int *, long *);
        ^
          _Nullable 
/usr/local/include/stdlib.h:295:6: note: insert '_Nonnull' if the pointer should never be null
char    *getbsize(int *, long *);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:296:24: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
int      getloadavg(double [], int);
                           ^
/usr/local/include/stdlib.h:296:24: note: insert '_Nullable' if the array parameter may be null
int      getloadavg(double [], int);
                           ^
                            _Nullable
/usr/local/include/stdlib.h:296:24: note: insert '_Nonnull' if the array parameter should never be null
int      getloadavg(double [], int);
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:298:2: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        *getprogname(void);
        ^
/usr/local/include/stdlib.h:298:2: note: insert '_Nullable' if the pointer may be null
        *getprogname(void);
        ^
          _Nullable 
/usr/local/include/stdlib.h:298:2: note: insert '_Nonnull' if the pointer should never be null
        *getprogname(void);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:299:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     setprogname(const char *);
                                ^
/usr/local/include/stdlib.h:299:30: note: insert '_Nullable' if the pointer may be null
void     setprogname(const char *);
                                ^
                                 _Nullable
/usr/local/include/stdlib.h:299:30: note: insert '_Nonnull' if the pointer should never be null
void     setprogname(const char *);
                                ^
                                 _Nonnull
/usr/local/include/stdlib.h:309:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      heapsort(void *__base, size_t __nel, size_t __width,
                       ^
/usr/local/include/stdlib.h:309:20: note: insert '_Nullable' if the pointer may be null
int      heapsort(void *__base, size_t __nel, size_t __width,
                       ^
                         _Nullable 
/usr/local/include/stdlib.h:309:20: note: insert '_Nonnull' if the pointer should never be null
int      heapsort(void *__base, size_t __nel, size_t __width,
                       ^
                         _Nonnull 
/usr/local/include/stdlib.h:310:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
/usr/local/include/stdlib.h:310:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:310:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:310:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
/usr/local/include/stdlib.h:310:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:310:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:312:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      heapsort_b(void *__base, size_t __nel, size_t __width,
                         ^
/usr/local/include/stdlib.h:312:22: note: insert '_Nullable' if the pointer may be null
int      heapsort_b(void *__base, size_t __nel, size_t __width,
                         ^
                           _Nullable 
/usr/local/include/stdlib.h:312:22: note: insert '_Nonnull' if the pointer should never be null
int      heapsort_b(void *__base, size_t __nel, size_t __width,
                         ^
                           _Nonnull 
/usr/local/include/stdlib.h:313:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
/usr/local/include/stdlib.h:313:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:313:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:313:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
/usr/local/include/stdlib.h:313:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:313:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:316:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mergesort(void *__base, size_t __nel, size_t __width,
                        ^
/usr/local/include/stdlib.h:316:21: note: insert '_Nullable' if the pointer may be null
int      mergesort(void *__base, size_t __nel, size_t __width,
                        ^
                          _Nullable 
/usr/local/include/stdlib.h:316:21: note: insert '_Nonnull' if the pointer should never be null
int      mergesort(void *__base, size_t __nel, size_t __width,
                        ^
                          _Nonnull 
/usr/local/include/stdlib.h:317:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
/usr/local/include/stdlib.h:317:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:317:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:317:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
/usr/local/include/stdlib.h:317:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:317:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:319:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mergesort_b(void *__base, size_t __nel, size_t __width,
                          ^
/usr/local/include/stdlib.h:319:23: note: insert '_Nullable' if the pointer may be null
int      mergesort_b(void *__base, size_t __nel, size_t __width,
                          ^
                            _Nullable 
/usr/local/include/stdlib.h:319:23: note: insert '_Nonnull' if the pointer should never be null
int      mergesort_b(void *__base, size_t __nel, size_t __width,
                          ^
                            _Nonnull 
/usr/local/include/stdlib.h:320:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
/usr/local/include/stdlib.h:320:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:320:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:320:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
/usr/local/include/stdlib.h:320:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:320:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:323:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort(void *__base, size_t __nel, size_t __width,
                    ^
/usr/local/include/stdlib.h:323:18: note: insert '_Nullable' if the pointer may be null
void     psort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nullable 
/usr/local/include/stdlib.h:323:18: note: insert '_Nonnull' if the pointer should never be null
void     psort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nonnull 
/usr/local/include/stdlib.h:324:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *))
                                                 ^
/usr/local/include/stdlib.h:324:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *))
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:324:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *))
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:324:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *))
                                                               ^
/usr/local/include/stdlib.h:324:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *))
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:324:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *))
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:327:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort_b(void *__base, size_t __nel, size_t __width,
                      ^
/usr/local/include/stdlib.h:327:20: note: insert '_Nullable' if the pointer may be null
void     psort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nullable 
/usr/local/include/stdlib.h:327:20: note: insert '_Nonnull' if the pointer should never be null
void     psort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nonnull 
/usr/local/include/stdlib.h:328:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
/usr/local/include/stdlib.h:328:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:328:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:328:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
/usr/local/include/stdlib.h:328:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:328:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:331:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
/usr/local/include/stdlib.h:331:20: note: insert '_Nullable' if the pointer may be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nullable 
/usr/local/include/stdlib.h:331:20: note: insert '_Nonnull' if the pointer should never be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nonnull 
/usr/local/include/stdlib.h:331:64: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
/usr/local/include/stdlib.h:331:64: note: insert '_Nullable' if the pointer may be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nullable
/usr/local/include/stdlib.h:331:64: note: insert '_Nonnull' if the pointer should never be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nonnull
/usr/local/include/stdlib.h:332:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                           ^
/usr/local/include/stdlib.h:332:37: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                           ^
                                            _Nullable
/usr/local/include/stdlib.h:332:37: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                           ^
                                            _Nonnull
/usr/local/include/stdlib.h:332:51: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                                         ^
/usr/local/include/stdlib.h:332:51: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                                         ^
                                                          _Nullable
/usr/local/include/stdlib.h:332:51: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                                         ^
                                                          _Nonnull
/usr/local/include/stdlib.h:332:65: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                                                       ^
/usr/local/include/stdlib.h:332:65: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                                                       ^
                                                                        _Nullable
/usr/local/include/stdlib.h:332:65: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                                                       ^
                                                                        _Nonnull
/usr/local/include/stdlib.h:335:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort_b(void *__base, size_t __nel, size_t __width,
                      ^
/usr/local/include/stdlib.h:335:20: note: insert '_Nullable' if the pointer may be null
void     qsort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nullable 
/usr/local/include/stdlib.h:335:20: note: insert '_Nonnull' if the pointer should never be null
void     qsort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nonnull 
/usr/local/include/stdlib.h:336:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
/usr/local/include/stdlib.h:336:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:336:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:336:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
/usr/local/include/stdlib.h:336:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:336:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:339:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
/usr/local/include/stdlib.h:339:20: note: insert '_Nullable' if the pointer may be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nullable 
/usr/local/include/stdlib.h:339:20: note: insert '_Nonnull' if the pointer should never be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nonnull 
/usr/local/include/stdlib.h:339:64: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
/usr/local/include/stdlib.h:339:64: note: insert '_Nullable' if the pointer may be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nullable
/usr/local/include/stdlib.h:339:64: note: insert '_Nonnull' if the pointer should never be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nonnull
/usr/local/include/stdlib.h:340:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                           ^
/usr/local/include/stdlib.h:340:37: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                           ^
                                            _Nullable
/usr/local/include/stdlib.h:340:37: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                           ^
                                            _Nonnull
/usr/local/include/stdlib.h:340:51: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                         ^
/usr/local/include/stdlib.h:340:51: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                         ^
                                                          _Nullable
/usr/local/include/stdlib.h:340:51: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                         ^
                                                          _Nonnull
/usr/local/include/stdlib.h:340:65: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                                       ^
/usr/local/include/stdlib.h:340:65: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                                       ^
                                                                        _Nullable
/usr/local/include/stdlib.h:340:65: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                                       ^
                                                                        _Nonnull
/usr/local/include/stdlib.h:341:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                       ^
/usr/local/include/stdlib.h:341:36: note: insert '_Nullable' if the pointer may be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                       ^
                                        _Nullable
/usr/local/include/stdlib.h:341:36: note: insert '_Nonnull' if the pointer should never be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                       ^
                                        _Nonnull
/usr/local/include/stdlib.h:341:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
/usr/local/include/stdlib.h:341:37: note: insert '_Nullable' if the pointer may be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                          _Nullable 
/usr/local/include/stdlib.h:341:37: note: insert '_Nonnull' if the pointer should never be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                          _Nonnull 
/usr/local/include/stdlib.h:341:77: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                ^
/usr/local/include/stdlib.h:341:77: note: insert '_Nullable' if the pointer may be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                ^
                                                                                  _Nullable 
/usr/local/include/stdlib.h:341:77: note: insert '_Nonnull' if the pointer should never be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                ^
                                                                                  _Nonnull 
/usr/local/include/stdlib.h:343:24: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int     rpmatch(const char *)
                           ^
/usr/local/include/stdlib.h:343:24: note: insert '_Nullable' if the pointer may be null
int     rpmatch(const char *)
                           ^
                            _Nullable
/usr/local/include/stdlib.h:343:24: note: insert '_Nonnull' if the pointer should never be null
int     rpmatch(const char *)
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:345:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
/usr/local/include/stdlib.h:345:37: note: insert '_Nullable' if the pointer may be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                         _Nullable
/usr/local/include/stdlib.h:345:37: note: insert '_Nonnull' if the pointer should never be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                         _Nonnull
/usr/local/include/stdlib.h:345:38: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                         ^
/usr/local/include/stdlib.h:345:38: note: insert '_Nullable' if the pointer may be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                         ^
                                           _Nullable 
/usr/local/include/stdlib.h:345:38: note: insert '_Nonnull' if the pointer should never be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                         ^
                                           _Nonnull 
/usr/local/include/stdlib.h:345:78: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                 ^
/usr/local/include/stdlib.h:345:78: note: insert '_Nullable' if the pointer may be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                 ^
                                                                                   _Nullable 
/usr/local/include/stdlib.h:345:78: note: insert '_Nonnull' if the pointer should never be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                 ^
                                                                                   _Nonnull 
/usr/local/include/stdlib.h:349:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
                       ^
/usr/local/include/stdlib.h:349:21: note: insert '_Nullable' if the pointer may be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
                       ^
                         _Nullable 
/usr/local/include/stdlib.h:349:21: note: insert '_Nonnull' if the pointer should never be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
                       ^
                         _Nonnull 
/usr/local/include/stdlib.h:349:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
        ^
/usr/local/include/stdlib.h:349:6: note: insert '_Nullable' if the pointer may be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
        ^
          _Nullable 
/usr/local/include/stdlib.h:349:6: note: insert '_Nonnull' if the pointer should never be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:351:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                            ^
/usr/local/include/stdlib.h:351:22: note: insert '_Nullable' if the pointer may be null
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                            ^
                              _Nullable 
/usr/local/include/stdlib.h:351:22: note: insert '_Nonnull' if the pointer should never be null
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                            ^
                              _Nonnull 
/usr/local/include/stdlib.h:351:84: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                                                                                          ^
/usr/local/include/stdlib.h:351:84: note: insert '_Nullable' if the pointer may be null
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                                                                                          ^
                                                                                           _Nullable
/usr/local/include/stdlib.h:351:84: note: insert '_Nonnull' if the pointer should never be null
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                                                                                          ^
                                                                                           _Nonnull
/usr/local/include/stdlib.h:351:85: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                                                                                           ^
/usr/local/include/stdlib.h:351:85: note: insert '_Nullable' if the pointer may be null
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                                                                                           ^
                                                                                             _Nullable 
/usr/local/include/stdlib.h:351:85: note: insert '_Nonnull' if the pointer should never be null
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                                                                                           ^
                                                                                             _Nonnull 
/usr/local/include/stdlib.h:355:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoq(const char *__str, char **__endptr, int __base);
                           ^
/usr/local/include/stdlib.h:355:21: note: insert '_Nullable' if the pointer may be null
         strtoq(const char *__str, char **__endptr, int __base);
                           ^
                             _Nullable 
/usr/local/include/stdlib.h:355:21: note: insert '_Nonnull' if the pointer should never be null
         strtoq(const char *__str, char **__endptr, int __base);
                           ^
                             _Nonnull 
/usr/local/include/stdlib.h:355:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoq(const char *__str, char **__endptr, int __base);
                                        ^
/usr/local/include/stdlib.h:355:34: note: insert '_Nullable' if the pointer may be null
         strtoq(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nullable
/usr/local/include/stdlib.h:355:34: note: insert '_Nonnull' if the pointer should never be null
         strtoq(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nonnull
/usr/local/include/stdlib.h:355:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoq(const char *__str, char **__endptr, int __base);
                                         ^
/usr/local/include/stdlib.h:355:35: note: insert '_Nullable' if the pointer may be null
         strtoq(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nullable 
/usr/local/include/stdlib.h:355:35: note: insert '_Nonnull' if the pointer should never be null
         strtoq(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nonnull 
/usr/local/include/stdlib.h:357:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtouq(const char *__str, char **__endptr, int __base);
                            ^
/usr/local/include/stdlib.h:357:22: note: insert '_Nullable' if the pointer may be null
         strtouq(const char *__str, char **__endptr, int __base);
                            ^
                              _Nullable 
/usr/local/include/stdlib.h:357:22: note: insert '_Nonnull' if the pointer should never be null
         strtouq(const char *__str, char **__endptr, int __base);
                            ^
                              _Nonnull 
/usr/local/include/stdlib.h:357:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtouq(const char *__str, char **__endptr, int __base);
                                         ^
/usr/local/include/stdlib.h:357:35: note: insert '_Nullable' if the pointer may be null
         strtouq(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nullable
/usr/local/include/stdlib.h:357:35: note: insert '_Nonnull' if the pointer should never be null
         strtouq(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nonnull
/usr/local/include/stdlib.h:357:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtouq(const char *__str, char **__endptr, int __base);
                                          ^
/usr/local/include/stdlib.h:357:36: note: insert '_Nullable' if the pointer may be null
         strtouq(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nullable 
/usr/local/include/stdlib.h:357:36: note: insert '_Nonnull' if the pointer should never be null
         strtouq(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nonnull 
/usr/local/include/stdlib.h:359:13: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
extern char *suboptarg;         /* getsubopt(3) external variable */
            ^
/usr/local/include/stdlib.h:359:13: note: insert '_Nullable' if the pointer may be null
extern char *suboptarg;         /* getsubopt(3) external variable */
            ^
              _Nullable 
/usr/local/include/stdlib.h:359:13: note: insert '_Nonnull' if the pointer should never be null
extern char *suboptarg;         /* getsubopt(3) external variable */
            ^
              _Nonnull 
193 warnings generated.
checked program was:
/* begin */
1: #include "ruby.h"
2: 
3: int main(int argc, char **argv)
4: {
5:   return !!argv[argc];
6: }
/* end */

"gcc -o conftest -I/Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/x86_64-darwin19 -I/Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/backward -I/Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0 -I.  -I/usr/local/opt/libyaml/include -I/usr/local/opt/libksba/include -I/usr/local/opt/readline/include -I/usr/local/opt/zlib/include -I/usr/local/opt/openssl@1.1/include -D_XOPEN_SOURCE -D_DARWIN_C_SOURCE -D_DARWIN_UNLIMITED_SELECT -D_REENTRANT   -O3 -ggdb3 -Wall -Wextra -Wdeprecated-declarations -Wdivision-by-zero -Wimplicit-function-declaration -Wimplicit-int -Wpointer-arith -Wshorten-64-to-32 -Wwrite-strings -Wmissing-noreturn -Wno-constant-logical-operand -Wno-long-long -Wno-missing-field-initializers -Wno-overlength-strings -Wno-parentheses-equality -Wno-self-assign -Wno-tautological-compare -Wno-unused-parameter -Wno-unused-value -Wunused-variable -Wextra-tokens  -fno-common -pipe conftest.c  -L. -L/Users/dileepkumar/.rvm/rubies/ruby-2.7.0/lib -L/usr/local/opt/libyaml/lib -L/usr/local/opt/libksba/lib -L/usr/local/opt/readline/lib -L/usr/local/opt/zlib/lib -L/usr/local/opt/openssl@1.1/lib -L. -fstack-protector-strong -L/usr/local/lib -L/usr/local/opt/libyaml/lib -L/usr/local/opt/libksba/lib -L/usr/local/opt/readline/lib -L/usr/local/opt/zlib/lib -L/usr/local/opt/openssl@1.1/lib     -lruby.2.7   "
In file included from conftest.c:1:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby.h:33:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/ruby.h:29:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/defines.h:126:
In file included from /usr/local/include/stdio.h:64:
/usr/local/include/_stdio.h:93:16: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        unsigned char   *_base;
                        ^
/usr/local/include/_stdio.h:93:16: note: insert '_Nullable' if the pointer may be null
        unsigned char   *_base;
                        ^
                          _Nullable 
/usr/local/include/_stdio.h:93:16: note: insert '_Nonnull' if the pointer should never be null
        unsigned char   *_base;
                        ^
                          _Nonnull 
/usr/local/include/_stdio.h:138:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
/usr/local/include/_stdio.h:138:32: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
                                           _Nullable
/usr/local/include/_stdio.h:138:32: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
                                           _Nonnull
/usr/local/include/_stdio.h:138:40: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
/usr/local/include/_stdio.h:138:40: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
                                                   _Nullable
/usr/local/include/_stdio.h:138:40: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
                                                   _Nonnull
/usr/local/include/_stdio.h:139:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
/usr/local/include/_stdio.h:139:35: note: insert '_Nullable' if the pointer may be null
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
                                           _Nullable
/usr/local/include/_stdio.h:139:35: note: insert '_Nonnull' if the pointer should never be null
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
                                           _Nonnull
/usr/local/include/_stdio.h:140:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
/usr/local/include/_stdio.h:140:32: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
                                           _Nullable
/usr/local/include/_stdio.h:140:32: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
                                           _Nonnull
/usr/local/include/_stdio.h:140:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
/usr/local/include/_stdio.h:140:46: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
                                                         _Nullable
/usr/local/include/_stdio.h:140:46: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
                                                         _Nonnull
/usr/local/include/_stdio.h:144:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
/usr/local/include/_stdio.h:144:18: note: insert '_Nullable' if the pointer may be null
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
                          _Nullable 
/usr/local/include/_stdio.h:144:18: note: insert '_Nonnull' if the pointer should never be null
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
                          _Nonnull 
In file included from conftest.c:1:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby.h:33:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/ruby.h:29:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/defines.h:126:
/usr/local/include/stdio.h:67:13: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
extern FILE *__stdinp;
            ^
/usr/local/include/stdio.h:67:13: note: insert '_Nullable' if the pointer may be null
extern FILE *__stdinp;
            ^
              _Nullable 
/usr/local/include/stdio.h:67:13: note: insert '_Nonnull' if the pointer should never be null
extern FILE *__stdinp;
            ^
              _Nonnull 
/usr/local/include/stdio.h:386:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 int (* _Nullable)(void *, const char *, int),
                                        ^
/usr/local/include/stdio.h:386:41: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *, const char *, int),
                                        ^
                                         _Nullable
/usr/local/include/stdio.h:386:41: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *, const char *, int),
                                        ^
                                         _Nonnull
/usr/local/include/stdio.h:386:55: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
/usr/local/include/stdio.h:386:55: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
                                                       _Nullable
/usr/local/include/stdio.h:386:55: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
                                                       _Nonnull
/usr/local/include/stdio.h:387:44: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
/usr/local/include/stdio.h:387:44: note: insert '_Nullable' if the pointer may be null
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
                                            _Nullable
/usr/local/include/stdio.h:387:44: note: insert '_Nonnull' if the pointer should never be null
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
                                            _Nonnull
/usr/local/include/stdio.h:388:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 int (* _Nullable)(void *));
                                        ^
/usr/local/include/stdio.h:388:41: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *));
                                        ^
                                         _Nullable
/usr/local/include/stdio.h:388:41: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *));
                                        ^
                                         _Nonnull
/usr/local/include/stdio.h:384:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
FILE    *funopen(const void *,
        ^
/usr/local/include/stdio.h:384:6: note: insert '_Nullable' if the pointer may be null
FILE    *funopen(const void *,
        ^
          _Nullable 
/usr/local/include/stdio.h:384:6: note: insert '_Nonnull' if the pointer should never be null
FILE    *funopen(const void *,
        ^
          _Nonnull 
In file included from conftest.c:1:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby.h:33:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/ruby.h:29:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/defines.h:134:
/usr/local/include/stdlib.h:134:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   atof(const char *);
                         ^
/usr/local/include/stdlib.h:134:25: note: insert '_Nullable' if the pointer may be null
double   atof(const char *);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:134:25: note: insert '_Nonnull' if the pointer should never be null
double   atof(const char *);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:135:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      atoi(const char *);
                         ^
/usr/local/include/stdlib.h:135:22: note: insert '_Nullable' if the pointer may be null
int      atoi(const char *);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:135:22: note: insert '_Nonnull' if the pointer should never be null
int      atoi(const char *);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:136:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     atol(const char *);
                         ^
/usr/local/include/stdlib.h:136:23: note: insert '_Nullable' if the pointer may be null
long     atol(const char *);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:136:23: note: insert '_Nonnull' if the pointer should never be null
long     atol(const char *);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:139:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         atoll(const char *);
                          ^
/usr/local/include/stdlib.h:139:20: note: insert '_Nullable' if the pointer may be null
         atoll(const char *);
                          ^
                           _Nullable
/usr/local/include/stdlib.h:139:20: note: insert '_Nonnull' if the pointer should never be null
         atoll(const char *);
                          ^
                           _Nonnull
/usr/local/include/stdlib.h:141:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                            ^
/usr/local/include/stdlib.h:141:26: note: insert '_Nullable' if the pointer may be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                            ^
                              _Nullable 
/usr/local/include/stdlib.h:141:26: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                            ^
                              _Nonnull 
/usr/local/include/stdlib.h:141:45: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                                               ^
/usr/local/include/stdlib.h:141:45: note: insert '_Nullable' if the pointer may be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                                               ^
                                                 _Nullable 
/usr/local/include/stdlib.h:141:45: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                                               ^
                                                 _Nonnull 
/usr/local/include/stdlib.h:142:59: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                 ^
/usr/local/include/stdlib.h:142:59: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                 ^
                                                                  _Nullable
/usr/local/include/stdlib.h:142:59: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                 ^
                                                                  _Nonnull
/usr/local/include/stdlib.h:142:73: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                               ^
/usr/local/include/stdlib.h:142:73: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                               ^
                                                                                _Nullable
/usr/local/include/stdlib.h:142:73: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                               ^
                                                                                _Nonnull
/usr/local/include/stdlib.h:141:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch(const void *__key, const void *__base, size_t __nel,
        ^
/usr/local/include/stdlib.h:141:6: note: insert '_Nullable' if the pointer may be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
        ^
          _Nullable 
/usr/local/include/stdlib.h:141:6: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
        ^
          _Nonnull 
/usr/local/include/stdlib.h:147:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getenv(const char *);
                           ^
/usr/local/include/stdlib.h:147:25: note: insert '_Nullable' if the pointer may be null
char    *getenv(const char *);
                           ^
                            _Nullable
/usr/local/include/stdlib.h:147:25: note: insert '_Nonnull' if the pointer should never be null
char    *getenv(const char *);
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:147:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getenv(const char *);
        ^
/usr/local/include/stdlib.h:147:6: note: insert '_Nullable' if the pointer may be null
char    *getenv(const char *);
        ^
          _Nullable 
/usr/local/include/stdlib.h:147:6: note: insert '_Nonnull' if the pointer should never be null
char    *getenv(const char *);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:156:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mblen(const char *__s, size_t __n);
                          ^
/usr/local/include/stdlib.h:156:23: note: insert '_Nullable' if the pointer may be null
int      mblen(const char *__s, size_t __n);
                          ^
                            _Nullable 
/usr/local/include/stdlib.h:156:23: note: insert '_Nonnull' if the pointer should never be null
int      mblen(const char *__s, size_t __n);
                          ^
                            _Nonnull 
/usr/local/include/stdlib.h:157:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                          ^
/usr/local/include/stdlib.h:157:26: note: insert '_Nullable' if the pointer may be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                          ^
                            _Nullable
/usr/local/include/stdlib.h:157:26: note: insert '_Nonnull' if the pointer should never be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                          ^
                            _Nonnull
/usr/local/include/stdlib.h:157:52: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                                                    ^
/usr/local/include/stdlib.h:157:52: note: insert '_Nullable' if the pointer may be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                                                    ^
                                                      _Nullable
/usr/local/include/stdlib.h:157:52: note: insert '_Nonnull' if the pointer should never be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                                                    ^
                                                      _Nonnull
/usr/local/include/stdlib.h:158:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                        ^
/usr/local/include/stdlib.h:158:21: note: insert '_Nullable' if the pointer may be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                        ^
                          _Nullable
/usr/local/include/stdlib.h:158:21: note: insert '_Nonnull' if the pointer should never be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                        ^
                          _Nonnull
/usr/local/include/stdlib.h:158:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                                                 ^
/usr/local/include/stdlib.h:158:46: note: insert '_Nullable' if the pointer may be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                                                 ^
                                                   _Nullable
/usr/local/include/stdlib.h:158:46: note: insert '_Nonnull' if the pointer should never be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                                                 ^
                                                   _Nonnull
/usr/local/include/stdlib.h:160:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort(void *__base, size_t __nel, size_t __width,
                    ^
/usr/local/include/stdlib.h:160:18: note: insert '_Nullable' if the pointer may be null
void     qsort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nullable 
/usr/local/include/stdlib.h:160:18: note: insert '_Nonnull' if the pointer should never be null
void     qsort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nonnull 
/usr/local/include/stdlib.h:161:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
/usr/local/include/stdlib.h:161:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:161:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:161:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
/usr/local/include/stdlib.h:161:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:161:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:165:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                           ^
/usr/local/include/stdlib.h:165:27: note: insert '_Nullable' if the pointer may be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                           ^
                            _Nullable
/usr/local/include/stdlib.h:165:27: note: insert '_Nonnull' if the pointer should never be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:165:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                   ^
/usr/local/include/stdlib.h:165:35: note: insert '_Nullable' if the pointer may be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                   ^
                                    _Nullable
/usr/local/include/stdlib.h:165:35: note: insert '_Nonnull' if the pointer should never be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                   ^
                                    _Nonnull
/usr/local/include/stdlib.h:165:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                    ^
/usr/local/include/stdlib.h:165:36: note: insert '_Nullable' if the pointer may be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                    ^
                                     _Nullable
/usr/local/include/stdlib.h:165:36: note: insert '_Nonnull' if the pointer should never be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                    ^
                                     _Nonnull
/usr/local/include/stdlib.h:166:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                           ^
/usr/local/include/stdlib.h:166:26: note: insert '_Nullable' if the pointer may be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                           ^
                            _Nullable
/usr/local/include/stdlib.h:166:26: note: insert '_Nonnull' if the pointer should never be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:166:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                   ^
/usr/local/include/stdlib.h:166:34: note: insert '_Nullable' if the pointer may be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                   ^
                                    _Nullable
/usr/local/include/stdlib.h:166:34: note: insert '_Nonnull' if the pointer should never be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                   ^
                                    _Nonnull
/usr/local/include/stdlib.h:166:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                    ^
/usr/local/include/stdlib.h:166:35: note: insert '_Nullable' if the pointer may be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                    ^
                                     _Nullable
/usr/local/include/stdlib.h:166:35: note: insert '_Nonnull' if the pointer should never be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                    ^
                                     _Nonnull
/usr/local/include/stdlib.h:167:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     strtol(const char *__str, char **__endptr, int __base);
                           ^
/usr/local/include/stdlib.h:167:25: note: insert '_Nullable' if the pointer may be null
long     strtol(const char *__str, char **__endptr, int __base);
                           ^
                             _Nullable 
/usr/local/include/stdlib.h:167:25: note: insert '_Nonnull' if the pointer should never be null
long     strtol(const char *__str, char **__endptr, int __base);
                           ^
                             _Nonnull 
/usr/local/include/stdlib.h:167:38: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     strtol(const char *__str, char **__endptr, int __base);
                                        ^
/usr/local/include/stdlib.h:167:38: note: insert '_Nullable' if the pointer may be null
long     strtol(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nullable
/usr/local/include/stdlib.h:167:38: note: insert '_Nonnull' if the pointer should never be null
long     strtol(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nonnull
/usr/local/include/stdlib.h:167:39: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     strtol(const char *__str, char **__endptr, int __base);
                                         ^
/usr/local/include/stdlib.h:167:39: note: insert '_Nullable' if the pointer may be null
long     strtol(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nullable 
/usr/local/include/stdlib.h:167:39: note: insert '_Nonnull' if the pointer should never be null
long     strtol(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nonnull 
/usr/local/include/stdlib.h:169:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtold(const char *, char **);
                            ^
/usr/local/include/stdlib.h:169:22: note: insert '_Nullable' if the pointer may be null
         strtold(const char *, char **);
                            ^
                             _Nullable
/usr/local/include/stdlib.h:169:22: note: insert '_Nonnull' if the pointer should never be null
         strtold(const char *, char **);
                            ^
                             _Nonnull
/usr/local/include/stdlib.h:169:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtold(const char *, char **);
                                    ^
/usr/local/include/stdlib.h:169:30: note: insert '_Nullable' if the pointer may be null
         strtold(const char *, char **);
                                    ^
                                     _Nullable
/usr/local/include/stdlib.h:169:30: note: insert '_Nonnull' if the pointer should never be null
         strtold(const char *, char **);
                                    ^
                                     _Nonnull
/usr/local/include/stdlib.h:169:31: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtold(const char *, char **);
                                     ^
/usr/local/include/stdlib.h:169:31: note: insert '_Nullable' if the pointer may be null
         strtold(const char *, char **);
                                     ^
                                      _Nullable
/usr/local/include/stdlib.h:169:31: note: insert '_Nonnull' if the pointer should never be null
         strtold(const char *, char **);
                                     ^
                                      _Nonnull
/usr/local/include/stdlib.h:172:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoll(const char *__str, char **__endptr, int __base);
                            ^
/usr/local/include/stdlib.h:172:22: note: insert '_Nullable' if the pointer may be null
         strtoll(const char *__str, char **__endptr, int __base);
                            ^
                              _Nullable 
/usr/local/include/stdlib.h:172:22: note: insert '_Nonnull' if the pointer should never be null
         strtoll(const char *__str, char **__endptr, int __base);
                            ^
                              _Nonnull 
/usr/local/include/stdlib.h:172:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoll(const char *__str, char **__endptr, int __base);
                                         ^
/usr/local/include/stdlib.h:172:35: note: insert '_Nullable' if the pointer may be null
         strtoll(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nullable
/usr/local/include/stdlib.h:172:35: note: insert '_Nonnull' if the pointer should never be null
         strtoll(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nonnull
/usr/local/include/stdlib.h:172:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoll(const char *__str, char **__endptr, int __base);
                                          ^
/usr/local/include/stdlib.h:172:36: note: insert '_Nullable' if the pointer may be null
         strtoll(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nullable 
/usr/local/include/stdlib.h:172:36: note: insert '_Nonnull' if the pointer should never be null
         strtoll(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nonnull 
/usr/local/include/stdlib.h:175:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoul(const char *__str, char **__endptr, int __base);
                            ^
/usr/local/include/stdlib.h:175:22: note: insert '_Nullable' if the pointer may be null
         strtoul(const char *__str, char **__endptr, int __base);
                            ^
                              _Nullable 
/usr/local/include/stdlib.h:175:22: note: insert '_Nonnull' if the pointer should never be null
         strtoul(const char *__str, char **__endptr, int __base);
                            ^
                              _Nonnull 
/usr/local/include/stdlib.h:175:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoul(const char *__str, char **__endptr, int __base);
                                         ^
/usr/local/include/stdlib.h:175:35: note: insert '_Nullable' if the pointer may be null
         strtoul(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nullable
/usr/local/include/stdlib.h:175:35: note: insert '_Nonnull' if the pointer should never be null
         strtoul(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nonnull
/usr/local/include/stdlib.h:175:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoul(const char *__str, char **__endptr, int __base);
                                          ^
/usr/local/include/stdlib.h:175:36: note: insert '_Nullable' if the pointer may be null
         strtoul(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nullable 
/usr/local/include/stdlib.h:175:36: note: insert '_Nonnull' if the pointer should never be null
         strtoul(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nonnull 
/usr/local/include/stdlib.h:178:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoull(const char *__str, char **__endptr, int __base);
                             ^
/usr/local/include/stdlib.h:178:23: note: insert '_Nullable' if the pointer may be null
         strtoull(const char *__str, char **__endptr, int __base);
                             ^
                               _Nullable 
/usr/local/include/stdlib.h:178:23: note: insert '_Nonnull' if the pointer should never be null
         strtoull(const char *__str, char **__endptr, int __base);
                             ^
                               _Nonnull 
/usr/local/include/stdlib.h:178:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoull(const char *__str, char **__endptr, int __base);
                                          ^
/usr/local/include/stdlib.h:178:36: note: insert '_Nullable' if the pointer may be null
         strtoull(const char *__str, char **__endptr, int __base);
                                          ^
                                           _Nullable
/usr/local/include/stdlib.h:178:36: note: insert '_Nonnull' if the pointer should never be null
         strtoull(const char *__str, char **__endptr, int __base);
                                          ^
                                           _Nonnull
/usr/local/include/stdlib.h:178:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoull(const char *__str, char **__endptr, int __base);
                                           ^
/usr/local/include/stdlib.h:178:37: note: insert '_Nullable' if the pointer may be null
         strtoull(const char *__str, char **__endptr, int __base);
                                           ^
                                             _Nullable 
/usr/local/include/stdlib.h:178:37: note: insert '_Nonnull' if the pointer should never be null
         strtoull(const char *__str, char **__endptr, int __base);
                                           ^
                                             _Nonnull 
/usr/local/include/stdlib.h:190:24: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      system(const char *) __DARWIN_ALIAS_C(system);
                           ^
/usr/local/include/stdlib.h:190:24: note: insert '_Nullable' if the pointer may be null
int      system(const char *) __DARWIN_ALIAS_C(system);
                           ^
                            _Nullable
/usr/local/include/stdlib.h:190:24: note: insert '_Nonnull' if the pointer should never be null
int      system(const char *) __DARWIN_ALIAS_C(system);
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:194:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                       ^
/usr/local/include/stdlib.h:194:23: note: insert '_Nullable' if the pointer may be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                       ^
                         _Nullable
/usr/local/include/stdlib.h:194:23: note: insert '_Nonnull' if the pointer should never be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                       ^
                         _Nonnull
/usr/local/include/stdlib.h:194:51: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                                                   ^
/usr/local/include/stdlib.h:194:51: note: insert '_Nullable' if the pointer may be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                                                   ^
                                                     _Nullable
/usr/local/include/stdlib.h:194:51: note: insert '_Nonnull' if the pointer should never be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                                                   ^
                                                     _Nonnull
/usr/local/include/stdlib.h:195:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      wctomb(char *, wchar_t);
                     ^
/usr/local/include/stdlib.h:195:18: note: insert '_Nullable' if the pointer may be null
int      wctomb(char *, wchar_t);
                     ^
                      _Nullable
/usr/local/include/stdlib.h:195:18: note: insert '_Nonnull' if the pointer should never be null
int      wctomb(char *, wchar_t);
                     ^
                      _Nonnull
/usr/local/include/stdlib.h:199:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     a64l(const char *);
                         ^
/usr/local/include/stdlib.h:199:23: note: insert '_Nullable' if the pointer may be null
long     a64l(const char *);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:199:23: note: insert '_Nonnull' if the pointer should never be null
long     a64l(const char *);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:201:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
/usr/local/include/stdlib.h:201:29: note: insert '_Nullable' if the pointer may be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nullable 
/usr/local/include/stdlib.h:201:29: note: insert '_Nonnull' if the pointer should never be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nonnull 
/usr/local/include/stdlib.h:201:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
/usr/local/include/stdlib.h:201:46: note: insert '_Nullable' if the pointer may be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nullable 
/usr/local/include/stdlib.h:201:46: note: insert '_Nonnull' if the pointer should never be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nonnull 
/usr/local/include/stdlib.h:201:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
/usr/local/include/stdlib.h:201:6: note: insert '_Nullable' if the pointer may be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nullable 
/usr/local/include/stdlib.h:201:6: note: insert '_Nonnull' if the pointer should never be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nonnull 
/usr/local/include/stdlib.h:202:31: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
double   erand48(unsigned short[3]);
                               ^
/usr/local/include/stdlib.h:202:31: note: insert '_Nullable' if the array parameter may be null
double   erand48(unsigned short[3]);
                               ^
                                _Nullable 
/usr/local/include/stdlib.h:202:31: note: insert '_Nonnull' if the array parameter should never be null
double   erand48(unsigned short[3]);
                               ^
                                _Nonnull 
/usr/local/include/stdlib.h:203:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
/usr/local/include/stdlib.h:203:29: note: insert '_Nullable' if the pointer may be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nullable 
/usr/local/include/stdlib.h:203:29: note: insert '_Nonnull' if the pointer should never be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nonnull 
/usr/local/include/stdlib.h:203:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
/usr/local/include/stdlib.h:203:46: note: insert '_Nullable' if the pointer may be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nullable 
/usr/local/include/stdlib.h:203:46: note: insert '_Nonnull' if the pointer should never be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nonnull 
/usr/local/include/stdlib.h:203:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
/usr/local/include/stdlib.h:203:6: note: insert '_Nullable' if the pointer may be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nullable 
/usr/local/include/stdlib.h:203:6: note: insert '_Nonnull' if the pointer should never be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nonnull 
/usr/local/include/stdlib.h:204:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *gcvt(double, int, char *); /* LEGACY */
                                ^
/usr/local/include/stdlib.h:204:30: note: insert '_Nullable' if the pointer may be null
char    *gcvt(double, int, char *); /* LEGACY */
                                ^
                                 _Nullable
/usr/local/include/stdlib.h:204:30: note: insert '_Nonnull' if the pointer should never be null
char    *gcvt(double, int, char *); /* LEGACY */
                                ^
                                 _Nonnull
/usr/local/include/stdlib.h:204:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *gcvt(double, int, char *); /* LEGACY */
        ^
/usr/local/include/stdlib.h:204:6: note: insert '_Nullable' if the pointer may be null
char    *gcvt(double, int, char *); /* LEGACY */
        ^
          _Nullable 
/usr/local/include/stdlib.h:204:6: note: insert '_Nonnull' if the pointer should never be null
char    *gcvt(double, int, char *); /* LEGACY */
        ^
          _Nonnull 
/usr/local/include/stdlib.h:205:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                        ^
/usr/local/include/stdlib.h:205:21: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                        ^
                         _Nullable
/usr/local/include/stdlib.h:205:21: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                        ^
                         _Nonnull
/usr/local/include/stdlib.h:205:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                         ^
/usr/local/include/stdlib.h:205:22: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:205:22: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:205:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                 ^
/usr/local/include/stdlib.h:205:30: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                 ^
                                   _Nullable
/usr/local/include/stdlib.h:205:30: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                 ^
                                   _Nonnull
/usr/local/include/stdlib.h:205:38: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                         ^
/usr/local/include/stdlib.h:205:38: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                         ^
                                          _Nullable
/usr/local/include/stdlib.h:205:38: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                         ^
                                          _Nonnull
/usr/local/include/stdlib.h:205:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                                 ^
/usr/local/include/stdlib.h:205:46: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:205:46: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:205:47: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                                  ^
/usr/local/include/stdlib.h:205:47: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                                  ^
                                                   _Nullable
/usr/local/include/stdlib.h:205:47: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                                  ^
                                                   _Nonnull
/usr/local/include/stdlib.h:208:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
                                  ^
/usr/local/include/stdlib.h:208:32: note: insert '_Nullable' if the pointer may be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
                                  ^
                                   _Nullable
/usr/local/include/stdlib.h:208:32: note: insert '_Nonnull' if the pointer should never be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
                                  ^
                                   _Nonnull
/usr/local/include/stdlib.h:208:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
        ^
/usr/local/include/stdlib.h:208:6: note: insert '_Nullable' if the pointer may be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
        ^
          _Nullable 
/usr/local/include/stdlib.h:208:6: note: insert '_Nonnull' if the pointer should never be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
        ^
          _Nonnull 
/usr/local/include/stdlib.h:212:29: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
long     jrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
/usr/local/include/stdlib.h:212:29: note: insert '_Nullable' if the array parameter may be null
long     jrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nullable 
/usr/local/include/stdlib.h:212:29: note: insert '_Nonnull' if the array parameter should never be null
long     jrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nonnull 
/usr/local/include/stdlib.h:213:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *l64a(long);
        ^
/usr/local/include/stdlib.h:213:6: note: insert '_Nullable' if the pointer may be null
char    *l64a(long);
        ^
          _Nullable 
/usr/local/include/stdlib.h:213:6: note: insert '_Nonnull' if the pointer should never be null
char    *l64a(long);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:214:29: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
void     lcong48(unsigned short[7]);
                               ^
/usr/local/include/stdlib.h:214:29: note: insert '_Nullable' if the array parameter may be null
void     lcong48(unsigned short[7]);
                               ^
                                _Nullable 
/usr/local/include/stdlib.h:214:29: note: insert '_Nonnull' if the array parameter should never be null
void     lcong48(unsigned short[7]);
                               ^
                                _Nonnull 
/usr/local/include/stdlib.h:216:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *mktemp(char *);
                     ^
/usr/local/include/stdlib.h:216:19: note: insert '_Nullable' if the pointer may be null
char    *mktemp(char *);
                     ^
                      _Nullable
/usr/local/include/stdlib.h:216:19: note: insert '_Nonnull' if the pointer should never be null
char    *mktemp(char *);
                     ^
                      _Nonnull
/usr/local/include/stdlib.h:216:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *mktemp(char *);
        ^
/usr/local/include/stdlib.h:216:6: note: insert '_Nullable' if the pointer may be null
char    *mktemp(char *);
        ^
          _Nullable 
/usr/local/include/stdlib.h:216:6: note: insert '_Nonnull' if the pointer should never be null
char    *mktemp(char *);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:217:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mkstemp(char *);
                      ^
/usr/local/include/stdlib.h:217:19: note: insert '_Nullable' if the pointer may be null
int      mkstemp(char *);
                      ^
                       _Nullable
/usr/local/include/stdlib.h:217:19: note: insert '_Nonnull' if the pointer should never be null
int      mkstemp(char *);
                      ^
                       _Nonnull
/usr/local/include/stdlib.h:219:29: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
long     nrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
/usr/local/include/stdlib.h:219:29: note: insert '_Nullable' if the array parameter may be null
long     nrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nullable 
/usr/local/include/stdlib.h:219:29: note: insert '_Nonnull' if the array parameter should never be null
long     nrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nonnull 
/usr/local/include/stdlib.h:221:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ptsname(int);
        ^
/usr/local/include/stdlib.h:221:6: note: insert '_Nullable' if the pointer may be null
char    *ptsname(int);
        ^
          _Nullable 
/usr/local/include/stdlib.h:221:6: note: insert '_Nonnull' if the pointer should never be null
char    *ptsname(int);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:224:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int ptsname_r(int fildes, char *buffer, size_t buflen) __API_AVAILABLE(macos(10.13.4), ios(11.3), tvos(11.3), watchos(4.3));
                               ^
/usr/local/include/stdlib.h:224:32: note: insert '_Nullable' if the pointer may be null
int ptsname_r(int fildes, char *buffer, size_t buflen) __API_AVAILABLE(macos(10.13.4), ios(11.3), tvos(11.3), watchos(4.3));
                               ^
                                 _Nullable 
/usr/local/include/stdlib.h:224:32: note: insert '_Nonnull' if the pointer should never be null
int ptsname_r(int fildes, char *buffer, size_t buflen) __API_AVAILABLE(macos(10.13.4), ios(11.3), tvos(11.3), watchos(4.3));
                               ^
                                 _Nonnull 
/usr/local/include/stdlib.h:227:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      putenv(char *) __DARWIN_ALIAS(putenv);
                     ^
/usr/local/include/stdlib.h:227:18: note: insert '_Nullable' if the pointer may be null
int      putenv(char *) __DARWIN_ALIAS(putenv);
                     ^
                      _Nullable
/usr/local/include/stdlib.h:227:18: note: insert '_Nonnull' if the pointer should never be null
int      putenv(char *) __DARWIN_ALIAS(putenv);
                     ^
                      _Nonnull
/usr/local/include/stdlib.h:229:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      rand_r(unsigned *) __swift_unavailable("Use arc4random instead.");
                         ^
/usr/local/include/stdlib.h:229:22: note: insert '_Nullable' if the pointer may be null
int      rand_r(unsigned *) __swift_unavailable("Use arc4random instead.");
                         ^
                          _Nullable
/usr/local/include/stdlib.h:229:22: note: insert '_Nonnull' if the pointer should never be null
int      rand_r(unsigned *) __swift_unavailable("Use arc4random instead.");
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:231:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                             ^
/usr/local/include/stdlib.h:231:27: note: insert '_Nullable' if the pointer may be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                             ^
                               _Nullable
/usr/local/include/stdlib.h:231:27: note: insert '_Nonnull' if the pointer should never be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                             ^
                               _Nonnull
/usr/local/include/stdlib.h:231:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                                                ^
/usr/local/include/stdlib.h:231:46: note: insert '_Nullable' if the pointer may be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                                                ^
                                                  _Nullable
/usr/local/include/stdlib.h:231:46: note: insert '_Nonnull' if the pointer should never be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                                                ^
                                                  _Nonnull
/usr/local/include/stdlib.h:231:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
        ^
/usr/local/include/stdlib.h:231:6: note: insert '_Nullable' if the pointer may be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
        ^
          _Nullable 
/usr/local/include/stdlib.h:231:6: note: insert '_Nonnull' if the pointer should never be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:236:24: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
        *seed48(unsigned short[3]);
                              ^
/usr/local/include/stdlib.h:236:24: note: insert '_Nullable' if the array parameter may be null
        *seed48(unsigned short[3]);
                              ^
                               _Nullable 
/usr/local/include/stdlib.h:236:24: note: insert '_Nonnull' if the array parameter should never be null
        *seed48(unsigned short[3]);
                              ^
                               _Nonnull 
/usr/local/include/stdlib.h:236:2: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        *seed48(unsigned short[3]);
        ^
/usr/local/include/stdlib.h:236:2: note: insert '_Nullable' if the pointer may be null
        *seed48(unsigned short[3]);
        ^
          _Nullable 
/usr/local/include/stdlib.h:236:2: note: insert '_Nonnull' if the pointer should never be null
        *seed48(unsigned short[3]);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:237:24: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                           ^
/usr/local/include/stdlib.h:237:24: note: insert '_Nullable' if the pointer may be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                           ^
                             _Nullable
/usr/local/include/stdlib.h:237:24: note: insert '_Nonnull' if the pointer should never be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                           ^
                             _Nonnull
/usr/local/include/stdlib.h:237:45: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                                                ^
/usr/local/include/stdlib.h:237:45: note: insert '_Nullable' if the pointer may be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                                                ^
                                                  _Nullable
/usr/local/include/stdlib.h:237:45: note: insert '_Nonnull' if the pointer should never be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                                                ^
                                                  _Nonnull
/usr/local/include/stdlib.h:239:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     setkey(const char *) __DARWIN_ALIAS(setkey);
                           ^
/usr/local/include/stdlib.h:239:25: note: insert '_Nullable' if the pointer may be null
void     setkey(const char *) __DARWIN_ALIAS(setkey);
                           ^
                            _Nullable
/usr/local/include/stdlib.h:239:25: note: insert '_Nonnull' if the pointer should never be null
void     setkey(const char *) __DARWIN_ALIAS(setkey);
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:243:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *setstate(const char *);
                             ^
/usr/local/include/stdlib.h:243:27: note: insert '_Nullable' if the pointer may be null
char    *setstate(const char *);
                             ^
                              _Nullable
/usr/local/include/stdlib.h:243:27: note: insert '_Nonnull' if the pointer should never be null
char    *setstate(const char *);
                             ^
                              _Nonnull
/usr/local/include/stdlib.h:243:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *setstate(const char *);
        ^
/usr/local/include/stdlib.h:243:6: note: insert '_Nullable' if the pointer may be null
char    *setstate(const char *);
        ^
          _Nullable 
/usr/local/include/stdlib.h:243:6: note: insert '_Nonnull' if the pointer should never be null
char    *setstate(const char *);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:252:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      unsetenv(const char *) __DARWIN_ALIAS(unsetenv);
                             ^
/usr/local/include/stdlib.h:252:26: note: insert '_Nullable' if the pointer may be null
int      unsetenv(const char *) __DARWIN_ALIAS(unsetenv);
                             ^
                              _Nullable
/usr/local/include/stdlib.h:252:26: note: insert '_Nonnull' if the pointer should never be null
int      unsetenv(const char *) __DARWIN_ALIAS(unsetenv);
                             ^
                              _Nonnull
/usr/local/include/stdlib.h:265:42: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     arc4random_addrandom(unsigned char * /*dat*/, int /*datlen*/)
                                            ^
/usr/local/include/stdlib.h:265:42: note: insert '_Nullable' if the pointer may be null
void     arc4random_addrandom(unsigned char * /*dat*/, int /*datlen*/)
                                            ^
                                              _Nullable
/usr/local/include/stdlib.h:265:42: note: insert '_Nonnull' if the pointer should never be null
void     arc4random_addrandom(unsigned char * /*dat*/, int /*datlen*/)
                                            ^
                                              _Nonnull
/usr/local/include/stdlib.h:270:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     arc4random_buf(void * __buf, size_t __nbytes) __OSX_AVAILABLE_STARTING(__MAC_10_7, __IPHONE_4_3);
                             ^
/usr/local/include/stdlib.h:270:27: note: insert '_Nullable' if the pointer may be null
void     arc4random_buf(void * __buf, size_t __nbytes) __OSX_AVAILABLE_STARTING(__MAC_10_7, __IPHONE_4_3);
                             ^
                               _Nullable
/usr/local/include/stdlib.h:270:27: note: insert '_Nonnull' if the pointer should never be null
void     arc4random_buf(void * __buf, size_t __nbytes) __OSX_AVAILABLE_STARTING(__MAC_10_7, __IPHONE_4_3);
                             ^
                               _Nonnull
/usr/local/include/stdlib.h:276:28: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                              ^
/usr/local/include/stdlib.h:276:28: note: insert '_Nullable' if the pointer may be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                              ^
                                _Nullable 
/usr/local/include/stdlib.h:276:28: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                              ^
                                _Nonnull 
/usr/local/include/stdlib.h:276:47: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                                                 ^
/usr/local/include/stdlib.h:276:47: note: insert '_Nullable' if the pointer may be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                                                 ^
                                                   _Nullable 
/usr/local/include/stdlib.h:276:47: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                                                 ^
                                                   _Nonnull 
/usr/local/include/stdlib.h:277:59: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                 ^
/usr/local/include/stdlib.h:277:59: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                 ^
                                                                  _Nullable
/usr/local/include/stdlib.h:277:59: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                 ^
                                                                  _Nonnull
/usr/local/include/stdlib.h:277:73: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                               ^
/usr/local/include/stdlib.h:277:73: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                               ^
                                                                                _Nullable
/usr/local/include/stdlib.h:277:73: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                               ^
                                                                                _Nonnull
/usr/local/include/stdlib.h:276:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
        ^
/usr/local/include/stdlib.h:276:6: note: insert '_Nullable' if the pointer may be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
        ^
          _Nullable 
/usr/local/include/stdlib.h:276:6: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
        ^
          _Nonnull 
/usr/local/include/stdlib.h:281:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *cgetcap(char *, const char *, int);
                      ^
/usr/local/include/stdlib.h:281:20: note: insert '_Nullable' if the pointer may be null
char    *cgetcap(char *, const char *, int);
                      ^
                       _Nullable
/usr/local/include/stdlib.h:281:20: note: insert '_Nonnull' if the pointer should never be null
char    *cgetcap(char *, const char *, int);
                      ^
                       _Nonnull
/usr/local/include/stdlib.h:281:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *cgetcap(char *, const char *, int);
                                    ^
/usr/local/include/stdlib.h:281:34: note: insert '_Nullable' if the pointer may be null
char    *cgetcap(char *, const char *, int);
                                    ^
                                     _Nullable
/usr/local/include/stdlib.h:281:34: note: insert '_Nonnull' if the pointer should never be null
char    *cgetcap(char *, const char *, int);
                                    ^
                                     _Nonnull
/usr/local/include/stdlib.h:281:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *cgetcap(char *, const char *, int);
        ^
/usr/local/include/stdlib.h:281:6: note: insert '_Nullable' if the pointer may be null
char    *cgetcap(char *, const char *, int);
        ^
          _Nullable 
/usr/local/include/stdlib.h:281:6: note: insert '_Nonnull' if the pointer should never be null
char    *cgetcap(char *, const char *, int);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:283:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                      ^
/usr/local/include/stdlib.h:283:19: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                      ^
                       _Nullable
/usr/local/include/stdlib.h:283:19: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                      ^
                       _Nonnull
/usr/local/include/stdlib.h:283:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                       ^
/usr/local/include/stdlib.h:283:20: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                       ^
                        _Nullable
/usr/local/include/stdlib.h:283:20: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                       ^
                        _Nonnull
/usr/local/include/stdlib.h:283:28: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                               ^
/usr/local/include/stdlib.h:283:28: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                               ^
                                _Nullable
/usr/local/include/stdlib.h:283:28: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                               ^
                                _Nonnull
/usr/local/include/stdlib.h:283:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                                ^
/usr/local/include/stdlib.h:283:29: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                                ^
                                 _Nullable
/usr/local/include/stdlib.h:283:29: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                                ^
                                 _Nonnull
/usr/local/include/stdlib.h:283:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                                              ^
/usr/local/include/stdlib.h:283:43: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                                              ^
                                               _Nullable
/usr/local/include/stdlib.h:283:43: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                                              ^
                                               _Nonnull
/usr/local/include/stdlib.h:284:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                        ^
/usr/local/include/stdlib.h:284:21: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                        ^
                         _Nullable
/usr/local/include/stdlib.h:284:21: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                        ^
                         _Nonnull
/usr/local/include/stdlib.h:284:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                         ^
/usr/local/include/stdlib.h:284:22: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:284:22: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:284:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                                 ^
/usr/local/include/stdlib.h:284:30: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                                 ^
                                  _Nullable
/usr/local/include/stdlib.h:284:30: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                                 ^
                                  _Nonnull
/usr/local/include/stdlib.h:284:31: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                                  ^
/usr/local/include/stdlib.h:284:31: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                                  ^
                                   _Nullable
/usr/local/include/stdlib.h:284:31: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                                  ^
                                   _Nonnull
/usr/local/include/stdlib.h:285:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetmatch(const char *, const char *);
                              ^
/usr/local/include/stdlib.h:285:27: note: insert '_Nullable' if the pointer may be null
int      cgetmatch(const char *, const char *);
                              ^
                               _Nullable
/usr/local/include/stdlib.h:285:27: note: insert '_Nonnull' if the pointer should never be null
int      cgetmatch(const char *, const char *);
                              ^
                               _Nonnull
/usr/local/include/stdlib.h:285:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetmatch(const char *, const char *);
                                            ^
/usr/local/include/stdlib.h:285:41: note: insert '_Nullable' if the pointer may be null
int      cgetmatch(const char *, const char *);
                                            ^
                                             _Nullable
/usr/local/include/stdlib.h:285:41: note: insert '_Nonnull' if the pointer should never be null
int      cgetmatch(const char *, const char *);
                                            ^
                                             _Nonnull
/usr/local/include/stdlib.h:286:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                       ^
/usr/local/include/stdlib.h:286:20: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                       ^
                        _Nullable
/usr/local/include/stdlib.h:286:20: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                       ^
                        _Nonnull
/usr/local/include/stdlib.h:286:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                        ^
/usr/local/include/stdlib.h:286:21: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                        ^
                         _Nullable
/usr/local/include/stdlib.h:286:21: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                        ^
                         _Nonnull
/usr/local/include/stdlib.h:286:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                                ^
/usr/local/include/stdlib.h:286:29: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                                ^
                                 _Nullable
/usr/local/include/stdlib.h:286:29: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                                ^
                                 _Nonnull
/usr/local/include/stdlib.h:286:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                                 ^
/usr/local/include/stdlib.h:286:30: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                                 ^
                                  _Nullable
/usr/local/include/stdlib.h:286:30: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                                 ^
                                  _Nonnull
/usr/local/include/stdlib.h:287:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnum(char *, const char *, long *);
                      ^
/usr/local/include/stdlib.h:287:19: note: insert '_Nullable' if the pointer may be null
int      cgetnum(char *, const char *, long *);
                      ^
                       _Nullable
/usr/local/include/stdlib.h:287:19: note: insert '_Nonnull' if the pointer should never be null
int      cgetnum(char *, const char *, long *);
                      ^
                       _Nonnull
/usr/local/include/stdlib.h:287:33: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnum(char *, const char *, long *);
                                    ^
/usr/local/include/stdlib.h:287:33: note: insert '_Nullable' if the pointer may be null
int      cgetnum(char *, const char *, long *);
                                    ^
                                     _Nullable
/usr/local/include/stdlib.h:287:33: note: insert '_Nonnull' if the pointer should never be null
int      cgetnum(char *, const char *, long *);
                                    ^
                                     _Nonnull
/usr/local/include/stdlib.h:287:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnum(char *, const char *, long *);
                                            ^
/usr/local/include/stdlib.h:287:41: note: insert '_Nullable' if the pointer may be null
int      cgetnum(char *, const char *, long *);
                                            ^
                                             _Nullable
/usr/local/include/stdlib.h:287:41: note: insert '_Nonnull' if the pointer should never be null
int      cgetnum(char *, const char *, long *);
                                            ^
                                             _Nonnull
/usr/local/include/stdlib.h:288:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetset(const char *);
                            ^
/usr/local/include/stdlib.h:288:25: note: insert '_Nullable' if the pointer may be null
int      cgetset(const char *);
                            ^
                             _Nullable
/usr/local/include/stdlib.h:288:25: note: insert '_Nonnull' if the pointer should never be null
int      cgetset(const char *);
                            ^
                             _Nonnull
/usr/local/include/stdlib.h:289:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                      ^
/usr/local/include/stdlib.h:289:19: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                      ^
                       _Nullable
/usr/local/include/stdlib.h:289:19: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                      ^
                       _Nonnull
/usr/local/include/stdlib.h:289:33: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                                    ^
/usr/local/include/stdlib.h:289:33: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                                    ^
                                     _Nullable
/usr/local/include/stdlib.h:289:33: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                                    ^
                                     _Nonnull
/usr/local/include/stdlib.h:289:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                                            ^
/usr/local/include/stdlib.h:289:41: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                                            ^
                                             _Nullable
/usr/local/include/stdlib.h:289:41: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                                            ^
                                             _Nonnull
/usr/local/include/stdlib.h:289:42: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                                             ^
/usr/local/include/stdlib.h:289:42: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                                             ^
                                              _Nullable
/usr/local/include/stdlib.h:289:42: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                                             ^
                                              _Nonnull
/usr/local/include/stdlib.h:290:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                       ^
/usr/local/include/stdlib.h:290:20: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                       ^
                        _Nullable
/usr/local/include/stdlib.h:290:20: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                       ^
                        _Nonnull
/usr/local/include/stdlib.h:290:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                                     ^
/usr/local/include/stdlib.h:290:34: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                                     ^
                                      _Nullable
/usr/local/include/stdlib.h:290:34: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                                     ^
                                      _Nonnull
/usr/local/include/stdlib.h:290:42: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                                             ^
/usr/local/include/stdlib.h:290:42: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                                             ^
                                              _Nullable
/usr/local/include/stdlib.h:290:42: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                                             ^
                                              _Nonnull
/usr/local/include/stdlib.h:290:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                                              ^
/usr/local/include/stdlib.h:290:43: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                                              ^
                                               _Nullable
/usr/local/include/stdlib.h:290:43: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                                              ^
                                               _Nonnull
/usr/local/include/stdlib.h:293:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *devname(dev_t, mode_t);
        ^
/usr/local/include/stdlib.h:293:6: note: insert '_Nullable' if the pointer may be null
char    *devname(dev_t, mode_t);
        ^
          _Nullable 
/usr/local/include/stdlib.h:293:6: note: insert '_Nonnull' if the pointer should never be null
char    *devname(dev_t, mode_t);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:294:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *devname_r(dev_t, mode_t, char *buf, int len);
                                       ^
/usr/local/include/stdlib.h:294:37: note: insert '_Nullable' if the pointer may be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
                                       ^
                                         _Nullable 
/usr/local/include/stdlib.h:294:37: note: insert '_Nonnull' if the pointer should never be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
                                       ^
                                         _Nonnull 
/usr/local/include/stdlib.h:294:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *devname_r(dev_t, mode_t, char *buf, int len);
        ^
/usr/local/include/stdlib.h:294:6: note: insert '_Nullable' if the pointer may be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
        ^
          _Nullable 
/usr/local/include/stdlib.h:294:6: note: insert '_Nonnull' if the pointer should never be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:295:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getbsize(int *, long *);
                      ^
/usr/local/include/stdlib.h:295:20: note: insert '_Nullable' if the pointer may be null
char    *getbsize(int *, long *);
                      ^
                       _Nullable
/usr/local/include/stdlib.h:295:20: note: insert '_Nonnull' if the pointer should never be null
char    *getbsize(int *, long *);
                      ^
                       _Nonnull
/usr/local/include/stdlib.h:295:28: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getbsize(int *, long *);
                              ^
/usr/local/include/stdlib.h:295:28: note: insert '_Nullable' if the pointer may be null
char    *getbsize(int *, long *);
                              ^
                               _Nullable
/usr/local/include/stdlib.h:295:28: note: insert '_Nonnull' if the pointer should never be null
char    *getbsize(int *, long *);
                              ^
                               _Nonnull
/usr/local/include/stdlib.h:295:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getbsize(int *, long *);
        ^
/usr/local/include/stdlib.h:295:6: note: insert '_Nullable' if the pointer may be null
char    *getbsize(int *, long *);
        ^
          _Nullable 
/usr/local/include/stdlib.h:295:6: note: insert '_Nonnull' if the pointer should never be null
char    *getbsize(int *, long *);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:296:24: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
int      getloadavg(double [], int);
                           ^
/usr/local/include/stdlib.h:296:24: note: insert '_Nullable' if the array parameter may be null
int      getloadavg(double [], int);
                           ^
                            _Nullable
/usr/local/include/stdlib.h:296:24: note: insert '_Nonnull' if the array parameter should never be null
int      getloadavg(double [], int);
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:298:2: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        *getprogname(void);
        ^
/usr/local/include/stdlib.h:298:2: note: insert '_Nullable' if the pointer may be null
        *getprogname(void);
        ^
          _Nullable 
/usr/local/include/stdlib.h:298:2: note: insert '_Nonnull' if the pointer should never be null
        *getprogname(void);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:299:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     setprogname(const char *);
                                ^
/usr/local/include/stdlib.h:299:30: note: insert '_Nullable' if the pointer may be null
void     setprogname(const char *);
                                ^
                                 _Nullable
/usr/local/include/stdlib.h:299:30: note: insert '_Nonnull' if the pointer should never be null
void     setprogname(const char *);
                                ^
                                 _Nonnull
/usr/local/include/stdlib.h:309:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      heapsort(void *__base, size_t __nel, size_t __width,
                       ^
/usr/local/include/stdlib.h:309:20: note: insert '_Nullable' if the pointer may be null
int      heapsort(void *__base, size_t __nel, size_t __width,
                       ^
                         _Nullable 
/usr/local/include/stdlib.h:309:20: note: insert '_Nonnull' if the pointer should never be null
int      heapsort(void *__base, size_t __nel, size_t __width,
                       ^
                         _Nonnull 
/usr/local/include/stdlib.h:310:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
/usr/local/include/stdlib.h:310:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:310:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:310:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
/usr/local/include/stdlib.h:310:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:310:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:312:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      heapsort_b(void *__base, size_t __nel, size_t __width,
                         ^
/usr/local/include/stdlib.h:312:22: note: insert '_Nullable' if the pointer may be null
int      heapsort_b(void *__base, size_t __nel, size_t __width,
                         ^
                           _Nullable 
/usr/local/include/stdlib.h:312:22: note: insert '_Nonnull' if the pointer should never be null
int      heapsort_b(void *__base, size_t __nel, size_t __width,
                         ^
                           _Nonnull 
/usr/local/include/stdlib.h:313:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
/usr/local/include/stdlib.h:313:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:313:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:313:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
/usr/local/include/stdlib.h:313:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:313:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:316:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mergesort(void *__base, size_t __nel, size_t __width,
                        ^
/usr/local/include/stdlib.h:316:21: note: insert '_Nullable' if the pointer may be null
int      mergesort(void *__base, size_t __nel, size_t __width,
                        ^
                          _Nullable 
/usr/local/include/stdlib.h:316:21: note: insert '_Nonnull' if the pointer should never be null
int      mergesort(void *__base, size_t __nel, size_t __width,
                        ^
                          _Nonnull 
/usr/local/include/stdlib.h:317:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
/usr/local/include/stdlib.h:317:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:317:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:317:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
/usr/local/include/stdlib.h:317:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:317:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:319:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mergesort_b(void *__base, size_t __nel, size_t __width,
                          ^
/usr/local/include/stdlib.h:319:23: note: insert '_Nullable' if the pointer may be null
int      mergesort_b(void *__base, size_t __nel, size_t __width,
                          ^
                            _Nullable 
/usr/local/include/stdlib.h:319:23: note: insert '_Nonnull' if the pointer should never be null
int      mergesort_b(void *__base, size_t __nel, size_t __width,
                          ^
                            _Nonnull 
/usr/local/include/stdlib.h:320:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
/usr/local/include/stdlib.h:320:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:320:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:320:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
/usr/local/include/stdlib.h:320:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:320:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:323:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort(void *__base, size_t __nel, size_t __width,
                    ^
/usr/local/include/stdlib.h:323:18: note: insert '_Nullable' if the pointer may be null
void     psort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nullable 
/usr/local/include/stdlib.h:323:18: note: insert '_Nonnull' if the pointer should never be null
void     psort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nonnull 
/usr/local/include/stdlib.h:324:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *))
                                                 ^
/usr/local/include/stdlib.h:324:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *))
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:324:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *))
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:324:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *))
                                                               ^
/usr/local/include/stdlib.h:324:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *))
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:324:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *))
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:327:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort_b(void *__base, size_t __nel, size_t __width,
                      ^
/usr/local/include/stdlib.h:327:20: note: insert '_Nullable' if the pointer may be null
void     psort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nullable 
/usr/local/include/stdlib.h:327:20: note: insert '_Nonnull' if the pointer should never be null
void     psort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nonnull 
/usr/local/include/stdlib.h:328:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
/usr/local/include/stdlib.h:328:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:328:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:328:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
/usr/local/include/stdlib.h:328:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:328:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:331:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
/usr/local/include/stdlib.h:331:20: note: insert '_Nullable' if the pointer may be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nullable 
/usr/local/include/stdlib.h:331:20: note: insert '_Nonnull' if the pointer should never be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nonnull 
/usr/local/include/stdlib.h:331:64: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
/usr/local/include/stdlib.h:331:64: note: insert '_Nullable' if the pointer may be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nullable
/usr/local/include/stdlib.h:331:64: note: insert '_Nonnull' if the pointer should never be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nonnull
/usr/local/include/stdlib.h:332:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                           ^
/usr/local/include/stdlib.h:332:37: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                           ^
                                            _Nullable
/usr/local/include/stdlib.h:332:37: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                           ^
                                            _Nonnull
/usr/local/include/stdlib.h:332:51: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                                         ^
/usr/local/include/stdlib.h:332:51: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                                         ^
                                                          _Nullable
/usr/local/include/stdlib.h:332:51: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                                         ^
                                                          _Nonnull
/usr/local/include/stdlib.h:332:65: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                                                       ^
/usr/local/include/stdlib.h:332:65: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                                                       ^
                                                                        _Nullable
/usr/local/include/stdlib.h:332:65: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                                                       ^
                                                                        _Nonnull
/usr/local/include/stdlib.h:335:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort_b(void *__base, size_t __nel, size_t __width,
                      ^
/usr/local/include/stdlib.h:335:20: note: insert '_Nullable' if the pointer may be null
void     qsort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nullable 
/usr/local/include/stdlib.h:335:20: note: insert '_Nonnull' if the pointer should never be null
void     qsort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nonnull 
/usr/local/include/stdlib.h:336:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
/usr/local/include/stdlib.h:336:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:336:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:336:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
/usr/local/include/stdlib.h:336:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:336:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:339:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
/usr/local/include/stdlib.h:339:20: note: insert '_Nullable' if the pointer may be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nullable 
/usr/local/include/stdlib.h:339:20: note: insert '_Nonnull' if the pointer should never be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nonnull 
/usr/local/include/stdlib.h:339:64: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
/usr/local/include/stdlib.h:339:64: note: insert '_Nullable' if the pointer may be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nullable
/usr/local/include/stdlib.h:339:64: note: insert '_Nonnull' if the pointer should never be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nonnull
/usr/local/include/stdlib.h:340:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                           ^
/usr/local/include/stdlib.h:340:37: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                           ^
                                            _Nullable
/usr/local/include/stdlib.h:340:37: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                           ^
                                            _Nonnull
/usr/local/include/stdlib.h:340:51: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                         ^
/usr/local/include/stdlib.h:340:51: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                         ^
                                                          _Nullable
/usr/local/include/stdlib.h:340:51: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                         ^
                                                          _Nonnull
/usr/local/include/stdlib.h:340:65: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                                       ^
/usr/local/include/stdlib.h:340:65: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                                       ^
                                                                        _Nullable
/usr/local/include/stdlib.h:340:65: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                                       ^
                                                                        _Nonnull
/usr/local/include/stdlib.h:341:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                       ^
/usr/local/include/stdlib.h:341:36: note: insert '_Nullable' if the pointer may be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                       ^
                                        _Nullable
/usr/local/include/stdlib.h:341:36: note: insert '_Nonnull' if the pointer should never be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                       ^
                                        _Nonnull
/usr/local/include/stdlib.h:341:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
/usr/local/include/stdlib.h:341:37: note: insert '_Nullable' if the pointer may be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                          _Nullable 
/usr/local/include/stdlib.h:341:37: note: insert '_Nonnull' if the pointer should never be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                          _Nonnull 
/usr/local/include/stdlib.h:341:77: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                ^
/usr/local/include/stdlib.h:341:77: note: insert '_Nullable' if the pointer may be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                ^
                                                                                  _Nullable 
/usr/local/include/stdlib.h:341:77: note: insert '_Nonnull' if the pointer should never be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                ^
                                                                                  _Nonnull 
/usr/local/include/stdlib.h:343:24: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int     rpmatch(const char *)
                           ^
/usr/local/include/stdlib.h:343:24: note: insert '_Nullable' if the pointer may be null
int     rpmatch(const char *)
                           ^
                            _Nullable
/usr/local/include/stdlib.h:343:24: note: insert '_Nonnull' if the pointer should never be null
int     rpmatch(const char *)
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:345:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
/usr/local/include/stdlib.h:345:37: note: insert '_Nullable' if the pointer may be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                         _Nullable
/usr/local/include/stdlib.h:345:37: note: insert '_Nonnull' if the pointer should never be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                         _Nonnull
/usr/local/include/stdlib.h:345:38: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                         ^
/usr/local/include/stdlib.h:345:38: note: insert '_Nullable' if the pointer may be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                         ^
                                           _Nullable 
/usr/local/include/stdlib.h:345:38: note: insert '_Nonnull' if the pointer should never be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                         ^
                                           _Nonnull 
/usr/local/include/stdlib.h:345:78: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                 ^
/usr/local/include/stdlib.h:345:78: note: insert '_Nullable' if the pointer may be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                 ^
                                                                                   _Nullable 
/usr/local/include/stdlib.h:345:78: note: insert '_Nonnull' if the pointer should never be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                 ^
                                                                                   _Nonnull 
/usr/local/include/stdlib.h:349:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
                       ^
/usr/local/include/stdlib.h:349:21: note: insert '_Nullable' if the pointer may be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
                       ^
                         _Nullable 
/usr/local/include/stdlib.h:349:21: note: insert '_Nonnull' if the pointer should never be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
                       ^
                         _Nonnull 
/usr/local/include/stdlib.h:349:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
        ^
/usr/local/include/stdlib.h:349:6: note: insert '_Nullable' if the pointer may be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
        ^
          _Nullable 
/usr/local/include/stdlib.h:349:6: note: insert '_Nonnull' if the pointer should never be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:351:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                            ^
/usr/local/include/stdlib.h:351:22: note: insert '_Nullable' if the pointer may be null
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                            ^
                              _Nullable 
/usr/local/include/stdlib.h:351:22: note: insert '_Nonnull' if the pointer should never be null
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                            ^
                              _Nonnull 
/usr/local/include/stdlib.h:351:84: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                                                                                          ^
/usr/local/include/stdlib.h:351:84: note: insert '_Nullable' if the pointer may be null
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                                                                                          ^
                                                                                           _Nullable
/usr/local/include/stdlib.h:351:84: note: insert '_Nonnull' if the pointer should never be null
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                                                                                          ^
                                                                                           _Nonnull
/usr/local/include/stdlib.h:351:85: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                                                                                           ^
/usr/local/include/stdlib.h:351:85: note: insert '_Nullable' if the pointer may be null
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                                                                                           ^
                                                                                             _Nullable 
/usr/local/include/stdlib.h:351:85: note: insert '_Nonnull' if the pointer should never be null
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                                                                                           ^
                                                                                             _Nonnull 
/usr/local/include/stdlib.h:355:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoq(const char *__str, char **__endptr, int __base);
                           ^
/usr/local/include/stdlib.h:355:21: note: insert '_Nullable' if the pointer may be null
         strtoq(const char *__str, char **__endptr, int __base);
                           ^
                             _Nullable 
/usr/local/include/stdlib.h:355:21: note: insert '_Nonnull' if the pointer should never be null
         strtoq(const char *__str, char **__endptr, int __base);
                           ^
                             _Nonnull 
/usr/local/include/stdlib.h:355:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoq(const char *__str, char **__endptr, int __base);
                                        ^
/usr/local/include/stdlib.h:355:34: note: insert '_Nullable' if the pointer may be null
         strtoq(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nullable
/usr/local/include/stdlib.h:355:34: note: insert '_Nonnull' if the pointer should never be null
         strtoq(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nonnull
/usr/local/include/stdlib.h:355:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoq(const char *__str, char **__endptr, int __base);
                                         ^
/usr/local/include/stdlib.h:355:35: note: insert '_Nullable' if the pointer may be null
         strtoq(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nullable 
/usr/local/include/stdlib.h:355:35: note: insert '_Nonnull' if the pointer should never be null
         strtoq(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nonnull 
/usr/local/include/stdlib.h:357:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtouq(const char *__str, char **__endptr, int __base);
                            ^
/usr/local/include/stdlib.h:357:22: note: insert '_Nullable' if the pointer may be null
         strtouq(const char *__str, char **__endptr, int __base);
                            ^
                              _Nullable 
/usr/local/include/stdlib.h:357:22: note: insert '_Nonnull' if the pointer should never be null
         strtouq(const char *__str, char **__endptr, int __base);
                            ^
                              _Nonnull 
/usr/local/include/stdlib.h:357:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtouq(const char *__str, char **__endptr, int __base);
                                         ^
/usr/local/include/stdlib.h:357:35: note: insert '_Nullable' if the pointer may be null
         strtouq(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nullable
/usr/local/include/stdlib.h:357:35: note: insert '_Nonnull' if the pointer should never be null
         strtouq(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nonnull
/usr/local/include/stdlib.h:357:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtouq(const char *__str, char **__endptr, int __base);
                                          ^
/usr/local/include/stdlib.h:357:36: note: insert '_Nullable' if the pointer may be null
         strtouq(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nullable 
/usr/local/include/stdlib.h:357:36: note: insert '_Nonnull' if the pointer should never be null
         strtouq(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nonnull 
/usr/local/include/stdlib.h:359:13: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
extern char *suboptarg;         /* getsubopt(3) external variable */
            ^
/usr/local/include/stdlib.h:359:13: note: insert '_Nullable' if the pointer may be null
extern char *suboptarg;         /* getsubopt(3) external variable */
            ^
              _Nullable 
/usr/local/include/stdlib.h:359:13: note: insert '_Nonnull' if the pointer should never be null
extern char *suboptarg;         /* getsubopt(3) external variable */
            ^
              _Nonnull 
193 warnings generated.
checked program was:
/* begin */
 1: #include "ruby.h"
 2: 
 3: /*top*/
 4: extern int t(void);
 5: int main(int argc, char **argv)
 6: {
 7:   if (argc > 1000000) {
 8:     int (* volatile tp)(void)=(int (*)(void))&t;
 9:     printf("%d", (*tp)());
10:   }
11: 
12:   return !!argv[argc];
13: }
14: int t(void) { void ((*volatile p)()); p = (void ((*)()))rb_absint_size; return !p; }
/* end */

--------------------

have_func: checking for rb_absint_singlebit_p()... -------------------- yes

"gcc -o conftest -I/Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/x86_64-darwin19 -I/Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/backward -I/Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0 -I.  -I/usr/local/opt/libyaml/include -I/usr/local/opt/libksba/include -I/usr/local/opt/readline/include -I/usr/local/opt/zlib/include -I/usr/local/opt/openssl@1.1/include -D_XOPEN_SOURCE -D_DARWIN_C_SOURCE -D_DARWIN_UNLIMITED_SELECT -D_REENTRANT   -O3 -ggdb3 -Wall -Wextra -Wdeprecated-declarations -Wdivision-by-zero -Wimplicit-function-declaration -Wimplicit-int -Wpointer-arith -Wshorten-64-to-32 -Wwrite-strings -Wmissing-noreturn -Wno-constant-logical-operand -Wno-long-long -Wno-missing-field-initializers -Wno-overlength-strings -Wno-parentheses-equality -Wno-self-assign -Wno-tautological-compare -Wno-unused-parameter -Wno-unused-value -Wunused-variable -Wextra-tokens  -fno-common -pipe conftest.c  -L. -L/Users/dileepkumar/.rvm/rubies/ruby-2.7.0/lib -L/usr/local/opt/libyaml/lib -L/usr/local/opt/libksba/lib -L/usr/local/opt/readline/lib -L/usr/local/opt/zlib/lib -L/usr/local/opt/openssl@1.1/lib -L. -fstack-protector-strong -L/usr/local/lib -L/usr/local/opt/libyaml/lib -L/usr/local/opt/libksba/lib -L/usr/local/opt/readline/lib -L/usr/local/opt/zlib/lib -L/usr/local/opt/openssl@1.1/lib     -lruby.2.7   "
In file included from conftest.c:1:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby.h:33:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/ruby.h:29:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/defines.h:126:
In file included from /usr/local/include/stdio.h:64:
/usr/local/include/_stdio.h:93:16: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        unsigned char   *_base;
                        ^
/usr/local/include/_stdio.h:93:16: note: insert '_Nullable' if the pointer may be null
        unsigned char   *_base;
                        ^
                          _Nullable 
/usr/local/include/_stdio.h:93:16: note: insert '_Nonnull' if the pointer should never be null
        unsigned char   *_base;
                        ^
                          _Nonnull 
/usr/local/include/_stdio.h:138:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
/usr/local/include/_stdio.h:138:32: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
                                           _Nullable
/usr/local/include/_stdio.h:138:32: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
                                           _Nonnull
/usr/local/include/_stdio.h:138:40: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
/usr/local/include/_stdio.h:138:40: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
                                                   _Nullable
/usr/local/include/_stdio.h:138:40: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
                                                   _Nonnull
/usr/local/include/_stdio.h:139:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
/usr/local/include/_stdio.h:139:35: note: insert '_Nullable' if the pointer may be null
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
                                           _Nullable
/usr/local/include/_stdio.h:139:35: note: insert '_Nonnull' if the pointer should never be null
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
                                           _Nonnull
/usr/local/include/_stdio.h:140:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
/usr/local/include/_stdio.h:140:32: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
                                           _Nullable
/usr/local/include/_stdio.h:140:32: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
                                           _Nonnull
/usr/local/include/_stdio.h:140:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
/usr/local/include/_stdio.h:140:46: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
                                                         _Nullable
/usr/local/include/_stdio.h:140:46: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
                                                         _Nonnull
/usr/local/include/_stdio.h:144:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
/usr/local/include/_stdio.h:144:18: note: insert '_Nullable' if the pointer may be null
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
                          _Nullable 
/usr/local/include/_stdio.h:144:18: note: insert '_Nonnull' if the pointer should never be null
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
                          _Nonnull 
In file included from conftest.c:1:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby.h:33:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/ruby.h:29:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/defines.h:126:
/usr/local/include/stdio.h:67:13: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
extern FILE *__stdinp;
            ^
/usr/local/include/stdio.h:67:13: note: insert '_Nullable' if the pointer may be null
extern FILE *__stdinp;
            ^
              _Nullable 
/usr/local/include/stdio.h:67:13: note: insert '_Nonnull' if the pointer should never be null
extern FILE *__stdinp;
            ^
              _Nonnull 
/usr/local/include/stdio.h:386:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 int (* _Nullable)(void *, const char *, int),
                                        ^
/usr/local/include/stdio.h:386:41: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *, const char *, int),
                                        ^
                                         _Nullable
/usr/local/include/stdio.h:386:41: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *, const char *, int),
                                        ^
                                         _Nonnull
/usr/local/include/stdio.h:386:55: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
/usr/local/include/stdio.h:386:55: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
                                                       _Nullable
/usr/local/include/stdio.h:386:55: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
                                                       _Nonnull
/usr/local/include/stdio.h:387:44: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
/usr/local/include/stdio.h:387:44: note: insert '_Nullable' if the pointer may be null
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
                                            _Nullable
/usr/local/include/stdio.h:387:44: note: insert '_Nonnull' if the pointer should never be null
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
                                            _Nonnull
/usr/local/include/stdio.h:388:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 int (* _Nullable)(void *));
                                        ^
/usr/local/include/stdio.h:388:41: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *));
                                        ^
                                         _Nullable
/usr/local/include/stdio.h:388:41: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *));
                                        ^
                                         _Nonnull
/usr/local/include/stdio.h:384:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
FILE    *funopen(const void *,
        ^
/usr/local/include/stdio.h:384:6: note: insert '_Nullable' if the pointer may be null
FILE    *funopen(const void *,
        ^
          _Nullable 
/usr/local/include/stdio.h:384:6: note: insert '_Nonnull' if the pointer should never be null
FILE    *funopen(const void *,
        ^
          _Nonnull 
In file included from conftest.c:1:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby.h:33:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/ruby.h:29:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/defines.h:134:
/usr/local/include/stdlib.h:134:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   atof(const char *);
                         ^
/usr/local/include/stdlib.h:134:25: note: insert '_Nullable' if the pointer may be null
double   atof(const char *);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:134:25: note: insert '_Nonnull' if the pointer should never be null
double   atof(const char *);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:135:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      atoi(const char *);
                         ^
/usr/local/include/stdlib.h:135:22: note: insert '_Nullable' if the pointer may be null
int      atoi(const char *);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:135:22: note: insert '_Nonnull' if the pointer should never be null
int      atoi(const char *);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:136:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     atol(const char *);
                         ^
/usr/local/include/stdlib.h:136:23: note: insert '_Nullable' if the pointer may be null
long     atol(const char *);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:136:23: note: insert '_Nonnull' if the pointer should never be null
long     atol(const char *);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:139:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         atoll(const char *);
                          ^
/usr/local/include/stdlib.h:139:20: note: insert '_Nullable' if the pointer may be null
         atoll(const char *);
                          ^
                           _Nullable
/usr/local/include/stdlib.h:139:20: note: insert '_Nonnull' if the pointer should never be null
         atoll(const char *);
                          ^
                           _Nonnull
/usr/local/include/stdlib.h:141:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                            ^
/usr/local/include/stdlib.h:141:26: note: insert '_Nullable' if the pointer may be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                            ^
                              _Nullable 
/usr/local/include/stdlib.h:141:26: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                            ^
                              _Nonnull 
/usr/local/include/stdlib.h:141:45: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                                               ^
/usr/local/include/stdlib.h:141:45: note: insert '_Nullable' if the pointer may be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                                               ^
                                                 _Nullable 
/usr/local/include/stdlib.h:141:45: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                                               ^
                                                 _Nonnull 
/usr/local/include/stdlib.h:142:59: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                 ^
/usr/local/include/stdlib.h:142:59: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                 ^
                                                                  _Nullable
/usr/local/include/stdlib.h:142:59: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                 ^
                                                                  _Nonnull
/usr/local/include/stdlib.h:142:73: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                               ^
/usr/local/include/stdlib.h:142:73: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                               ^
                                                                                _Nullable
/usr/local/include/stdlib.h:142:73: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                               ^
                                                                                _Nonnull
/usr/local/include/stdlib.h:141:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch(const void *__key, const void *__base, size_t __nel,
        ^
/usr/local/include/stdlib.h:141:6: note: insert '_Nullable' if the pointer may be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
        ^
          _Nullable 
/usr/local/include/stdlib.h:141:6: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
        ^
          _Nonnull 
/usr/local/include/stdlib.h:147:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getenv(const char *);
                           ^
/usr/local/include/stdlib.h:147:25: note: insert '_Nullable' if the pointer may be null
char    *getenv(const char *);
                           ^
                            _Nullable
/usr/local/include/stdlib.h:147:25: note: insert '_Nonnull' if the pointer should never be null
char    *getenv(const char *);
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:147:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getenv(const char *);
        ^
/usr/local/include/stdlib.h:147:6: note: insert '_Nullable' if the pointer may be null
char    *getenv(const char *);
        ^
          _Nullable 
/usr/local/include/stdlib.h:147:6: note: insert '_Nonnull' if the pointer should never be null
char    *getenv(const char *);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:156:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mblen(const char *__s, size_t __n);
                          ^
/usr/local/include/stdlib.h:156:23: note: insert '_Nullable' if the pointer may be null
int      mblen(const char *__s, size_t __n);
                          ^
                            _Nullable 
/usr/local/include/stdlib.h:156:23: note: insert '_Nonnull' if the pointer should never be null
int      mblen(const char *__s, size_t __n);
                          ^
                            _Nonnull 
/usr/local/include/stdlib.h:157:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                          ^
/usr/local/include/stdlib.h:157:26: note: insert '_Nullable' if the pointer may be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                          ^
                            _Nullable
/usr/local/include/stdlib.h:157:26: note: insert '_Nonnull' if the pointer should never be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                          ^
                            _Nonnull
/usr/local/include/stdlib.h:157:52: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                                                    ^
/usr/local/include/stdlib.h:157:52: note: insert '_Nullable' if the pointer may be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                                                    ^
                                                      _Nullable
/usr/local/include/stdlib.h:157:52: note: insert '_Nonnull' if the pointer should never be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                                                    ^
                                                      _Nonnull
/usr/local/include/stdlib.h:158:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                        ^
/usr/local/include/stdlib.h:158:21: note: insert '_Nullable' if the pointer may be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                        ^
                          _Nullable
/usr/local/include/stdlib.h:158:21: note: insert '_Nonnull' if the pointer should never be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                        ^
                          _Nonnull
/usr/local/include/stdlib.h:158:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                                                 ^
/usr/local/include/stdlib.h:158:46: note: insert '_Nullable' if the pointer may be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                                                 ^
                                                   _Nullable
/usr/local/include/stdlib.h:158:46: note: insert '_Nonnull' if the pointer should never be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                                                 ^
                                                   _Nonnull
/usr/local/include/stdlib.h:160:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort(void *__base, size_t __nel, size_t __width,
                    ^
/usr/local/include/stdlib.h:160:18: note: insert '_Nullable' if the pointer may be null
void     qsort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nullable 
/usr/local/include/stdlib.h:160:18: note: insert '_Nonnull' if the pointer should never be null
void     qsort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nonnull 
/usr/local/include/stdlib.h:161:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
/usr/local/include/stdlib.h:161:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:161:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:161:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
/usr/local/include/stdlib.h:161:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:161:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:165:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                           ^
/usr/local/include/stdlib.h:165:27: note: insert '_Nullable' if the pointer may be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                           ^
                            _Nullable
/usr/local/include/stdlib.h:165:27: note: insert '_Nonnull' if the pointer should never be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:165:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                   ^
/usr/local/include/stdlib.h:165:35: note: insert '_Nullable' if the pointer may be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                   ^
                                    _Nullable
/usr/local/include/stdlib.h:165:35: note: insert '_Nonnull' if the pointer should never be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                   ^
                                    _Nonnull
/usr/local/include/stdlib.h:165:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                    ^
/usr/local/include/stdlib.h:165:36: note: insert '_Nullable' if the pointer may be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                    ^
                                     _Nullable
/usr/local/include/stdlib.h:165:36: note: insert '_Nonnull' if the pointer should never be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                    ^
                                     _Nonnull
/usr/local/include/stdlib.h:166:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                           ^
/usr/local/include/stdlib.h:166:26: note: insert '_Nullable' if the pointer may be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                           ^
                            _Nullable
/usr/local/include/stdlib.h:166:26: note: insert '_Nonnull' if the pointer should never be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:166:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                   ^
/usr/local/include/stdlib.h:166:34: note: insert '_Nullable' if the pointer may be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                   ^
                                    _Nullable
/usr/local/include/stdlib.h:166:34: note: insert '_Nonnull' if the pointer should never be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                   ^
                                    _Nonnull
/usr/local/include/stdlib.h:166:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                    ^
/usr/local/include/stdlib.h:166:35: note: insert '_Nullable' if the pointer may be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                    ^
                                     _Nullable
/usr/local/include/stdlib.h:166:35: note: insert '_Nonnull' if the pointer should never be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                    ^
                                     _Nonnull
/usr/local/include/stdlib.h:167:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     strtol(const char *__str, char **__endptr, int __base);
                           ^
/usr/local/include/stdlib.h:167:25: note: insert '_Nullable' if the pointer may be null
long     strtol(const char *__str, char **__endptr, int __base);
                           ^
                             _Nullable 
/usr/local/include/stdlib.h:167:25: note: insert '_Nonnull' if the pointer should never be null
long     strtol(const char *__str, char **__endptr, int __base);
                           ^
                             _Nonnull 
/usr/local/include/stdlib.h:167:38: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     strtol(const char *__str, char **__endptr, int __base);
                                        ^
/usr/local/include/stdlib.h:167:38: note: insert '_Nullable' if the pointer may be null
long     strtol(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nullable
/usr/local/include/stdlib.h:167:38: note: insert '_Nonnull' if the pointer should never be null
long     strtol(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nonnull
/usr/local/include/stdlib.h:167:39: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     strtol(const char *__str, char **__endptr, int __base);
                                         ^
/usr/local/include/stdlib.h:167:39: note: insert '_Nullable' if the pointer may be null
long     strtol(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nullable 
/usr/local/include/stdlib.h:167:39: note: insert '_Nonnull' if the pointer should never be null
long     strtol(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nonnull 
/usr/local/include/stdlib.h:169:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtold(const char *, char **);
                            ^
/usr/local/include/stdlib.h:169:22: note: insert '_Nullable' if the pointer may be null
         strtold(const char *, char **);
                            ^
                             _Nullable
/usr/local/include/stdlib.h:169:22: note: insert '_Nonnull' if the pointer should never be null
         strtold(const char *, char **);
                            ^
                             _Nonnull
/usr/local/include/stdlib.h:169:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtold(const char *, char **);
                                    ^
/usr/local/include/stdlib.h:169:30: note: insert '_Nullable' if the pointer may be null
         strtold(const char *, char **);
                                    ^
                                     _Nullable
/usr/local/include/stdlib.h:169:30: note: insert '_Nonnull' if the pointer should never be null
         strtold(const char *, char **);
                                    ^
                                     _Nonnull
/usr/local/include/stdlib.h:169:31: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtold(const char *, char **);
                                     ^
/usr/local/include/stdlib.h:169:31: note: insert '_Nullable' if the pointer may be null
         strtold(const char *, char **);
                                     ^
                                      _Nullable
/usr/local/include/stdlib.h:169:31: note: insert '_Nonnull' if the pointer should never be null
         strtold(const char *, char **);
                                     ^
                                      _Nonnull
/usr/local/include/stdlib.h:172:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoll(const char *__str, char **__endptr, int __base);
                            ^
/usr/local/include/stdlib.h:172:22: note: insert '_Nullable' if the pointer may be null
         strtoll(const char *__str, char **__endptr, int __base);
                            ^
                              _Nullable 
/usr/local/include/stdlib.h:172:22: note: insert '_Nonnull' if the pointer should never be null
         strtoll(const char *__str, char **__endptr, int __base);
                            ^
                              _Nonnull 
/usr/local/include/stdlib.h:172:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoll(const char *__str, char **__endptr, int __base);
                                         ^
/usr/local/include/stdlib.h:172:35: note: insert '_Nullable' if the pointer may be null
         strtoll(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nullable
/usr/local/include/stdlib.h:172:35: note: insert '_Nonnull' if the pointer should never be null
         strtoll(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nonnull
/usr/local/include/stdlib.h:172:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoll(const char *__str, char **__endptr, int __base);
                                          ^
/usr/local/include/stdlib.h:172:36: note: insert '_Nullable' if the pointer may be null
         strtoll(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nullable 
/usr/local/include/stdlib.h:172:36: note: insert '_Nonnull' if the pointer should never be null
         strtoll(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nonnull 
/usr/local/include/stdlib.h:175:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoul(const char *__str, char **__endptr, int __base);
                            ^
/usr/local/include/stdlib.h:175:22: note: insert '_Nullable' if the pointer may be null
         strtoul(const char *__str, char **__endptr, int __base);
                            ^
                              _Nullable 
/usr/local/include/stdlib.h:175:22: note: insert '_Nonnull' if the pointer should never be null
         strtoul(const char *__str, char **__endptr, int __base);
                            ^
                              _Nonnull 
/usr/local/include/stdlib.h:175:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoul(const char *__str, char **__endptr, int __base);
                                         ^
/usr/local/include/stdlib.h:175:35: note: insert '_Nullable' if the pointer may be null
         strtoul(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nullable
/usr/local/include/stdlib.h:175:35: note: insert '_Nonnull' if the pointer should never be null
         strtoul(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nonnull
/usr/local/include/stdlib.h:175:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoul(const char *__str, char **__endptr, int __base);
                                          ^
/usr/local/include/stdlib.h:175:36: note: insert '_Nullable' if the pointer may be null
         strtoul(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nullable 
/usr/local/include/stdlib.h:175:36: note: insert '_Nonnull' if the pointer should never be null
         strtoul(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nonnull 
/usr/local/include/stdlib.h:178:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoull(const char *__str, char **__endptr, int __base);
                             ^
/usr/local/include/stdlib.h:178:23: note: insert '_Nullable' if the pointer may be null
         strtoull(const char *__str, char **__endptr, int __base);
                             ^
                               _Nullable 
/usr/local/include/stdlib.h:178:23: note: insert '_Nonnull' if the pointer should never be null
         strtoull(const char *__str, char **__endptr, int __base);
                             ^
                               _Nonnull 
/usr/local/include/stdlib.h:178:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoull(const char *__str, char **__endptr, int __base);
                                          ^
/usr/local/include/stdlib.h:178:36: note: insert '_Nullable' if the pointer may be null
         strtoull(const char *__str, char **__endptr, int __base);
                                          ^
                                           _Nullable
/usr/local/include/stdlib.h:178:36: note: insert '_Nonnull' if the pointer should never be null
         strtoull(const char *__str, char **__endptr, int __base);
                                          ^
                                           _Nonnull
/usr/local/include/stdlib.h:178:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoull(const char *__str, char **__endptr, int __base);
                                           ^
/usr/local/include/stdlib.h:178:37: note: insert '_Nullable' if the pointer may be null
         strtoull(const char *__str, char **__endptr, int __base);
                                           ^
                                             _Nullable 
/usr/local/include/stdlib.h:178:37: note: insert '_Nonnull' if the pointer should never be null
         strtoull(const char *__str, char **__endptr, int __base);
                                           ^
                                             _Nonnull 
/usr/local/include/stdlib.h:190:24: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      system(const char *) __DARWIN_ALIAS_C(system);
                           ^
/usr/local/include/stdlib.h:190:24: note: insert '_Nullable' if the pointer may be null
int      system(const char *) __DARWIN_ALIAS_C(system);
                           ^
                            _Nullable
/usr/local/include/stdlib.h:190:24: note: insert '_Nonnull' if the pointer should never be null
int      system(const char *) __DARWIN_ALIAS_C(system);
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:194:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                       ^
/usr/local/include/stdlib.h:194:23: note: insert '_Nullable' if the pointer may be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                       ^
                         _Nullable
/usr/local/include/stdlib.h:194:23: note: insert '_Nonnull' if the pointer should never be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                       ^
                         _Nonnull
/usr/local/include/stdlib.h:194:51: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                                                   ^
/usr/local/include/stdlib.h:194:51: note: insert '_Nullable' if the pointer may be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                                                   ^
                                                     _Nullable
/usr/local/include/stdlib.h:194:51: note: insert '_Nonnull' if the pointer should never be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                                                   ^
                                                     _Nonnull
/usr/local/include/stdlib.h:195:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      wctomb(char *, wchar_t);
                     ^
/usr/local/include/stdlib.h:195:18: note: insert '_Nullable' if the pointer may be null
int      wctomb(char *, wchar_t);
                     ^
                      _Nullable
/usr/local/include/stdlib.h:195:18: note: insert '_Nonnull' if the pointer should never be null
int      wctomb(char *, wchar_t);
                     ^
                      _Nonnull
/usr/local/include/stdlib.h:199:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     a64l(const char *);
                         ^
/usr/local/include/stdlib.h:199:23: note: insert '_Nullable' if the pointer may be null
long     a64l(const char *);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:199:23: note: insert '_Nonnull' if the pointer should never be null
long     a64l(const char *);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:201:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
/usr/local/include/stdlib.h:201:29: note: insert '_Nullable' if the pointer may be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nullable 
/usr/local/include/stdlib.h:201:29: note: insert '_Nonnull' if the pointer should never be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nonnull 
/usr/local/include/stdlib.h:201:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
/usr/local/include/stdlib.h:201:46: note: insert '_Nullable' if the pointer may be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nullable 
/usr/local/include/stdlib.h:201:46: note: insert '_Nonnull' if the pointer should never be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nonnull 
/usr/local/include/stdlib.h:201:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
/usr/local/include/stdlib.h:201:6: note: insert '_Nullable' if the pointer may be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nullable 
/usr/local/include/stdlib.h:201:6: note: insert '_Nonnull' if the pointer should never be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nonnull 
/usr/local/include/stdlib.h:202:31: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
double   erand48(unsigned short[3]);
                               ^
/usr/local/include/stdlib.h:202:31: note: insert '_Nullable' if the array parameter may be null
double   erand48(unsigned short[3]);
                               ^
                                _Nullable 
/usr/local/include/stdlib.h:202:31: note: insert '_Nonnull' if the array parameter should never be null
double   erand48(unsigned short[3]);
                               ^
                                _Nonnull 
/usr/local/include/stdlib.h:203:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
/usr/local/include/stdlib.h:203:29: note: insert '_Nullable' if the pointer may be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nullable 
/usr/local/include/stdlib.h:203:29: note: insert '_Nonnull' if the pointer should never be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nonnull 
/usr/local/include/stdlib.h:203:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
/usr/local/include/stdlib.h:203:46: note: insert '_Nullable' if the pointer may be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nullable 
/usr/local/include/stdlib.h:203:46: note: insert '_Nonnull' if the pointer should never be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nonnull 
/usr/local/include/stdlib.h:203:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
/usr/local/include/stdlib.h:203:6: note: insert '_Nullable' if the pointer may be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nullable 
/usr/local/include/stdlib.h:203:6: note: insert '_Nonnull' if the pointer should never be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nonnull 
/usr/local/include/stdlib.h:204:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *gcvt(double, int, char *); /* LEGACY */
                                ^
/usr/local/include/stdlib.h:204:30: note: insert '_Nullable' if the pointer may be null
char    *gcvt(double, int, char *); /* LEGACY */
                                ^
                                 _Nullable
/usr/local/include/stdlib.h:204:30: note: insert '_Nonnull' if the pointer should never be null
char    *gcvt(double, int, char *); /* LEGACY */
                                ^
                                 _Nonnull
/usr/local/include/stdlib.h:204:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *gcvt(double, int, char *); /* LEGACY */
        ^
/usr/local/include/stdlib.h:204:6: note: insert '_Nullable' if the pointer may be null
char    *gcvt(double, int, char *); /* LEGACY */
        ^
          _Nullable 
/usr/local/include/stdlib.h:204:6: note: insert '_Nonnull' if the pointer should never be null
char    *gcvt(double, int, char *); /* LEGACY */
        ^
          _Nonnull 
/usr/local/include/stdlib.h:205:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                        ^
/usr/local/include/stdlib.h:205:21: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                        ^
                         _Nullable
/usr/local/include/stdlib.h:205:21: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                        ^
                         _Nonnull
/usr/local/include/stdlib.h:205:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                         ^
/usr/local/include/stdlib.h:205:22: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:205:22: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:205:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                 ^
/usr/local/include/stdlib.h:205:30: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                 ^
                                   _Nullable
/usr/local/include/stdlib.h:205:30: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                 ^
                                   _Nonnull
/usr/local/include/stdlib.h:205:38: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                         ^
/usr/local/include/stdlib.h:205:38: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                         ^
                                          _Nullable
/usr/local/include/stdlib.h:205:38: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                         ^
                                          _Nonnull
/usr/local/include/stdlib.h:205:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                                 ^
/usr/local/include/stdlib.h:205:46: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:205:46: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:205:47: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                                  ^
/usr/local/include/stdlib.h:205:47: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                                  ^
                                                   _Nullable
/usr/local/include/stdlib.h:205:47: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                                  ^
                                                   _Nonnull
/usr/local/include/stdlib.h:208:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
                                  ^
/usr/local/include/stdlib.h:208:32: note: insert '_Nullable' if the pointer may be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
                                  ^
                                   _Nullable
/usr/local/include/stdlib.h:208:32: note: insert '_Nonnull' if the pointer should never be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
                                  ^
                                   _Nonnull
/usr/local/include/stdlib.h:208:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
        ^
/usr/local/include/stdlib.h:208:6: note: insert '_Nullable' if the pointer may be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
        ^
          _Nullable 
/usr/local/include/stdlib.h:208:6: note: insert '_Nonnull' if the pointer should never be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
        ^
          _Nonnull 
/usr/local/include/stdlib.h:212:29: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
long     jrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
/usr/local/include/stdlib.h:212:29: note: insert '_Nullable' if the array parameter may be null
long     jrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nullable 
/usr/local/include/stdlib.h:212:29: note: insert '_Nonnull' if the array parameter should never be null
long     jrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nonnull 
/usr/local/include/stdlib.h:213:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *l64a(long);
        ^
/usr/local/include/stdlib.h:213:6: note: insert '_Nullable' if the pointer may be null
char    *l64a(long);
        ^
          _Nullable 
/usr/local/include/stdlib.h:213:6: note: insert '_Nonnull' if the pointer should never be null
char    *l64a(long);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:214:29: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
void     lcong48(unsigned short[7]);
                               ^
/usr/local/include/stdlib.h:214:29: note: insert '_Nullable' if the array parameter may be null
void     lcong48(unsigned short[7]);
                               ^
                                _Nullable 
/usr/local/include/stdlib.h:214:29: note: insert '_Nonnull' if the array parameter should never be null
void     lcong48(unsigned short[7]);
                               ^
                                _Nonnull 
/usr/local/include/stdlib.h:216:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *mktemp(char *);
                     ^
/usr/local/include/stdlib.h:216:19: note: insert '_Nullable' if the pointer may be null
char    *mktemp(char *);
                     ^
                      _Nullable
/usr/local/include/stdlib.h:216:19: note: insert '_Nonnull' if the pointer should never be null
char    *mktemp(char *);
                     ^
                      _Nonnull
/usr/local/include/stdlib.h:216:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *mktemp(char *);
        ^
/usr/local/include/stdlib.h:216:6: note: insert '_Nullable' if the pointer may be null
char    *mktemp(char *);
        ^
          _Nullable 
/usr/local/include/stdlib.h:216:6: note: insert '_Nonnull' if the pointer should never be null
char    *mktemp(char *);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:217:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mkstemp(char *);
                      ^
/usr/local/include/stdlib.h:217:19: note: insert '_Nullable' if the pointer may be null
int      mkstemp(char *);
                      ^
                       _Nullable
/usr/local/include/stdlib.h:217:19: note: insert '_Nonnull' if the pointer should never be null
int      mkstemp(char *);
                      ^
                       _Nonnull
/usr/local/include/stdlib.h:219:29: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
long     nrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
/usr/local/include/stdlib.h:219:29: note: insert '_Nullable' if the array parameter may be null
long     nrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nullable 
/usr/local/include/stdlib.h:219:29: note: insert '_Nonnull' if the array parameter should never be null
long     nrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nonnull 
/usr/local/include/stdlib.h:221:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ptsname(int);
        ^
/usr/local/include/stdlib.h:221:6: note: insert '_Nullable' if the pointer may be null
char    *ptsname(int);
        ^
          _Nullable 
/usr/local/include/stdlib.h:221:6: note: insert '_Nonnull' if the pointer should never be null
char    *ptsname(int);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:224:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int ptsname_r(int fildes, char *buffer, size_t buflen) __API_AVAILABLE(macos(10.13.4), ios(11.3), tvos(11.3), watchos(4.3));
                               ^
/usr/local/include/stdlib.h:224:32: note: insert '_Nullable' if the pointer may be null
int ptsname_r(int fildes, char *buffer, size_t buflen) __API_AVAILABLE(macos(10.13.4), ios(11.3), tvos(11.3), watchos(4.3));
                               ^
                                 _Nullable 
/usr/local/include/stdlib.h:224:32: note: insert '_Nonnull' if the pointer should never be null
int ptsname_r(int fildes, char *buffer, size_t buflen) __API_AVAILABLE(macos(10.13.4), ios(11.3), tvos(11.3), watchos(4.3));
                               ^
                                 _Nonnull 
/usr/local/include/stdlib.h:227:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      putenv(char *) __DARWIN_ALIAS(putenv);
                     ^
/usr/local/include/stdlib.h:227:18: note: insert '_Nullable' if the pointer may be null
int      putenv(char *) __DARWIN_ALIAS(putenv);
                     ^
                      _Nullable
/usr/local/include/stdlib.h:227:18: note: insert '_Nonnull' if the pointer should never be null
int      putenv(char *) __DARWIN_ALIAS(putenv);
                     ^
                      _Nonnull
/usr/local/include/stdlib.h:229:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      rand_r(unsigned *) __swift_unavailable("Use arc4random instead.");
                         ^
/usr/local/include/stdlib.h:229:22: note: insert '_Nullable' if the pointer may be null
int      rand_r(unsigned *) __swift_unavailable("Use arc4random instead.");
                         ^
                          _Nullable
/usr/local/include/stdlib.h:229:22: note: insert '_Nonnull' if the pointer should never be null
int      rand_r(unsigned *) __swift_unavailable("Use arc4random instead.");
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:231:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                             ^
/usr/local/include/stdlib.h:231:27: note: insert '_Nullable' if the pointer may be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                             ^
                               _Nullable
/usr/local/include/stdlib.h:231:27: note: insert '_Nonnull' if the pointer should never be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                             ^
                               _Nonnull
/usr/local/include/stdlib.h:231:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                                                ^
/usr/local/include/stdlib.h:231:46: note: insert '_Nullable' if the pointer may be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                                                ^
                                                  _Nullable
/usr/local/include/stdlib.h:231:46: note: insert '_Nonnull' if the pointer should never be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                                                ^
                                                  _Nonnull
/usr/local/include/stdlib.h:231:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
        ^
/usr/local/include/stdlib.h:231:6: note: insert '_Nullable' if the pointer may be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
        ^
          _Nullable 
/usr/local/include/stdlib.h:231:6: note: insert '_Nonnull' if the pointer should never be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:236:24: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
        *seed48(unsigned short[3]);
                              ^
/usr/local/include/stdlib.h:236:24: note: insert '_Nullable' if the array parameter may be null
        *seed48(unsigned short[3]);
                              ^
                               _Nullable 
/usr/local/include/stdlib.h:236:24: note: insert '_Nonnull' if the array parameter should never be null
        *seed48(unsigned short[3]);
                              ^
                               _Nonnull 
/usr/local/include/stdlib.h:236:2: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        *seed48(unsigned short[3]);
        ^
/usr/local/include/stdlib.h:236:2: note: insert '_Nullable' if the pointer may be null
        *seed48(unsigned short[3]);
        ^
          _Nullable 
/usr/local/include/stdlib.h:236:2: note: insert '_Nonnull' if the pointer should never be null
        *seed48(unsigned short[3]);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:237:24: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                           ^
/usr/local/include/stdlib.h:237:24: note: insert '_Nullable' if the pointer may be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                           ^
                             _Nullable
/usr/local/include/stdlib.h:237:24: note: insert '_Nonnull' if the pointer should never be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                           ^
                             _Nonnull
/usr/local/include/stdlib.h:237:45: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                                                ^
/usr/local/include/stdlib.h:237:45: note: insert '_Nullable' if the pointer may be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                                                ^
                                                  _Nullable
/usr/local/include/stdlib.h:237:45: note: insert '_Nonnull' if the pointer should never be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                                                ^
                                                  _Nonnull
/usr/local/include/stdlib.h:239:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     setkey(const char *) __DARWIN_ALIAS(setkey);
                           ^
/usr/local/include/stdlib.h:239:25: note: insert '_Nullable' if the pointer may be null
void     setkey(const char *) __DARWIN_ALIAS(setkey);
                           ^
                            _Nullable
/usr/local/include/stdlib.h:239:25: note: insert '_Nonnull' if the pointer should never be null
void     setkey(const char *) __DARWIN_ALIAS(setkey);
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:243:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *setstate(const char *);
                             ^
/usr/local/include/stdlib.h:243:27: note: insert '_Nullable' if the pointer may be null
char    *setstate(const char *);
                             ^
                              _Nullable
/usr/local/include/stdlib.h:243:27: note: insert '_Nonnull' if the pointer should never be null
char    *setstate(const char *);
                             ^
                              _Nonnull
/usr/local/include/stdlib.h:243:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *setstate(const char *);
        ^
/usr/local/include/stdlib.h:243:6: note: insert '_Nullable' if the pointer may be null
char    *setstate(const char *);
        ^
          _Nullable 
/usr/local/include/stdlib.h:243:6: note: insert '_Nonnull' if the pointer should never be null
char    *setstate(const char *);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:252:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      unsetenv(const char *) __DARWIN_ALIAS(unsetenv);
                             ^
/usr/local/include/stdlib.h:252:26: note: insert '_Nullable' if the pointer may be null
int      unsetenv(const char *) __DARWIN_ALIAS(unsetenv);
                             ^
                              _Nullable
/usr/local/include/stdlib.h:252:26: note: insert '_Nonnull' if the pointer should never be null
int      unsetenv(const char *) __DARWIN_ALIAS(unsetenv);
                             ^
                              _Nonnull
/usr/local/include/stdlib.h:265:42: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     arc4random_addrandom(unsigned char * /*dat*/, int /*datlen*/)
                                            ^
/usr/local/include/stdlib.h:265:42: note: insert '_Nullable' if the pointer may be null
void     arc4random_addrandom(unsigned char * /*dat*/, int /*datlen*/)
                                            ^
                                              _Nullable
/usr/local/include/stdlib.h:265:42: note: insert '_Nonnull' if the pointer should never be null
void     arc4random_addrandom(unsigned char * /*dat*/, int /*datlen*/)
                                            ^
                                              _Nonnull
/usr/local/include/stdlib.h:270:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     arc4random_buf(void * __buf, size_t __nbytes) __OSX_AVAILABLE_STARTING(__MAC_10_7, __IPHONE_4_3);
                             ^
/usr/local/include/stdlib.h:270:27: note: insert '_Nullable' if the pointer may be null
void     arc4random_buf(void * __buf, size_t __nbytes) __OSX_AVAILABLE_STARTING(__MAC_10_7, __IPHONE_4_3);
                             ^
                               _Nullable
/usr/local/include/stdlib.h:270:27: note: insert '_Nonnull' if the pointer should never be null
void     arc4random_buf(void * __buf, size_t __nbytes) __OSX_AVAILABLE_STARTING(__MAC_10_7, __IPHONE_4_3);
                             ^
                               _Nonnull
/usr/local/include/stdlib.h:276:28: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                              ^
/usr/local/include/stdlib.h:276:28: note: insert '_Nullable' if the pointer may be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                              ^
                                _Nullable 
/usr/local/include/stdlib.h:276:28: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                              ^
                                _Nonnull 
/usr/local/include/stdlib.h:276:47: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                                                 ^
/usr/local/include/stdlib.h:276:47: note: insert '_Nullable' if the pointer may be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                                                 ^
                                                   _Nullable 
/usr/local/include/stdlib.h:276:47: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                                                 ^
                                                   _Nonnull 
/usr/local/include/stdlib.h:277:59: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                 ^
/usr/local/include/stdlib.h:277:59: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                 ^
                                                                  _Nullable
/usr/local/include/stdlib.h:277:59: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                 ^
                                                                  _Nonnull
/usr/local/include/stdlib.h:277:73: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                               ^
/usr/local/include/stdlib.h:277:73: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                               ^
                                                                                _Nullable
/usr/local/include/stdlib.h:277:73: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                               ^
                                                                                _Nonnull
/usr/local/include/stdlib.h:276:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
        ^
/usr/local/include/stdlib.h:276:6: note: insert '_Nullable' if the pointer may be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
        ^
          _Nullable 
/usr/local/include/stdlib.h:276:6: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
        ^
          _Nonnull 
/usr/local/include/stdlib.h:281:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *cgetcap(char *, const char *, int);
                      ^
/usr/local/include/stdlib.h:281:20: note: insert '_Nullable' if the pointer may be null
char    *cgetcap(char *, const char *, int);
                      ^
                       _Nullable
/usr/local/include/stdlib.h:281:20: note: insert '_Nonnull' if the pointer should never be null
char    *cgetcap(char *, const char *, int);
                      ^
                       _Nonnull
/usr/local/include/stdlib.h:281:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *cgetcap(char *, const char *, int);
                                    ^
/usr/local/include/stdlib.h:281:34: note: insert '_Nullable' if the pointer may be null
char    *cgetcap(char *, const char *, int);
                                    ^
                                     _Nullable
/usr/local/include/stdlib.h:281:34: note: insert '_Nonnull' if the pointer should never be null
char    *cgetcap(char *, const char *, int);
                                    ^
                                     _Nonnull
/usr/local/include/stdlib.h:281:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *cgetcap(char *, const char *, int);
        ^
/usr/local/include/stdlib.h:281:6: note: insert '_Nullable' if the pointer may be null
char    *cgetcap(char *, const char *, int);
        ^
          _Nullable 
/usr/local/include/stdlib.h:281:6: note: insert '_Nonnull' if the pointer should never be null
char    *cgetcap(char *, const char *, int);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:283:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                      ^
/usr/local/include/stdlib.h:283:19: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                      ^
                       _Nullable
/usr/local/include/stdlib.h:283:19: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                      ^
                       _Nonnull
/usr/local/include/stdlib.h:283:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                       ^
/usr/local/include/stdlib.h:283:20: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                       ^
                        _Nullable
/usr/local/include/stdlib.h:283:20: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                       ^
                        _Nonnull
/usr/local/include/stdlib.h:283:28: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                               ^
/usr/local/include/stdlib.h:283:28: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                               ^
                                _Nullable
/usr/local/include/stdlib.h:283:28: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                               ^
                                _Nonnull
/usr/local/include/stdlib.h:283:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                                ^
/usr/local/include/stdlib.h:283:29: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                                ^
                                 _Nullable
/usr/local/include/stdlib.h:283:29: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                                ^
                                 _Nonnull
/usr/local/include/stdlib.h:283:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                                              ^
/usr/local/include/stdlib.h:283:43: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                                              ^
                                               _Nullable
/usr/local/include/stdlib.h:283:43: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                                              ^
                                               _Nonnull
/usr/local/include/stdlib.h:284:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                        ^
/usr/local/include/stdlib.h:284:21: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                        ^
                         _Nullable
/usr/local/include/stdlib.h:284:21: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                        ^
                         _Nonnull
/usr/local/include/stdlib.h:284:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                         ^
/usr/local/include/stdlib.h:284:22: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:284:22: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:284:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                                 ^
/usr/local/include/stdlib.h:284:30: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                                 ^
                                  _Nullable
/usr/local/include/stdlib.h:284:30: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                                 ^
                                  _Nonnull
/usr/local/include/stdlib.h:284:31: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                                  ^
/usr/local/include/stdlib.h:284:31: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                                  ^
                                   _Nullable
/usr/local/include/stdlib.h:284:31: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                                  ^
                                   _Nonnull
/usr/local/include/stdlib.h:285:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetmatch(const char *, const char *);
                              ^
/usr/local/include/stdlib.h:285:27: note: insert '_Nullable' if the pointer may be null
int      cgetmatch(const char *, const char *);
                              ^
                               _Nullable
/usr/local/include/stdlib.h:285:27: note: insert '_Nonnull' if the pointer should never be null
int      cgetmatch(const char *, const char *);
                              ^
                               _Nonnull
/usr/local/include/stdlib.h:285:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetmatch(const char *, const char *);
                                            ^
/usr/local/include/stdlib.h:285:41: note: insert '_Nullable' if the pointer may be null
int      cgetmatch(const char *, const char *);
                                            ^
                                             _Nullable
/usr/local/include/stdlib.h:285:41: note: insert '_Nonnull' if the pointer should never be null
int      cgetmatch(const char *, const char *);
                                            ^
                                             _Nonnull
/usr/local/include/stdlib.h:286:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                       ^
/usr/local/include/stdlib.h:286:20: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                       ^
                        _Nullable
/usr/local/include/stdlib.h:286:20: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                       ^
                        _Nonnull
/usr/local/include/stdlib.h:286:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                        ^
/usr/local/include/stdlib.h:286:21: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                        ^
                         _Nullable
/usr/local/include/stdlib.h:286:21: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                        ^
                         _Nonnull
/usr/local/include/stdlib.h:286:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                                ^
/usr/local/include/stdlib.h:286:29: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                                ^
                                 _Nullable
/usr/local/include/stdlib.h:286:29: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                                ^
                                 _Nonnull
/usr/local/include/stdlib.h:286:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                                 ^
/usr/local/include/stdlib.h:286:30: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                                 ^
                                  _Nullable
/usr/local/include/stdlib.h:286:30: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                                 ^
                                  _Nonnull
/usr/local/include/stdlib.h:287:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnum(char *, const char *, long *);
                      ^
/usr/local/include/stdlib.h:287:19: note: insert '_Nullable' if the pointer may be null
int      cgetnum(char *, const char *, long *);
                      ^
                       _Nullable
/usr/local/include/stdlib.h:287:19: note: insert '_Nonnull' if the pointer should never be null
int      cgetnum(char *, const char *, long *);
                      ^
                       _Nonnull
/usr/local/include/stdlib.h:287:33: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnum(char *, const char *, long *);
                                    ^
/usr/local/include/stdlib.h:287:33: note: insert '_Nullable' if the pointer may be null
int      cgetnum(char *, const char *, long *);
                                    ^
                                     _Nullable
/usr/local/include/stdlib.h:287:33: note: insert '_Nonnull' if the pointer should never be null
int      cgetnum(char *, const char *, long *);
                                    ^
                                     _Nonnull
/usr/local/include/stdlib.h:287:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnum(char *, const char *, long *);
                                            ^
/usr/local/include/stdlib.h:287:41: note: insert '_Nullable' if the pointer may be null
int      cgetnum(char *, const char *, long *);
                                            ^
                                             _Nullable
/usr/local/include/stdlib.h:287:41: note: insert '_Nonnull' if the pointer should never be null
int      cgetnum(char *, const char *, long *);
                                            ^
                                             _Nonnull
/usr/local/include/stdlib.h:288:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetset(const char *);
                            ^
/usr/local/include/stdlib.h:288:25: note: insert '_Nullable' if the pointer may be null
int      cgetset(const char *);
                            ^
                             _Nullable
/usr/local/include/stdlib.h:288:25: note: insert '_Nonnull' if the pointer should never be null
int      cgetset(const char *);
                            ^
                             _Nonnull
/usr/local/include/stdlib.h:289:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                      ^
/usr/local/include/stdlib.h:289:19: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                      ^
                       _Nullable
/usr/local/include/stdlib.h:289:19: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                      ^
                       _Nonnull
/usr/local/include/stdlib.h:289:33: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                                    ^
/usr/local/include/stdlib.h:289:33: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                                    ^
                                     _Nullable
/usr/local/include/stdlib.h:289:33: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                                    ^
                                     _Nonnull
/usr/local/include/stdlib.h:289:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                                            ^
/usr/local/include/stdlib.h:289:41: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                                            ^
                                             _Nullable
/usr/local/include/stdlib.h:289:41: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                                            ^
                                             _Nonnull
/usr/local/include/stdlib.h:289:42: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                                             ^
/usr/local/include/stdlib.h:289:42: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                                             ^
                                              _Nullable
/usr/local/include/stdlib.h:289:42: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                                             ^
                                              _Nonnull
/usr/local/include/stdlib.h:290:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                       ^
/usr/local/include/stdlib.h:290:20: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                       ^
                        _Nullable
/usr/local/include/stdlib.h:290:20: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                       ^
                        _Nonnull
/usr/local/include/stdlib.h:290:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                                     ^
/usr/local/include/stdlib.h:290:34: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                                     ^
                                      _Nullable
/usr/local/include/stdlib.h:290:34: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                                     ^
                                      _Nonnull
/usr/local/include/stdlib.h:290:42: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                                             ^
/usr/local/include/stdlib.h:290:42: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                                             ^
                                              _Nullable
/usr/local/include/stdlib.h:290:42: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                                             ^
                                              _Nonnull
/usr/local/include/stdlib.h:290:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                                              ^
/usr/local/include/stdlib.h:290:43: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                                              ^
                                               _Nullable
/usr/local/include/stdlib.h:290:43: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                                              ^
                                               _Nonnull
/usr/local/include/stdlib.h:293:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *devname(dev_t, mode_t);
        ^
/usr/local/include/stdlib.h:293:6: note: insert '_Nullable' if the pointer may be null
char    *devname(dev_t, mode_t);
        ^
          _Nullable 
/usr/local/include/stdlib.h:293:6: note: insert '_Nonnull' if the pointer should never be null
char    *devname(dev_t, mode_t);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:294:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *devname_r(dev_t, mode_t, char *buf, int len);
                                       ^
/usr/local/include/stdlib.h:294:37: note: insert '_Nullable' if the pointer may be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
                                       ^
                                         _Nullable 
/usr/local/include/stdlib.h:294:37: note: insert '_Nonnull' if the pointer should never be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
                                       ^
                                         _Nonnull 
/usr/local/include/stdlib.h:294:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *devname_r(dev_t, mode_t, char *buf, int len);
        ^
/usr/local/include/stdlib.h:294:6: note: insert '_Nullable' if the pointer may be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
        ^
          _Nullable 
/usr/local/include/stdlib.h:294:6: note: insert '_Nonnull' if the pointer should never be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:295:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getbsize(int *, long *);
                      ^
/usr/local/include/stdlib.h:295:20: note: insert '_Nullable' if the pointer may be null
char    *getbsize(int *, long *);
                      ^
                       _Nullable
/usr/local/include/stdlib.h:295:20: note: insert '_Nonnull' if the pointer should never be null
char    *getbsize(int *, long *);
                      ^
                       _Nonnull
/usr/local/include/stdlib.h:295:28: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getbsize(int *, long *);
                              ^
/usr/local/include/stdlib.h:295:28: note: insert '_Nullable' if the pointer may be null
char    *getbsize(int *, long *);
                              ^
                               _Nullable
/usr/local/include/stdlib.h:295:28: note: insert '_Nonnull' if the pointer should never be null
char    *getbsize(int *, long *);
                              ^
                               _Nonnull
/usr/local/include/stdlib.h:295:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getbsize(int *, long *);
        ^
/usr/local/include/stdlib.h:295:6: note: insert '_Nullable' if the pointer may be null
char    *getbsize(int *, long *);
        ^
          _Nullable 
/usr/local/include/stdlib.h:295:6: note: insert '_Nonnull' if the pointer should never be null
char    *getbsize(int *, long *);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:296:24: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
int      getloadavg(double [], int);
                           ^
/usr/local/include/stdlib.h:296:24: note: insert '_Nullable' if the array parameter may be null
int      getloadavg(double [], int);
                           ^
                            _Nullable
/usr/local/include/stdlib.h:296:24: note: insert '_Nonnull' if the array parameter should never be null
int      getloadavg(double [], int);
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:298:2: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        *getprogname(void);
        ^
/usr/local/include/stdlib.h:298:2: note: insert '_Nullable' if the pointer may be null
        *getprogname(void);
        ^
          _Nullable 
/usr/local/include/stdlib.h:298:2: note: insert '_Nonnull' if the pointer should never be null
        *getprogname(void);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:299:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     setprogname(const char *);
                                ^
/usr/local/include/stdlib.h:299:30: note: insert '_Nullable' if the pointer may be null
void     setprogname(const char *);
                                ^
                                 _Nullable
/usr/local/include/stdlib.h:299:30: note: insert '_Nonnull' if the pointer should never be null
void     setprogname(const char *);
                                ^
                                 _Nonnull
/usr/local/include/stdlib.h:309:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      heapsort(void *__base, size_t __nel, size_t __width,
                       ^
/usr/local/include/stdlib.h:309:20: note: insert '_Nullable' if the pointer may be null
int      heapsort(void *__base, size_t __nel, size_t __width,
                       ^
                         _Nullable 
/usr/local/include/stdlib.h:309:20: note: insert '_Nonnull' if the pointer should never be null
int      heapsort(void *__base, size_t __nel, size_t __width,
                       ^
                         _Nonnull 
/usr/local/include/stdlib.h:310:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
/usr/local/include/stdlib.h:310:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:310:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:310:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
/usr/local/include/stdlib.h:310:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:310:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:312:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      heapsort_b(void *__base, size_t __nel, size_t __width,
                         ^
/usr/local/include/stdlib.h:312:22: note: insert '_Nullable' if the pointer may be null
int      heapsort_b(void *__base, size_t __nel, size_t __width,
                         ^
                           _Nullable 
/usr/local/include/stdlib.h:312:22: note: insert '_Nonnull' if the pointer should never be null
int      heapsort_b(void *__base, size_t __nel, size_t __width,
                         ^
                           _Nonnull 
/usr/local/include/stdlib.h:313:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
/usr/local/include/stdlib.h:313:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:313:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:313:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
/usr/local/include/stdlib.h:313:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:313:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:316:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mergesort(void *__base, size_t __nel, size_t __width,
                        ^
/usr/local/include/stdlib.h:316:21: note: insert '_Nullable' if the pointer may be null
int      mergesort(void *__base, size_t __nel, size_t __width,
                        ^
                          _Nullable 
/usr/local/include/stdlib.h:316:21: note: insert '_Nonnull' if the pointer should never be null
int      mergesort(void *__base, size_t __nel, size_t __width,
                        ^
                          _Nonnull 
/usr/local/include/stdlib.h:317:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
/usr/local/include/stdlib.h:317:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:317:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:317:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
/usr/local/include/stdlib.h:317:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:317:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:319:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mergesort_b(void *__base, size_t __nel, size_t __width,
                          ^
/usr/local/include/stdlib.h:319:23: note: insert '_Nullable' if the pointer may be null
int      mergesort_b(void *__base, size_t __nel, size_t __width,
                          ^
                            _Nullable 
/usr/local/include/stdlib.h:319:23: note: insert '_Nonnull' if the pointer should never be null
int      mergesort_b(void *__base, size_t __nel, size_t __width,
                          ^
                            _Nonnull 
/usr/local/include/stdlib.h:320:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
/usr/local/include/stdlib.h:320:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:320:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:320:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
/usr/local/include/stdlib.h:320:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:320:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:323:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort(void *__base, size_t __nel, size_t __width,
                    ^
/usr/local/include/stdlib.h:323:18: note: insert '_Nullable' if the pointer may be null
void     psort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nullable 
/usr/local/include/stdlib.h:323:18: note: insert '_Nonnull' if the pointer should never be null
void     psort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nonnull 
/usr/local/include/stdlib.h:324:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *))
                                                 ^
/usr/local/include/stdlib.h:324:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *))
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:324:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *))
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:324:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *))
                                                               ^
/usr/local/include/stdlib.h:324:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *))
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:324:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *))
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:327:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort_b(void *__base, size_t __nel, size_t __width,
                      ^
/usr/local/include/stdlib.h:327:20: note: insert '_Nullable' if the pointer may be null
void     psort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nullable 
/usr/local/include/stdlib.h:327:20: note: insert '_Nonnull' if the pointer should never be null
void     psort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nonnull 
/usr/local/include/stdlib.h:328:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
/usr/local/include/stdlib.h:328:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:328:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:328:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
/usr/local/include/stdlib.h:328:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:328:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:331:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
/usr/local/include/stdlib.h:331:20: note: insert '_Nullable' if the pointer may be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nullable 
/usr/local/include/stdlib.h:331:20: note: insert '_Nonnull' if the pointer should never be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nonnull 
/usr/local/include/stdlib.h:331:64: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
/usr/local/include/stdlib.h:331:64: note: insert '_Nullable' if the pointer may be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nullable
/usr/local/include/stdlib.h:331:64: note: insert '_Nonnull' if the pointer should never be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nonnull
/usr/local/include/stdlib.h:332:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                           ^
/usr/local/include/stdlib.h:332:37: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                           ^
                                            _Nullable
/usr/local/include/stdlib.h:332:37: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                           ^
                                            _Nonnull
/usr/local/include/stdlib.h:332:51: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                                         ^
/usr/local/include/stdlib.h:332:51: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                                         ^
                                                          _Nullable
/usr/local/include/stdlib.h:332:51: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                                         ^
                                                          _Nonnull
/usr/local/include/stdlib.h:332:65: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                                                       ^
/usr/local/include/stdlib.h:332:65: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                                                       ^
                                                                        _Nullable
/usr/local/include/stdlib.h:332:65: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                                                       ^
                                                                        _Nonnull
/usr/local/include/stdlib.h:335:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort_b(void *__base, size_t __nel, size_t __width,
                      ^
/usr/local/include/stdlib.h:335:20: note: insert '_Nullable' if the pointer may be null
void     qsort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nullable 
/usr/local/include/stdlib.h:335:20: note: insert '_Nonnull' if the pointer should never be null
void     qsort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nonnull 
/usr/local/include/stdlib.h:336:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
/usr/local/include/stdlib.h:336:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:336:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:336:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
/usr/local/include/stdlib.h:336:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:336:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:339:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
/usr/local/include/stdlib.h:339:20: note: insert '_Nullable' if the pointer may be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nullable 
/usr/local/include/stdlib.h:339:20: note: insert '_Nonnull' if the pointer should never be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nonnull 
/usr/local/include/stdlib.h:339:64: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
/usr/local/include/stdlib.h:339:64: note: insert '_Nullable' if the pointer may be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nullable
/usr/local/include/stdlib.h:339:64: note: insert '_Nonnull' if the pointer should never be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nonnull
/usr/local/include/stdlib.h:340:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                           ^
/usr/local/include/stdlib.h:340:37: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                           ^
                                            _Nullable
/usr/local/include/stdlib.h:340:37: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                           ^
                                            _Nonnull
/usr/local/include/stdlib.h:340:51: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                         ^
/usr/local/include/stdlib.h:340:51: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                         ^
                                                          _Nullable
/usr/local/include/stdlib.h:340:51: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                         ^
                                                          _Nonnull
/usr/local/include/stdlib.h:340:65: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                                       ^
/usr/local/include/stdlib.h:340:65: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                                       ^
                                                                        _Nullable
/usr/local/include/stdlib.h:340:65: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                                       ^
                                                                        _Nonnull
/usr/local/include/stdlib.h:341:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                       ^
/usr/local/include/stdlib.h:341:36: note: insert '_Nullable' if the pointer may be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                       ^
                                        _Nullable
/usr/local/include/stdlib.h:341:36: note: insert '_Nonnull' if the pointer should never be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                       ^
                                        _Nonnull
/usr/local/include/stdlib.h:341:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
/usr/local/include/stdlib.h:341:37: note: insert '_Nullable' if the pointer may be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                          _Nullable 
/usr/local/include/stdlib.h:341:37: note: insert '_Nonnull' if the pointer should never be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                          _Nonnull 
/usr/local/include/stdlib.h:341:77: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                ^
/usr/local/include/stdlib.h:341:77: note: insert '_Nullable' if the pointer may be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                ^
                                                                                  _Nullable 
/usr/local/include/stdlib.h:341:77: note: insert '_Nonnull' if the pointer should never be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                ^
                                                                                  _Nonnull 
/usr/local/include/stdlib.h:343:24: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int     rpmatch(const char *)
                           ^
/usr/local/include/stdlib.h:343:24: note: insert '_Nullable' if the pointer may be null
int     rpmatch(const char *)
                           ^
                            _Nullable
/usr/local/include/stdlib.h:343:24: note: insert '_Nonnull' if the pointer should never be null
int     rpmatch(const char *)
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:345:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
/usr/local/include/stdlib.h:345:37: note: insert '_Nullable' if the pointer may be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                         _Nullable
/usr/local/include/stdlib.h:345:37: note: insert '_Nonnull' if the pointer should never be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                         _Nonnull
/usr/local/include/stdlib.h:345:38: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                         ^
/usr/local/include/stdlib.h:345:38: note: insert '_Nullable' if the pointer may be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                         ^
                                           _Nullable 
/usr/local/include/stdlib.h:345:38: note: insert '_Nonnull' if the pointer should never be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                         ^
                                           _Nonnull 
/usr/local/include/stdlib.h:345:78: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                 ^
/usr/local/include/stdlib.h:345:78: note: insert '_Nullable' if the pointer may be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                 ^
                                                                                   _Nullable 
/usr/local/include/stdlib.h:345:78: note: insert '_Nonnull' if the pointer should never be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                 ^
                                                                                   _Nonnull 
/usr/local/include/stdlib.h:349:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
                       ^
/usr/local/include/stdlib.h:349:21: note: insert '_Nullable' if the pointer may be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
                       ^
                         _Nullable 
/usr/local/include/stdlib.h:349:21: note: insert '_Nonnull' if the pointer should never be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
                       ^
                         _Nonnull 
/usr/local/include/stdlib.h:349:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
        ^
/usr/local/include/stdlib.h:349:6: note: insert '_Nullable' if the pointer may be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
        ^
          _Nullable 
/usr/local/include/stdlib.h:349:6: note: insert '_Nonnull' if the pointer should never be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:351:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                            ^
/usr/local/include/stdlib.h:351:22: note: insert '_Nullable' if the pointer may be null
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                            ^
                              _Nullable 
/usr/local/include/stdlib.h:351:22: note: insert '_Nonnull' if the pointer should never be null
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                            ^
                              _Nonnull 
/usr/local/include/stdlib.h:351:84: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                                                                                          ^
/usr/local/include/stdlib.h:351:84: note: insert '_Nullable' if the pointer may be null
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                                                                                          ^
                                                                                           _Nullable
/usr/local/include/stdlib.h:351:84: note: insert '_Nonnull' if the pointer should never be null
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                                                                                          ^
                                                                                           _Nonnull
/usr/local/include/stdlib.h:351:85: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                                                                                           ^
/usr/local/include/stdlib.h:351:85: note: insert '_Nullable' if the pointer may be null
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                                                                                           ^
                                                                                             _Nullable 
/usr/local/include/stdlib.h:351:85: note: insert '_Nonnull' if the pointer should never be null
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                                                                                           ^
                                                                                             _Nonnull 
/usr/local/include/stdlib.h:355:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoq(const char *__str, char **__endptr, int __base);
                           ^
/usr/local/include/stdlib.h:355:21: note: insert '_Nullable' if the pointer may be null
         strtoq(const char *__str, char **__endptr, int __base);
                           ^
                             _Nullable 
/usr/local/include/stdlib.h:355:21: note: insert '_Nonnull' if the pointer should never be null
         strtoq(const char *__str, char **__endptr, int __base);
                           ^
                             _Nonnull 
/usr/local/include/stdlib.h:355:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoq(const char *__str, char **__endptr, int __base);
                                        ^
/usr/local/include/stdlib.h:355:34: note: insert '_Nullable' if the pointer may be null
         strtoq(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nullable
/usr/local/include/stdlib.h:355:34: note: insert '_Nonnull' if the pointer should never be null
         strtoq(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nonnull
/usr/local/include/stdlib.h:355:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoq(const char *__str, char **__endptr, int __base);
                                         ^
/usr/local/include/stdlib.h:355:35: note: insert '_Nullable' if the pointer may be null
         strtoq(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nullable 
/usr/local/include/stdlib.h:355:35: note: insert '_Nonnull' if the pointer should never be null
         strtoq(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nonnull 
/usr/local/include/stdlib.h:357:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtouq(const char *__str, char **__endptr, int __base);
                            ^
/usr/local/include/stdlib.h:357:22: note: insert '_Nullable' if the pointer may be null
         strtouq(const char *__str, char **__endptr, int __base);
                            ^
                              _Nullable 
/usr/local/include/stdlib.h:357:22: note: insert '_Nonnull' if the pointer should never be null
         strtouq(const char *__str, char **__endptr, int __base);
                            ^
                              _Nonnull 
/usr/local/include/stdlib.h:357:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtouq(const char *__str, char **__endptr, int __base);
                                         ^
/usr/local/include/stdlib.h:357:35: note: insert '_Nullable' if the pointer may be null
         strtouq(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nullable
/usr/local/include/stdlib.h:357:35: note: insert '_Nonnull' if the pointer should never be null
         strtouq(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nonnull
/usr/local/include/stdlib.h:357:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtouq(const char *__str, char **__endptr, int __base);
                                          ^
/usr/local/include/stdlib.h:357:36: note: insert '_Nullable' if the pointer may be null
         strtouq(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nullable 
/usr/local/include/stdlib.h:357:36: note: insert '_Nonnull' if the pointer should never be null
         strtouq(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nonnull 
/usr/local/include/stdlib.h:359:13: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
extern char *suboptarg;         /* getsubopt(3) external variable */
            ^
/usr/local/include/stdlib.h:359:13: note: insert '_Nullable' if the pointer may be null
extern char *suboptarg;         /* getsubopt(3) external variable */
            ^
              _Nullable 
/usr/local/include/stdlib.h:359:13: note: insert '_Nonnull' if the pointer should never be null
extern char *suboptarg;         /* getsubopt(3) external variable */
            ^
              _Nonnull 
193 warnings generated.
checked program was:
/* begin */
 1: #include "ruby.h"
 2: 
 3: /*top*/
 4: extern int t(void);
 5: int main(int argc, char **argv)
 6: {
 7:   if (argc > 1000000) {
 8:     int (* volatile tp)(void)=(int (*)(void))&t;
 9:     printf("%d", (*tp)());
10:   }
11: 
12:   return !!argv[argc];
13: }
14: int t(void) { void ((*volatile p)()); p = (void ((*)()))rb_absint_singlebit_p; return !p; }
/* end */

--------------------

have_func: checking for rb_wait_for_single_fd()... -------------------- yes

"gcc -o conftest -I/Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/x86_64-darwin19 -I/Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/backward -I/Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0 -I.  -I/usr/local/opt/libyaml/include -I/usr/local/opt/libksba/include -I/usr/local/opt/readline/include -I/usr/local/opt/zlib/include -I/usr/local/opt/openssl@1.1/include -D_XOPEN_SOURCE -D_DARWIN_C_SOURCE -D_DARWIN_UNLIMITED_SELECT -D_REENTRANT   -O3 -ggdb3 -Wall -Wextra -Wdeprecated-declarations -Wdivision-by-zero -Wimplicit-function-declaration -Wimplicit-int -Wpointer-arith -Wshorten-64-to-32 -Wwrite-strings -Wmissing-noreturn -Wno-constant-logical-operand -Wno-long-long -Wno-missing-field-initializers -Wno-overlength-strings -Wno-parentheses-equality -Wno-self-assign -Wno-tautological-compare -Wno-unused-parameter -Wno-unused-value -Wunused-variable -Wextra-tokens  -fno-common -pipe conftest.c  -L. -L/Users/dileepkumar/.rvm/rubies/ruby-2.7.0/lib -L/usr/local/opt/libyaml/lib -L/usr/local/opt/libksba/lib -L/usr/local/opt/readline/lib -L/usr/local/opt/zlib/lib -L/usr/local/opt/openssl@1.1/lib -L. -fstack-protector-strong -L/usr/local/lib -L/usr/local/opt/libyaml/lib -L/usr/local/opt/libksba/lib -L/usr/local/opt/readline/lib -L/usr/local/opt/zlib/lib -L/usr/local/opt/openssl@1.1/lib     -lruby.2.7   "
In file included from conftest.c:1:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby.h:33:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/ruby.h:29:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/defines.h:126:
In file included from /usr/local/include/stdio.h:64:
/usr/local/include/_stdio.h:93:16: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        unsigned char   *_base;
                        ^
/usr/local/include/_stdio.h:93:16: note: insert '_Nullable' if the pointer may be null
        unsigned char   *_base;
                        ^
                          _Nullable 
/usr/local/include/_stdio.h:93:16: note: insert '_Nonnull' if the pointer should never be null
        unsigned char   *_base;
                        ^
                          _Nonnull 
/usr/local/include/_stdio.h:138:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
/usr/local/include/_stdio.h:138:32: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
                                           _Nullable
/usr/local/include/_stdio.h:138:32: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
                                           _Nonnull
/usr/local/include/_stdio.h:138:40: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
/usr/local/include/_stdio.h:138:40: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
                                                   _Nullable
/usr/local/include/_stdio.h:138:40: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
                                                   _Nonnull
/usr/local/include/_stdio.h:139:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
/usr/local/include/_stdio.h:139:35: note: insert '_Nullable' if the pointer may be null
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
                                           _Nullable
/usr/local/include/_stdio.h:139:35: note: insert '_Nonnull' if the pointer should never be null
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
                                           _Nonnull
/usr/local/include/_stdio.h:140:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
/usr/local/include/_stdio.h:140:32: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
                                           _Nullable
/usr/local/include/_stdio.h:140:32: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
                                           _Nonnull
/usr/local/include/_stdio.h:140:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
/usr/local/include/_stdio.h:140:46: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
                                                         _Nullable
/usr/local/include/_stdio.h:140:46: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
                                                         _Nonnull
/usr/local/include/_stdio.h:144:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
/usr/local/include/_stdio.h:144:18: note: insert '_Nullable' if the pointer may be null
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
                          _Nullable 
/usr/local/include/_stdio.h:144:18: note: insert '_Nonnull' if the pointer should never be null
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
                          _Nonnull 
In file included from conftest.c:1:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby.h:33:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/ruby.h:29:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/defines.h:126:
/usr/local/include/stdio.h:67:13: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
extern FILE *__stdinp;
            ^
/usr/local/include/stdio.h:67:13: note: insert '_Nullable' if the pointer may be null
extern FILE *__stdinp;
            ^
              _Nullable 
/usr/local/include/stdio.h:67:13: note: insert '_Nonnull' if the pointer should never be null
extern FILE *__stdinp;
            ^
              _Nonnull 
/usr/local/include/stdio.h:386:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 int (* _Nullable)(void *, const char *, int),
                                        ^
/usr/local/include/stdio.h:386:41: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *, const char *, int),
                                        ^
                                         _Nullable
/usr/local/include/stdio.h:386:41: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *, const char *, int),
                                        ^
                                         _Nonnull
/usr/local/include/stdio.h:386:55: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
/usr/local/include/stdio.h:386:55: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
                                                       _Nullable
/usr/local/include/stdio.h:386:55: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
                                                       _Nonnull
/usr/local/include/stdio.h:387:44: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
/usr/local/include/stdio.h:387:44: note: insert '_Nullable' if the pointer may be null
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
                                            _Nullable
/usr/local/include/stdio.h:387:44: note: insert '_Nonnull' if the pointer should never be null
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
                                            _Nonnull
/usr/local/include/stdio.h:388:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 int (* _Nullable)(void *));
                                        ^
/usr/local/include/stdio.h:388:41: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *));
                                        ^
                                         _Nullable
/usr/local/include/stdio.h:388:41: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *));
                                        ^
                                         _Nonnull
/usr/local/include/stdio.h:384:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
FILE    *funopen(const void *,
        ^
/usr/local/include/stdio.h:384:6: note: insert '_Nullable' if the pointer may be null
FILE    *funopen(const void *,
        ^
          _Nullable 
/usr/local/include/stdio.h:384:6: note: insert '_Nonnull' if the pointer should never be null
FILE    *funopen(const void *,
        ^
          _Nonnull 
In file included from conftest.c:1:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby.h:33:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/ruby.h:29:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/defines.h:134:
/usr/local/include/stdlib.h:134:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   atof(const char *);
                         ^
/usr/local/include/stdlib.h:134:25: note: insert '_Nullable' if the pointer may be null
double   atof(const char *);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:134:25: note: insert '_Nonnull' if the pointer should never be null
double   atof(const char *);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:135:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      atoi(const char *);
                         ^
/usr/local/include/stdlib.h:135:22: note: insert '_Nullable' if the pointer may be null
int      atoi(const char *);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:135:22: note: insert '_Nonnull' if the pointer should never be null
int      atoi(const char *);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:136:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     atol(const char *);
                         ^
/usr/local/include/stdlib.h:136:23: note: insert '_Nullable' if the pointer may be null
long     atol(const char *);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:136:23: note: insert '_Nonnull' if the pointer should never be null
long     atol(const char *);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:139:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         atoll(const char *);
                          ^
/usr/local/include/stdlib.h:139:20: note: insert '_Nullable' if the pointer may be null
         atoll(const char *);
                          ^
                           _Nullable
/usr/local/include/stdlib.h:139:20: note: insert '_Nonnull' if the pointer should never be null
         atoll(const char *);
                          ^
                           _Nonnull
/usr/local/include/stdlib.h:141:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                            ^
/usr/local/include/stdlib.h:141:26: note: insert '_Nullable' if the pointer may be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                            ^
                              _Nullable 
/usr/local/include/stdlib.h:141:26: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                            ^
                              _Nonnull 
/usr/local/include/stdlib.h:141:45: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                                               ^
/usr/local/include/stdlib.h:141:45: note: insert '_Nullable' if the pointer may be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                                               ^
                                                 _Nullable 
/usr/local/include/stdlib.h:141:45: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                                               ^
                                                 _Nonnull 
/usr/local/include/stdlib.h:142:59: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                 ^
/usr/local/include/stdlib.h:142:59: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                 ^
                                                                  _Nullable
/usr/local/include/stdlib.h:142:59: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                 ^
                                                                  _Nonnull
/usr/local/include/stdlib.h:142:73: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                               ^
/usr/local/include/stdlib.h:142:73: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                               ^
                                                                                _Nullable
/usr/local/include/stdlib.h:142:73: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                               ^
                                                                                _Nonnull
/usr/local/include/stdlib.h:141:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch(const void *__key, const void *__base, size_t __nel,
        ^
/usr/local/include/stdlib.h:141:6: note: insert '_Nullable' if the pointer may be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
        ^
          _Nullable 
/usr/local/include/stdlib.h:141:6: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
        ^
          _Nonnull 
/usr/local/include/stdlib.h:147:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getenv(const char *);
                           ^
/usr/local/include/stdlib.h:147:25: note: insert '_Nullable' if the pointer may be null
char    *getenv(const char *);
                           ^
                            _Nullable
/usr/local/include/stdlib.h:147:25: note: insert '_Nonnull' if the pointer should never be null
char    *getenv(const char *);
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:147:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getenv(const char *);
        ^
/usr/local/include/stdlib.h:147:6: note: insert '_Nullable' if the pointer may be null
char    *getenv(const char *);
        ^
          _Nullable 
/usr/local/include/stdlib.h:147:6: note: insert '_Nonnull' if the pointer should never be null
char    *getenv(const char *);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:156:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mblen(const char *__s, size_t __n);
                          ^
/usr/local/include/stdlib.h:156:23: note: insert '_Nullable' if the pointer may be null
int      mblen(const char *__s, size_t __n);
                          ^
                            _Nullable 
/usr/local/include/stdlib.h:156:23: note: insert '_Nonnull' if the pointer should never be null
int      mblen(const char *__s, size_t __n);
                          ^
                            _Nonnull 
/usr/local/include/stdlib.h:157:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                          ^
/usr/local/include/stdlib.h:157:26: note: insert '_Nullable' if the pointer may be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                          ^
                            _Nullable
/usr/local/include/stdlib.h:157:26: note: insert '_Nonnull' if the pointer should never be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                          ^
                            _Nonnull
/usr/local/include/stdlib.h:157:52: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                                                    ^
/usr/local/include/stdlib.h:157:52: note: insert '_Nullable' if the pointer may be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                                                    ^
                                                      _Nullable
/usr/local/include/stdlib.h:157:52: note: insert '_Nonnull' if the pointer should never be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                                                    ^
                                                      _Nonnull
/usr/local/include/stdlib.h:158:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                        ^
/usr/local/include/stdlib.h:158:21: note: insert '_Nullable' if the pointer may be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                        ^
                          _Nullable
/usr/local/include/stdlib.h:158:21: note: insert '_Nonnull' if the pointer should never be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                        ^
                          _Nonnull
/usr/local/include/stdlib.h:158:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                                                 ^
/usr/local/include/stdlib.h:158:46: note: insert '_Nullable' if the pointer may be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                                                 ^
                                                   _Nullable
/usr/local/include/stdlib.h:158:46: note: insert '_Nonnull' if the pointer should never be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                                                 ^
                                                   _Nonnull
/usr/local/include/stdlib.h:160:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort(void *__base, size_t __nel, size_t __width,
                    ^
/usr/local/include/stdlib.h:160:18: note: insert '_Nullable' if the pointer may be null
void     qsort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nullable 
/usr/local/include/stdlib.h:160:18: note: insert '_Nonnull' if the pointer should never be null
void     qsort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nonnull 
/usr/local/include/stdlib.h:161:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
/usr/local/include/stdlib.h:161:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:161:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:161:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
/usr/local/include/stdlib.h:161:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:161:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:165:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                           ^
/usr/local/include/stdlib.h:165:27: note: insert '_Nullable' if the pointer may be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                           ^
                            _Nullable
/usr/local/include/stdlib.h:165:27: note: insert '_Nonnull' if the pointer should never be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:165:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                   ^
/usr/local/include/stdlib.h:165:35: note: insert '_Nullable' if the pointer may be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                   ^
                                    _Nullable
/usr/local/include/stdlib.h:165:35: note: insert '_Nonnull' if the pointer should never be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                   ^
                                    _Nonnull
/usr/local/include/stdlib.h:165:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                    ^
/usr/local/include/stdlib.h:165:36: note: insert '_Nullable' if the pointer may be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                    ^
                                     _Nullable
/usr/local/include/stdlib.h:165:36: note: insert '_Nonnull' if the pointer should never be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                    ^
                                     _Nonnull
/usr/local/include/stdlib.h:166:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                           ^
/usr/local/include/stdlib.h:166:26: note: insert '_Nullable' if the pointer may be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                           ^
                            _Nullable
/usr/local/include/stdlib.h:166:26: note: insert '_Nonnull' if the pointer should never be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:166:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                   ^
/usr/local/include/stdlib.h:166:34: note: insert '_Nullable' if the pointer may be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                   ^
                                    _Nullable
/usr/local/include/stdlib.h:166:34: note: insert '_Nonnull' if the pointer should never be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                   ^
                                    _Nonnull
/usr/local/include/stdlib.h:166:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                    ^
/usr/local/include/stdlib.h:166:35: note: insert '_Nullable' if the pointer may be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                    ^
                                     _Nullable
/usr/local/include/stdlib.h:166:35: note: insert '_Nonnull' if the pointer should never be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                    ^
                                     _Nonnull
/usr/local/include/stdlib.h:167:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     strtol(const char *__str, char **__endptr, int __base);
                           ^
/usr/local/include/stdlib.h:167:25: note: insert '_Nullable' if the pointer may be null
long     strtol(const char *__str, char **__endptr, int __base);
                           ^
                             _Nullable 
/usr/local/include/stdlib.h:167:25: note: insert '_Nonnull' if the pointer should never be null
long     strtol(const char *__str, char **__endptr, int __base);
                           ^
                             _Nonnull 
/usr/local/include/stdlib.h:167:38: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     strtol(const char *__str, char **__endptr, int __base);
                                        ^
/usr/local/include/stdlib.h:167:38: note: insert '_Nullable' if the pointer may be null
long     strtol(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nullable
/usr/local/include/stdlib.h:167:38: note: insert '_Nonnull' if the pointer should never be null
long     strtol(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nonnull
/usr/local/include/stdlib.h:167:39: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     strtol(const char *__str, char **__endptr, int __base);
                                         ^
/usr/local/include/stdlib.h:167:39: note: insert '_Nullable' if the pointer may be null
long     strtol(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nullable 
/usr/local/include/stdlib.h:167:39: note: insert '_Nonnull' if the pointer should never be null
long     strtol(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nonnull 
/usr/local/include/stdlib.h:169:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtold(const char *, char **);
                            ^
/usr/local/include/stdlib.h:169:22: note: insert '_Nullable' if the pointer may be null
         strtold(const char *, char **);
                            ^
                             _Nullable
/usr/local/include/stdlib.h:169:22: note: insert '_Nonnull' if the pointer should never be null
         strtold(const char *, char **);
                            ^
                             _Nonnull
/usr/local/include/stdlib.h:169:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtold(const char *, char **);
                                    ^
/usr/local/include/stdlib.h:169:30: note: insert '_Nullable' if the pointer may be null
         strtold(const char *, char **);
                                    ^
                                     _Nullable
/usr/local/include/stdlib.h:169:30: note: insert '_Nonnull' if the pointer should never be null
         strtold(const char *, char **);
                                    ^
                                     _Nonnull
/usr/local/include/stdlib.h:169:31: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtold(const char *, char **);
                                     ^
/usr/local/include/stdlib.h:169:31: note: insert '_Nullable' if the pointer may be null
         strtold(const char *, char **);
                                     ^
                                      _Nullable
/usr/local/include/stdlib.h:169:31: note: insert '_Nonnull' if the pointer should never be null
         strtold(const char *, char **);
                                     ^
                                      _Nonnull
/usr/local/include/stdlib.h:172:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoll(const char *__str, char **__endptr, int __base);
                            ^
/usr/local/include/stdlib.h:172:22: note: insert '_Nullable' if the pointer may be null
         strtoll(const char *__str, char **__endptr, int __base);
                            ^
                              _Nullable 
/usr/local/include/stdlib.h:172:22: note: insert '_Nonnull' if the pointer should never be null
         strtoll(const char *__str, char **__endptr, int __base);
                            ^
                              _Nonnull 
/usr/local/include/stdlib.h:172:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoll(const char *__str, char **__endptr, int __base);
                                         ^
/usr/local/include/stdlib.h:172:35: note: insert '_Nullable' if the pointer may be null
         strtoll(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nullable
/usr/local/include/stdlib.h:172:35: note: insert '_Nonnull' if the pointer should never be null
         strtoll(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nonnull
/usr/local/include/stdlib.h:172:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoll(const char *__str, char **__endptr, int __base);
                                          ^
/usr/local/include/stdlib.h:172:36: note: insert '_Nullable' if the pointer may be null
         strtoll(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nullable 
/usr/local/include/stdlib.h:172:36: note: insert '_Nonnull' if the pointer should never be null
         strtoll(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nonnull 
/usr/local/include/stdlib.h:175:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoul(const char *__str, char **__endptr, int __base);
                            ^
/usr/local/include/stdlib.h:175:22: note: insert '_Nullable' if the pointer may be null
         strtoul(const char *__str, char **__endptr, int __base);
                            ^
                              _Nullable 
/usr/local/include/stdlib.h:175:22: note: insert '_Nonnull' if the pointer should never be null
         strtoul(const char *__str, char **__endptr, int __base);
                            ^
                              _Nonnull 
/usr/local/include/stdlib.h:175:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoul(const char *__str, char **__endptr, int __base);
                                         ^
/usr/local/include/stdlib.h:175:35: note: insert '_Nullable' if the pointer may be null
         strtoul(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nullable
/usr/local/include/stdlib.h:175:35: note: insert '_Nonnull' if the pointer should never be null
         strtoul(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nonnull
/usr/local/include/stdlib.h:175:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoul(const char *__str, char **__endptr, int __base);
                                          ^
/usr/local/include/stdlib.h:175:36: note: insert '_Nullable' if the pointer may be null
         strtoul(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nullable 
/usr/local/include/stdlib.h:175:36: note: insert '_Nonnull' if the pointer should never be null
         strtoul(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nonnull 
/usr/local/include/stdlib.h:178:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoull(const char *__str, char **__endptr, int __base);
                             ^
/usr/local/include/stdlib.h:178:23: note: insert '_Nullable' if the pointer may be null
         strtoull(const char *__str, char **__endptr, int __base);
                             ^
                               _Nullable 
/usr/local/include/stdlib.h:178:23: note: insert '_Nonnull' if the pointer should never be null
         strtoull(const char *__str, char **__endptr, int __base);
                             ^
                               _Nonnull 
/usr/local/include/stdlib.h:178:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoull(const char *__str, char **__endptr, int __base);
                                          ^
/usr/local/include/stdlib.h:178:36: note: insert '_Nullable' if the pointer may be null
         strtoull(const char *__str, char **__endptr, int __base);
                                          ^
                                           _Nullable
/usr/local/include/stdlib.h:178:36: note: insert '_Nonnull' if the pointer should never be null
         strtoull(const char *__str, char **__endptr, int __base);
                                          ^
                                           _Nonnull
/usr/local/include/stdlib.h:178:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoull(const char *__str, char **__endptr, int __base);
                                           ^
/usr/local/include/stdlib.h:178:37: note: insert '_Nullable' if the pointer may be null
         strtoull(const char *__str, char **__endptr, int __base);
                                           ^
                                             _Nullable 
/usr/local/include/stdlib.h:178:37: note: insert '_Nonnull' if the pointer should never be null
         strtoull(const char *__str, char **__endptr, int __base);
                                           ^
                                             _Nonnull 
/usr/local/include/stdlib.h:190:24: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      system(const char *) __DARWIN_ALIAS_C(system);
                           ^
/usr/local/include/stdlib.h:190:24: note: insert '_Nullable' if the pointer may be null
int      system(const char *) __DARWIN_ALIAS_C(system);
                           ^
                            _Nullable
/usr/local/include/stdlib.h:190:24: note: insert '_Nonnull' if the pointer should never be null
int      system(const char *) __DARWIN_ALIAS_C(system);
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:194:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                       ^
/usr/local/include/stdlib.h:194:23: note: insert '_Nullable' if the pointer may be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                       ^
                         _Nullable
/usr/local/include/stdlib.h:194:23: note: insert '_Nonnull' if the pointer should never be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                       ^
                         _Nonnull
/usr/local/include/stdlib.h:194:51: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                                                   ^
/usr/local/include/stdlib.h:194:51: note: insert '_Nullable' if the pointer may be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                                                   ^
                                                     _Nullable
/usr/local/include/stdlib.h:194:51: note: insert '_Nonnull' if the pointer should never be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                                                   ^
                                                     _Nonnull
/usr/local/include/stdlib.h:195:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      wctomb(char *, wchar_t);
                     ^
/usr/local/include/stdlib.h:195:18: note: insert '_Nullable' if the pointer may be null
int      wctomb(char *, wchar_t);
                     ^
                      _Nullable
/usr/local/include/stdlib.h:195:18: note: insert '_Nonnull' if the pointer should never be null
int      wctomb(char *, wchar_t);
                     ^
                      _Nonnull
/usr/local/include/stdlib.h:199:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     a64l(const char *);
                         ^
/usr/local/include/stdlib.h:199:23: note: insert '_Nullable' if the pointer may be null
long     a64l(const char *);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:199:23: note: insert '_Nonnull' if the pointer should never be null
long     a64l(const char *);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:201:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
/usr/local/include/stdlib.h:201:29: note: insert '_Nullable' if the pointer may be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nullable 
/usr/local/include/stdlib.h:201:29: note: insert '_Nonnull' if the pointer should never be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nonnull 
/usr/local/include/stdlib.h:201:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
/usr/local/include/stdlib.h:201:46: note: insert '_Nullable' if the pointer may be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nullable 
/usr/local/include/stdlib.h:201:46: note: insert '_Nonnull' if the pointer should never be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nonnull 
/usr/local/include/stdlib.h:201:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
/usr/local/include/stdlib.h:201:6: note: insert '_Nullable' if the pointer may be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nullable 
/usr/local/include/stdlib.h:201:6: note: insert '_Nonnull' if the pointer should never be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nonnull 
/usr/local/include/stdlib.h:202:31: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
double   erand48(unsigned short[3]);
                               ^
/usr/local/include/stdlib.h:202:31: note: insert '_Nullable' if the array parameter may be null
double   erand48(unsigned short[3]);
                               ^
                                _Nullable 
/usr/local/include/stdlib.h:202:31: note: insert '_Nonnull' if the array parameter should never be null
double   erand48(unsigned short[3]);
                               ^
                                _Nonnull 
/usr/local/include/stdlib.h:203:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
/usr/local/include/stdlib.h:203:29: note: insert '_Nullable' if the pointer may be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nullable 
/usr/local/include/stdlib.h:203:29: note: insert '_Nonnull' if the pointer should never be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nonnull 
/usr/local/include/stdlib.h:203:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
/usr/local/include/stdlib.h:203:46: note: insert '_Nullable' if the pointer may be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nullable 
/usr/local/include/stdlib.h:203:46: note: insert '_Nonnull' if the pointer should never be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nonnull 
/usr/local/include/stdlib.h:203:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
/usr/local/include/stdlib.h:203:6: note: insert '_Nullable' if the pointer may be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nullable 
/usr/local/include/stdlib.h:203:6: note: insert '_Nonnull' if the pointer should never be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nonnull 
/usr/local/include/stdlib.h:204:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *gcvt(double, int, char *); /* LEGACY */
                                ^
/usr/local/include/stdlib.h:204:30: note: insert '_Nullable' if the pointer may be null
char    *gcvt(double, int, char *); /* LEGACY */
                                ^
                                 _Nullable
/usr/local/include/stdlib.h:204:30: note: insert '_Nonnull' if the pointer should never be null
char    *gcvt(double, int, char *); /* LEGACY */
                                ^
                                 _Nonnull
/usr/local/include/stdlib.h:204:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *gcvt(double, int, char *); /* LEGACY */
        ^
/usr/local/include/stdlib.h:204:6: note: insert '_Nullable' if the pointer may be null
char    *gcvt(double, int, char *); /* LEGACY */
        ^
          _Nullable 
/usr/local/include/stdlib.h:204:6: note: insert '_Nonnull' if the pointer should never be null
char    *gcvt(double, int, char *); /* LEGACY */
        ^
          _Nonnull 
/usr/local/include/stdlib.h:205:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                        ^
/usr/local/include/stdlib.h:205:21: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                        ^
                         _Nullable
/usr/local/include/stdlib.h:205:21: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                        ^
                         _Nonnull
/usr/local/include/stdlib.h:205:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                         ^
/usr/local/include/stdlib.h:205:22: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:205:22: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:205:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                 ^
/usr/local/include/stdlib.h:205:30: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                 ^
                                   _Nullable
/usr/local/include/stdlib.h:205:30: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                 ^
                                   _Nonnull
/usr/local/include/stdlib.h:205:38: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                         ^
/usr/local/include/stdlib.h:205:38: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                         ^
                                          _Nullable
/usr/local/include/stdlib.h:205:38: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                         ^
                                          _Nonnull
/usr/local/include/stdlib.h:205:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                                 ^
/usr/local/include/stdlib.h:205:46: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:205:46: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:205:47: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                                  ^
/usr/local/include/stdlib.h:205:47: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                                  ^
                                                   _Nullable
/usr/local/include/stdlib.h:205:47: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                                  ^
                                                   _Nonnull
/usr/local/include/stdlib.h:208:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
                                  ^
/usr/local/include/stdlib.h:208:32: note: insert '_Nullable' if the pointer may be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
                                  ^
                                   _Nullable
/usr/local/include/stdlib.h:208:32: note: insert '_Nonnull' if the pointer should never be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
                                  ^
                                   _Nonnull
/usr/local/include/stdlib.h:208:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
        ^
/usr/local/include/stdlib.h:208:6: note: insert '_Nullable' if the pointer may be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
        ^
          _Nullable 
/usr/local/include/stdlib.h:208:6: note: insert '_Nonnull' if the pointer should never be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
        ^
          _Nonnull 
/usr/local/include/stdlib.h:212:29: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
long     jrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
/usr/local/include/stdlib.h:212:29: note: insert '_Nullable' if the array parameter may be null
long     jrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nullable 
/usr/local/include/stdlib.h:212:29: note: insert '_Nonnull' if the array parameter should never be null
long     jrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nonnull 
/usr/local/include/stdlib.h:213:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *l64a(long);
        ^
/usr/local/include/stdlib.h:213:6: note: insert '_Nullable' if the pointer may be null
char    *l64a(long);
        ^
          _Nullable 
/usr/local/include/stdlib.h:213:6: note: insert '_Nonnull' if the pointer should never be null
char    *l64a(long);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:214:29: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
void     lcong48(unsigned short[7]);
                               ^
/usr/local/include/stdlib.h:214:29: note: insert '_Nullable' if the array parameter may be null
void     lcong48(unsigned short[7]);
                               ^
                                _Nullable 
/usr/local/include/stdlib.h:214:29: note: insert '_Nonnull' if the array parameter should never be null
void     lcong48(unsigned short[7]);
                               ^
                                _Nonnull 
/usr/local/include/stdlib.h:216:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *mktemp(char *);
                     ^
/usr/local/include/stdlib.h:216:19: note: insert '_Nullable' if the pointer may be null
char    *mktemp(char *);
                     ^
                      _Nullable
/usr/local/include/stdlib.h:216:19: note: insert '_Nonnull' if the pointer should never be null
char    *mktemp(char *);
                     ^
                      _Nonnull
/usr/local/include/stdlib.h:216:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *mktemp(char *);
        ^
/usr/local/include/stdlib.h:216:6: note: insert '_Nullable' if the pointer may be null
char    *mktemp(char *);
        ^
          _Nullable 
/usr/local/include/stdlib.h:216:6: note: insert '_Nonnull' if the pointer should never be null
char    *mktemp(char *);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:217:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mkstemp(char *);
                      ^
/usr/local/include/stdlib.h:217:19: note: insert '_Nullable' if the pointer may be null
int      mkstemp(char *);
                      ^
                       _Nullable
/usr/local/include/stdlib.h:217:19: note: insert '_Nonnull' if the pointer should never be null
int      mkstemp(char *);
                      ^
                       _Nonnull
/usr/local/include/stdlib.h:219:29: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
long     nrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
/usr/local/include/stdlib.h:219:29: note: insert '_Nullable' if the array parameter may be null
long     nrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nullable 
/usr/local/include/stdlib.h:219:29: note: insert '_Nonnull' if the array parameter should never be null
long     nrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nonnull 
/usr/local/include/stdlib.h:221:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ptsname(int);
        ^
/usr/local/include/stdlib.h:221:6: note: insert '_Nullable' if the pointer may be null
char    *ptsname(int);
        ^
          _Nullable 
/usr/local/include/stdlib.h:221:6: note: insert '_Nonnull' if the pointer should never be null
char    *ptsname(int);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:224:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int ptsname_r(int fildes, char *buffer, size_t buflen) __API_AVAILABLE(macos(10.13.4), ios(11.3), tvos(11.3), watchos(4.3));
                               ^
/usr/local/include/stdlib.h:224:32: note: insert '_Nullable' if the pointer may be null
int ptsname_r(int fildes, char *buffer, size_t buflen) __API_AVAILABLE(macos(10.13.4), ios(11.3), tvos(11.3), watchos(4.3));
                               ^
                                 _Nullable 
/usr/local/include/stdlib.h:224:32: note: insert '_Nonnull' if the pointer should never be null
int ptsname_r(int fildes, char *buffer, size_t buflen) __API_AVAILABLE(macos(10.13.4), ios(11.3), tvos(11.3), watchos(4.3));
                               ^
                                 _Nonnull 
/usr/local/include/stdlib.h:227:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      putenv(char *) __DARWIN_ALIAS(putenv);
                     ^
/usr/local/include/stdlib.h:227:18: note: insert '_Nullable' if the pointer may be null
int      putenv(char *) __DARWIN_ALIAS(putenv);
                     ^
                      _Nullable
/usr/local/include/stdlib.h:227:18: note: insert '_Nonnull' if the pointer should never be null
int      putenv(char *) __DARWIN_ALIAS(putenv);
                     ^
                      _Nonnull
/usr/local/include/stdlib.h:229:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      rand_r(unsigned *) __swift_unavailable("Use arc4random instead.");
                         ^
/usr/local/include/stdlib.h:229:22: note: insert '_Nullable' if the pointer may be null
int      rand_r(unsigned *) __swift_unavailable("Use arc4random instead.");
                         ^
                          _Nullable
/usr/local/include/stdlib.h:229:22: note: insert '_Nonnull' if the pointer should never be null
int      rand_r(unsigned *) __swift_unavailable("Use arc4random instead.");
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:231:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                             ^
/usr/local/include/stdlib.h:231:27: note: insert '_Nullable' if the pointer may be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                             ^
                               _Nullable
/usr/local/include/stdlib.h:231:27: note: insert '_Nonnull' if the pointer should never be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                             ^
                               _Nonnull
/usr/local/include/stdlib.h:231:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                                                ^
/usr/local/include/stdlib.h:231:46: note: insert '_Nullable' if the pointer may be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                                                ^
                                                  _Nullable
/usr/local/include/stdlib.h:231:46: note: insert '_Nonnull' if the pointer should never be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                                                ^
                                                  _Nonnull
/usr/local/include/stdlib.h:231:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
        ^
/usr/local/include/stdlib.h:231:6: note: insert '_Nullable' if the pointer may be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
        ^
          _Nullable 
/usr/local/include/stdlib.h:231:6: note: insert '_Nonnull' if the pointer should never be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:236:24: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
        *seed48(unsigned short[3]);
                              ^
/usr/local/include/stdlib.h:236:24: note: insert '_Nullable' if the array parameter may be null
        *seed48(unsigned short[3]);
                              ^
                               _Nullable 
/usr/local/include/stdlib.h:236:24: note: insert '_Nonnull' if the array parameter should never be null
        *seed48(unsigned short[3]);
                              ^
                               _Nonnull 
/usr/local/include/stdlib.h:236:2: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        *seed48(unsigned short[3]);
        ^
/usr/local/include/stdlib.h:236:2: note: insert '_Nullable' if the pointer may be null
        *seed48(unsigned short[3]);
        ^
          _Nullable 
/usr/local/include/stdlib.h:236:2: note: insert '_Nonnull' if the pointer should never be null
        *seed48(unsigned short[3]);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:237:24: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                           ^
/usr/local/include/stdlib.h:237:24: note: insert '_Nullable' if the pointer may be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                           ^
                             _Nullable
/usr/local/include/stdlib.h:237:24: note: insert '_Nonnull' if the pointer should never be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                           ^
                             _Nonnull
/usr/local/include/stdlib.h:237:45: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                                                ^
/usr/local/include/stdlib.h:237:45: note: insert '_Nullable' if the pointer may be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                                                ^
                                                  _Nullable
/usr/local/include/stdlib.h:237:45: note: insert '_Nonnull' if the pointer should never be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                                                ^
                                                  _Nonnull
/usr/local/include/stdlib.h:239:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     setkey(const char *) __DARWIN_ALIAS(setkey);
                           ^
/usr/local/include/stdlib.h:239:25: note: insert '_Nullable' if the pointer may be null
void     setkey(const char *) __DARWIN_ALIAS(setkey);
                           ^
                            _Nullable
/usr/local/include/stdlib.h:239:25: note: insert '_Nonnull' if the pointer should never be null
void     setkey(const char *) __DARWIN_ALIAS(setkey);
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:243:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *setstate(const char *);
                             ^
/usr/local/include/stdlib.h:243:27: note: insert '_Nullable' if the pointer may be null
char    *setstate(const char *);
                             ^
                              _Nullable
/usr/local/include/stdlib.h:243:27: note: insert '_Nonnull' if the pointer should never be null
char    *setstate(const char *);
                             ^
                              _Nonnull
/usr/local/include/stdlib.h:243:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *setstate(const char *);
        ^
/usr/local/include/stdlib.h:243:6: note: insert '_Nullable' if the pointer may be null
char    *setstate(const char *);
        ^
          _Nullable 
/usr/local/include/stdlib.h:243:6: note: insert '_Nonnull' if the pointer should never be null
char    *setstate(const char *);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:252:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      unsetenv(const char *) __DARWIN_ALIAS(unsetenv);
                             ^
/usr/local/include/stdlib.h:252:26: note: insert '_Nullable' if the pointer may be null
int      unsetenv(const char *) __DARWIN_ALIAS(unsetenv);
                             ^
                              _Nullable
/usr/local/include/stdlib.h:252:26: note: insert '_Nonnull' if the pointer should never be null
int      unsetenv(const char *) __DARWIN_ALIAS(unsetenv);
                             ^
                              _Nonnull
/usr/local/include/stdlib.h:265:42: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     arc4random_addrandom(unsigned char * /*dat*/, int /*datlen*/)
                                            ^
/usr/local/include/stdlib.h:265:42: note: insert '_Nullable' if the pointer may be null
void     arc4random_addrandom(unsigned char * /*dat*/, int /*datlen*/)
                                            ^
                                              _Nullable
/usr/local/include/stdlib.h:265:42: note: insert '_Nonnull' if the pointer should never be null
void     arc4random_addrandom(unsigned char * /*dat*/, int /*datlen*/)
                                            ^
                                              _Nonnull
/usr/local/include/stdlib.h:270:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     arc4random_buf(void * __buf, size_t __nbytes) __OSX_AVAILABLE_STARTING(__MAC_10_7, __IPHONE_4_3);
                             ^
/usr/local/include/stdlib.h:270:27: note: insert '_Nullable' if the pointer may be null
void     arc4random_buf(void * __buf, size_t __nbytes) __OSX_AVAILABLE_STARTING(__MAC_10_7, __IPHONE_4_3);
                             ^
                               _Nullable
/usr/local/include/stdlib.h:270:27: note: insert '_Nonnull' if the pointer should never be null
void     arc4random_buf(void * __buf, size_t __nbytes) __OSX_AVAILABLE_STARTING(__MAC_10_7, __IPHONE_4_3);
                             ^
                               _Nonnull
/usr/local/include/stdlib.h:276:28: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                              ^
/usr/local/include/stdlib.h:276:28: note: insert '_Nullable' if the pointer may be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                              ^
                                _Nullable 
/usr/local/include/stdlib.h:276:28: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                              ^
                                _Nonnull 
/usr/local/include/stdlib.h:276:47: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                                                 ^
/usr/local/include/stdlib.h:276:47: note: insert '_Nullable' if the pointer may be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                                                 ^
                                                   _Nullable 
/usr/local/include/stdlib.h:276:47: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                                                 ^
                                                   _Nonnull 
/usr/local/include/stdlib.h:277:59: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                 ^
/usr/local/include/stdlib.h:277:59: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                 ^
                                                                  _Nullable
/usr/local/include/stdlib.h:277:59: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                 ^
                                                                  _Nonnull
/usr/local/include/stdlib.h:277:73: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                               ^
/usr/local/include/stdlib.h:277:73: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                               ^
                                                                                _Nullable
/usr/local/include/stdlib.h:277:73: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                               ^
                                                                                _Nonnull
/usr/local/include/stdlib.h:276:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
        ^
/usr/local/include/stdlib.h:276:6: note: insert '_Nullable' if the pointer may be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
        ^
          _Nullable 
/usr/local/include/stdlib.h:276:6: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
        ^
          _Nonnull 
/usr/local/include/stdlib.h:281:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *cgetcap(char *, const char *, int);
                      ^
/usr/local/include/stdlib.h:281:20: note: insert '_Nullable' if the pointer may be null
char    *cgetcap(char *, const char *, int);
                      ^
                       _Nullable
/usr/local/include/stdlib.h:281:20: note: insert '_Nonnull' if the pointer should never be null
char    *cgetcap(char *, const char *, int);
                      ^
                       _Nonnull
/usr/local/include/stdlib.h:281:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *cgetcap(char *, const char *, int);
                                    ^
/usr/local/include/stdlib.h:281:34: note: insert '_Nullable' if the pointer may be null
char    *cgetcap(char *, const char *, int);
                                    ^
                                     _Nullable
/usr/local/include/stdlib.h:281:34: note: insert '_Nonnull' if the pointer should never be null
char    *cgetcap(char *, const char *, int);
                                    ^
                                     _Nonnull
/usr/local/include/stdlib.h:281:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *cgetcap(char *, const char *, int);
        ^
/usr/local/include/stdlib.h:281:6: note: insert '_Nullable' if the pointer may be null
char    *cgetcap(char *, const char *, int);
        ^
          _Nullable 
/usr/local/include/stdlib.h:281:6: note: insert '_Nonnull' if the pointer should never be null
char    *cgetcap(char *, const char *, int);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:283:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                      ^
/usr/local/include/stdlib.h:283:19: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                      ^
                       _Nullable
/usr/local/include/stdlib.h:283:19: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                      ^
                       _Nonnull
/usr/local/include/stdlib.h:283:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                       ^
/usr/local/include/stdlib.h:283:20: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                       ^
                        _Nullable
/usr/local/include/stdlib.h:283:20: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                       ^
                        _Nonnull
/usr/local/include/stdlib.h:283:28: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                               ^
/usr/local/include/stdlib.h:283:28: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                               ^
                                _Nullable
/usr/local/include/stdlib.h:283:28: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                               ^
                                _Nonnull
/usr/local/include/stdlib.h:283:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                                ^
/usr/local/include/stdlib.h:283:29: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                                ^
                                 _Nullable
/usr/local/include/stdlib.h:283:29: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                                ^
                                 _Nonnull
/usr/local/include/stdlib.h:283:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                                              ^
/usr/local/include/stdlib.h:283:43: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                                              ^
                                               _Nullable
/usr/local/include/stdlib.h:283:43: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                                              ^
                                               _Nonnull
/usr/local/include/stdlib.h:284:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                        ^
/usr/local/include/stdlib.h:284:21: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                        ^
                         _Nullable
/usr/local/include/stdlib.h:284:21: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                        ^
                         _Nonnull
/usr/local/include/stdlib.h:284:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                         ^
/usr/local/include/stdlib.h:284:22: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:284:22: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:284:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                                 ^
/usr/local/include/stdlib.h:284:30: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                                 ^
                                  _Nullable
/usr/local/include/stdlib.h:284:30: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                                 ^
                                  _Nonnull
/usr/local/include/stdlib.h:284:31: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                                  ^
/usr/local/include/stdlib.h:284:31: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                                  ^
                                   _Nullable
/usr/local/include/stdlib.h:284:31: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                                  ^
                                   _Nonnull
/usr/local/include/stdlib.h:285:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetmatch(const char *, const char *);
                              ^
/usr/local/include/stdlib.h:285:27: note: insert '_Nullable' if the pointer may be null
int      cgetmatch(const char *, const char *);
                              ^
                               _Nullable
/usr/local/include/stdlib.h:285:27: note: insert '_Nonnull' if the pointer should never be null
int      cgetmatch(const char *, const char *);
                              ^
                               _Nonnull
/usr/local/include/stdlib.h:285:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetmatch(const char *, const char *);
                                            ^
/usr/local/include/stdlib.h:285:41: note: insert '_Nullable' if the pointer may be null
int      cgetmatch(const char *, const char *);
                                            ^
                                             _Nullable
/usr/local/include/stdlib.h:285:41: note: insert '_Nonnull' if the pointer should never be null
int      cgetmatch(const char *, const char *);
                                            ^
                                             _Nonnull
/usr/local/include/stdlib.h:286:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                       ^
/usr/local/include/stdlib.h:286:20: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                       ^
                        _Nullable
/usr/local/include/stdlib.h:286:20: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                       ^
                        _Nonnull
/usr/local/include/stdlib.h:286:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                        ^
/usr/local/include/stdlib.h:286:21: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                        ^
                         _Nullable
/usr/local/include/stdlib.h:286:21: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                        ^
                         _Nonnull
/usr/local/include/stdlib.h:286:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                                ^
/usr/local/include/stdlib.h:286:29: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                                ^
                                 _Nullable
/usr/local/include/stdlib.h:286:29: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                                ^
                                 _Nonnull
/usr/local/include/stdlib.h:286:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                                 ^
/usr/local/include/stdlib.h:286:30: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                                 ^
                                  _Nullable
/usr/local/include/stdlib.h:286:30: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                                 ^
                                  _Nonnull
/usr/local/include/stdlib.h:287:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnum(char *, const char *, long *);
                      ^
/usr/local/include/stdlib.h:287:19: note: insert '_Nullable' if the pointer may be null
int      cgetnum(char *, const char *, long *);
                      ^
                       _Nullable
/usr/local/include/stdlib.h:287:19: note: insert '_Nonnull' if the pointer should never be null
int      cgetnum(char *, const char *, long *);
                      ^
                       _Nonnull
/usr/local/include/stdlib.h:287:33: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnum(char *, const char *, long *);
                                    ^
/usr/local/include/stdlib.h:287:33: note: insert '_Nullable' if the pointer may be null
int      cgetnum(char *, const char *, long *);
                                    ^
                                     _Nullable
/usr/local/include/stdlib.h:287:33: note: insert '_Nonnull' if the pointer should never be null
int      cgetnum(char *, const char *, long *);
                                    ^
                                     _Nonnull
/usr/local/include/stdlib.h:287:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnum(char *, const char *, long *);
                                            ^
/usr/local/include/stdlib.h:287:41: note: insert '_Nullable' if the pointer may be null
int      cgetnum(char *, const char *, long *);
                                            ^
                                             _Nullable
/usr/local/include/stdlib.h:287:41: note: insert '_Nonnull' if the pointer should never be null
int      cgetnum(char *, const char *, long *);
                                            ^
                                             _Nonnull
/usr/local/include/stdlib.h:288:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetset(const char *);
                            ^
/usr/local/include/stdlib.h:288:25: note: insert '_Nullable' if the pointer may be null
int      cgetset(const char *);
                            ^
                             _Nullable
/usr/local/include/stdlib.h:288:25: note: insert '_Nonnull' if the pointer should never be null
int      cgetset(const char *);
                            ^
                             _Nonnull
/usr/local/include/stdlib.h:289:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                      ^
/usr/local/include/stdlib.h:289:19: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                      ^
                       _Nullable
/usr/local/include/stdlib.h:289:19: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                      ^
                       _Nonnull
/usr/local/include/stdlib.h:289:33: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                                    ^
/usr/local/include/stdlib.h:289:33: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                                    ^
                                     _Nullable
/usr/local/include/stdlib.h:289:33: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                                    ^
                                     _Nonnull
/usr/local/include/stdlib.h:289:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                                            ^
/usr/local/include/stdlib.h:289:41: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                                            ^
                                             _Nullable
/usr/local/include/stdlib.h:289:41: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                                            ^
                                             _Nonnull
/usr/local/include/stdlib.h:289:42: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                                             ^
/usr/local/include/stdlib.h:289:42: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                                             ^
                                              _Nullable
/usr/local/include/stdlib.h:289:42: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                                             ^
                                              _Nonnull
/usr/local/include/stdlib.h:290:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                       ^
/usr/local/include/stdlib.h:290:20: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                       ^
                        _Nullable
/usr/local/include/stdlib.h:290:20: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                       ^
                        _Nonnull
/usr/local/include/stdlib.h:290:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                                     ^
/usr/local/include/stdlib.h:290:34: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                                     ^
                                      _Nullable
/usr/local/include/stdlib.h:290:34: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                                     ^
                                      _Nonnull
/usr/local/include/stdlib.h:290:42: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                                             ^
/usr/local/include/stdlib.h:290:42: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                                             ^
                                              _Nullable
/usr/local/include/stdlib.h:290:42: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                                             ^
                                              _Nonnull
/usr/local/include/stdlib.h:290:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                                              ^
/usr/local/include/stdlib.h:290:43: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                                              ^
                                               _Nullable
/usr/local/include/stdlib.h:290:43: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                                              ^
                                               _Nonnull
/usr/local/include/stdlib.h:293:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *devname(dev_t, mode_t);
        ^
/usr/local/include/stdlib.h:293:6: note: insert '_Nullable' if the pointer may be null
char    *devname(dev_t, mode_t);
        ^
          _Nullable 
/usr/local/include/stdlib.h:293:6: note: insert '_Nonnull' if the pointer should never be null
char    *devname(dev_t, mode_t);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:294:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *devname_r(dev_t, mode_t, char *buf, int len);
                                       ^
/usr/local/include/stdlib.h:294:37: note: insert '_Nullable' if the pointer may be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
                                       ^
                                         _Nullable 
/usr/local/include/stdlib.h:294:37: note: insert '_Nonnull' if the pointer should never be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
                                       ^
                                         _Nonnull 
/usr/local/include/stdlib.h:294:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *devname_r(dev_t, mode_t, char *buf, int len);
        ^
/usr/local/include/stdlib.h:294:6: note: insert '_Nullable' if the pointer may be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
        ^
          _Nullable 
/usr/local/include/stdlib.h:294:6: note: insert '_Nonnull' if the pointer should never be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:295:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getbsize(int *, long *);
                      ^
/usr/local/include/stdlib.h:295:20: note: insert '_Nullable' if the pointer may be null
char    *getbsize(int *, long *);
                      ^
                       _Nullable
/usr/local/include/stdlib.h:295:20: note: insert '_Nonnull' if the pointer should never be null
char    *getbsize(int *, long *);
                      ^
                       _Nonnull
/usr/local/include/stdlib.h:295:28: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getbsize(int *, long *);
                              ^
/usr/local/include/stdlib.h:295:28: note: insert '_Nullable' if the pointer may be null
char    *getbsize(int *, long *);
                              ^
                               _Nullable
/usr/local/include/stdlib.h:295:28: note: insert '_Nonnull' if the pointer should never be null
char    *getbsize(int *, long *);
                              ^
                               _Nonnull
/usr/local/include/stdlib.h:295:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getbsize(int *, long *);
        ^
/usr/local/include/stdlib.h:295:6: note: insert '_Nullable' if the pointer may be null
char    *getbsize(int *, long *);
        ^
          _Nullable 
/usr/local/include/stdlib.h:295:6: note: insert '_Nonnull' if the pointer should never be null
char    *getbsize(int *, long *);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:296:24: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
int      getloadavg(double [], int);
                           ^
/usr/local/include/stdlib.h:296:24: note: insert '_Nullable' if the array parameter may be null
int      getloadavg(double [], int);
                           ^
                            _Nullable
/usr/local/include/stdlib.h:296:24: note: insert '_Nonnull' if the array parameter should never be null
int      getloadavg(double [], int);
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:298:2: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        *getprogname(void);
        ^
/usr/local/include/stdlib.h:298:2: note: insert '_Nullable' if the pointer may be null
        *getprogname(void);
        ^
          _Nullable 
/usr/local/include/stdlib.h:298:2: note: insert '_Nonnull' if the pointer should never be null
        *getprogname(void);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:299:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     setprogname(const char *);
                                ^
/usr/local/include/stdlib.h:299:30: note: insert '_Nullable' if the pointer may be null
void     setprogname(const char *);
                                ^
                                 _Nullable
/usr/local/include/stdlib.h:299:30: note: insert '_Nonnull' if the pointer should never be null
void     setprogname(const char *);
                                ^
                                 _Nonnull
/usr/local/include/stdlib.h:309:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      heapsort(void *__base, size_t __nel, size_t __width,
                       ^
/usr/local/include/stdlib.h:309:20: note: insert '_Nullable' if the pointer may be null
int      heapsort(void *__base, size_t __nel, size_t __width,
                       ^
                         _Nullable 
/usr/local/include/stdlib.h:309:20: note: insert '_Nonnull' if the pointer should never be null
int      heapsort(void *__base, size_t __nel, size_t __width,
                       ^
                         _Nonnull 
/usr/local/include/stdlib.h:310:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
/usr/local/include/stdlib.h:310:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:310:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:310:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
/usr/local/include/stdlib.h:310:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:310:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:312:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      heapsort_b(void *__base, size_t __nel, size_t __width,
                         ^
/usr/local/include/stdlib.h:312:22: note: insert '_Nullable' if the pointer may be null
int      heapsort_b(void *__base, size_t __nel, size_t __width,
                         ^
                           _Nullable 
/usr/local/include/stdlib.h:312:22: note: insert '_Nonnull' if the pointer should never be null
int      heapsort_b(void *__base, size_t __nel, size_t __width,
                         ^
                           _Nonnull 
/usr/local/include/stdlib.h:313:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
/usr/local/include/stdlib.h:313:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:313:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:313:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
/usr/local/include/stdlib.h:313:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:313:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:316:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mergesort(void *__base, size_t __nel, size_t __width,
                        ^
/usr/local/include/stdlib.h:316:21: note: insert '_Nullable' if the pointer may be null
int      mergesort(void *__base, size_t __nel, size_t __width,
                        ^
                          _Nullable 
/usr/local/include/stdlib.h:316:21: note: insert '_Nonnull' if the pointer should never be null
int      mergesort(void *__base, size_t __nel, size_t __width,
                        ^
                          _Nonnull 
/usr/local/include/stdlib.h:317:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
/usr/local/include/stdlib.h:317:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:317:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:317:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
/usr/local/include/stdlib.h:317:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:317:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:319:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mergesort_b(void *__base, size_t __nel, size_t __width,
                          ^
/usr/local/include/stdlib.h:319:23: note: insert '_Nullable' if the pointer may be null
int      mergesort_b(void *__base, size_t __nel, size_t __width,
                          ^
                            _Nullable 
/usr/local/include/stdlib.h:319:23: note: insert '_Nonnull' if the pointer should never be null
int      mergesort_b(void *__base, size_t __nel, size_t __width,
                          ^
                            _Nonnull 
/usr/local/include/stdlib.h:320:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
/usr/local/include/stdlib.h:320:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:320:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:320:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
/usr/local/include/stdlib.h:320:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:320:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:323:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort(void *__base, size_t __nel, size_t __width,
                    ^
/usr/local/include/stdlib.h:323:18: note: insert '_Nullable' if the pointer may be null
void     psort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nullable 
/usr/local/include/stdlib.h:323:18: note: insert '_Nonnull' if the pointer should never be null
void     psort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nonnull 
/usr/local/include/stdlib.h:324:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *))
                                                 ^
/usr/local/include/stdlib.h:324:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *))
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:324:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *))
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:324:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *))
                                                               ^
/usr/local/include/stdlib.h:324:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *))
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:324:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *))
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:327:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort_b(void *__base, size_t __nel, size_t __width,
                      ^
/usr/local/include/stdlib.h:327:20: note: insert '_Nullable' if the pointer may be null
void     psort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nullable 
/usr/local/include/stdlib.h:327:20: note: insert '_Nonnull' if the pointer should never be null
void     psort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nonnull 
/usr/local/include/stdlib.h:328:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
/usr/local/include/stdlib.h:328:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:328:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:328:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
/usr/local/include/stdlib.h:328:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:328:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:331:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
/usr/local/include/stdlib.h:331:20: note: insert '_Nullable' if the pointer may be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nullable 
/usr/local/include/stdlib.h:331:20: note: insert '_Nonnull' if the pointer should never be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nonnull 
/usr/local/include/stdlib.h:331:64: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
/usr/local/include/stdlib.h:331:64: note: insert '_Nullable' if the pointer may be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nullable
/usr/local/include/stdlib.h:331:64: note: insert '_Nonnull' if the pointer should never be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nonnull
/usr/local/include/stdlib.h:332:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                           ^
/usr/local/include/stdlib.h:332:37: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                           ^
                                            _Nullable
/usr/local/include/stdlib.h:332:37: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                           ^
                                            _Nonnull
/usr/local/include/stdlib.h:332:51: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                                         ^
/usr/local/include/stdlib.h:332:51: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                                         ^
                                                          _Nullable
/usr/local/include/stdlib.h:332:51: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                                         ^
                                                          _Nonnull
/usr/local/include/stdlib.h:332:65: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                                                       ^
/usr/local/include/stdlib.h:332:65: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                                                       ^
                                                                        _Nullable
/usr/local/include/stdlib.h:332:65: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                                                       ^
                                                                        _Nonnull
/usr/local/include/stdlib.h:335:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort_b(void *__base, size_t __nel, size_t __width,
                      ^
/usr/local/include/stdlib.h:335:20: note: insert '_Nullable' if the pointer may be null
void     qsort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nullable 
/usr/local/include/stdlib.h:335:20: note: insert '_Nonnull' if the pointer should never be null
void     qsort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nonnull 
/usr/local/include/stdlib.h:336:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
/usr/local/include/stdlib.h:336:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:336:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:336:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
/usr/local/include/stdlib.h:336:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:336:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:339:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
/usr/local/include/stdlib.h:339:20: note: insert '_Nullable' if the pointer may be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nullable 
/usr/local/include/stdlib.h:339:20: note: insert '_Nonnull' if the pointer should never be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nonnull 
/usr/local/include/stdlib.h:339:64: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
/usr/local/include/stdlib.h:339:64: note: insert '_Nullable' if the pointer may be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nullable
/usr/local/include/stdlib.h:339:64: note: insert '_Nonnull' if the pointer should never be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nonnull
/usr/local/include/stdlib.h:340:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                           ^
/usr/local/include/stdlib.h:340:37: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                           ^
                                            _Nullable
/usr/local/include/stdlib.h:340:37: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                           ^
                                            _Nonnull
/usr/local/include/stdlib.h:340:51: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                         ^
/usr/local/include/stdlib.h:340:51: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                         ^
                                                          _Nullable
/usr/local/include/stdlib.h:340:51: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                         ^
                                                          _Nonnull
/usr/local/include/stdlib.h:340:65: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                                       ^
/usr/local/include/stdlib.h:340:65: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                                       ^
                                                                        _Nullable
/usr/local/include/stdlib.h:340:65: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                                       ^
                                                                        _Nonnull
/usr/local/include/stdlib.h:341:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                       ^
/usr/local/include/stdlib.h:341:36: note: insert '_Nullable' if the pointer may be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                       ^
                                        _Nullable
/usr/local/include/stdlib.h:341:36: note: insert '_Nonnull' if the pointer should never be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                       ^
                                        _Nonnull
/usr/local/include/stdlib.h:341:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
/usr/local/include/stdlib.h:341:37: note: insert '_Nullable' if the pointer may be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                          _Nullable 
/usr/local/include/stdlib.h:341:37: note: insert '_Nonnull' if the pointer should never be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                          _Nonnull 
/usr/local/include/stdlib.h:341:77: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                ^
/usr/local/include/stdlib.h:341:77: note: insert '_Nullable' if the pointer may be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                ^
                                                                                  _Nullable 
/usr/local/include/stdlib.h:341:77: note: insert '_Nonnull' if the pointer should never be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                ^
                                                                                  _Nonnull 
/usr/local/include/stdlib.h:343:24: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int     rpmatch(const char *)
                           ^
/usr/local/include/stdlib.h:343:24: note: insert '_Nullable' if the pointer may be null
int     rpmatch(const char *)
                           ^
                            _Nullable
/usr/local/include/stdlib.h:343:24: note: insert '_Nonnull' if the pointer should never be null
int     rpmatch(const char *)
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:345:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
/usr/local/include/stdlib.h:345:37: note: insert '_Nullable' if the pointer may be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                         _Nullable
/usr/local/include/stdlib.h:345:37: note: insert '_Nonnull' if the pointer should never be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                         _Nonnull
/usr/local/include/stdlib.h:345:38: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                         ^
/usr/local/include/stdlib.h:345:38: note: insert '_Nullable' if the pointer may be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                         ^
                                           _Nullable 
/usr/local/include/stdlib.h:345:38: note: insert '_Nonnull' if the pointer should never be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                         ^
                                           _Nonnull 
/usr/local/include/stdlib.h:345:78: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                 ^
/usr/local/include/stdlib.h:345:78: note: insert '_Nullable' if the pointer may be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                 ^
                                                                                   _Nullable 
/usr/local/include/stdlib.h:345:78: note: insert '_Nonnull' if the pointer should never be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                 ^
                                                                                   _Nonnull 
/usr/local/include/stdlib.h:349:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
                       ^
/usr/local/include/stdlib.h:349:21: note: insert '_Nullable' if the pointer may be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
                       ^
                         _Nullable 
/usr/local/include/stdlib.h:349:21: note: insert '_Nonnull' if the pointer should never be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
                       ^
                         _Nonnull 
/usr/local/include/stdlib.h:349:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
        ^
/usr/local/include/stdlib.h:349:6: note: insert '_Nullable' if the pointer may be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
        ^
          _Nullable 
/usr/local/include/stdlib.h:349:6: note: insert '_Nonnull' if the pointer should never be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:351:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                            ^
/usr/local/include/stdlib.h:351:22: note: insert '_Nullable' if the pointer may be null
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                            ^
                              _Nullable 
/usr/local/include/stdlib.h:351:22: note: insert '_Nonnull' if the pointer should never be null
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                            ^
                              _Nonnull 
/usr/local/include/stdlib.h:351:84: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                                                                                          ^
/usr/local/include/stdlib.h:351:84: note: insert '_Nullable' if the pointer may be null
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                                                                                          ^
                                                                                           _Nullable
/usr/local/include/stdlib.h:351:84: note: insert '_Nonnull' if the pointer should never be null
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                                                                                          ^
                                                                                           _Nonnull
/usr/local/include/stdlib.h:351:85: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                                                                                           ^
/usr/local/include/stdlib.h:351:85: note: insert '_Nullable' if the pointer may be null
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                                                                                           ^
                                                                                             _Nullable 
/usr/local/include/stdlib.h:351:85: note: insert '_Nonnull' if the pointer should never be null
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                                                                                           ^
                                                                                             _Nonnull 
/usr/local/include/stdlib.h:355:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoq(const char *__str, char **__endptr, int __base);
                           ^
/usr/local/include/stdlib.h:355:21: note: insert '_Nullable' if the pointer may be null
         strtoq(const char *__str, char **__endptr, int __base);
                           ^
                             _Nullable 
/usr/local/include/stdlib.h:355:21: note: insert '_Nonnull' if the pointer should never be null
         strtoq(const char *__str, char **__endptr, int __base);
                           ^
                             _Nonnull 
/usr/local/include/stdlib.h:355:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoq(const char *__str, char **__endptr, int __base);
                                        ^
/usr/local/include/stdlib.h:355:34: note: insert '_Nullable' if the pointer may be null
         strtoq(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nullable
/usr/local/include/stdlib.h:355:34: note: insert '_Nonnull' if the pointer should never be null
         strtoq(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nonnull
/usr/local/include/stdlib.h:355:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoq(const char *__str, char **__endptr, int __base);
                                         ^
/usr/local/include/stdlib.h:355:35: note: insert '_Nullable' if the pointer may be null
         strtoq(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nullable 
/usr/local/include/stdlib.h:355:35: note: insert '_Nonnull' if the pointer should never be null
         strtoq(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nonnull 
/usr/local/include/stdlib.h:357:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtouq(const char *__str, char **__endptr, int __base);
                            ^
/usr/local/include/stdlib.h:357:22: note: insert '_Nullable' if the pointer may be null
         strtouq(const char *__str, char **__endptr, int __base);
                            ^
                              _Nullable 
/usr/local/include/stdlib.h:357:22: note: insert '_Nonnull' if the pointer should never be null
         strtouq(const char *__str, char **__endptr, int __base);
                            ^
                              _Nonnull 
/usr/local/include/stdlib.h:357:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtouq(const char *__str, char **__endptr, int __base);
                                         ^
/usr/local/include/stdlib.h:357:35: note: insert '_Nullable' if the pointer may be null
         strtouq(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nullable
/usr/local/include/stdlib.h:357:35: note: insert '_Nonnull' if the pointer should never be null
         strtouq(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nonnull
/usr/local/include/stdlib.h:357:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtouq(const char *__str, char **__endptr, int __base);
                                          ^
/usr/local/include/stdlib.h:357:36: note: insert '_Nullable' if the pointer may be null
         strtouq(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nullable 
/usr/local/include/stdlib.h:357:36: note: insert '_Nonnull' if the pointer should never be null
         strtouq(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nonnull 
/usr/local/include/stdlib.h:359:13: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
extern char *suboptarg;         /* getsubopt(3) external variable */
            ^
/usr/local/include/stdlib.h:359:13: note: insert '_Nullable' if the pointer may be null
extern char *suboptarg;         /* getsubopt(3) external variable */
            ^
              _Nullable 
/usr/local/include/stdlib.h:359:13: note: insert '_Nonnull' if the pointer should never be null
extern char *suboptarg;         /* getsubopt(3) external variable */
            ^
              _Nonnull 
conftest.c:14:57: error: use of undeclared identifier 'rb_wait_for_single_fd'
int t(void) { void ((*volatile p)()); p = (void ((*)()))rb_wait_for_single_fd; return !p; }
                                                        ^
193 warnings and 1 error generated.
checked program was:
/* begin */
 1: #include "ruby.h"
 2: 
 3: /*top*/
 4: extern int t(void);
 5: int main(int argc, char **argv)
 6: {
 7:   if (argc > 1000000) {
 8:     int (* volatile tp)(void)=(int (*)(void))&t;
 9:     printf("%d", (*tp)());
10:   }
11: 
12:   return !!argv[argc];
13: }
14: int t(void) { void ((*volatile p)()); p = (void ((*)()))rb_wait_for_single_fd; return !p; }
/* end */

"gcc -o conftest -I/Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/x86_64-darwin19 -I/Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/backward -I/Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0 -I.  -I/usr/local/opt/libyaml/include -I/usr/local/opt/libksba/include -I/usr/local/opt/readline/include -I/usr/local/opt/zlib/include -I/usr/local/opt/openssl@1.1/include -D_XOPEN_SOURCE -D_DARWIN_C_SOURCE -D_DARWIN_UNLIMITED_SELECT -D_REENTRANT   -O3 -ggdb3 -Wall -Wextra -Wdeprecated-declarations -Wdivision-by-zero -Wimplicit-function-declaration -Wimplicit-int -Wpointer-arith -Wshorten-64-to-32 -Wwrite-strings -Wmissing-noreturn -Wno-constant-logical-operand -Wno-long-long -Wno-missing-field-initializers -Wno-overlength-strings -Wno-parentheses-equality -Wno-self-assign -Wno-tautological-compare -Wno-unused-parameter -Wno-unused-value -Wunused-variable -Wextra-tokens  -fno-common -pipe conftest.c  -L. -L/Users/dileepkumar/.rvm/rubies/ruby-2.7.0/lib -L/usr/local/opt/libyaml/lib -L/usr/local/opt/libksba/lib -L/usr/local/opt/readline/lib -L/usr/local/opt/zlib/lib -L/usr/local/opt/openssl@1.1/lib -L. -fstack-protector-strong -L/usr/local/lib -L/usr/local/opt/libyaml/lib -L/usr/local/opt/libksba/lib -L/usr/local/opt/readline/lib -L/usr/local/opt/zlib/lib -L/usr/local/opt/openssl@1.1/lib     -lruby.2.7   "
In file included from conftest.c:1:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby.h:33:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/ruby.h:29:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/defines.h:126:
In file included from /usr/local/include/stdio.h:64:
/usr/local/include/_stdio.h:93:16: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        unsigned char   *_base;
                        ^
/usr/local/include/_stdio.h:93:16: note: insert '_Nullable' if the pointer may be null
        unsigned char   *_base;
                        ^
                          _Nullable 
/usr/local/include/_stdio.h:93:16: note: insert '_Nonnull' if the pointer should never be null
        unsigned char   *_base;
                        ^
                          _Nonnull 
/usr/local/include/_stdio.h:138:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
/usr/local/include/_stdio.h:138:32: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
                                           _Nullable
/usr/local/include/_stdio.h:138:32: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
                                           _Nonnull
/usr/local/include/_stdio.h:138:40: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
/usr/local/include/_stdio.h:138:40: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
                                                   _Nullable
/usr/local/include/_stdio.h:138:40: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
                                                   _Nonnull
/usr/local/include/_stdio.h:139:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
/usr/local/include/_stdio.h:139:35: note: insert '_Nullable' if the pointer may be null
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
                                           _Nullable
/usr/local/include/_stdio.h:139:35: note: insert '_Nonnull' if the pointer should never be null
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
                                           _Nonnull
/usr/local/include/_stdio.h:140:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
/usr/local/include/_stdio.h:140:32: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
                                           _Nullable
/usr/local/include/_stdio.h:140:32: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
                                           _Nonnull
/usr/local/include/_stdio.h:140:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
/usr/local/include/_stdio.h:140:46: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
                                                         _Nullable
/usr/local/include/_stdio.h:140:46: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
                                                         _Nonnull
/usr/local/include/_stdio.h:144:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
/usr/local/include/_stdio.h:144:18: note: insert '_Nullable' if the pointer may be null
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
                          _Nullable 
/usr/local/include/_stdio.h:144:18: note: insert '_Nonnull' if the pointer should never be null
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
                          _Nonnull 
In file included from conftest.c:1:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby.h:33:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/ruby.h:29:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/defines.h:126:
/usr/local/include/stdio.h:67:13: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
extern FILE *__stdinp;
            ^
/usr/local/include/stdio.h:67:13: note: insert '_Nullable' if the pointer may be null
extern FILE *__stdinp;
            ^
              _Nullable 
/usr/local/include/stdio.h:67:13: note: insert '_Nonnull' if the pointer should never be null
extern FILE *__stdinp;
            ^
              _Nonnull 
/usr/local/include/stdio.h:386:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 int (* _Nullable)(void *, const char *, int),
                                        ^
/usr/local/include/stdio.h:386:41: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *, const char *, int),
                                        ^
                                         _Nullable
/usr/local/include/stdio.h:386:41: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *, const char *, int),
                                        ^
                                         _Nonnull
/usr/local/include/stdio.h:386:55: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
/usr/local/include/stdio.h:386:55: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
                                                       _Nullable
/usr/local/include/stdio.h:386:55: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
                                                       _Nonnull
/usr/local/include/stdio.h:387:44: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
/usr/local/include/stdio.h:387:44: note: insert '_Nullable' if the pointer may be null
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
                                            _Nullable
/usr/local/include/stdio.h:387:44: note: insert '_Nonnull' if the pointer should never be null
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
                                            _Nonnull
/usr/local/include/stdio.h:388:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 int (* _Nullable)(void *));
                                        ^
/usr/local/include/stdio.h:388:41: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *));
                                        ^
                                         _Nullable
/usr/local/include/stdio.h:388:41: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *));
                                        ^
                                         _Nonnull
/usr/local/include/stdio.h:384:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
FILE    *funopen(const void *,
        ^
/usr/local/include/stdio.h:384:6: note: insert '_Nullable' if the pointer may be null
FILE    *funopen(const void *,
        ^
          _Nullable 
/usr/local/include/stdio.h:384:6: note: insert '_Nonnull' if the pointer should never be null
FILE    *funopen(const void *,
        ^
          _Nonnull 
In file included from conftest.c:1:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby.h:33:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/ruby.h:29:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/defines.h:134:
/usr/local/include/stdlib.h:134:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   atof(const char *);
                         ^
/usr/local/include/stdlib.h:134:25: note: insert '_Nullable' if the pointer may be null
double   atof(const char *);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:134:25: note: insert '_Nonnull' if the pointer should never be null
double   atof(const char *);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:135:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      atoi(const char *);
                         ^
/usr/local/include/stdlib.h:135:22: note: insert '_Nullable' if the pointer may be null
int      atoi(const char *);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:135:22: note: insert '_Nonnull' if the pointer should never be null
int      atoi(const char *);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:136:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     atol(const char *);
                         ^
/usr/local/include/stdlib.h:136:23: note: insert '_Nullable' if the pointer may be null
long     atol(const char *);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:136:23: note: insert '_Nonnull' if the pointer should never be null
long     atol(const char *);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:139:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         atoll(const char *);
                          ^
/usr/local/include/stdlib.h:139:20: note: insert '_Nullable' if the pointer may be null
         atoll(const char *);
                          ^
                           _Nullable
/usr/local/include/stdlib.h:139:20: note: insert '_Nonnull' if the pointer should never be null
         atoll(const char *);
                          ^
                           _Nonnull
/usr/local/include/stdlib.h:141:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                            ^
/usr/local/include/stdlib.h:141:26: note: insert '_Nullable' if the pointer may be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                            ^
                              _Nullable 
/usr/local/include/stdlib.h:141:26: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                            ^
                              _Nonnull 
/usr/local/include/stdlib.h:141:45: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                                               ^
/usr/local/include/stdlib.h:141:45: note: insert '_Nullable' if the pointer may be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                                               ^
                                                 _Nullable 
/usr/local/include/stdlib.h:141:45: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                                               ^
                                                 _Nonnull 
/usr/local/include/stdlib.h:142:59: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                 ^
/usr/local/include/stdlib.h:142:59: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                 ^
                                                                  _Nullable
/usr/local/include/stdlib.h:142:59: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                 ^
                                                                  _Nonnull
/usr/local/include/stdlib.h:142:73: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                               ^
/usr/local/include/stdlib.h:142:73: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                               ^
                                                                                _Nullable
/usr/local/include/stdlib.h:142:73: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                               ^
                                                                                _Nonnull
/usr/local/include/stdlib.h:141:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch(const void *__key, const void *__base, size_t __nel,
        ^
/usr/local/include/stdlib.h:141:6: note: insert '_Nullable' if the pointer may be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
        ^
          _Nullable 
/usr/local/include/stdlib.h:141:6: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
        ^
          _Nonnull 
/usr/local/include/stdlib.h:147:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getenv(const char *);
                           ^
/usr/local/include/stdlib.h:147:25: note: insert '_Nullable' if the pointer may be null
char    *getenv(const char *);
                           ^
                            _Nullable
/usr/local/include/stdlib.h:147:25: note: insert '_Nonnull' if the pointer should never be null
char    *getenv(const char *);
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:147:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getenv(const char *);
        ^
/usr/local/include/stdlib.h:147:6: note: insert '_Nullable' if the pointer may be null
char    *getenv(const char *);
        ^
          _Nullable 
/usr/local/include/stdlib.h:147:6: note: insert '_Nonnull' if the pointer should never be null
char    *getenv(const char *);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:156:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mblen(const char *__s, size_t __n);
                          ^
/usr/local/include/stdlib.h:156:23: note: insert '_Nullable' if the pointer may be null
int      mblen(const char *__s, size_t __n);
                          ^
                            _Nullable 
/usr/local/include/stdlib.h:156:23: note: insert '_Nonnull' if the pointer should never be null
int      mblen(const char *__s, size_t __n);
                          ^
                            _Nonnull 
/usr/local/include/stdlib.h:157:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                          ^
/usr/local/include/stdlib.h:157:26: note: insert '_Nullable' if the pointer may be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                          ^
                            _Nullable
/usr/local/include/stdlib.h:157:26: note: insert '_Nonnull' if the pointer should never be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                          ^
                            _Nonnull
/usr/local/include/stdlib.h:157:52: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                                                    ^
/usr/local/include/stdlib.h:157:52: note: insert '_Nullable' if the pointer may be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                                                    ^
                                                      _Nullable
/usr/local/include/stdlib.h:157:52: note: insert '_Nonnull' if the pointer should never be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                                                    ^
                                                      _Nonnull
/usr/local/include/stdlib.h:158:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                        ^
/usr/local/include/stdlib.h:158:21: note: insert '_Nullable' if the pointer may be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                        ^
                          _Nullable
/usr/local/include/stdlib.h:158:21: note: insert '_Nonnull' if the pointer should never be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                        ^
                          _Nonnull
/usr/local/include/stdlib.h:158:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                                                 ^
/usr/local/include/stdlib.h:158:46: note: insert '_Nullable' if the pointer may be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                                                 ^
                                                   _Nullable
/usr/local/include/stdlib.h:158:46: note: insert '_Nonnull' if the pointer should never be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                                                 ^
                                                   _Nonnull
/usr/local/include/stdlib.h:160:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort(void *__base, size_t __nel, size_t __width,
                    ^
/usr/local/include/stdlib.h:160:18: note: insert '_Nullable' if the pointer may be null
void     qsort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nullable 
/usr/local/include/stdlib.h:160:18: note: insert '_Nonnull' if the pointer should never be null
void     qsort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nonnull 
/usr/local/include/stdlib.h:161:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
/usr/local/include/stdlib.h:161:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:161:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:161:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
/usr/local/include/stdlib.h:161:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:161:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:165:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                           ^
/usr/local/include/stdlib.h:165:27: note: insert '_Nullable' if the pointer may be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                           ^
                            _Nullable
/usr/local/include/stdlib.h:165:27: note: insert '_Nonnull' if the pointer should never be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:165:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                   ^
/usr/local/include/stdlib.h:165:35: note: insert '_Nullable' if the pointer may be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                   ^
                                    _Nullable
/usr/local/include/stdlib.h:165:35: note: insert '_Nonnull' if the pointer should never be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                   ^
                                    _Nonnull
/usr/local/include/stdlib.h:165:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                    ^
/usr/local/include/stdlib.h:165:36: note: insert '_Nullable' if the pointer may be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                    ^
                                     _Nullable
/usr/local/include/stdlib.h:165:36: note: insert '_Nonnull' if the pointer should never be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                    ^
                                     _Nonnull
/usr/local/include/stdlib.h:166:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                           ^
/usr/local/include/stdlib.h:166:26: note: insert '_Nullable' if the pointer may be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                           ^
                            _Nullable
/usr/local/include/stdlib.h:166:26: note: insert '_Nonnull' if the pointer should never be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:166:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                   ^
/usr/local/include/stdlib.h:166:34: note: insert '_Nullable' if the pointer may be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                   ^
                                    _Nullable
/usr/local/include/stdlib.h:166:34: note: insert '_Nonnull' if the pointer should never be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                   ^
                                    _Nonnull
/usr/local/include/stdlib.h:166:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                    ^
/usr/local/include/stdlib.h:166:35: note: insert '_Nullable' if the pointer may be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                    ^
                                     _Nullable
/usr/local/include/stdlib.h:166:35: note: insert '_Nonnull' if the pointer should never be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                    ^
                                     _Nonnull
/usr/local/include/stdlib.h:167:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     strtol(const char *__str, char **__endptr, int __base);
                           ^
/usr/local/include/stdlib.h:167:25: note: insert '_Nullable' if the pointer may be null
long     strtol(const char *__str, char **__endptr, int __base);
                           ^
                             _Nullable 
/usr/local/include/stdlib.h:167:25: note: insert '_Nonnull' if the pointer should never be null
long     strtol(const char *__str, char **__endptr, int __base);
                           ^
                             _Nonnull 
/usr/local/include/stdlib.h:167:38: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     strtol(const char *__str, char **__endptr, int __base);
                                        ^
/usr/local/include/stdlib.h:167:38: note: insert '_Nullable' if the pointer may be null
long     strtol(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nullable
/usr/local/include/stdlib.h:167:38: note: insert '_Nonnull' if the pointer should never be null
long     strtol(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nonnull
/usr/local/include/stdlib.h:167:39: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     strtol(const char *__str, char **__endptr, int __base);
                                         ^
/usr/local/include/stdlib.h:167:39: note: insert '_Nullable' if the pointer may be null
long     strtol(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nullable 
/usr/local/include/stdlib.h:167:39: note: insert '_Nonnull' if the pointer should never be null
long     strtol(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nonnull 
/usr/local/include/stdlib.h:169:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtold(const char *, char **);
                            ^
/usr/local/include/stdlib.h:169:22: note: insert '_Nullable' if the pointer may be null
         strtold(const char *, char **);
                            ^
                             _Nullable
/usr/local/include/stdlib.h:169:22: note: insert '_Nonnull' if the pointer should never be null
         strtold(const char *, char **);
                            ^
                             _Nonnull
/usr/local/include/stdlib.h:169:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtold(const char *, char **);
                                    ^
/usr/local/include/stdlib.h:169:30: note: insert '_Nullable' if the pointer may be null
         strtold(const char *, char **);
                                    ^
                                     _Nullable
/usr/local/include/stdlib.h:169:30: note: insert '_Nonnull' if the pointer should never be null
         strtold(const char *, char **);
                                    ^
                                     _Nonnull
/usr/local/include/stdlib.h:169:31: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtold(const char *, char **);
                                     ^
/usr/local/include/stdlib.h:169:31: note: insert '_Nullable' if the pointer may be null
         strtold(const char *, char **);
                                     ^
                                      _Nullable
/usr/local/include/stdlib.h:169:31: note: insert '_Nonnull' if the pointer should never be null
         strtold(const char *, char **);
                                     ^
                                      _Nonnull
/usr/local/include/stdlib.h:172:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoll(const char *__str, char **__endptr, int __base);
                            ^
/usr/local/include/stdlib.h:172:22: note: insert '_Nullable' if the pointer may be null
         strtoll(const char *__str, char **__endptr, int __base);
                            ^
                              _Nullable 
/usr/local/include/stdlib.h:172:22: note: insert '_Nonnull' if the pointer should never be null
         strtoll(const char *__str, char **__endptr, int __base);
                            ^
                              _Nonnull 
/usr/local/include/stdlib.h:172:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoll(const char *__str, char **__endptr, int __base);
                                         ^
/usr/local/include/stdlib.h:172:35: note: insert '_Nullable' if the pointer may be null
         strtoll(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nullable
/usr/local/include/stdlib.h:172:35: note: insert '_Nonnull' if the pointer should never be null
         strtoll(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nonnull
/usr/local/include/stdlib.h:172:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoll(const char *__str, char **__endptr, int __base);
                                          ^
/usr/local/include/stdlib.h:172:36: note: insert '_Nullable' if the pointer may be null
         strtoll(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nullable 
/usr/local/include/stdlib.h:172:36: note: insert '_Nonnull' if the pointer should never be null
         strtoll(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nonnull 
/usr/local/include/stdlib.h:175:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoul(const char *__str, char **__endptr, int __base);
                            ^
/usr/local/include/stdlib.h:175:22: note: insert '_Nullable' if the pointer may be null
         strtoul(const char *__str, char **__endptr, int __base);
                            ^
                              _Nullable 
/usr/local/include/stdlib.h:175:22: note: insert '_Nonnull' if the pointer should never be null
         strtoul(const char *__str, char **__endptr, int __base);
                            ^
                              _Nonnull 
/usr/local/include/stdlib.h:175:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoul(const char *__str, char **__endptr, int __base);
                                         ^
/usr/local/include/stdlib.h:175:35: note: insert '_Nullable' if the pointer may be null
         strtoul(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nullable
/usr/local/include/stdlib.h:175:35: note: insert '_Nonnull' if the pointer should never be null
         strtoul(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nonnull
/usr/local/include/stdlib.h:175:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoul(const char *__str, char **__endptr, int __base);
                                          ^
/usr/local/include/stdlib.h:175:36: note: insert '_Nullable' if the pointer may be null
         strtoul(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nullable 
/usr/local/include/stdlib.h:175:36: note: insert '_Nonnull' if the pointer should never be null
         strtoul(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nonnull 
/usr/local/include/stdlib.h:178:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoull(const char *__str, char **__endptr, int __base);
                             ^
/usr/local/include/stdlib.h:178:23: note: insert '_Nullable' if the pointer may be null
         strtoull(const char *__str, char **__endptr, int __base);
                             ^
                               _Nullable 
/usr/local/include/stdlib.h:178:23: note: insert '_Nonnull' if the pointer should never be null
         strtoull(const char *__str, char **__endptr, int __base);
                             ^
                               _Nonnull 
/usr/local/include/stdlib.h:178:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoull(const char *__str, char **__endptr, int __base);
                                          ^
/usr/local/include/stdlib.h:178:36: note: insert '_Nullable' if the pointer may be null
         strtoull(const char *__str, char **__endptr, int __base);
                                          ^
                                           _Nullable
/usr/local/include/stdlib.h:178:36: note: insert '_Nonnull' if the pointer should never be null
         strtoull(const char *__str, char **__endptr, int __base);
                                          ^
                                           _Nonnull
/usr/local/include/stdlib.h:178:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoull(const char *__str, char **__endptr, int __base);
                                           ^
/usr/local/include/stdlib.h:178:37: note: insert '_Nullable' if the pointer may be null
         strtoull(const char *__str, char **__endptr, int __base);
                                           ^
                                             _Nullable 
/usr/local/include/stdlib.h:178:37: note: insert '_Nonnull' if the pointer should never be null
         strtoull(const char *__str, char **__endptr, int __base);
                                           ^
                                             _Nonnull 
/usr/local/include/stdlib.h:190:24: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      system(const char *) __DARWIN_ALIAS_C(system);
                           ^
/usr/local/include/stdlib.h:190:24: note: insert '_Nullable' if the pointer may be null
int      system(const char *) __DARWIN_ALIAS_C(system);
                           ^
                            _Nullable
/usr/local/include/stdlib.h:190:24: note: insert '_Nonnull' if the pointer should never be null
int      system(const char *) __DARWIN_ALIAS_C(system);
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:194:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                       ^
/usr/local/include/stdlib.h:194:23: note: insert '_Nullable' if the pointer may be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                       ^
                         _Nullable
/usr/local/include/stdlib.h:194:23: note: insert '_Nonnull' if the pointer should never be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                       ^
                         _Nonnull
/usr/local/include/stdlib.h:194:51: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                                                   ^
/usr/local/include/stdlib.h:194:51: note: insert '_Nullable' if the pointer may be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                                                   ^
                                                     _Nullable
/usr/local/include/stdlib.h:194:51: note: insert '_Nonnull' if the pointer should never be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                                                   ^
                                                     _Nonnull
/usr/local/include/stdlib.h:195:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      wctomb(char *, wchar_t);
                     ^
/usr/local/include/stdlib.h:195:18: note: insert '_Nullable' if the pointer may be null
int      wctomb(char *, wchar_t);
                     ^
                      _Nullable
/usr/local/include/stdlib.h:195:18: note: insert '_Nonnull' if the pointer should never be null
int      wctomb(char *, wchar_t);
                     ^
                      _Nonnull
/usr/local/include/stdlib.h:199:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     a64l(const char *);
                         ^
/usr/local/include/stdlib.h:199:23: note: insert '_Nullable' if the pointer may be null
long     a64l(const char *);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:199:23: note: insert '_Nonnull' if the pointer should never be null
long     a64l(const char *);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:201:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
/usr/local/include/stdlib.h:201:29: note: insert '_Nullable' if the pointer may be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nullable 
/usr/local/include/stdlib.h:201:29: note: insert '_Nonnull' if the pointer should never be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nonnull 
/usr/local/include/stdlib.h:201:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
/usr/local/include/stdlib.h:201:46: note: insert '_Nullable' if the pointer may be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nullable 
/usr/local/include/stdlib.h:201:46: note: insert '_Nonnull' if the pointer should never be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nonnull 
/usr/local/include/stdlib.h:201:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
/usr/local/include/stdlib.h:201:6: note: insert '_Nullable' if the pointer may be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nullable 
/usr/local/include/stdlib.h:201:6: note: insert '_Nonnull' if the pointer should never be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nonnull 
/usr/local/include/stdlib.h:202:31: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
double   erand48(unsigned short[3]);
                               ^
/usr/local/include/stdlib.h:202:31: note: insert '_Nullable' if the array parameter may be null
double   erand48(unsigned short[3]);
                               ^
                                _Nullable 
/usr/local/include/stdlib.h:202:31: note: insert '_Nonnull' if the array parameter should never be null
double   erand48(unsigned short[3]);
                               ^
                                _Nonnull 
/usr/local/include/stdlib.h:203:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
/usr/local/include/stdlib.h:203:29: note: insert '_Nullable' if the pointer may be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nullable 
/usr/local/include/stdlib.h:203:29: note: insert '_Nonnull' if the pointer should never be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nonnull 
/usr/local/include/stdlib.h:203:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
/usr/local/include/stdlib.h:203:46: note: insert '_Nullable' if the pointer may be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nullable 
/usr/local/include/stdlib.h:203:46: note: insert '_Nonnull' if the pointer should never be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nonnull 
/usr/local/include/stdlib.h:203:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
/usr/local/include/stdlib.h:203:6: note: insert '_Nullable' if the pointer may be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nullable 
/usr/local/include/stdlib.h:203:6: note: insert '_Nonnull' if the pointer should never be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nonnull 
/usr/local/include/stdlib.h:204:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *gcvt(double, int, char *); /* LEGACY */
                                ^
/usr/local/include/stdlib.h:204:30: note: insert '_Nullable' if the pointer may be null
char    *gcvt(double, int, char *); /* LEGACY */
                                ^
                                 _Nullable
/usr/local/include/stdlib.h:204:30: note: insert '_Nonnull' if the pointer should never be null
char    *gcvt(double, int, char *); /* LEGACY */
                                ^
                                 _Nonnull
/usr/local/include/stdlib.h:204:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *gcvt(double, int, char *); /* LEGACY */
        ^
/usr/local/include/stdlib.h:204:6: note: insert '_Nullable' if the pointer may be null
char    *gcvt(double, int, char *); /* LEGACY */
        ^
          _Nullable 
/usr/local/include/stdlib.h:204:6: note: insert '_Nonnull' if the pointer should never be null
char    *gcvt(double, int, char *); /* LEGACY */
        ^
          _Nonnull 
/usr/local/include/stdlib.h:205:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                        ^
/usr/local/include/stdlib.h:205:21: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                        ^
                         _Nullable
/usr/local/include/stdlib.h:205:21: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                        ^
                         _Nonnull
/usr/local/include/stdlib.h:205:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                         ^
/usr/local/include/stdlib.h:205:22: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:205:22: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:205:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                 ^
/usr/local/include/stdlib.h:205:30: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                 ^
                                   _Nullable
/usr/local/include/stdlib.h:205:30: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                 ^
                                   _Nonnull
/usr/local/include/stdlib.h:205:38: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                         ^
/usr/local/include/stdlib.h:205:38: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                         ^
                                          _Nullable
/usr/local/include/stdlib.h:205:38: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                         ^
                                          _Nonnull
/usr/local/include/stdlib.h:205:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                                 ^
/usr/local/include/stdlib.h:205:46: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:205:46: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:205:47: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                                  ^
/usr/local/include/stdlib.h:205:47: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                                  ^
                                                   _Nullable
/usr/local/include/stdlib.h:205:47: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                                  ^
                                                   _Nonnull
/usr/local/include/stdlib.h:208:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
                                  ^
/usr/local/include/stdlib.h:208:32: note: insert '_Nullable' if the pointer may be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
                                  ^
                                   _Nullable
/usr/local/include/stdlib.h:208:32: note: insert '_Nonnull' if the pointer should never be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
                                  ^
                                   _Nonnull
/usr/local/include/stdlib.h:208:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
        ^
/usr/local/include/stdlib.h:208:6: note: insert '_Nullable' if the pointer may be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
        ^
          _Nullable 
/usr/local/include/stdlib.h:208:6: note: insert '_Nonnull' if the pointer should never be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
        ^
          _Nonnull 
/usr/local/include/stdlib.h:212:29: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
long     jrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
/usr/local/include/stdlib.h:212:29: note: insert '_Nullable' if the array parameter may be null
long     jrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nullable 
/usr/local/include/stdlib.h:212:29: note: insert '_Nonnull' if the array parameter should never be null
long     jrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nonnull 
/usr/local/include/stdlib.h:213:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *l64a(long);
        ^
/usr/local/include/stdlib.h:213:6: note: insert '_Nullable' if the pointer may be null
char    *l64a(long);
        ^
          _Nullable 
/usr/local/include/stdlib.h:213:6: note: insert '_Nonnull' if the pointer should never be null
char    *l64a(long);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:214:29: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
void     lcong48(unsigned short[7]);
                               ^
/usr/local/include/stdlib.h:214:29: note: insert '_Nullable' if the array parameter may be null
void     lcong48(unsigned short[7]);
                               ^
                                _Nullable 
/usr/local/include/stdlib.h:214:29: note: insert '_Nonnull' if the array parameter should never be null
void     lcong48(unsigned short[7]);
                               ^
                                _Nonnull 
/usr/local/include/stdlib.h:216:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *mktemp(char *);
                     ^
/usr/local/include/stdlib.h:216:19: note: insert '_Nullable' if the pointer may be null
char    *mktemp(char *);
                     ^
                      _Nullable
/usr/local/include/stdlib.h:216:19: note: insert '_Nonnull' if the pointer should never be null
char    *mktemp(char *);
                     ^
                      _Nonnull
/usr/local/include/stdlib.h:216:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *mktemp(char *);
        ^
/usr/local/include/stdlib.h:216:6: note: insert '_Nullable' if the pointer may be null
char    *mktemp(char *);
        ^
          _Nullable 
/usr/local/include/stdlib.h:216:6: note: insert '_Nonnull' if the pointer should never be null
char    *mktemp(char *);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:217:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mkstemp(char *);
                      ^
/usr/local/include/stdlib.h:217:19: note: insert '_Nullable' if the pointer may be null
int      mkstemp(char *);
                      ^
                       _Nullable
/usr/local/include/stdlib.h:217:19: note: insert '_Nonnull' if the pointer should never be null
int      mkstemp(char *);
                      ^
                       _Nonnull
/usr/local/include/stdlib.h:219:29: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
long     nrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
/usr/local/include/stdlib.h:219:29: note: insert '_Nullable' if the array parameter may be null
long     nrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nullable 
/usr/local/include/stdlib.h:219:29: note: insert '_Nonnull' if the array parameter should never be null
long     nrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nonnull 
/usr/local/include/stdlib.h:221:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ptsname(int);
        ^
/usr/local/include/stdlib.h:221:6: note: insert '_Nullable' if the pointer may be null
char    *ptsname(int);
        ^
          _Nullable 
/usr/local/include/stdlib.h:221:6: note: insert '_Nonnull' if the pointer should never be null
char    *ptsname(int);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:224:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int ptsname_r(int fildes, char *buffer, size_t buflen) __API_AVAILABLE(macos(10.13.4), ios(11.3), tvos(11.3), watchos(4.3));
                               ^
/usr/local/include/stdlib.h:224:32: note: insert '_Nullable' if the pointer may be null
int ptsname_r(int fildes, char *buffer, size_t buflen) __API_AVAILABLE(macos(10.13.4), ios(11.3), tvos(11.3), watchos(4.3));
                               ^
                                 _Nullable 
/usr/local/include/stdlib.h:224:32: note: insert '_Nonnull' if the pointer should never be null
int ptsname_r(int fildes, char *buffer, size_t buflen) __API_AVAILABLE(macos(10.13.4), ios(11.3), tvos(11.3), watchos(4.3));
                               ^
                                 _Nonnull 
/usr/local/include/stdlib.h:227:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      putenv(char *) __DARWIN_ALIAS(putenv);
                     ^
/usr/local/include/stdlib.h:227:18: note: insert '_Nullable' if the pointer may be null
int      putenv(char *) __DARWIN_ALIAS(putenv);
                     ^
                      _Nullable
/usr/local/include/stdlib.h:227:18: note: insert '_Nonnull' if the pointer should never be null
int      putenv(char *) __DARWIN_ALIAS(putenv);
                     ^
                      _Nonnull
/usr/local/include/stdlib.h:229:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      rand_r(unsigned *) __swift_unavailable("Use arc4random instead.");
                         ^
/usr/local/include/stdlib.h:229:22: note: insert '_Nullable' if the pointer may be null
int      rand_r(unsigned *) __swift_unavailable("Use arc4random instead.");
                         ^
                          _Nullable
/usr/local/include/stdlib.h:229:22: note: insert '_Nonnull' if the pointer should never be null
int      rand_r(unsigned *) __swift_unavailable("Use arc4random instead.");
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:231:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                             ^
/usr/local/include/stdlib.h:231:27: note: insert '_Nullable' if the pointer may be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                             ^
                               _Nullable
/usr/local/include/stdlib.h:231:27: note: insert '_Nonnull' if the pointer should never be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                             ^
                               _Nonnull
/usr/local/include/stdlib.h:231:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                                                ^
/usr/local/include/stdlib.h:231:46: note: insert '_Nullable' if the pointer may be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                                                ^
                                                  _Nullable
/usr/local/include/stdlib.h:231:46: note: insert '_Nonnull' if the pointer should never be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                                                ^
                                                  _Nonnull
/usr/local/include/stdlib.h:231:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
        ^
/usr/local/include/stdlib.h:231:6: note: insert '_Nullable' if the pointer may be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
        ^
          _Nullable 
/usr/local/include/stdlib.h:231:6: note: insert '_Nonnull' if the pointer should never be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:236:24: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
        *seed48(unsigned short[3]);
                              ^
/usr/local/include/stdlib.h:236:24: note: insert '_Nullable' if the array parameter may be null
        *seed48(unsigned short[3]);
                              ^
                               _Nullable 
/usr/local/include/stdlib.h:236:24: note: insert '_Nonnull' if the array parameter should never be null
        *seed48(unsigned short[3]);
                              ^
                               _Nonnull 
/usr/local/include/stdlib.h:236:2: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        *seed48(unsigned short[3]);
        ^
/usr/local/include/stdlib.h:236:2: note: insert '_Nullable' if the pointer may be null
        *seed48(unsigned short[3]);
        ^
          _Nullable 
/usr/local/include/stdlib.h:236:2: note: insert '_Nonnull' if the pointer should never be null
        *seed48(unsigned short[3]);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:237:24: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                           ^
/usr/local/include/stdlib.h:237:24: note: insert '_Nullable' if the pointer may be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                           ^
                             _Nullable
/usr/local/include/stdlib.h:237:24: note: insert '_Nonnull' if the pointer should never be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                           ^
                             _Nonnull
/usr/local/include/stdlib.h:237:45: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                                                ^
/usr/local/include/stdlib.h:237:45: note: insert '_Nullable' if the pointer may be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                                                ^
                                                  _Nullable
/usr/local/include/stdlib.h:237:45: note: insert '_Nonnull' if the pointer should never be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                                                ^
                                                  _Nonnull
/usr/local/include/stdlib.h:239:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     setkey(const char *) __DARWIN_ALIAS(setkey);
                           ^
/usr/local/include/stdlib.h:239:25: note: insert '_Nullable' if the pointer may be null
void     setkey(const char *) __DARWIN_ALIAS(setkey);
                           ^
                            _Nullable
/usr/local/include/stdlib.h:239:25: note: insert '_Nonnull' if the pointer should never be null
void     setkey(const char *) __DARWIN_ALIAS(setkey);
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:243:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *setstate(const char *);
                             ^
/usr/local/include/stdlib.h:243:27: note: insert '_Nullable' if the pointer may be null
char    *setstate(const char *);
                             ^
                              _Nullable
/usr/local/include/stdlib.h:243:27: note: insert '_Nonnull' if the pointer should never be null
char    *setstate(const char *);
                             ^
                              _Nonnull
/usr/local/include/stdlib.h:243:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *setstate(const char *);
        ^
/usr/local/include/stdlib.h:243:6: note: insert '_Nullable' if the pointer may be null
char    *setstate(const char *);
        ^
          _Nullable 
/usr/local/include/stdlib.h:243:6: note: insert '_Nonnull' if the pointer should never be null
char    *setstate(const char *);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:252:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      unsetenv(const char *) __DARWIN_ALIAS(unsetenv);
                             ^
/usr/local/include/stdlib.h:252:26: note: insert '_Nullable' if the pointer may be null
int      unsetenv(const char *) __DARWIN_ALIAS(unsetenv);
                             ^
                              _Nullable
/usr/local/include/stdlib.h:252:26: note: insert '_Nonnull' if the pointer should never be null
int      unsetenv(const char *) __DARWIN_ALIAS(unsetenv);
                             ^
                              _Nonnull
/usr/local/include/stdlib.h:265:42: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     arc4random_addrandom(unsigned char * /*dat*/, int /*datlen*/)
                                            ^
/usr/local/include/stdlib.h:265:42: note: insert '_Nullable' if the pointer may be null
void     arc4random_addrandom(unsigned char * /*dat*/, int /*datlen*/)
                                            ^
                                              _Nullable
/usr/local/include/stdlib.h:265:42: note: insert '_Nonnull' if the pointer should never be null
void     arc4random_addrandom(unsigned char * /*dat*/, int /*datlen*/)
                                            ^
                                              _Nonnull
/usr/local/include/stdlib.h:270:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     arc4random_buf(void * __buf, size_t __nbytes) __OSX_AVAILABLE_STARTING(__MAC_10_7, __IPHONE_4_3);
                             ^
/usr/local/include/stdlib.h:270:27: note: insert '_Nullable' if the pointer may be null
void     arc4random_buf(void * __buf, size_t __nbytes) __OSX_AVAILABLE_STARTING(__MAC_10_7, __IPHONE_4_3);
                             ^
                               _Nullable
/usr/local/include/stdlib.h:270:27: note: insert '_Nonnull' if the pointer should never be null
void     arc4random_buf(void * __buf, size_t __nbytes) __OSX_AVAILABLE_STARTING(__MAC_10_7, __IPHONE_4_3);
                             ^
                               _Nonnull
/usr/local/include/stdlib.h:276:28: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                              ^
/usr/local/include/stdlib.h:276:28: note: insert '_Nullable' if the pointer may be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                              ^
                                _Nullable 
/usr/local/include/stdlib.h:276:28: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                              ^
                                _Nonnull 
/usr/local/include/stdlib.h:276:47: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                                                 ^
/usr/local/include/stdlib.h:276:47: note: insert '_Nullable' if the pointer may be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                                                 ^
                                                   _Nullable 
/usr/local/include/stdlib.h:276:47: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                                                 ^
                                                   _Nonnull 
/usr/local/include/stdlib.h:277:59: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                 ^
/usr/local/include/stdlib.h:277:59: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                 ^
                                                                  _Nullable
/usr/local/include/stdlib.h:277:59: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                 ^
                                                                  _Nonnull
/usr/local/include/stdlib.h:277:73: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                               ^
/usr/local/include/stdlib.h:277:73: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                               ^
                                                                                _Nullable
/usr/local/include/stdlib.h:277:73: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                               ^
                                                                                _Nonnull
/usr/local/include/stdlib.h:276:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
        ^
/usr/local/include/stdlib.h:276:6: note: insert '_Nullable' if the pointer may be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
        ^
          _Nullable 
/usr/local/include/stdlib.h:276:6: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
        ^
          _Nonnull 
/usr/local/include/stdlib.h:281:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *cgetcap(char *, const char *, int);
                      ^
/usr/local/include/stdlib.h:281:20: note: insert '_Nullable' if the pointer may be null
char    *cgetcap(char *, const char *, int);
                      ^
                       _Nullable
/usr/local/include/stdlib.h:281:20: note: insert '_Nonnull' if the pointer should never be null
char    *cgetcap(char *, const char *, int);
                      ^
                       _Nonnull
/usr/local/include/stdlib.h:281:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *cgetcap(char *, const char *, int);
                                    ^
/usr/local/include/stdlib.h:281:34: note: insert '_Nullable' if the pointer may be null
char    *cgetcap(char *, const char *, int);
                                    ^
                                     _Nullable
/usr/local/include/stdlib.h:281:34: note: insert '_Nonnull' if the pointer should never be null
char    *cgetcap(char *, const char *, int);
                                    ^
                                     _Nonnull
/usr/local/include/stdlib.h:281:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *cgetcap(char *, const char *, int);
        ^
/usr/local/include/stdlib.h:281:6: note: insert '_Nullable' if the pointer may be null
char    *cgetcap(char *, const char *, int);
        ^
          _Nullable 
/usr/local/include/stdlib.h:281:6: note: insert '_Nonnull' if the pointer should never be null
char    *cgetcap(char *, const char *, int);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:283:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                      ^
/usr/local/include/stdlib.h:283:19: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                      ^
                       _Nullable
/usr/local/include/stdlib.h:283:19: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                      ^
                       _Nonnull
/usr/local/include/stdlib.h:283:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                       ^
/usr/local/include/stdlib.h:283:20: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                       ^
                        _Nullable
/usr/local/include/stdlib.h:283:20: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                       ^
                        _Nonnull
/usr/local/include/stdlib.h:283:28: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                               ^
/usr/local/include/stdlib.h:283:28: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                               ^
                                _Nullable
/usr/local/include/stdlib.h:283:28: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                               ^
                                _Nonnull
/usr/local/include/stdlib.h:283:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                                ^
/usr/local/include/stdlib.h:283:29: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                                ^
                                 _Nullable
/usr/local/include/stdlib.h:283:29: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                                ^
                                 _Nonnull
/usr/local/include/stdlib.h:283:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                                              ^
/usr/local/include/stdlib.h:283:43: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                                              ^
                                               _Nullable
/usr/local/include/stdlib.h:283:43: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                                              ^
                                               _Nonnull
/usr/local/include/stdlib.h:284:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                        ^
/usr/local/include/stdlib.h:284:21: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                        ^
                         _Nullable
/usr/local/include/stdlib.h:284:21: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                        ^
                         _Nonnull
/usr/local/include/stdlib.h:284:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                         ^
/usr/local/include/stdlib.h:284:22: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:284:22: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:284:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                                 ^
/usr/local/include/stdlib.h:284:30: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                                 ^
                                  _Nullable
/usr/local/include/stdlib.h:284:30: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                                 ^
                                  _Nonnull
/usr/local/include/stdlib.h:284:31: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                                  ^
/usr/local/include/stdlib.h:284:31: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                                  ^
                                   _Nullable
/usr/local/include/stdlib.h:284:31: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                                  ^
                                   _Nonnull
/usr/local/include/stdlib.h:285:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetmatch(const char *, const char *);
                              ^
/usr/local/include/stdlib.h:285:27: note: insert '_Nullable' if the pointer may be null
int      cgetmatch(const char *, const char *);
                              ^
                               _Nullable
/usr/local/include/stdlib.h:285:27: note: insert '_Nonnull' if the pointer should never be null
int      cgetmatch(const char *, const char *);
                              ^
                               _Nonnull
/usr/local/include/stdlib.h:285:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetmatch(const char *, const char *);
                                            ^
/usr/local/include/stdlib.h:285:41: note: insert '_Nullable' if the pointer may be null
int      cgetmatch(const char *, const char *);
                                            ^
                                             _Nullable
/usr/local/include/stdlib.h:285:41: note: insert '_Nonnull' if the pointer should never be null
int      cgetmatch(const char *, const char *);
                                            ^
                                             _Nonnull
/usr/local/include/stdlib.h:286:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                       ^
/usr/local/include/stdlib.h:286:20: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                       ^
                        _Nullable
/usr/local/include/stdlib.h:286:20: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                       ^
                        _Nonnull
/usr/local/include/stdlib.h:286:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                        ^
/usr/local/include/stdlib.h:286:21: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                        ^
                         _Nullable
/usr/local/include/stdlib.h:286:21: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                        ^
                         _Nonnull
/usr/local/include/stdlib.h:286:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                                ^
/usr/local/include/stdlib.h:286:29: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                                ^
                                 _Nullable
/usr/local/include/stdlib.h:286:29: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                                ^
                                 _Nonnull
/usr/local/include/stdlib.h:286:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                                 ^
/usr/local/include/stdlib.h:286:30: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                                 ^
                                  _Nullable
/usr/local/include/stdlib.h:286:30: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                                 ^
                                  _Nonnull
/usr/local/include/stdlib.h:287:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnum(char *, const char *, long *);
                      ^
/usr/local/include/stdlib.h:287:19: note: insert '_Nullable' if the pointer may be null
int      cgetnum(char *, const char *, long *);
                      ^
                       _Nullable
/usr/local/include/stdlib.h:287:19: note: insert '_Nonnull' if the pointer should never be null
int      cgetnum(char *, const char *, long *);
                      ^
                       _Nonnull
/usr/local/include/stdlib.h:287:33: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnum(char *, const char *, long *);
                                    ^
/usr/local/include/stdlib.h:287:33: note: insert '_Nullable' if the pointer may be null
int      cgetnum(char *, const char *, long *);
                                    ^
                                     _Nullable
/usr/local/include/stdlib.h:287:33: note: insert '_Nonnull' if the pointer should never be null
int      cgetnum(char *, const char *, long *);
                                    ^
                                     _Nonnull
/usr/local/include/stdlib.h:287:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnum(char *, const char *, long *);
                                            ^
/usr/local/include/stdlib.h:287:41: note: insert '_Nullable' if the pointer may be null
int      cgetnum(char *, const char *, long *);
                                            ^
                                             _Nullable
/usr/local/include/stdlib.h:287:41: note: insert '_Nonnull' if the pointer should never be null
int      cgetnum(char *, const char *, long *);
                                            ^
                                             _Nonnull
/usr/local/include/stdlib.h:288:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetset(const char *);
                            ^
/usr/local/include/stdlib.h:288:25: note: insert '_Nullable' if the pointer may be null
int      cgetset(const char *);
                            ^
                             _Nullable
/usr/local/include/stdlib.h:288:25: note: insert '_Nonnull' if the pointer should never be null
int      cgetset(const char *);
                            ^
                             _Nonnull
/usr/local/include/stdlib.h:289:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                      ^
/usr/local/include/stdlib.h:289:19: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                      ^
                       _Nullable
/usr/local/include/stdlib.h:289:19: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                      ^
                       _Nonnull
/usr/local/include/stdlib.h:289:33: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                                    ^
/usr/local/include/stdlib.h:289:33: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                                    ^
                                     _Nullable
/usr/local/include/stdlib.h:289:33: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                                    ^
                                     _Nonnull
/usr/local/include/stdlib.h:289:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                                            ^
/usr/local/include/stdlib.h:289:41: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                                            ^
                                             _Nullable
/usr/local/include/stdlib.h:289:41: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                                            ^
                                             _Nonnull
/usr/local/include/stdlib.h:289:42: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                                             ^
/usr/local/include/stdlib.h:289:42: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                                             ^
                                              _Nullable
/usr/local/include/stdlib.h:289:42: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                                             ^
                                              _Nonnull
/usr/local/include/stdlib.h:290:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                       ^
/usr/local/include/stdlib.h:290:20: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                       ^
                        _Nullable
/usr/local/include/stdlib.h:290:20: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                       ^
                        _Nonnull
/usr/local/include/stdlib.h:290:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                                     ^
/usr/local/include/stdlib.h:290:34: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                                     ^
                                      _Nullable
/usr/local/include/stdlib.h:290:34: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                                     ^
                                      _Nonnull
/usr/local/include/stdlib.h:290:42: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                                             ^
/usr/local/include/stdlib.h:290:42: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                                             ^
                                              _Nullable
/usr/local/include/stdlib.h:290:42: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                                             ^
                                              _Nonnull
/usr/local/include/stdlib.h:290:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                                              ^
/usr/local/include/stdlib.h:290:43: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                                              ^
                                               _Nullable
/usr/local/include/stdlib.h:290:43: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                                              ^
                                               _Nonnull
/usr/local/include/stdlib.h:293:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *devname(dev_t, mode_t);
        ^
/usr/local/include/stdlib.h:293:6: note: insert '_Nullable' if the pointer may be null
char    *devname(dev_t, mode_t);
        ^
          _Nullable 
/usr/local/include/stdlib.h:293:6: note: insert '_Nonnull' if the pointer should never be null
char    *devname(dev_t, mode_t);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:294:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *devname_r(dev_t, mode_t, char *buf, int len);
                                       ^
/usr/local/include/stdlib.h:294:37: note: insert '_Nullable' if the pointer may be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
                                       ^
                                         _Nullable 
/usr/local/include/stdlib.h:294:37: note: insert '_Nonnull' if the pointer should never be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
                                       ^
                                         _Nonnull 
/usr/local/include/stdlib.h:294:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *devname_r(dev_t, mode_t, char *buf, int len);
        ^
/usr/local/include/stdlib.h:294:6: note: insert '_Nullable' if the pointer may be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
        ^
          _Nullable 
/usr/local/include/stdlib.h:294:6: note: insert '_Nonnull' if the pointer should never be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:295:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getbsize(int *, long *);
                      ^
/usr/local/include/stdlib.h:295:20: note: insert '_Nullable' if the pointer may be null
char    *getbsize(int *, long *);
                      ^
                       _Nullable
/usr/local/include/stdlib.h:295:20: note: insert '_Nonnull' if the pointer should never be null
char    *getbsize(int *, long *);
                      ^
                       _Nonnull
/usr/local/include/stdlib.h:295:28: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getbsize(int *, long *);
                              ^
/usr/local/include/stdlib.h:295:28: note: insert '_Nullable' if the pointer may be null
char    *getbsize(int *, long *);
                              ^
                               _Nullable
/usr/local/include/stdlib.h:295:28: note: insert '_Nonnull' if the pointer should never be null
char    *getbsize(int *, long *);
                              ^
                               _Nonnull
/usr/local/include/stdlib.h:295:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getbsize(int *, long *);
        ^
/usr/local/include/stdlib.h:295:6: note: insert '_Nullable' if the pointer may be null
char    *getbsize(int *, long *);
        ^
          _Nullable 
/usr/local/include/stdlib.h:295:6: note: insert '_Nonnull' if the pointer should never be null
char    *getbsize(int *, long *);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:296:24: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
int      getloadavg(double [], int);
                           ^
/usr/local/include/stdlib.h:296:24: note: insert '_Nullable' if the array parameter may be null
int      getloadavg(double [], int);
                           ^
                            _Nullable
/usr/local/include/stdlib.h:296:24: note: insert '_Nonnull' if the array parameter should never be null
int      getloadavg(double [], int);
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:298:2: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        *getprogname(void);
        ^
/usr/local/include/stdlib.h:298:2: note: insert '_Nullable' if the pointer may be null
        *getprogname(void);
        ^
          _Nullable 
/usr/local/include/stdlib.h:298:2: note: insert '_Nonnull' if the pointer should never be null
        *getprogname(void);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:299:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     setprogname(const char *);
                                ^
/usr/local/include/stdlib.h:299:30: note: insert '_Nullable' if the pointer may be null
void     setprogname(const char *);
                                ^
                                 _Nullable
/usr/local/include/stdlib.h:299:30: note: insert '_Nonnull' if the pointer should never be null
void     setprogname(const char *);
                                ^
                                 _Nonnull
/usr/local/include/stdlib.h:309:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      heapsort(void *__base, size_t __nel, size_t __width,
                       ^
/usr/local/include/stdlib.h:309:20: note: insert '_Nullable' if the pointer may be null
int      heapsort(void *__base, size_t __nel, size_t __width,
                       ^
                         _Nullable 
/usr/local/include/stdlib.h:309:20: note: insert '_Nonnull' if the pointer should never be null
int      heapsort(void *__base, size_t __nel, size_t __width,
                       ^
                         _Nonnull 
/usr/local/include/stdlib.h:310:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
/usr/local/include/stdlib.h:310:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:310:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:310:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
/usr/local/include/stdlib.h:310:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:310:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:312:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      heapsort_b(void *__base, size_t __nel, size_t __width,
                         ^
/usr/local/include/stdlib.h:312:22: note: insert '_Nullable' if the pointer may be null
int      heapsort_b(void *__base, size_t __nel, size_t __width,
                         ^
                           _Nullable 
/usr/local/include/stdlib.h:312:22: note: insert '_Nonnull' if the pointer should never be null
int      heapsort_b(void *__base, size_t __nel, size_t __width,
                         ^
                           _Nonnull 
/usr/local/include/stdlib.h:313:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
/usr/local/include/stdlib.h:313:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:313:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:313:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
/usr/local/include/stdlib.h:313:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:313:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:316:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mergesort(void *__base, size_t __nel, size_t __width,
                        ^
/usr/local/include/stdlib.h:316:21: note: insert '_Nullable' if the pointer may be null
int      mergesort(void *__base, size_t __nel, size_t __width,
                        ^
                          _Nullable 
/usr/local/include/stdlib.h:316:21: note: insert '_Nonnull' if the pointer should never be null
int      mergesort(void *__base, size_t __nel, size_t __width,
                        ^
                          _Nonnull 
/usr/local/include/stdlib.h:317:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
/usr/local/include/stdlib.h:317:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:317:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:317:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
/usr/local/include/stdlib.h:317:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:317:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:319:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mergesort_b(void *__base, size_t __nel, size_t __width,
                          ^
/usr/local/include/stdlib.h:319:23: note: insert '_Nullable' if the pointer may be null
int      mergesort_b(void *__base, size_t __nel, size_t __width,
                          ^
                            _Nullable 
/usr/local/include/stdlib.h:319:23: note: insert '_Nonnull' if the pointer should never be null
int      mergesort_b(void *__base, size_t __nel, size_t __width,
                          ^
                            _Nonnull 
/usr/local/include/stdlib.h:320:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
/usr/local/include/stdlib.h:320:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:320:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:320:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
/usr/local/include/stdlib.h:320:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:320:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:323:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort(void *__base, size_t __nel, size_t __width,
                    ^
/usr/local/include/stdlib.h:323:18: note: insert '_Nullable' if the pointer may be null
void     psort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nullable 
/usr/local/include/stdlib.h:323:18: note: insert '_Nonnull' if the pointer should never be null
void     psort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nonnull 
/usr/local/include/stdlib.h:324:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *))
                                                 ^
/usr/local/include/stdlib.h:324:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *))
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:324:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *))
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:324:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *))
                                                               ^
/usr/local/include/stdlib.h:324:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *))
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:324:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *))
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:327:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort_b(void *__base, size_t __nel, size_t __width,
                      ^
/usr/local/include/stdlib.h:327:20: note: insert '_Nullable' if the pointer may be null
void     psort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nullable 
/usr/local/include/stdlib.h:327:20: note: insert '_Nonnull' if the pointer should never be null
void     psort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nonnull 
/usr/local/include/stdlib.h:328:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
/usr/local/include/stdlib.h:328:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:328:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:328:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
/usr/local/include/stdlib.h:328:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:328:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:331:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
/usr/local/include/stdlib.h:331:20: note: insert '_Nullable' if the pointer may be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nullable 
/usr/local/include/stdlib.h:331:20: note: insert '_Nonnull' if the pointer should never be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nonnull 
/usr/local/include/stdlib.h:331:64: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
/usr/local/include/stdlib.h:331:64: note: insert '_Nullable' if the pointer may be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nullable
/usr/local/include/stdlib.h:331:64: note: insert '_Nonnull' if the pointer should never be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nonnull
/usr/local/include/stdlib.h:332:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                           ^
/usr/local/include/stdlib.h:332:37: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                           ^
                                            _Nullable
/usr/local/include/stdlib.h:332:37: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                           ^
                                            _Nonnull
/usr/local/include/stdlib.h:332:51: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                                         ^
/usr/local/include/stdlib.h:332:51: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                                         ^
                                                          _Nullable
/usr/local/include/stdlib.h:332:51: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                                         ^
                                                          _Nonnull
/usr/local/include/stdlib.h:332:65: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                                                       ^
/usr/local/include/stdlib.h:332:65: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                                                       ^
                                                                        _Nullable
/usr/local/include/stdlib.h:332:65: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                                                       ^
                                                                        _Nonnull
/usr/local/include/stdlib.h:335:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort_b(void *__base, size_t __nel, size_t __width,
                      ^
/usr/local/include/stdlib.h:335:20: note: insert '_Nullable' if the pointer may be null
void     qsort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nullable 
/usr/local/include/stdlib.h:335:20: note: insert '_Nonnull' if the pointer should never be null
void     qsort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nonnull 
/usr/local/include/stdlib.h:336:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
/usr/local/include/stdlib.h:336:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:336:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:336:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
/usr/local/include/stdlib.h:336:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:336:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:339:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
/usr/local/include/stdlib.h:339:20: note: insert '_Nullable' if the pointer may be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nullable 
/usr/local/include/stdlib.h:339:20: note: insert '_Nonnull' if the pointer should never be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nonnull 
/usr/local/include/stdlib.h:339:64: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
/usr/local/include/stdlib.h:339:64: note: insert '_Nullable' if the pointer may be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nullable
/usr/local/include/stdlib.h:339:64: note: insert '_Nonnull' if the pointer should never be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nonnull
/usr/local/include/stdlib.h:340:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                           ^
/usr/local/include/stdlib.h:340:37: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                           ^
                                            _Nullable
/usr/local/include/stdlib.h:340:37: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                           ^
                                            _Nonnull
/usr/local/include/stdlib.h:340:51: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                         ^
/usr/local/include/stdlib.h:340:51: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                         ^
                                                          _Nullable
/usr/local/include/stdlib.h:340:51: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                         ^
                                                          _Nonnull
/usr/local/include/stdlib.h:340:65: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                                       ^
/usr/local/include/stdlib.h:340:65: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                                       ^
                                                                        _Nullable
/usr/local/include/stdlib.h:340:65: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                                       ^
                                                                        _Nonnull
/usr/local/include/stdlib.h:341:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                       ^
/usr/local/include/stdlib.h:341:36: note: insert '_Nullable' if the pointer may be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                       ^
                                        _Nullable
/usr/local/include/stdlib.h:341:36: note: insert '_Nonnull' if the pointer should never be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                       ^
                                        _Nonnull
/usr/local/include/stdlib.h:341:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
/usr/local/include/stdlib.h:341:37: note: insert '_Nullable' if the pointer may be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                          _Nullable 
/usr/local/include/stdlib.h:341:37: note: insert '_Nonnull' if the pointer should never be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                          _Nonnull 
/usr/local/include/stdlib.h:341:77: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                ^
/usr/local/include/stdlib.h:341:77: note: insert '_Nullable' if the pointer may be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                ^
                                                                                  _Nullable 
/usr/local/include/stdlib.h:341:77: note: insert '_Nonnull' if the pointer should never be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                ^
                                                                                  _Nonnull 
/usr/local/include/stdlib.h:343:24: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int     rpmatch(const char *)
                           ^
/usr/local/include/stdlib.h:343:24: note: insert '_Nullable' if the pointer may be null
int     rpmatch(const char *)
                           ^
                            _Nullable
/usr/local/include/stdlib.h:343:24: note: insert '_Nonnull' if the pointer should never be null
int     rpmatch(const char *)
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:345:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
/usr/local/include/stdlib.h:345:37: note: insert '_Nullable' if the pointer may be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                         _Nullable
/usr/local/include/stdlib.h:345:37: note: insert '_Nonnull' if the pointer should never be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                         _Nonnull
/usr/local/include/stdlib.h:345:38: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                         ^
/usr/local/include/stdlib.h:345:38: note: insert '_Nullable' if the pointer may be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                         ^
                                           _Nullable 
/usr/local/include/stdlib.h:345:38: note: insert '_Nonnull' if the pointer should never be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                         ^
                                           _Nonnull 
/usr/local/include/stdlib.h:345:78: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                 ^
/usr/local/include/stdlib.h:345:78: note: insert '_Nullable' if the pointer may be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                 ^
                                                                                   _Nullable 
/usr/local/include/stdlib.h:345:78: note: insert '_Nonnull' if the pointer should never be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                 ^
                                                                                   _Nonnull 
/usr/local/include/stdlib.h:349:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
                       ^
/usr/local/include/stdlib.h:349:21: note: insert '_Nullable' if the pointer may be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
                       ^
                         _Nullable 
/usr/local/include/stdlib.h:349:21: note: insert '_Nonnull' if the pointer should never be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
                       ^
                         _Nonnull 
/usr/local/include/stdlib.h:349:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
        ^
/usr/local/include/stdlib.h:349:6: note: insert '_Nullable' if the pointer may be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
        ^
          _Nullable 
/usr/local/include/stdlib.h:349:6: note: insert '_Nonnull' if the pointer should never be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:351:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                            ^
/usr/local/include/stdlib.h:351:22: note: insert '_Nullable' if the pointer may be null
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                            ^
                              _Nullable 
/usr/local/include/stdlib.h:351:22: note: insert '_Nonnull' if the pointer should never be null
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                            ^
                              _Nonnull 
/usr/local/include/stdlib.h:351:84: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                                                                                          ^
/usr/local/include/stdlib.h:351:84: note: insert '_Nullable' if the pointer may be null
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                                                                                          ^
                                                                                           _Nullable
/usr/local/include/stdlib.h:351:84: note: insert '_Nonnull' if the pointer should never be null
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                                                                                          ^
                                                                                           _Nonnull
/usr/local/include/stdlib.h:351:85: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                                                                                           ^
/usr/local/include/stdlib.h:351:85: note: insert '_Nullable' if the pointer may be null
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                                                                                           ^
                                                                                             _Nullable 
/usr/local/include/stdlib.h:351:85: note: insert '_Nonnull' if the pointer should never be null
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                                                                                           ^
                                                                                             _Nonnull 
/usr/local/include/stdlib.h:355:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoq(const char *__str, char **__endptr, int __base);
                           ^
/usr/local/include/stdlib.h:355:21: note: insert '_Nullable' if the pointer may be null
         strtoq(const char *__str, char **__endptr, int __base);
                           ^
                             _Nullable 
/usr/local/include/stdlib.h:355:21: note: insert '_Nonnull' if the pointer should never be null
         strtoq(const char *__str, char **__endptr, int __base);
                           ^
                             _Nonnull 
/usr/local/include/stdlib.h:355:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoq(const char *__str, char **__endptr, int __base);
                                        ^
/usr/local/include/stdlib.h:355:34: note: insert '_Nullable' if the pointer may be null
         strtoq(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nullable
/usr/local/include/stdlib.h:355:34: note: insert '_Nonnull' if the pointer should never be null
         strtoq(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nonnull
/usr/local/include/stdlib.h:355:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoq(const char *__str, char **__endptr, int __base);
                                         ^
/usr/local/include/stdlib.h:355:35: note: insert '_Nullable' if the pointer may be null
         strtoq(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nullable 
/usr/local/include/stdlib.h:355:35: note: insert '_Nonnull' if the pointer should never be null
         strtoq(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nonnull 
/usr/local/include/stdlib.h:357:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtouq(const char *__str, char **__endptr, int __base);
                            ^
/usr/local/include/stdlib.h:357:22: note: insert '_Nullable' if the pointer may be null
         strtouq(const char *__str, char **__endptr, int __base);
                            ^
                              _Nullable 
/usr/local/include/stdlib.h:357:22: note: insert '_Nonnull' if the pointer should never be null
         strtouq(const char *__str, char **__endptr, int __base);
                            ^
                              _Nonnull 
/usr/local/include/stdlib.h:357:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtouq(const char *__str, char **__endptr, int __base);
                                         ^
/usr/local/include/stdlib.h:357:35: note: insert '_Nullable' if the pointer may be null
         strtouq(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nullable
/usr/local/include/stdlib.h:357:35: note: insert '_Nonnull' if the pointer should never be null
         strtouq(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nonnull
/usr/local/include/stdlib.h:357:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtouq(const char *__str, char **__endptr, int __base);
                                          ^
/usr/local/include/stdlib.h:357:36: note: insert '_Nullable' if the pointer may be null
         strtouq(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nullable 
/usr/local/include/stdlib.h:357:36: note: insert '_Nonnull' if the pointer should never be null
         strtouq(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nonnull 
/usr/local/include/stdlib.h:359:13: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
extern char *suboptarg;         /* getsubopt(3) external variable */
            ^
/usr/local/include/stdlib.h:359:13: note: insert '_Nullable' if the pointer may be null
extern char *suboptarg;         /* getsubopt(3) external variable */
            ^
              _Nullable 
/usr/local/include/stdlib.h:359:13: note: insert '_Nonnull' if the pointer should never be null
extern char *suboptarg;         /* getsubopt(3) external variable */
            ^
              _Nonnull 
193 warnings generated.
checked program was:
/* begin */
 1: #include "ruby.h"
 2: 
 3: /*top*/
 4: extern int t(void);
 5: int main(int argc, char **argv)
 6: {
 7:   if (argc > 1000000) {
 8:     int (* volatile tp)(void)=(int (*)(void))&t;
 9:     printf("%d", (*tp)());
10:   }
11: 
12:   return !!argv[argc];
13: }
14: extern void rb_wait_for_single_fd();
15: int t(void) { rb_wait_for_single_fd(); return 0; }
/* end */

--------------------

have_header: checking for mysql.h... -------------------- yes

"gcc -E -I/Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/x86_64-darwin19 -I/Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/backward -I/Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0 -I. -I/usr/local/opt/mysql-client/include/mysql  -I/usr/local/opt/libyaml/include -I/usr/local/opt/libksba/include -I/usr/local/opt/readline/include -I/usr/local/opt/zlib/include -I/usr/local/opt/openssl@1.1/include -D_XOPEN_SOURCE -D_DARWIN_C_SOURCE -D_DARWIN_UNLIMITED_SELECT -D_REENTRANT   -O3 -ggdb3 -Wall -Wextra -Wdeprecated-declarations -Wdivision-by-zero -Wimplicit-function-declaration -Wimplicit-int -Wpointer-arith -Wshorten-64-to-32 -Wwrite-strings -Wmissing-noreturn -Wno-constant-logical-operand -Wno-long-long -Wno-missing-field-initializers -Wno-overlength-strings -Wno-parentheses-equality -Wno-self-assign -Wno-tautological-compare -Wno-unused-parameter -Wno-unused-value -Wunused-variable -Wextra-tokens  -fno-common -pipe  conftest.c -o conftest.i"
checked program was:
/* begin */
1: #include "ruby.h"
2: 
3: #include <mysql.h>
/* end */

--------------------

have_header: checking for errmsg.h... -------------------- yes

"gcc -E -I/Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/x86_64-darwin19 -I/Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/backward -I/Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0 -I. -I/usr/local/opt/mysql-client/include/mysql  -I/usr/local/opt/libyaml/include -I/usr/local/opt/libksba/include -I/usr/local/opt/readline/include -I/usr/local/opt/zlib/include -I/usr/local/opt/openssl@1.1/include -D_XOPEN_SOURCE -D_DARWIN_C_SOURCE -D_DARWIN_UNLIMITED_SELECT -D_REENTRANT   -O3 -ggdb3 -Wall -Wextra -Wdeprecated-declarations -Wdivision-by-zero -Wimplicit-function-declaration -Wimplicit-int -Wpointer-arith -Wshorten-64-to-32 -Wwrite-strings -Wmissing-noreturn -Wno-constant-logical-operand -Wno-long-long -Wno-missing-field-initializers -Wno-overlength-strings -Wno-parentheses-equality -Wno-self-assign -Wno-tautological-compare -Wno-unused-parameter -Wno-unused-value -Wunused-variable -Wextra-tokens  -fno-common -pipe  conftest.c -o conftest.i"
checked program was:
/* begin */
1: #include "ruby.h"
2: 
3: #include <errmsg.h>
/* end */

--------------------

have_const: checking for SSL_MODE_DISABLED in mysql.h... -------------------- yes

"gcc -I/Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/x86_64-darwin19 -I/Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/backward -I/Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0 -I. -I/usr/local/opt/mysql-client/include/mysql  -I/usr/local/opt/libyaml/include -I/usr/local/opt/libksba/include -I/usr/local/opt/readline/include -I/usr/local/opt/zlib/include -I/usr/local/opt/openssl@1.1/include -D_XOPEN_SOURCE -D_DARWIN_C_SOURCE -D_DARWIN_UNLIMITED_SELECT -D_REENTRANT   -O3 -ggdb3 -Wall -Wextra -Wdeprecated-declarations -Wdivision-by-zero -Wimplicit-function-declaration -Wimplicit-int -Wpointer-arith -Wshorten-64-to-32 -Wwrite-strings -Wmissing-noreturn -Wno-constant-logical-operand -Wno-long-long -Wno-missing-field-initializers -Wno-overlength-strings -Wno-parentheses-equality -Wno-self-assign -Wno-tautological-compare -Wno-unused-parameter -Wno-unused-value -Wunused-variable -Wextra-tokens  -fno-common -pipe   -c conftest.c"
In file included from conftest.c:1:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby.h:33:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/ruby.h:29:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/defines.h:126:
In file included from /usr/local/include/stdio.h:64:
/usr/local/include/_stdio.h:93:16: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        unsigned char   *_base;
                        ^
/usr/local/include/_stdio.h:93:16: note: insert '_Nullable' if the pointer may be null
        unsigned char   *_base;
                        ^
                          _Nullable 
/usr/local/include/_stdio.h:93:16: note: insert '_Nonnull' if the pointer should never be null
        unsigned char   *_base;
                        ^
                          _Nonnull 
/usr/local/include/_stdio.h:138:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
/usr/local/include/_stdio.h:138:32: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
                                           _Nullable
/usr/local/include/_stdio.h:138:32: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
                                           _Nonnull
/usr/local/include/_stdio.h:138:40: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
/usr/local/include/_stdio.h:138:40: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
                                                   _Nullable
/usr/local/include/_stdio.h:138:40: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
                                                   _Nonnull
/usr/local/include/_stdio.h:139:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
/usr/local/include/_stdio.h:139:35: note: insert '_Nullable' if the pointer may be null
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
                                           _Nullable
/usr/local/include/_stdio.h:139:35: note: insert '_Nonnull' if the pointer should never be null
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
                                           _Nonnull
/usr/local/include/_stdio.h:140:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
/usr/local/include/_stdio.h:140:32: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
                                           _Nullable
/usr/local/include/_stdio.h:140:32: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
                                           _Nonnull
/usr/local/include/_stdio.h:140:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
/usr/local/include/_stdio.h:140:46: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
                                                         _Nullable
/usr/local/include/_stdio.h:140:46: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
                                                         _Nonnull
/usr/local/include/_stdio.h:144:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
/usr/local/include/_stdio.h:144:18: note: insert '_Nullable' if the pointer may be null
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
                          _Nullable 
/usr/local/include/_stdio.h:144:18: note: insert '_Nonnull' if the pointer should never be null
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
                          _Nonnull 
In file included from conftest.c:1:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby.h:33:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/ruby.h:29:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/defines.h:126:
/usr/local/include/stdio.h:67:13: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
extern FILE *__stdinp;
            ^
/usr/local/include/stdio.h:67:13: note: insert '_Nullable' if the pointer may be null
extern FILE *__stdinp;
            ^
              _Nullable 
/usr/local/include/stdio.h:67:13: note: insert '_Nonnull' if the pointer should never be null
extern FILE *__stdinp;
            ^
              _Nonnull 
/usr/local/include/stdio.h:386:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 int (* _Nullable)(void *, const char *, int),
                                        ^
/usr/local/include/stdio.h:386:41: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *, const char *, int),
                                        ^
                                         _Nullable
/usr/local/include/stdio.h:386:41: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *, const char *, int),
                                        ^
                                         _Nonnull
/usr/local/include/stdio.h:386:55: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
/usr/local/include/stdio.h:386:55: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
                                                       _Nullable
/usr/local/include/stdio.h:386:55: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
                                                       _Nonnull
/usr/local/include/stdio.h:387:44: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
/usr/local/include/stdio.h:387:44: note: insert '_Nullable' if the pointer may be null
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
                                            _Nullable
/usr/local/include/stdio.h:387:44: note: insert '_Nonnull' if the pointer should never be null
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
                                            _Nonnull
/usr/local/include/stdio.h:388:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 int (* _Nullable)(void *));
                                        ^
/usr/local/include/stdio.h:388:41: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *));
                                        ^
                                         _Nullable
/usr/local/include/stdio.h:388:41: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *));
                                        ^
                                         _Nonnull
/usr/local/include/stdio.h:384:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
FILE    *funopen(const void *,
        ^
/usr/local/include/stdio.h:384:6: note: insert '_Nullable' if the pointer may be null
FILE    *funopen(const void *,
        ^
          _Nullable 
/usr/local/include/stdio.h:384:6: note: insert '_Nonnull' if the pointer should never be null
FILE    *funopen(const void *,
        ^
          _Nonnull 
In file included from conftest.c:1:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby.h:33:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/ruby.h:29:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/defines.h:134:
/usr/local/include/stdlib.h:134:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   atof(const char *);
                         ^
/usr/local/include/stdlib.h:134:25: note: insert '_Nullable' if the pointer may be null
double   atof(const char *);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:134:25: note: insert '_Nonnull' if the pointer should never be null
double   atof(const char *);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:135:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      atoi(const char *);
                         ^
/usr/local/include/stdlib.h:135:22: note: insert '_Nullable' if the pointer may be null
int      atoi(const char *);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:135:22: note: insert '_Nonnull' if the pointer should never be null
int      atoi(const char *);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:136:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     atol(const char *);
                         ^
/usr/local/include/stdlib.h:136:23: note: insert '_Nullable' if the pointer may be null
long     atol(const char *);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:136:23: note: insert '_Nonnull' if the pointer should never be null
long     atol(const char *);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:139:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         atoll(const char *);
                          ^
/usr/local/include/stdlib.h:139:20: note: insert '_Nullable' if the pointer may be null
         atoll(const char *);
                          ^
                           _Nullable
/usr/local/include/stdlib.h:139:20: note: insert '_Nonnull' if the pointer should never be null
         atoll(const char *);
                          ^
                           _Nonnull
/usr/local/include/stdlib.h:141:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                            ^
/usr/local/include/stdlib.h:141:26: note: insert '_Nullable' if the pointer may be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                            ^
                              _Nullable 
/usr/local/include/stdlib.h:141:26: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                            ^
                              _Nonnull 
/usr/local/include/stdlib.h:141:45: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                                               ^
/usr/local/include/stdlib.h:141:45: note: insert '_Nullable' if the pointer may be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                                               ^
                                                 _Nullable 
/usr/local/include/stdlib.h:141:45: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                                               ^
                                                 _Nonnull 
/usr/local/include/stdlib.h:142:59: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                 ^
/usr/local/include/stdlib.h:142:59: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                 ^
                                                                  _Nullable
/usr/local/include/stdlib.h:142:59: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                 ^
                                                                  _Nonnull
/usr/local/include/stdlib.h:142:73: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                               ^
/usr/local/include/stdlib.h:142:73: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                               ^
                                                                                _Nullable
/usr/local/include/stdlib.h:142:73: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                               ^
                                                                                _Nonnull
/usr/local/include/stdlib.h:141:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch(const void *__key, const void *__base, size_t __nel,
        ^
/usr/local/include/stdlib.h:141:6: note: insert '_Nullable' if the pointer may be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
        ^
          _Nullable 
/usr/local/include/stdlib.h:141:6: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
        ^
          _Nonnull 
/usr/local/include/stdlib.h:147:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getenv(const char *);
                           ^
/usr/local/include/stdlib.h:147:25: note: insert '_Nullable' if the pointer may be null
char    *getenv(const char *);
                           ^
                            _Nullable
/usr/local/include/stdlib.h:147:25: note: insert '_Nonnull' if the pointer should never be null
char    *getenv(const char *);
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:147:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getenv(const char *);
        ^
/usr/local/include/stdlib.h:147:6: note: insert '_Nullable' if the pointer may be null
char    *getenv(const char *);
        ^
          _Nullable 
/usr/local/include/stdlib.h:147:6: note: insert '_Nonnull' if the pointer should never be null
char    *getenv(const char *);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:156:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mblen(const char *__s, size_t __n);
                          ^
/usr/local/include/stdlib.h:156:23: note: insert '_Nullable' if the pointer may be null
int      mblen(const char *__s, size_t __n);
                          ^
                            _Nullable 
/usr/local/include/stdlib.h:156:23: note: insert '_Nonnull' if the pointer should never be null
int      mblen(const char *__s, size_t __n);
                          ^
                            _Nonnull 
/usr/local/include/stdlib.h:157:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                          ^
/usr/local/include/stdlib.h:157:26: note: insert '_Nullable' if the pointer may be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                          ^
                            _Nullable
/usr/local/include/stdlib.h:157:26: note: insert '_Nonnull' if the pointer should never be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                          ^
                            _Nonnull
/usr/local/include/stdlib.h:157:52: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                                                    ^
/usr/local/include/stdlib.h:157:52: note: insert '_Nullable' if the pointer may be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                                                    ^
                                                      _Nullable
/usr/local/include/stdlib.h:157:52: note: insert '_Nonnull' if the pointer should never be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                                                    ^
                                                      _Nonnull
/usr/local/include/stdlib.h:158:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                        ^
/usr/local/include/stdlib.h:158:21: note: insert '_Nullable' if the pointer may be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                        ^
                          _Nullable
/usr/local/include/stdlib.h:158:21: note: insert '_Nonnull' if the pointer should never be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                        ^
                          _Nonnull
/usr/local/include/stdlib.h:158:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                                                 ^
/usr/local/include/stdlib.h:158:46: note: insert '_Nullable' if the pointer may be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                                                 ^
                                                   _Nullable
/usr/local/include/stdlib.h:158:46: note: insert '_Nonnull' if the pointer should never be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                                                 ^
                                                   _Nonnull
/usr/local/include/stdlib.h:160:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort(void *__base, size_t __nel, size_t __width,
                    ^
/usr/local/include/stdlib.h:160:18: note: insert '_Nullable' if the pointer may be null
void     qsort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nullable 
/usr/local/include/stdlib.h:160:18: note: insert '_Nonnull' if the pointer should never be null
void     qsort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nonnull 
/usr/local/include/stdlib.h:161:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
/usr/local/include/stdlib.h:161:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:161:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:161:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
/usr/local/include/stdlib.h:161:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:161:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:165:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                           ^
/usr/local/include/stdlib.h:165:27: note: insert '_Nullable' if the pointer may be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                           ^
                            _Nullable
/usr/local/include/stdlib.h:165:27: note: insert '_Nonnull' if the pointer should never be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:165:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                   ^
/usr/local/include/stdlib.h:165:35: note: insert '_Nullable' if the pointer may be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                   ^
                                    _Nullable
/usr/local/include/stdlib.h:165:35: note: insert '_Nonnull' if the pointer should never be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                   ^
                                    _Nonnull
/usr/local/include/stdlib.h:165:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                    ^
/usr/local/include/stdlib.h:165:36: note: insert '_Nullable' if the pointer may be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                    ^
                                     _Nullable
/usr/local/include/stdlib.h:165:36: note: insert '_Nonnull' if the pointer should never be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                    ^
                                     _Nonnull
/usr/local/include/stdlib.h:166:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                           ^
/usr/local/include/stdlib.h:166:26: note: insert '_Nullable' if the pointer may be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                           ^
                            _Nullable
/usr/local/include/stdlib.h:166:26: note: insert '_Nonnull' if the pointer should never be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:166:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                   ^
/usr/local/include/stdlib.h:166:34: note: insert '_Nullable' if the pointer may be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                   ^
                                    _Nullable
/usr/local/include/stdlib.h:166:34: note: insert '_Nonnull' if the pointer should never be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                   ^
                                    _Nonnull
/usr/local/include/stdlib.h:166:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                    ^
/usr/local/include/stdlib.h:166:35: note: insert '_Nullable' if the pointer may be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                    ^
                                     _Nullable
/usr/local/include/stdlib.h:166:35: note: insert '_Nonnull' if the pointer should never be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                    ^
                                     _Nonnull
/usr/local/include/stdlib.h:167:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     strtol(const char *__str, char **__endptr, int __base);
                           ^
/usr/local/include/stdlib.h:167:25: note: insert '_Nullable' if the pointer may be null
long     strtol(const char *__str, char **__endptr, int __base);
                           ^
                             _Nullable 
/usr/local/include/stdlib.h:167:25: note: insert '_Nonnull' if the pointer should never be null
long     strtol(const char *__str, char **__endptr, int __base);
                           ^
                             _Nonnull 
/usr/local/include/stdlib.h:167:38: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     strtol(const char *__str, char **__endptr, int __base);
                                        ^
/usr/local/include/stdlib.h:167:38: note: insert '_Nullable' if the pointer may be null
long     strtol(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nullable
/usr/local/include/stdlib.h:167:38: note: insert '_Nonnull' if the pointer should never be null
long     strtol(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nonnull
/usr/local/include/stdlib.h:167:39: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     strtol(const char *__str, char **__endptr, int __base);
                                         ^
/usr/local/include/stdlib.h:167:39: note: insert '_Nullable' if the pointer may be null
long     strtol(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nullable 
/usr/local/include/stdlib.h:167:39: note: insert '_Nonnull' if the pointer should never be null
long     strtol(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nonnull 
/usr/local/include/stdlib.h:169:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtold(const char *, char **);
                            ^
/usr/local/include/stdlib.h:169:22: note: insert '_Nullable' if the pointer may be null
         strtold(const char *, char **);
                            ^
                             _Nullable
/usr/local/include/stdlib.h:169:22: note: insert '_Nonnull' if the pointer should never be null
         strtold(const char *, char **);
                            ^
                             _Nonnull
/usr/local/include/stdlib.h:169:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtold(const char *, char **);
                                    ^
/usr/local/include/stdlib.h:169:30: note: insert '_Nullable' if the pointer may be null
         strtold(const char *, char **);
                                    ^
                                     _Nullable
/usr/local/include/stdlib.h:169:30: note: insert '_Nonnull' if the pointer should never be null
         strtold(const char *, char **);
                                    ^
                                     _Nonnull
/usr/local/include/stdlib.h:169:31: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtold(const char *, char **);
                                     ^
/usr/local/include/stdlib.h:169:31: note: insert '_Nullable' if the pointer may be null
         strtold(const char *, char **);
                                     ^
                                      _Nullable
/usr/local/include/stdlib.h:169:31: note: insert '_Nonnull' if the pointer should never be null
         strtold(const char *, char **);
                                     ^
                                      _Nonnull
/usr/local/include/stdlib.h:172:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoll(const char *__str, char **__endptr, int __base);
                            ^
/usr/local/include/stdlib.h:172:22: note: insert '_Nullable' if the pointer may be null
         strtoll(const char *__str, char **__endptr, int __base);
                            ^
                              _Nullable 
/usr/local/include/stdlib.h:172:22: note: insert '_Nonnull' if the pointer should never be null
         strtoll(const char *__str, char **__endptr, int __base);
                            ^
                              _Nonnull 
/usr/local/include/stdlib.h:172:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoll(const char *__str, char **__endptr, int __base);
                                         ^
/usr/local/include/stdlib.h:172:35: note: insert '_Nullable' if the pointer may be null
         strtoll(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nullable
/usr/local/include/stdlib.h:172:35: note: insert '_Nonnull' if the pointer should never be null
         strtoll(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nonnull
/usr/local/include/stdlib.h:172:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoll(const char *__str, char **__endptr, int __base);
                                          ^
/usr/local/include/stdlib.h:172:36: note: insert '_Nullable' if the pointer may be null
         strtoll(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nullable 
/usr/local/include/stdlib.h:172:36: note: insert '_Nonnull' if the pointer should never be null
         strtoll(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nonnull 
/usr/local/include/stdlib.h:175:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoul(const char *__str, char **__endptr, int __base);
                            ^
/usr/local/include/stdlib.h:175:22: note: insert '_Nullable' if the pointer may be null
         strtoul(const char *__str, char **__endptr, int __base);
                            ^
                              _Nullable 
/usr/local/include/stdlib.h:175:22: note: insert '_Nonnull' if the pointer should never be null
         strtoul(const char *__str, char **__endptr, int __base);
                            ^
                              _Nonnull 
/usr/local/include/stdlib.h:175:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoul(const char *__str, char **__endptr, int __base);
                                         ^
/usr/local/include/stdlib.h:175:35: note: insert '_Nullable' if the pointer may be null
         strtoul(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nullable
/usr/local/include/stdlib.h:175:35: note: insert '_Nonnull' if the pointer should never be null
         strtoul(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nonnull
/usr/local/include/stdlib.h:175:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoul(const char *__str, char **__endptr, int __base);
                                          ^
/usr/local/include/stdlib.h:175:36: note: insert '_Nullable' if the pointer may be null
         strtoul(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nullable 
/usr/local/include/stdlib.h:175:36: note: insert '_Nonnull' if the pointer should never be null
         strtoul(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nonnull 
/usr/local/include/stdlib.h:178:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoull(const char *__str, char **__endptr, int __base);
                             ^
/usr/local/include/stdlib.h:178:23: note: insert '_Nullable' if the pointer may be null
         strtoull(const char *__str, char **__endptr, int __base);
                             ^
                               _Nullable 
/usr/local/include/stdlib.h:178:23: note: insert '_Nonnull' if the pointer should never be null
         strtoull(const char *__str, char **__endptr, int __base);
                             ^
                               _Nonnull 
/usr/local/include/stdlib.h:178:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoull(const char *__str, char **__endptr, int __base);
                                          ^
/usr/local/include/stdlib.h:178:36: note: insert '_Nullable' if the pointer may be null
         strtoull(const char *__str, char **__endptr, int __base);
                                          ^
                                           _Nullable
/usr/local/include/stdlib.h:178:36: note: insert '_Nonnull' if the pointer should never be null
         strtoull(const char *__str, char **__endptr, int __base);
                                          ^
                                           _Nonnull
/usr/local/include/stdlib.h:178:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoull(const char *__str, char **__endptr, int __base);
                                           ^
/usr/local/include/stdlib.h:178:37: note: insert '_Nullable' if the pointer may be null
         strtoull(const char *__str, char **__endptr, int __base);
                                           ^
                                             _Nullable 
/usr/local/include/stdlib.h:178:37: note: insert '_Nonnull' if the pointer should never be null
         strtoull(const char *__str, char **__endptr, int __base);
                                           ^
                                             _Nonnull 
/usr/local/include/stdlib.h:190:24: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      system(const char *) __DARWIN_ALIAS_C(system);
                           ^
/usr/local/include/stdlib.h:190:24: note: insert '_Nullable' if the pointer may be null
int      system(const char *) __DARWIN_ALIAS_C(system);
                           ^
                            _Nullable
/usr/local/include/stdlib.h:190:24: note: insert '_Nonnull' if the pointer should never be null
int      system(const char *) __DARWIN_ALIAS_C(system);
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:194:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                       ^
/usr/local/include/stdlib.h:194:23: note: insert '_Nullable' if the pointer may be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                       ^
                         _Nullable
/usr/local/include/stdlib.h:194:23: note: insert '_Nonnull' if the pointer should never be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                       ^
                         _Nonnull
/usr/local/include/stdlib.h:194:51: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                                                   ^
/usr/local/include/stdlib.h:194:51: note: insert '_Nullable' if the pointer may be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                                                   ^
                                                     _Nullable
/usr/local/include/stdlib.h:194:51: note: insert '_Nonnull' if the pointer should never be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                                                   ^
                                                     _Nonnull
/usr/local/include/stdlib.h:195:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      wctomb(char *, wchar_t);
                     ^
/usr/local/include/stdlib.h:195:18: note: insert '_Nullable' if the pointer may be null
int      wctomb(char *, wchar_t);
                     ^
                      _Nullable
/usr/local/include/stdlib.h:195:18: note: insert '_Nonnull' if the pointer should never be null
int      wctomb(char *, wchar_t);
                     ^
                      _Nonnull
/usr/local/include/stdlib.h:199:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     a64l(const char *);
                         ^
/usr/local/include/stdlib.h:199:23: note: insert '_Nullable' if the pointer may be null
long     a64l(const char *);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:199:23: note: insert '_Nonnull' if the pointer should never be null
long     a64l(const char *);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:201:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
/usr/local/include/stdlib.h:201:29: note: insert '_Nullable' if the pointer may be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nullable 
/usr/local/include/stdlib.h:201:29: note: insert '_Nonnull' if the pointer should never be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nonnull 
/usr/local/include/stdlib.h:201:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
/usr/local/include/stdlib.h:201:46: note: insert '_Nullable' if the pointer may be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nullable 
/usr/local/include/stdlib.h:201:46: note: insert '_Nonnull' if the pointer should never be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nonnull 
/usr/local/include/stdlib.h:201:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
/usr/local/include/stdlib.h:201:6: note: insert '_Nullable' if the pointer may be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nullable 
/usr/local/include/stdlib.h:201:6: note: insert '_Nonnull' if the pointer should never be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nonnull 
/usr/local/include/stdlib.h:202:31: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
double   erand48(unsigned short[3]);
                               ^
/usr/local/include/stdlib.h:202:31: note: insert '_Nullable' if the array parameter may be null
double   erand48(unsigned short[3]);
                               ^
                                _Nullable 
/usr/local/include/stdlib.h:202:31: note: insert '_Nonnull' if the array parameter should never be null
double   erand48(unsigned short[3]);
                               ^
                                _Nonnull 
/usr/local/include/stdlib.h:203:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
/usr/local/include/stdlib.h:203:29: note: insert '_Nullable' if the pointer may be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nullable 
/usr/local/include/stdlib.h:203:29: note: insert '_Nonnull' if the pointer should never be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nonnull 
/usr/local/include/stdlib.h:203:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
/usr/local/include/stdlib.h:203:46: note: insert '_Nullable' if the pointer may be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nullable 
/usr/local/include/stdlib.h:203:46: note: insert '_Nonnull' if the pointer should never be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nonnull 
/usr/local/include/stdlib.h:203:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
/usr/local/include/stdlib.h:203:6: note: insert '_Nullable' if the pointer may be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nullable 
/usr/local/include/stdlib.h:203:6: note: insert '_Nonnull' if the pointer should never be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nonnull 
/usr/local/include/stdlib.h:204:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *gcvt(double, int, char *); /* LEGACY */
                                ^
/usr/local/include/stdlib.h:204:30: note: insert '_Nullable' if the pointer may be null
char    *gcvt(double, int, char *); /* LEGACY */
                                ^
                                 _Nullable
/usr/local/include/stdlib.h:204:30: note: insert '_Nonnull' if the pointer should never be null
char    *gcvt(double, int, char *); /* LEGACY */
                                ^
                                 _Nonnull
/usr/local/include/stdlib.h:204:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *gcvt(double, int, char *); /* LEGACY */
        ^
/usr/local/include/stdlib.h:204:6: note: insert '_Nullable' if the pointer may be null
char    *gcvt(double, int, char *); /* LEGACY */
        ^
          _Nullable 
/usr/local/include/stdlib.h:204:6: note: insert '_Nonnull' if the pointer should never be null
char    *gcvt(double, int, char *); /* LEGACY */
        ^
          _Nonnull 
/usr/local/include/stdlib.h:205:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                        ^
/usr/local/include/stdlib.h:205:21: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                        ^
                         _Nullable
/usr/local/include/stdlib.h:205:21: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                        ^
                         _Nonnull
/usr/local/include/stdlib.h:205:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                         ^
/usr/local/include/stdlib.h:205:22: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:205:22: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:205:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                 ^
/usr/local/include/stdlib.h:205:30: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                 ^
                                   _Nullable
/usr/local/include/stdlib.h:205:30: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                 ^
                                   _Nonnull
/usr/local/include/stdlib.h:205:38: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                         ^
/usr/local/include/stdlib.h:205:38: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                         ^
                                          _Nullable
/usr/local/include/stdlib.h:205:38: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                         ^
                                          _Nonnull
/usr/local/include/stdlib.h:205:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                                 ^
/usr/local/include/stdlib.h:205:46: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:205:46: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:205:47: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                                  ^
/usr/local/include/stdlib.h:205:47: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                                  ^
                                                   _Nullable
/usr/local/include/stdlib.h:205:47: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                                  ^
                                                   _Nonnull
/usr/local/include/stdlib.h:208:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
                                  ^
/usr/local/include/stdlib.h:208:32: note: insert '_Nullable' if the pointer may be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
                                  ^
                                   _Nullable
/usr/local/include/stdlib.h:208:32: note: insert '_Nonnull' if the pointer should never be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
                                  ^
                                   _Nonnull
/usr/local/include/stdlib.h:208:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
        ^
/usr/local/include/stdlib.h:208:6: note: insert '_Nullable' if the pointer may be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
        ^
          _Nullable 
/usr/local/include/stdlib.h:208:6: note: insert '_Nonnull' if the pointer should never be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
        ^
          _Nonnull 
/usr/local/include/stdlib.h:212:29: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
long     jrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
/usr/local/include/stdlib.h:212:29: note: insert '_Nullable' if the array parameter may be null
long     jrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nullable 
/usr/local/include/stdlib.h:212:29: note: insert '_Nonnull' if the array parameter should never be null
long     jrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nonnull 
/usr/local/include/stdlib.h:213:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *l64a(long);
        ^
/usr/local/include/stdlib.h:213:6: note: insert '_Nullable' if the pointer may be null
char    *l64a(long);
        ^
          _Nullable 
/usr/local/include/stdlib.h:213:6: note: insert '_Nonnull' if the pointer should never be null
char    *l64a(long);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:214:29: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
void     lcong48(unsigned short[7]);
                               ^
/usr/local/include/stdlib.h:214:29: note: insert '_Nullable' if the array parameter may be null
void     lcong48(unsigned short[7]);
                               ^
                                _Nullable 
/usr/local/include/stdlib.h:214:29: note: insert '_Nonnull' if the array parameter should never be null
void     lcong48(unsigned short[7]);
                               ^
                                _Nonnull 
/usr/local/include/stdlib.h:216:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *mktemp(char *);
                     ^
/usr/local/include/stdlib.h:216:19: note: insert '_Nullable' if the pointer may be null
char    *mktemp(char *);
                     ^
                      _Nullable
/usr/local/include/stdlib.h:216:19: note: insert '_Nonnull' if the pointer should never be null
char    *mktemp(char *);
                     ^
                      _Nonnull
/usr/local/include/stdlib.h:216:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *mktemp(char *);
        ^
/usr/local/include/stdlib.h:216:6: note: insert '_Nullable' if the pointer may be null
char    *mktemp(char *);
        ^
          _Nullable 
/usr/local/include/stdlib.h:216:6: note: insert '_Nonnull' if the pointer should never be null
char    *mktemp(char *);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:217:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mkstemp(char *);
                      ^
/usr/local/include/stdlib.h:217:19: note: insert '_Nullable' if the pointer may be null
int      mkstemp(char *);
                      ^
                       _Nullable
/usr/local/include/stdlib.h:217:19: note: insert '_Nonnull' if the pointer should never be null
int      mkstemp(char *);
                      ^
                       _Nonnull
/usr/local/include/stdlib.h:219:29: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
long     nrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
/usr/local/include/stdlib.h:219:29: note: insert '_Nullable' if the array parameter may be null
long     nrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nullable 
/usr/local/include/stdlib.h:219:29: note: insert '_Nonnull' if the array parameter should never be null
long     nrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nonnull 
/usr/local/include/stdlib.h:221:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ptsname(int);
        ^
/usr/local/include/stdlib.h:221:6: note: insert '_Nullable' if the pointer may be null
char    *ptsname(int);
        ^
          _Nullable 
/usr/local/include/stdlib.h:221:6: note: insert '_Nonnull' if the pointer should never be null
char    *ptsname(int);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:224:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int ptsname_r(int fildes, char *buffer, size_t buflen) __API_AVAILABLE(macos(10.13.4), ios(11.3), tvos(11.3), watchos(4.3));
                               ^
/usr/local/include/stdlib.h:224:32: note: insert '_Nullable' if the pointer may be null
int ptsname_r(int fildes, char *buffer, size_t buflen) __API_AVAILABLE(macos(10.13.4), ios(11.3), tvos(11.3), watchos(4.3));
                               ^
                                 _Nullable 
/usr/local/include/stdlib.h:224:32: note: insert '_Nonnull' if the pointer should never be null
int ptsname_r(int fildes, char *buffer, size_t buflen) __API_AVAILABLE(macos(10.13.4), ios(11.3), tvos(11.3), watchos(4.3));
                               ^
                                 _Nonnull 
/usr/local/include/stdlib.h:227:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      putenv(char *) __DARWIN_ALIAS(putenv);
                     ^
/usr/local/include/stdlib.h:227:18: note: insert '_Nullable' if the pointer may be null
int      putenv(char *) __DARWIN_ALIAS(putenv);
                     ^
                      _Nullable
/usr/local/include/stdlib.h:227:18: note: insert '_Nonnull' if the pointer should never be null
int      putenv(char *) __DARWIN_ALIAS(putenv);
                     ^
                      _Nonnull
/usr/local/include/stdlib.h:229:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      rand_r(unsigned *) __swift_unavailable("Use arc4random instead.");
                         ^
/usr/local/include/stdlib.h:229:22: note: insert '_Nullable' if the pointer may be null
int      rand_r(unsigned *) __swift_unavailable("Use arc4random instead.");
                         ^
                          _Nullable
/usr/local/include/stdlib.h:229:22: note: insert '_Nonnull' if the pointer should never be null
int      rand_r(unsigned *) __swift_unavailable("Use arc4random instead.");
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:231:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                             ^
/usr/local/include/stdlib.h:231:27: note: insert '_Nullable' if the pointer may be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                             ^
                               _Nullable
/usr/local/include/stdlib.h:231:27: note: insert '_Nonnull' if the pointer should never be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                             ^
                               _Nonnull
/usr/local/include/stdlib.h:231:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                                                ^
/usr/local/include/stdlib.h:231:46: note: insert '_Nullable' if the pointer may be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                                                ^
                                                  _Nullable
/usr/local/include/stdlib.h:231:46: note: insert '_Nonnull' if the pointer should never be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                                                ^
                                                  _Nonnull
/usr/local/include/stdlib.h:231:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
        ^
/usr/local/include/stdlib.h:231:6: note: insert '_Nullable' if the pointer may be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
        ^
          _Nullable 
/usr/local/include/stdlib.h:231:6: note: insert '_Nonnull' if the pointer should never be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:236:24: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
        *seed48(unsigned short[3]);
                              ^
/usr/local/include/stdlib.h:236:24: note: insert '_Nullable' if the array parameter may be null
        *seed48(unsigned short[3]);
                              ^
                               _Nullable 
/usr/local/include/stdlib.h:236:24: note: insert '_Nonnull' if the array parameter should never be null
        *seed48(unsigned short[3]);
                              ^
                               _Nonnull 
/usr/local/include/stdlib.h:236:2: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        *seed48(unsigned short[3]);
        ^
/usr/local/include/stdlib.h:236:2: note: insert '_Nullable' if the pointer may be null
        *seed48(unsigned short[3]);
        ^
          _Nullable 
/usr/local/include/stdlib.h:236:2: note: insert '_Nonnull' if the pointer should never be null
        *seed48(unsigned short[3]);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:237:24: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                           ^
/usr/local/include/stdlib.h:237:24: note: insert '_Nullable' if the pointer may be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                           ^
                             _Nullable
/usr/local/include/stdlib.h:237:24: note: insert '_Nonnull' if the pointer should never be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                           ^
                             _Nonnull
/usr/local/include/stdlib.h:237:45: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                                                ^
/usr/local/include/stdlib.h:237:45: note: insert '_Nullable' if the pointer may be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                                                ^
                                                  _Nullable
/usr/local/include/stdlib.h:237:45: note: insert '_Nonnull' if the pointer should never be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                                                ^
                                                  _Nonnull
/usr/local/include/stdlib.h:239:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     setkey(const char *) __DARWIN_ALIAS(setkey);
                           ^
/usr/local/include/stdlib.h:239:25: note: insert '_Nullable' if the pointer may be null
void     setkey(const char *) __DARWIN_ALIAS(setkey);
                           ^
                            _Nullable
/usr/local/include/stdlib.h:239:25: note: insert '_Nonnull' if the pointer should never be null
void     setkey(const char *) __DARWIN_ALIAS(setkey);
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:243:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *setstate(const char *);
                             ^
/usr/local/include/stdlib.h:243:27: note: insert '_Nullable' if the pointer may be null
char    *setstate(const char *);
                             ^
                              _Nullable
/usr/local/include/stdlib.h:243:27: note: insert '_Nonnull' if the pointer should never be null
char    *setstate(const char *);
                             ^
                              _Nonnull
/usr/local/include/stdlib.h:243:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *setstate(const char *);
        ^
/usr/local/include/stdlib.h:243:6: note: insert '_Nullable' if the pointer may be null
char    *setstate(const char *);
        ^
          _Nullable 
/usr/local/include/stdlib.h:243:6: note: insert '_Nonnull' if the pointer should never be null
char    *setstate(const char *);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:252:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      unsetenv(const char *) __DARWIN_ALIAS(unsetenv);
                             ^
/usr/local/include/stdlib.h:252:26: note: insert '_Nullable' if the pointer may be null
int      unsetenv(const char *) __DARWIN_ALIAS(unsetenv);
                             ^
                              _Nullable
/usr/local/include/stdlib.h:252:26: note: insert '_Nonnull' if the pointer should never be null
int      unsetenv(const char *) __DARWIN_ALIAS(unsetenv);
                             ^
                              _Nonnull
/usr/local/include/stdlib.h:265:42: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     arc4random_addrandom(unsigned char * /*dat*/, int /*datlen*/)
                                            ^
/usr/local/include/stdlib.h:265:42: note: insert '_Nullable' if the pointer may be null
void     arc4random_addrandom(unsigned char * /*dat*/, int /*datlen*/)
                                            ^
                                              _Nullable
/usr/local/include/stdlib.h:265:42: note: insert '_Nonnull' if the pointer should never be null
void     arc4random_addrandom(unsigned char * /*dat*/, int /*datlen*/)
                                            ^
                                              _Nonnull
/usr/local/include/stdlib.h:270:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     arc4random_buf(void * __buf, size_t __nbytes) __OSX_AVAILABLE_STARTING(__MAC_10_7, __IPHONE_4_3);
                             ^
/usr/local/include/stdlib.h:270:27: note: insert '_Nullable' if the pointer may be null
void     arc4random_buf(void * __buf, size_t __nbytes) __OSX_AVAILABLE_STARTING(__MAC_10_7, __IPHONE_4_3);
                             ^
                               _Nullable
/usr/local/include/stdlib.h:270:27: note: insert '_Nonnull' if the pointer should never be null
void     arc4random_buf(void * __buf, size_t __nbytes) __OSX_AVAILABLE_STARTING(__MAC_10_7, __IPHONE_4_3);
                             ^
                               _Nonnull
/usr/local/include/stdlib.h:276:28: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                              ^
/usr/local/include/stdlib.h:276:28: note: insert '_Nullable' if the pointer may be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                              ^
                                _Nullable 
/usr/local/include/stdlib.h:276:28: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                              ^
                                _Nonnull 
/usr/local/include/stdlib.h:276:47: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                                                 ^
/usr/local/include/stdlib.h:276:47: note: insert '_Nullable' if the pointer may be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                                                 ^
                                                   _Nullable 
/usr/local/include/stdlib.h:276:47: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                                                 ^
                                                   _Nonnull 
/usr/local/include/stdlib.h:277:59: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                 ^
/usr/local/include/stdlib.h:277:59: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                 ^
                                                                  _Nullable
/usr/local/include/stdlib.h:277:59: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                 ^
                                                                  _Nonnull
/usr/local/include/stdlib.h:277:73: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                               ^
/usr/local/include/stdlib.h:277:73: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                               ^
                                                                                _Nullable
/usr/local/include/stdlib.h:277:73: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                               ^
                                                                                _Nonnull
/usr/local/include/stdlib.h:276:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
        ^
/usr/local/include/stdlib.h:276:6: note: insert '_Nullable' if the pointer may be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
        ^
          _Nullable 
/usr/local/include/stdlib.h:276:6: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
        ^
          _Nonnull 
/usr/local/include/stdlib.h:281:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *cgetcap(char *, const char *, int);
                      ^
/usr/local/include/stdlib.h:281:20: note: insert '_Nullable' if the pointer may be null
char    *cgetcap(char *, const char *, int);
                      ^
                       _Nullable
/usr/local/include/stdlib.h:281:20: note: insert '_Nonnull' if the pointer should never be null
char    *cgetcap(char *, const char *, int);
                      ^
                       _Nonnull
/usr/local/include/stdlib.h:281:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *cgetcap(char *, const char *, int);
                                    ^
/usr/local/include/stdlib.h:281:34: note: insert '_Nullable' if the pointer may be null
char    *cgetcap(char *, const char *, int);
                                    ^
                                     _Nullable
/usr/local/include/stdlib.h:281:34: note: insert '_Nonnull' if the pointer should never be null
char    *cgetcap(char *, const char *, int);
                                    ^
                                     _Nonnull
/usr/local/include/stdlib.h:281:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *cgetcap(char *, const char *, int);
        ^
/usr/local/include/stdlib.h:281:6: note: insert '_Nullable' if the pointer may be null
char    *cgetcap(char *, const char *, int);
        ^
          _Nullable 
/usr/local/include/stdlib.h:281:6: note: insert '_Nonnull' if the pointer should never be null
char    *cgetcap(char *, const char *, int);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:283:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                      ^
/usr/local/include/stdlib.h:283:19: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                      ^
                       _Nullable
/usr/local/include/stdlib.h:283:19: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                      ^
                       _Nonnull
/usr/local/include/stdlib.h:283:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                       ^
/usr/local/include/stdlib.h:283:20: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                       ^
                        _Nullable
/usr/local/include/stdlib.h:283:20: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                       ^
                        _Nonnull
/usr/local/include/stdlib.h:283:28: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                               ^
/usr/local/include/stdlib.h:283:28: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                               ^
                                _Nullable
/usr/local/include/stdlib.h:283:28: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                               ^
                                _Nonnull
/usr/local/include/stdlib.h:283:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                                ^
/usr/local/include/stdlib.h:283:29: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                                ^
                                 _Nullable
/usr/local/include/stdlib.h:283:29: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                                ^
                                 _Nonnull
/usr/local/include/stdlib.h:283:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                                              ^
/usr/local/include/stdlib.h:283:43: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                                              ^
                                               _Nullable
/usr/local/include/stdlib.h:283:43: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                                              ^
                                               _Nonnull
/usr/local/include/stdlib.h:284:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                        ^
/usr/local/include/stdlib.h:284:21: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                        ^
                         _Nullable
/usr/local/include/stdlib.h:284:21: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                        ^
                         _Nonnull
/usr/local/include/stdlib.h:284:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                         ^
/usr/local/include/stdlib.h:284:22: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:284:22: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:284:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                                 ^
/usr/local/include/stdlib.h:284:30: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                                 ^
                                  _Nullable
/usr/local/include/stdlib.h:284:30: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                                 ^
                                  _Nonnull
/usr/local/include/stdlib.h:284:31: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                                  ^
/usr/local/include/stdlib.h:284:31: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                                  ^
                                   _Nullable
/usr/local/include/stdlib.h:284:31: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                                  ^
                                   _Nonnull
/usr/local/include/stdlib.h:285:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetmatch(const char *, const char *);
                              ^
/usr/local/include/stdlib.h:285:27: note: insert '_Nullable' if the pointer may be null
int      cgetmatch(const char *, const char *);
                              ^
                               _Nullable
/usr/local/include/stdlib.h:285:27: note: insert '_Nonnull' if the pointer should never be null
int      cgetmatch(const char *, const char *);
                              ^
                               _Nonnull
/usr/local/include/stdlib.h:285:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetmatch(const char *, const char *);
                                            ^
/usr/local/include/stdlib.h:285:41: note: insert '_Nullable' if the pointer may be null
int      cgetmatch(const char *, const char *);
                                            ^
                                             _Nullable
/usr/local/include/stdlib.h:285:41: note: insert '_Nonnull' if the pointer should never be null
int      cgetmatch(const char *, const char *);
                                            ^
                                             _Nonnull
/usr/local/include/stdlib.h:286:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                       ^
/usr/local/include/stdlib.h:286:20: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                       ^
                        _Nullable
/usr/local/include/stdlib.h:286:20: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                       ^
                        _Nonnull
/usr/local/include/stdlib.h:286:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                        ^
/usr/local/include/stdlib.h:286:21: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                        ^
                         _Nullable
/usr/local/include/stdlib.h:286:21: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                        ^
                         _Nonnull
/usr/local/include/stdlib.h:286:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                                ^
/usr/local/include/stdlib.h:286:29: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                                ^
                                 _Nullable
/usr/local/include/stdlib.h:286:29: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                                ^
                                 _Nonnull
/usr/local/include/stdlib.h:286:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                                 ^
/usr/local/include/stdlib.h:286:30: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                                 ^
                                  _Nullable
/usr/local/include/stdlib.h:286:30: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                                 ^
                                  _Nonnull
/usr/local/include/stdlib.h:287:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnum(char *, const char *, long *);
                      ^
/usr/local/include/stdlib.h:287:19: note: insert '_Nullable' if the pointer may be null
int      cgetnum(char *, const char *, long *);
                      ^
                       _Nullable
/usr/local/include/stdlib.h:287:19: note: insert '_Nonnull' if the pointer should never be null
int      cgetnum(char *, const char *, long *);
                      ^
                       _Nonnull
/usr/local/include/stdlib.h:287:33: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnum(char *, const char *, long *);
                                    ^
/usr/local/include/stdlib.h:287:33: note: insert '_Nullable' if the pointer may be null
int      cgetnum(char *, const char *, long *);
                                    ^
                                     _Nullable
/usr/local/include/stdlib.h:287:33: note: insert '_Nonnull' if the pointer should never be null
int      cgetnum(char *, const char *, long *);
                                    ^
                                     _Nonnull
/usr/local/include/stdlib.h:287:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnum(char *, const char *, long *);
                                            ^
/usr/local/include/stdlib.h:287:41: note: insert '_Nullable' if the pointer may be null
int      cgetnum(char *, const char *, long *);
                                            ^
                                             _Nullable
/usr/local/include/stdlib.h:287:41: note: insert '_Nonnull' if the pointer should never be null
int      cgetnum(char *, const char *, long *);
                                            ^
                                             _Nonnull
/usr/local/include/stdlib.h:288:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetset(const char *);
                            ^
/usr/local/include/stdlib.h:288:25: note: insert '_Nullable' if the pointer may be null
int      cgetset(const char *);
                            ^
                             _Nullable
/usr/local/include/stdlib.h:288:25: note: insert '_Nonnull' if the pointer should never be null
int      cgetset(const char *);
                            ^
                             _Nonnull
/usr/local/include/stdlib.h:289:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                      ^
/usr/local/include/stdlib.h:289:19: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                      ^
                       _Nullable
/usr/local/include/stdlib.h:289:19: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                      ^
                       _Nonnull
/usr/local/include/stdlib.h:289:33: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                                    ^
/usr/local/include/stdlib.h:289:33: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                                    ^
                                     _Nullable
/usr/local/include/stdlib.h:289:33: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                                    ^
                                     _Nonnull
/usr/local/include/stdlib.h:289:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                                            ^
/usr/local/include/stdlib.h:289:41: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                                            ^
                                             _Nullable
/usr/local/include/stdlib.h:289:41: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                                            ^
                                             _Nonnull
/usr/local/include/stdlib.h:289:42: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                                             ^
/usr/local/include/stdlib.h:289:42: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                                             ^
                                              _Nullable
/usr/local/include/stdlib.h:289:42: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                                             ^
                                              _Nonnull
/usr/local/include/stdlib.h:290:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                       ^
/usr/local/include/stdlib.h:290:20: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                       ^
                        _Nullable
/usr/local/include/stdlib.h:290:20: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                       ^
                        _Nonnull
/usr/local/include/stdlib.h:290:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                                     ^
/usr/local/include/stdlib.h:290:34: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                                     ^
                                      _Nullable
/usr/local/include/stdlib.h:290:34: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                                     ^
                                      _Nonnull
/usr/local/include/stdlib.h:290:42: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                                             ^
/usr/local/include/stdlib.h:290:42: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                                             ^
                                              _Nullable
/usr/local/include/stdlib.h:290:42: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                                             ^
                                              _Nonnull
/usr/local/include/stdlib.h:290:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                                              ^
/usr/local/include/stdlib.h:290:43: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                                              ^
                                               _Nullable
/usr/local/include/stdlib.h:290:43: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                                              ^
                                               _Nonnull
/usr/local/include/stdlib.h:293:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *devname(dev_t, mode_t);
        ^
/usr/local/include/stdlib.h:293:6: note: insert '_Nullable' if the pointer may be null
char    *devname(dev_t, mode_t);
        ^
          _Nullable 
/usr/local/include/stdlib.h:293:6: note: insert '_Nonnull' if the pointer should never be null
char    *devname(dev_t, mode_t);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:294:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *devname_r(dev_t, mode_t, char *buf, int len);
                                       ^
/usr/local/include/stdlib.h:294:37: note: insert '_Nullable' if the pointer may be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
                                       ^
                                         _Nullable 
/usr/local/include/stdlib.h:294:37: note: insert '_Nonnull' if the pointer should never be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
                                       ^
                                         _Nonnull 
/usr/local/include/stdlib.h:294:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *devname_r(dev_t, mode_t, char *buf, int len);
        ^
/usr/local/include/stdlib.h:294:6: note: insert '_Nullable' if the pointer may be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
        ^
          _Nullable 
/usr/local/include/stdlib.h:294:6: note: insert '_Nonnull' if the pointer should never be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:295:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getbsize(int *, long *);
                      ^
/usr/local/include/stdlib.h:295:20: note: insert '_Nullable' if the pointer may be null
char    *getbsize(int *, long *);
                      ^
                       _Nullable
/usr/local/include/stdlib.h:295:20: note: insert '_Nonnull' if the pointer should never be null
char    *getbsize(int *, long *);
                      ^
                       _Nonnull
/usr/local/include/stdlib.h:295:28: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getbsize(int *, long *);
                              ^
/usr/local/include/stdlib.h:295:28: note: insert '_Nullable' if the pointer may be null
char    *getbsize(int *, long *);
                              ^
                               _Nullable
/usr/local/include/stdlib.h:295:28: note: insert '_Nonnull' if the pointer should never be null
char    *getbsize(int *, long *);
                              ^
                               _Nonnull
/usr/local/include/stdlib.h:295:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getbsize(int *, long *);
        ^
/usr/local/include/stdlib.h:295:6: note: insert '_Nullable' if the pointer may be null
char    *getbsize(int *, long *);
        ^
          _Nullable 
/usr/local/include/stdlib.h:295:6: note: insert '_Nonnull' if the pointer should never be null
char    *getbsize(int *, long *);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:296:24: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
int      getloadavg(double [], int);
                           ^
/usr/local/include/stdlib.h:296:24: note: insert '_Nullable' if the array parameter may be null
int      getloadavg(double [], int);
                           ^
                            _Nullable
/usr/local/include/stdlib.h:296:24: note: insert '_Nonnull' if the array parameter should never be null
int      getloadavg(double [], int);
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:298:2: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        *getprogname(void);
        ^
/usr/local/include/stdlib.h:298:2: note: insert '_Nullable' if the pointer may be null
        *getprogname(void);
        ^
          _Nullable 
/usr/local/include/stdlib.h:298:2: note: insert '_Nonnull' if the pointer should never be null
        *getprogname(void);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:299:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     setprogname(const char *);
                                ^
/usr/local/include/stdlib.h:299:30: note: insert '_Nullable' if the pointer may be null
void     setprogname(const char *);
                                ^
                                 _Nullable
/usr/local/include/stdlib.h:299:30: note: insert '_Nonnull' if the pointer should never be null
void     setprogname(const char *);
                                ^
                                 _Nonnull
/usr/local/include/stdlib.h:309:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      heapsort(void *__base, size_t __nel, size_t __width,
                       ^
/usr/local/include/stdlib.h:309:20: note: insert '_Nullable' if the pointer may be null
int      heapsort(void *__base, size_t __nel, size_t __width,
                       ^
                         _Nullable 
/usr/local/include/stdlib.h:309:20: note: insert '_Nonnull' if the pointer should never be null
int      heapsort(void *__base, size_t __nel, size_t __width,
                       ^
                         _Nonnull 
/usr/local/include/stdlib.h:310:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
/usr/local/include/stdlib.h:310:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:310:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:310:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
/usr/local/include/stdlib.h:310:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:310:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:312:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      heapsort_b(void *__base, size_t __nel, size_t __width,
                         ^
/usr/local/include/stdlib.h:312:22: note: insert '_Nullable' if the pointer may be null
int      heapsort_b(void *__base, size_t __nel, size_t __width,
                         ^
                           _Nullable 
/usr/local/include/stdlib.h:312:22: note: insert '_Nonnull' if the pointer should never be null
int      heapsort_b(void *__base, size_t __nel, size_t __width,
                         ^
                           _Nonnull 
/usr/local/include/stdlib.h:313:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
/usr/local/include/stdlib.h:313:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:313:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:313:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
/usr/local/include/stdlib.h:313:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:313:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:316:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mergesort(void *__base, size_t __nel, size_t __width,
                        ^
/usr/local/include/stdlib.h:316:21: note: insert '_Nullable' if the pointer may be null
int      mergesort(void *__base, size_t __nel, size_t __width,
                        ^
                          _Nullable 
/usr/local/include/stdlib.h:316:21: note: insert '_Nonnull' if the pointer should never be null
int      mergesort(void *__base, size_t __nel, size_t __width,
                        ^
                          _Nonnull 
/usr/local/include/stdlib.h:317:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
/usr/local/include/stdlib.h:317:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:317:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:317:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
/usr/local/include/stdlib.h:317:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:317:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:319:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mergesort_b(void *__base, size_t __nel, size_t __width,
                          ^
/usr/local/include/stdlib.h:319:23: note: insert '_Nullable' if the pointer may be null
int      mergesort_b(void *__base, size_t __nel, size_t __width,
                          ^
                            _Nullable 
/usr/local/include/stdlib.h:319:23: note: insert '_Nonnull' if the pointer should never be null
int      mergesort_b(void *__base, size_t __nel, size_t __width,
                          ^
                            _Nonnull 
/usr/local/include/stdlib.h:320:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
/usr/local/include/stdlib.h:320:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:320:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:320:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
/usr/local/include/stdlib.h:320:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:320:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:323:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort(void *__base, size_t __nel, size_t __width,
                    ^
/usr/local/include/stdlib.h:323:18: note: insert '_Nullable' if the pointer may be null
void     psort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nullable 
/usr/local/include/stdlib.h:323:18: note: insert '_Nonnull' if the pointer should never be null
void     psort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nonnull 
/usr/local/include/stdlib.h:324:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *))
                                                 ^
/usr/local/include/stdlib.h:324:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *))
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:324:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *))
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:324:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *))
                                                               ^
/usr/local/include/stdlib.h:324:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *))
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:324:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *))
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:327:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort_b(void *__base, size_t __nel, size_t __width,
                      ^
/usr/local/include/stdlib.h:327:20: note: insert '_Nullable' if the pointer may be null
void     psort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nullable 
/usr/local/include/stdlib.h:327:20: note: insert '_Nonnull' if the pointer should never be null
void     psort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nonnull 
/usr/local/include/stdlib.h:328:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
/usr/local/include/stdlib.h:328:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:328:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:328:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
/usr/local/include/stdlib.h:328:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:328:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:331:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
/usr/local/include/stdlib.h:331:20: note: insert '_Nullable' if the pointer may be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nullable 
/usr/local/include/stdlib.h:331:20: note: insert '_Nonnull' if the pointer should never be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nonnull 
/usr/local/include/stdlib.h:331:64: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
/usr/local/include/stdlib.h:331:64: note: insert '_Nullable' if the pointer may be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nullable
/usr/local/include/stdlib.h:331:64: note: insert '_Nonnull' if the pointer should never be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nonnull
/usr/local/include/stdlib.h:332:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                           ^
/usr/local/include/stdlib.h:332:37: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                           ^
                                            _Nullable
/usr/local/include/stdlib.h:332:37: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                           ^
                                            _Nonnull
/usr/local/include/stdlib.h:332:51: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                                         ^
/usr/local/include/stdlib.h:332:51: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                                         ^
                                                          _Nullable
/usr/local/include/stdlib.h:332:51: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                                         ^
                                                          _Nonnull
/usr/local/include/stdlib.h:332:65: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                                                       ^
/usr/local/include/stdlib.h:332:65: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                                                       ^
                                                                        _Nullable
/usr/local/include/stdlib.h:332:65: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                                                       ^
                                                                        _Nonnull
/usr/local/include/stdlib.h:335:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort_b(void *__base, size_t __nel, size_t __width,
                      ^
/usr/local/include/stdlib.h:335:20: note: insert '_Nullable' if the pointer may be null
void     qsort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nullable 
/usr/local/include/stdlib.h:335:20: note: insert '_Nonnull' if the pointer should never be null
void     qsort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nonnull 
/usr/local/include/stdlib.h:336:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
/usr/local/include/stdlib.h:336:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:336:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:336:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
/usr/local/include/stdlib.h:336:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:336:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:339:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
/usr/local/include/stdlib.h:339:20: note: insert '_Nullable' if the pointer may be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nullable 
/usr/local/include/stdlib.h:339:20: note: insert '_Nonnull' if the pointer should never be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nonnull 
/usr/local/include/stdlib.h:339:64: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
/usr/local/include/stdlib.h:339:64: note: insert '_Nullable' if the pointer may be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nullable
/usr/local/include/stdlib.h:339:64: note: insert '_Nonnull' if the pointer should never be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nonnull
/usr/local/include/stdlib.h:340:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                           ^
/usr/local/include/stdlib.h:340:37: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                           ^
                                            _Nullable
/usr/local/include/stdlib.h:340:37: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                           ^
                                            _Nonnull
/usr/local/include/stdlib.h:340:51: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                         ^
/usr/local/include/stdlib.h:340:51: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                         ^
                                                          _Nullable
/usr/local/include/stdlib.h:340:51: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                         ^
                                                          _Nonnull
/usr/local/include/stdlib.h:340:65: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                                       ^
/usr/local/include/stdlib.h:340:65: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                                       ^
                                                                        _Nullable
/usr/local/include/stdlib.h:340:65: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                                       ^
                                                                        _Nonnull
/usr/local/include/stdlib.h:341:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                       ^
/usr/local/include/stdlib.h:341:36: note: insert '_Nullable' if the pointer may be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                       ^
                                        _Nullable
/usr/local/include/stdlib.h:341:36: note: insert '_Nonnull' if the pointer should never be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                       ^
                                        _Nonnull
/usr/local/include/stdlib.h:341:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
/usr/local/include/stdlib.h:341:37: note: insert '_Nullable' if the pointer may be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                          _Nullable 
/usr/local/include/stdlib.h:341:37: note: insert '_Nonnull' if the pointer should never be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                          _Nonnull 
/usr/local/include/stdlib.h:341:77: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                ^
/usr/local/include/stdlib.h:341:77: note: insert '_Nullable' if the pointer may be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                ^
                                                                                  _Nullable 
/usr/local/include/stdlib.h:341:77: note: insert '_Nonnull' if the pointer should never be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                ^
                                                                                  _Nonnull 
/usr/local/include/stdlib.h:343:24: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int     rpmatch(const char *)
                           ^
/usr/local/include/stdlib.h:343:24: note: insert '_Nullable' if the pointer may be null
int     rpmatch(const char *)
                           ^
                            _Nullable
/usr/local/include/stdlib.h:343:24: note: insert '_Nonnull' if the pointer should never be null
int     rpmatch(const char *)
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:345:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
/usr/local/include/stdlib.h:345:37: note: insert '_Nullable' if the pointer may be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                         _Nullable
/usr/local/include/stdlib.h:345:37: note: insert '_Nonnull' if the pointer should never be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                         _Nonnull
/usr/local/include/stdlib.h:345:38: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                         ^
/usr/local/include/stdlib.h:345:38: note: insert '_Nullable' if the pointer may be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                         ^
                                           _Nullable 
/usr/local/include/stdlib.h:345:38: note: insert '_Nonnull' if the pointer should never be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                         ^
                                           _Nonnull 
/usr/local/include/stdlib.h:345:78: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                 ^
/usr/local/include/stdlib.h:345:78: note: insert '_Nullable' if the pointer may be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                 ^
                                                                                   _Nullable 
/usr/local/include/stdlib.h:345:78: note: insert '_Nonnull' if the pointer should never be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                 ^
                                                                                   _Nonnull 
/usr/local/include/stdlib.h:349:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
                       ^
/usr/local/include/stdlib.h:349:21: note: insert '_Nullable' if the pointer may be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
                       ^
                         _Nullable 
/usr/local/include/stdlib.h:349:21: note: insert '_Nonnull' if the pointer should never be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
                       ^
                         _Nonnull 
/usr/local/include/stdlib.h:349:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
        ^
/usr/local/include/stdlib.h:349:6: note: insert '_Nullable' if the pointer may be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
        ^
          _Nullable 
/usr/local/include/stdlib.h:349:6: note: insert '_Nonnull' if the pointer should never be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:351:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                            ^
/usr/local/include/stdlib.h:351:22: note: insert '_Nullable' if the pointer may be null
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                            ^
                              _Nullable 
/usr/local/include/stdlib.h:351:22: note: insert '_Nonnull' if the pointer should never be null
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                            ^
                              _Nonnull 
/usr/local/include/stdlib.h:351:84: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                                                                                          ^
/usr/local/include/stdlib.h:351:84: note: insert '_Nullable' if the pointer may be null
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                                                                                          ^
                                                                                           _Nullable
/usr/local/include/stdlib.h:351:84: note: insert '_Nonnull' if the pointer should never be null
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                                                                                          ^
                                                                                           _Nonnull
/usr/local/include/stdlib.h:351:85: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                                                                                           ^
/usr/local/include/stdlib.h:351:85: note: insert '_Nullable' if the pointer may be null
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                                                                                           ^
                                                                                             _Nullable 
/usr/local/include/stdlib.h:351:85: note: insert '_Nonnull' if the pointer should never be null
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                                                                                           ^
                                                                                             _Nonnull 
/usr/local/include/stdlib.h:355:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoq(const char *__str, char **__endptr, int __base);
                           ^
/usr/local/include/stdlib.h:355:21: note: insert '_Nullable' if the pointer may be null
         strtoq(const char *__str, char **__endptr, int __base);
                           ^
                             _Nullable 
/usr/local/include/stdlib.h:355:21: note: insert '_Nonnull' if the pointer should never be null
         strtoq(const char *__str, char **__endptr, int __base);
                           ^
                             _Nonnull 
/usr/local/include/stdlib.h:355:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoq(const char *__str, char **__endptr, int __base);
                                        ^
/usr/local/include/stdlib.h:355:34: note: insert '_Nullable' if the pointer may be null
         strtoq(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nullable
/usr/local/include/stdlib.h:355:34: note: insert '_Nonnull' if the pointer should never be null
         strtoq(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nonnull
/usr/local/include/stdlib.h:355:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoq(const char *__str, char **__endptr, int __base);
                                         ^
/usr/local/include/stdlib.h:355:35: note: insert '_Nullable' if the pointer may be null
         strtoq(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nullable 
/usr/local/include/stdlib.h:355:35: note: insert '_Nonnull' if the pointer should never be null
         strtoq(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nonnull 
/usr/local/include/stdlib.h:357:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtouq(const char *__str, char **__endptr, int __base);
                            ^
/usr/local/include/stdlib.h:357:22: note: insert '_Nullable' if the pointer may be null
         strtouq(const char *__str, char **__endptr, int __base);
                            ^
                              _Nullable 
/usr/local/include/stdlib.h:357:22: note: insert '_Nonnull' if the pointer should never be null
         strtouq(const char *__str, char **__endptr, int __base);
                            ^
                              _Nonnull 
/usr/local/include/stdlib.h:357:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtouq(const char *__str, char **__endptr, int __base);
                                         ^
/usr/local/include/stdlib.h:357:35: note: insert '_Nullable' if the pointer may be null
         strtouq(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nullable
/usr/local/include/stdlib.h:357:35: note: insert '_Nonnull' if the pointer should never be null
         strtouq(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nonnull
/usr/local/include/stdlib.h:357:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtouq(const char *__str, char **__endptr, int __base);
                                          ^
/usr/local/include/stdlib.h:357:36: note: insert '_Nullable' if the pointer may be null
         strtouq(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nullable 
/usr/local/include/stdlib.h:357:36: note: insert '_Nonnull' if the pointer should never be null
         strtouq(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nonnull 
/usr/local/include/stdlib.h:359:13: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
extern char *suboptarg;         /* getsubopt(3) external variable */
            ^
/usr/local/include/stdlib.h:359:13: note: insert '_Nullable' if the pointer may be null
extern char *suboptarg;         /* getsubopt(3) external variable */
            ^
              _Nullable 
/usr/local/include/stdlib.h:359:13: note: insert '_Nonnull' if the pointer should never be null
extern char *suboptarg;         /* getsubopt(3) external variable */
            ^
              _Nonnull 
193 warnings generated.
checked program was:
/* begin */
1: #include "ruby.h"
2: 
3: #include <mysql.h>
4: 
5: /*top*/
6: typedef int conftest_type;
7: conftest_type conftestval = (int)SSL_MODE_DISABLED;
/* end */

--------------------

have_const: checking for SSL_MODE_PREFERRED in mysql.h... -------------------- yes

"gcc -I/Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/x86_64-darwin19 -I/Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/backward -I/Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0 -I. -I/usr/local/opt/mysql-client/include/mysql  -I/usr/local/opt/libyaml/include -I/usr/local/opt/libksba/include -I/usr/local/opt/readline/include -I/usr/local/opt/zlib/include -I/usr/local/opt/openssl@1.1/include -D_XOPEN_SOURCE -D_DARWIN_C_SOURCE -D_DARWIN_UNLIMITED_SELECT -D_REENTRANT   -O3 -ggdb3 -Wall -Wextra -Wdeprecated-declarations -Wdivision-by-zero -Wimplicit-function-declaration -Wimplicit-int -Wpointer-arith -Wshorten-64-to-32 -Wwrite-strings -Wmissing-noreturn -Wno-constant-logical-operand -Wno-long-long -Wno-missing-field-initializers -Wno-overlength-strings -Wno-parentheses-equality -Wno-self-assign -Wno-tautological-compare -Wno-unused-parameter -Wno-unused-value -Wunused-variable -Wextra-tokens  -fno-common -pipe   -c conftest.c"
In file included from conftest.c:1:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby.h:33:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/ruby.h:29:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/defines.h:126:
In file included from /usr/local/include/stdio.h:64:
/usr/local/include/_stdio.h:93:16: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        unsigned char   *_base;
                        ^
/usr/local/include/_stdio.h:93:16: note: insert '_Nullable' if the pointer may be null
        unsigned char   *_base;
                        ^
                          _Nullable 
/usr/local/include/_stdio.h:93:16: note: insert '_Nonnull' if the pointer should never be null
        unsigned char   *_base;
                        ^
                          _Nonnull 
/usr/local/include/_stdio.h:138:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
/usr/local/include/_stdio.h:138:32: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
                                           _Nullable
/usr/local/include/_stdio.h:138:32: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
                                           _Nonnull
/usr/local/include/_stdio.h:138:40: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
/usr/local/include/_stdio.h:138:40: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
                                                   _Nullable
/usr/local/include/_stdio.h:138:40: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
                                                   _Nonnull
/usr/local/include/_stdio.h:139:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
/usr/local/include/_stdio.h:139:35: note: insert '_Nullable' if the pointer may be null
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
                                           _Nullable
/usr/local/include/_stdio.h:139:35: note: insert '_Nonnull' if the pointer should never be null
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
                                           _Nonnull
/usr/local/include/_stdio.h:140:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
/usr/local/include/_stdio.h:140:32: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
                                           _Nullable
/usr/local/include/_stdio.h:140:32: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
                                           _Nonnull
/usr/local/include/_stdio.h:140:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
/usr/local/include/_stdio.h:140:46: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
                                                         _Nullable
/usr/local/include/_stdio.h:140:46: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
                                                         _Nonnull
/usr/local/include/_stdio.h:144:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
/usr/local/include/_stdio.h:144:18: note: insert '_Nullable' if the pointer may be null
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
                          _Nullable 
/usr/local/include/_stdio.h:144:18: note: insert '_Nonnull' if the pointer should never be null
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
                          _Nonnull 
In file included from conftest.c:1:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby.h:33:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/ruby.h:29:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/defines.h:126:
/usr/local/include/stdio.h:67:13: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
extern FILE *__stdinp;
            ^
/usr/local/include/stdio.h:67:13: note: insert '_Nullable' if the pointer may be null
extern FILE *__stdinp;
            ^
              _Nullable 
/usr/local/include/stdio.h:67:13: note: insert '_Nonnull' if the pointer should never be null
extern FILE *__stdinp;
            ^
              _Nonnull 
/usr/local/include/stdio.h:386:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 int (* _Nullable)(void *, const char *, int),
                                        ^
/usr/local/include/stdio.h:386:41: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *, const char *, int),
                                        ^
                                         _Nullable
/usr/local/include/stdio.h:386:41: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *, const char *, int),
                                        ^
                                         _Nonnull
/usr/local/include/stdio.h:386:55: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
/usr/local/include/stdio.h:386:55: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
                                                       _Nullable
/usr/local/include/stdio.h:386:55: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
                                                       _Nonnull
/usr/local/include/stdio.h:387:44: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
/usr/local/include/stdio.h:387:44: note: insert '_Nullable' if the pointer may be null
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
                                            _Nullable
/usr/local/include/stdio.h:387:44: note: insert '_Nonnull' if the pointer should never be null
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
                                            _Nonnull
/usr/local/include/stdio.h:388:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 int (* _Nullable)(void *));
                                        ^
/usr/local/include/stdio.h:388:41: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *));
                                        ^
                                         _Nullable
/usr/local/include/stdio.h:388:41: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *));
                                        ^
                                         _Nonnull
/usr/local/include/stdio.h:384:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
FILE    *funopen(const void *,
        ^
/usr/local/include/stdio.h:384:6: note: insert '_Nullable' if the pointer may be null
FILE    *funopen(const void *,
        ^
          _Nullable 
/usr/local/include/stdio.h:384:6: note: insert '_Nonnull' if the pointer should never be null
FILE    *funopen(const void *,
        ^
          _Nonnull 
In file included from conftest.c:1:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby.h:33:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/ruby.h:29:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/defines.h:134:
/usr/local/include/stdlib.h:134:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   atof(const char *);
                         ^
/usr/local/include/stdlib.h:134:25: note: insert '_Nullable' if the pointer may be null
double   atof(const char *);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:134:25: note: insert '_Nonnull' if the pointer should never be null
double   atof(const char *);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:135:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      atoi(const char *);
                         ^
/usr/local/include/stdlib.h:135:22: note: insert '_Nullable' if the pointer may be null
int      atoi(const char *);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:135:22: note: insert '_Nonnull' if the pointer should never be null
int      atoi(const char *);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:136:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     atol(const char *);
                         ^
/usr/local/include/stdlib.h:136:23: note: insert '_Nullable' if the pointer may be null
long     atol(const char *);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:136:23: note: insert '_Nonnull' if the pointer should never be null
long     atol(const char *);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:139:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         atoll(const char *);
                          ^
/usr/local/include/stdlib.h:139:20: note: insert '_Nullable' if the pointer may be null
         atoll(const char *);
                          ^
                           _Nullable
/usr/local/include/stdlib.h:139:20: note: insert '_Nonnull' if the pointer should never be null
         atoll(const char *);
                          ^
                           _Nonnull
/usr/local/include/stdlib.h:141:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                            ^
/usr/local/include/stdlib.h:141:26: note: insert '_Nullable' if the pointer may be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                            ^
                              _Nullable 
/usr/local/include/stdlib.h:141:26: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                            ^
                              _Nonnull 
/usr/local/include/stdlib.h:141:45: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                                               ^
/usr/local/include/stdlib.h:141:45: note: insert '_Nullable' if the pointer may be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                                               ^
                                                 _Nullable 
/usr/local/include/stdlib.h:141:45: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                                               ^
                                                 _Nonnull 
/usr/local/include/stdlib.h:142:59: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                 ^
/usr/local/include/stdlib.h:142:59: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                 ^
                                                                  _Nullable
/usr/local/include/stdlib.h:142:59: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                 ^
                                                                  _Nonnull
/usr/local/include/stdlib.h:142:73: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                               ^
/usr/local/include/stdlib.h:142:73: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                               ^
                                                                                _Nullable
/usr/local/include/stdlib.h:142:73: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                               ^
                                                                                _Nonnull
/usr/local/include/stdlib.h:141:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch(const void *__key, const void *__base, size_t __nel,
        ^
/usr/local/include/stdlib.h:141:6: note: insert '_Nullable' if the pointer may be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
        ^
          _Nullable 
/usr/local/include/stdlib.h:141:6: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
        ^
          _Nonnull 
/usr/local/include/stdlib.h:147:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getenv(const char *);
                           ^
/usr/local/include/stdlib.h:147:25: note: insert '_Nullable' if the pointer may be null
char    *getenv(const char *);
                           ^
                            _Nullable
/usr/local/include/stdlib.h:147:25: note: insert '_Nonnull' if the pointer should never be null
char    *getenv(const char *);
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:147:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getenv(const char *);
        ^
/usr/local/include/stdlib.h:147:6: note: insert '_Nullable' if the pointer may be null
char    *getenv(const char *);
        ^
          _Nullable 
/usr/local/include/stdlib.h:147:6: note: insert '_Nonnull' if the pointer should never be null
char    *getenv(const char *);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:156:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mblen(const char *__s, size_t __n);
                          ^
/usr/local/include/stdlib.h:156:23: note: insert '_Nullable' if the pointer may be null
int      mblen(const char *__s, size_t __n);
                          ^
                            _Nullable 
/usr/local/include/stdlib.h:156:23: note: insert '_Nonnull' if the pointer should never be null
int      mblen(const char *__s, size_t __n);
                          ^
                            _Nonnull 
/usr/local/include/stdlib.h:157:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                          ^
/usr/local/include/stdlib.h:157:26: note: insert '_Nullable' if the pointer may be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                          ^
                            _Nullable
/usr/local/include/stdlib.h:157:26: note: insert '_Nonnull' if the pointer should never be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                          ^
                            _Nonnull
/usr/local/include/stdlib.h:157:52: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                                                    ^
/usr/local/include/stdlib.h:157:52: note: insert '_Nullable' if the pointer may be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                                                    ^
                                                      _Nullable
/usr/local/include/stdlib.h:157:52: note: insert '_Nonnull' if the pointer should never be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                                                    ^
                                                      _Nonnull
/usr/local/include/stdlib.h:158:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                        ^
/usr/local/include/stdlib.h:158:21: note: insert '_Nullable' if the pointer may be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                        ^
                          _Nullable
/usr/local/include/stdlib.h:158:21: note: insert '_Nonnull' if the pointer should never be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                        ^
                          _Nonnull
/usr/local/include/stdlib.h:158:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                                                 ^
/usr/local/include/stdlib.h:158:46: note: insert '_Nullable' if the pointer may be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                                                 ^
                                                   _Nullable
/usr/local/include/stdlib.h:158:46: note: insert '_Nonnull' if the pointer should never be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                                                 ^
                                                   _Nonnull
/usr/local/include/stdlib.h:160:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort(void *__base, size_t __nel, size_t __width,
                    ^
/usr/local/include/stdlib.h:160:18: note: insert '_Nullable' if the pointer may be null
void     qsort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nullable 
/usr/local/include/stdlib.h:160:18: note: insert '_Nonnull' if the pointer should never be null
void     qsort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nonnull 
/usr/local/include/stdlib.h:161:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
/usr/local/include/stdlib.h:161:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:161:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:161:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
/usr/local/include/stdlib.h:161:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:161:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:165:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                           ^
/usr/local/include/stdlib.h:165:27: note: insert '_Nullable' if the pointer may be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                           ^
                            _Nullable
/usr/local/include/stdlib.h:165:27: note: insert '_Nonnull' if the pointer should never be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:165:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                   ^
/usr/local/include/stdlib.h:165:35: note: insert '_Nullable' if the pointer may be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                   ^
                                    _Nullable
/usr/local/include/stdlib.h:165:35: note: insert '_Nonnull' if the pointer should never be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                   ^
                                    _Nonnull
/usr/local/include/stdlib.h:165:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                    ^
/usr/local/include/stdlib.h:165:36: note: insert '_Nullable' if the pointer may be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                    ^
                                     _Nullable
/usr/local/include/stdlib.h:165:36: note: insert '_Nonnull' if the pointer should never be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                    ^
                                     _Nonnull
/usr/local/include/stdlib.h:166:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                           ^
/usr/local/include/stdlib.h:166:26: note: insert '_Nullable' if the pointer may be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                           ^
                            _Nullable
/usr/local/include/stdlib.h:166:26: note: insert '_Nonnull' if the pointer should never be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:166:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                   ^
/usr/local/include/stdlib.h:166:34: note: insert '_Nullable' if the pointer may be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                   ^
                                    _Nullable
/usr/local/include/stdlib.h:166:34: note: insert '_Nonnull' if the pointer should never be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                   ^
                                    _Nonnull
/usr/local/include/stdlib.h:166:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                    ^
/usr/local/include/stdlib.h:166:35: note: insert '_Nullable' if the pointer may be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                    ^
                                     _Nullable
/usr/local/include/stdlib.h:166:35: note: insert '_Nonnull' if the pointer should never be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                    ^
                                     _Nonnull
/usr/local/include/stdlib.h:167:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     strtol(const char *__str, char **__endptr, int __base);
                           ^
/usr/local/include/stdlib.h:167:25: note: insert '_Nullable' if the pointer may be null
long     strtol(const char *__str, char **__endptr, int __base);
                           ^
                             _Nullable 
/usr/local/include/stdlib.h:167:25: note: insert '_Nonnull' if the pointer should never be null
long     strtol(const char *__str, char **__endptr, int __base);
                           ^
                             _Nonnull 
/usr/local/include/stdlib.h:167:38: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     strtol(const char *__str, char **__endptr, int __base);
                                        ^
/usr/local/include/stdlib.h:167:38: note: insert '_Nullable' if the pointer may be null
long     strtol(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nullable
/usr/local/include/stdlib.h:167:38: note: insert '_Nonnull' if the pointer should never be null
long     strtol(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nonnull
/usr/local/include/stdlib.h:167:39: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     strtol(const char *__str, char **__endptr, int __base);
                                         ^
/usr/local/include/stdlib.h:167:39: note: insert '_Nullable' if the pointer may be null
long     strtol(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nullable 
/usr/local/include/stdlib.h:167:39: note: insert '_Nonnull' if the pointer should never be null
long     strtol(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nonnull 
/usr/local/include/stdlib.h:169:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtold(const char *, char **);
                            ^
/usr/local/include/stdlib.h:169:22: note: insert '_Nullable' if the pointer may be null
         strtold(const char *, char **);
                            ^
                             _Nullable
/usr/local/include/stdlib.h:169:22: note: insert '_Nonnull' if the pointer should never be null
         strtold(const char *, char **);
                            ^
                             _Nonnull
/usr/local/include/stdlib.h:169:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtold(const char *, char **);
                                    ^
/usr/local/include/stdlib.h:169:30: note: insert '_Nullable' if the pointer may be null
         strtold(const char *, char **);
                                    ^
                                     _Nullable
/usr/local/include/stdlib.h:169:30: note: insert '_Nonnull' if the pointer should never be null
         strtold(const char *, char **);
                                    ^
                                     _Nonnull
/usr/local/include/stdlib.h:169:31: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtold(const char *, char **);
                                     ^
/usr/local/include/stdlib.h:169:31: note: insert '_Nullable' if the pointer may be null
         strtold(const char *, char **);
                                     ^
                                      _Nullable
/usr/local/include/stdlib.h:169:31: note: insert '_Nonnull' if the pointer should never be null
         strtold(const char *, char **);
                                     ^
                                      _Nonnull
/usr/local/include/stdlib.h:172:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoll(const char *__str, char **__endptr, int __base);
                            ^
/usr/local/include/stdlib.h:172:22: note: insert '_Nullable' if the pointer may be null
         strtoll(const char *__str, char **__endptr, int __base);
                            ^
                              _Nullable 
/usr/local/include/stdlib.h:172:22: note: insert '_Nonnull' if the pointer should never be null
         strtoll(const char *__str, char **__endptr, int __base);
                            ^
                              _Nonnull 
/usr/local/include/stdlib.h:172:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoll(const char *__str, char **__endptr, int __base);
                                         ^
/usr/local/include/stdlib.h:172:35: note: insert '_Nullable' if the pointer may be null
         strtoll(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nullable
/usr/local/include/stdlib.h:172:35: note: insert '_Nonnull' if the pointer should never be null
         strtoll(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nonnull
/usr/local/include/stdlib.h:172:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoll(const char *__str, char **__endptr, int __base);
                                          ^
/usr/local/include/stdlib.h:172:36: note: insert '_Nullable' if the pointer may be null
         strtoll(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nullable 
/usr/local/include/stdlib.h:172:36: note: insert '_Nonnull' if the pointer should never be null
         strtoll(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nonnull 
/usr/local/include/stdlib.h:175:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoul(const char *__str, char **__endptr, int __base);
                            ^
/usr/local/include/stdlib.h:175:22: note: insert '_Nullable' if the pointer may be null
         strtoul(const char *__str, char **__endptr, int __base);
                            ^
                              _Nullable 
/usr/local/include/stdlib.h:175:22: note: insert '_Nonnull' if the pointer should never be null
         strtoul(const char *__str, char **__endptr, int __base);
                            ^
                              _Nonnull 
/usr/local/include/stdlib.h:175:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoul(const char *__str, char **__endptr, int __base);
                                         ^
/usr/local/include/stdlib.h:175:35: note: insert '_Nullable' if the pointer may be null
         strtoul(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nullable
/usr/local/include/stdlib.h:175:35: note: insert '_Nonnull' if the pointer should never be null
         strtoul(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nonnull
/usr/local/include/stdlib.h:175:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoul(const char *__str, char **__endptr, int __base);
                                          ^
/usr/local/include/stdlib.h:175:36: note: insert '_Nullable' if the pointer may be null
         strtoul(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nullable 
/usr/local/include/stdlib.h:175:36: note: insert '_Nonnull' if the pointer should never be null
         strtoul(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nonnull 
/usr/local/include/stdlib.h:178:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoull(const char *__str, char **__endptr, int __base);
                             ^
/usr/local/include/stdlib.h:178:23: note: insert '_Nullable' if the pointer may be null
         strtoull(const char *__str, char **__endptr, int __base);
                             ^
                               _Nullable 
/usr/local/include/stdlib.h:178:23: note: insert '_Nonnull' if the pointer should never be null
         strtoull(const char *__str, char **__endptr, int __base);
                             ^
                               _Nonnull 
/usr/local/include/stdlib.h:178:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoull(const char *__str, char **__endptr, int __base);
                                          ^
/usr/local/include/stdlib.h:178:36: note: insert '_Nullable' if the pointer may be null
         strtoull(const char *__str, char **__endptr, int __base);
                                          ^
                                           _Nullable
/usr/local/include/stdlib.h:178:36: note: insert '_Nonnull' if the pointer should never be null
         strtoull(const char *__str, char **__endptr, int __base);
                                          ^
                                           _Nonnull
/usr/local/include/stdlib.h:178:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoull(const char *__str, char **__endptr, int __base);
                                           ^
/usr/local/include/stdlib.h:178:37: note: insert '_Nullable' if the pointer may be null
         strtoull(const char *__str, char **__endptr, int __base);
                                           ^
                                             _Nullable 
/usr/local/include/stdlib.h:178:37: note: insert '_Nonnull' if the pointer should never be null
         strtoull(const char *__str, char **__endptr, int __base);
                                           ^
                                             _Nonnull 
/usr/local/include/stdlib.h:190:24: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      system(const char *) __DARWIN_ALIAS_C(system);
                           ^
/usr/local/include/stdlib.h:190:24: note: insert '_Nullable' if the pointer may be null
int      system(const char *) __DARWIN_ALIAS_C(system);
                           ^
                            _Nullable
/usr/local/include/stdlib.h:190:24: note: insert '_Nonnull' if the pointer should never be null
int      system(const char *) __DARWIN_ALIAS_C(system);
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:194:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                       ^
/usr/local/include/stdlib.h:194:23: note: insert '_Nullable' if the pointer may be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                       ^
                         _Nullable
/usr/local/include/stdlib.h:194:23: note: insert '_Nonnull' if the pointer should never be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                       ^
                         _Nonnull
/usr/local/include/stdlib.h:194:51: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                                                   ^
/usr/local/include/stdlib.h:194:51: note: insert '_Nullable' if the pointer may be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                                                   ^
                                                     _Nullable
/usr/local/include/stdlib.h:194:51: note: insert '_Nonnull' if the pointer should never be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                                                   ^
                                                     _Nonnull
/usr/local/include/stdlib.h:195:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      wctomb(char *, wchar_t);
                     ^
/usr/local/include/stdlib.h:195:18: note: insert '_Nullable' if the pointer may be null
int      wctomb(char *, wchar_t);
                     ^
                      _Nullable
/usr/local/include/stdlib.h:195:18: note: insert '_Nonnull' if the pointer should never be null
int      wctomb(char *, wchar_t);
                     ^
                      _Nonnull
/usr/local/include/stdlib.h:199:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     a64l(const char *);
                         ^
/usr/local/include/stdlib.h:199:23: note: insert '_Nullable' if the pointer may be null
long     a64l(const char *);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:199:23: note: insert '_Nonnull' if the pointer should never be null
long     a64l(const char *);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:201:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
/usr/local/include/stdlib.h:201:29: note: insert '_Nullable' if the pointer may be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nullable 
/usr/local/include/stdlib.h:201:29: note: insert '_Nonnull' if the pointer should never be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nonnull 
/usr/local/include/stdlib.h:201:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
/usr/local/include/stdlib.h:201:46: note: insert '_Nullable' if the pointer may be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nullable 
/usr/local/include/stdlib.h:201:46: note: insert '_Nonnull' if the pointer should never be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nonnull 
/usr/local/include/stdlib.h:201:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
/usr/local/include/stdlib.h:201:6: note: insert '_Nullable' if the pointer may be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nullable 
/usr/local/include/stdlib.h:201:6: note: insert '_Nonnull' if the pointer should never be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nonnull 
/usr/local/include/stdlib.h:202:31: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
double   erand48(unsigned short[3]);
                               ^
/usr/local/include/stdlib.h:202:31: note: insert '_Nullable' if the array parameter may be null
double   erand48(unsigned short[3]);
                               ^
                                _Nullable 
/usr/local/include/stdlib.h:202:31: note: insert '_Nonnull' if the array parameter should never be null
double   erand48(unsigned short[3]);
                               ^
                                _Nonnull 
/usr/local/include/stdlib.h:203:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
/usr/local/include/stdlib.h:203:29: note: insert '_Nullable' if the pointer may be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nullable 
/usr/local/include/stdlib.h:203:29: note: insert '_Nonnull' if the pointer should never be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nonnull 
/usr/local/include/stdlib.h:203:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
/usr/local/include/stdlib.h:203:46: note: insert '_Nullable' if the pointer may be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nullable 
/usr/local/include/stdlib.h:203:46: note: insert '_Nonnull' if the pointer should never be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nonnull 
/usr/local/include/stdlib.h:203:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
/usr/local/include/stdlib.h:203:6: note: insert '_Nullable' if the pointer may be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nullable 
/usr/local/include/stdlib.h:203:6: note: insert '_Nonnull' if the pointer should never be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nonnull 
/usr/local/include/stdlib.h:204:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *gcvt(double, int, char *); /* LEGACY */
                                ^
/usr/local/include/stdlib.h:204:30: note: insert '_Nullable' if the pointer may be null
char    *gcvt(double, int, char *); /* LEGACY */
                                ^
                                 _Nullable
/usr/local/include/stdlib.h:204:30: note: insert '_Nonnull' if the pointer should never be null
char    *gcvt(double, int, char *); /* LEGACY */
                                ^
                                 _Nonnull
/usr/local/include/stdlib.h:204:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *gcvt(double, int, char *); /* LEGACY */
        ^
/usr/local/include/stdlib.h:204:6: note: insert '_Nullable' if the pointer may be null
char    *gcvt(double, int, char *); /* LEGACY */
        ^
          _Nullable 
/usr/local/include/stdlib.h:204:6: note: insert '_Nonnull' if the pointer should never be null
char    *gcvt(double, int, char *); /* LEGACY */
        ^
          _Nonnull 
/usr/local/include/stdlib.h:205:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                        ^
/usr/local/include/stdlib.h:205:21: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                        ^
                         _Nullable
/usr/local/include/stdlib.h:205:21: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                        ^
                         _Nonnull
/usr/local/include/stdlib.h:205:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                         ^
/usr/local/include/stdlib.h:205:22: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:205:22: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:205:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                 ^
/usr/local/include/stdlib.h:205:30: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                 ^
                                   _Nullable
/usr/local/include/stdlib.h:205:30: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                 ^
                                   _Nonnull
/usr/local/include/stdlib.h:205:38: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                         ^
/usr/local/include/stdlib.h:205:38: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                         ^
                                          _Nullable
/usr/local/include/stdlib.h:205:38: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                         ^
                                          _Nonnull
/usr/local/include/stdlib.h:205:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                                 ^
/usr/local/include/stdlib.h:205:46: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:205:46: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:205:47: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                                  ^
/usr/local/include/stdlib.h:205:47: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                                  ^
                                                   _Nullable
/usr/local/include/stdlib.h:205:47: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                                  ^
                                                   _Nonnull
/usr/local/include/stdlib.h:208:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
                                  ^
/usr/local/include/stdlib.h:208:32: note: insert '_Nullable' if the pointer may be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
                                  ^
                                   _Nullable
/usr/local/include/stdlib.h:208:32: note: insert '_Nonnull' if the pointer should never be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
                                  ^
                                   _Nonnull
/usr/local/include/stdlib.h:208:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
        ^
/usr/local/include/stdlib.h:208:6: note: insert '_Nullable' if the pointer may be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
        ^
          _Nullable 
/usr/local/include/stdlib.h:208:6: note: insert '_Nonnull' if the pointer should never be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
        ^
          _Nonnull 
/usr/local/include/stdlib.h:212:29: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
long     jrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
/usr/local/include/stdlib.h:212:29: note: insert '_Nullable' if the array parameter may be null
long     jrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nullable 
/usr/local/include/stdlib.h:212:29: note: insert '_Nonnull' if the array parameter should never be null
long     jrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nonnull 
/usr/local/include/stdlib.h:213:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *l64a(long);
        ^
/usr/local/include/stdlib.h:213:6: note: insert '_Nullable' if the pointer may be null
char    *l64a(long);
        ^
          _Nullable 
/usr/local/include/stdlib.h:213:6: note: insert '_Nonnull' if the pointer should never be null
char    *l64a(long);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:214:29: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
void     lcong48(unsigned short[7]);
                               ^
/usr/local/include/stdlib.h:214:29: note: insert '_Nullable' if the array parameter may be null
void     lcong48(unsigned short[7]);
                               ^
                                _Nullable 
/usr/local/include/stdlib.h:214:29: note: insert '_Nonnull' if the array parameter should never be null
void     lcong48(unsigned short[7]);
                               ^
                                _Nonnull 
/usr/local/include/stdlib.h:216:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *mktemp(char *);
                     ^
/usr/local/include/stdlib.h:216:19: note: insert '_Nullable' if the pointer may be null
char    *mktemp(char *);
                     ^
                      _Nullable
/usr/local/include/stdlib.h:216:19: note: insert '_Nonnull' if the pointer should never be null
char    *mktemp(char *);
                     ^
                      _Nonnull
/usr/local/include/stdlib.h:216:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *mktemp(char *);
        ^
/usr/local/include/stdlib.h:216:6: note: insert '_Nullable' if the pointer may be null
char    *mktemp(char *);
        ^
          _Nullable 
/usr/local/include/stdlib.h:216:6: note: insert '_Nonnull' if the pointer should never be null
char    *mktemp(char *);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:217:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mkstemp(char *);
                      ^
/usr/local/include/stdlib.h:217:19: note: insert '_Nullable' if the pointer may be null
int      mkstemp(char *);
                      ^
                       _Nullable
/usr/local/include/stdlib.h:217:19: note: insert '_Nonnull' if the pointer should never be null
int      mkstemp(char *);
                      ^
                       _Nonnull
/usr/local/include/stdlib.h:219:29: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
long     nrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
/usr/local/include/stdlib.h:219:29: note: insert '_Nullable' if the array parameter may be null
long     nrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nullable 
/usr/local/include/stdlib.h:219:29: note: insert '_Nonnull' if the array parameter should never be null
long     nrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nonnull 
/usr/local/include/stdlib.h:221:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ptsname(int);
        ^
/usr/local/include/stdlib.h:221:6: note: insert '_Nullable' if the pointer may be null
char    *ptsname(int);
        ^
          _Nullable 
/usr/local/include/stdlib.h:221:6: note: insert '_Nonnull' if the pointer should never be null
char    *ptsname(int);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:224:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int ptsname_r(int fildes, char *buffer, size_t buflen) __API_AVAILABLE(macos(10.13.4), ios(11.3), tvos(11.3), watchos(4.3));
                               ^
/usr/local/include/stdlib.h:224:32: note: insert '_Nullable' if the pointer may be null
int ptsname_r(int fildes, char *buffer, size_t buflen) __API_AVAILABLE(macos(10.13.4), ios(11.3), tvos(11.3), watchos(4.3));
                               ^
                                 _Nullable 
/usr/local/include/stdlib.h:224:32: note: insert '_Nonnull' if the pointer should never be null
int ptsname_r(int fildes, char *buffer, size_t buflen) __API_AVAILABLE(macos(10.13.4), ios(11.3), tvos(11.3), watchos(4.3));
                               ^
                                 _Nonnull 
/usr/local/include/stdlib.h:227:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      putenv(char *) __DARWIN_ALIAS(putenv);
                     ^
/usr/local/include/stdlib.h:227:18: note: insert '_Nullable' if the pointer may be null
int      putenv(char *) __DARWIN_ALIAS(putenv);
                     ^
                      _Nullable
/usr/local/include/stdlib.h:227:18: note: insert '_Nonnull' if the pointer should never be null
int      putenv(char *) __DARWIN_ALIAS(putenv);
                     ^
                      _Nonnull
/usr/local/include/stdlib.h:229:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      rand_r(unsigned *) __swift_unavailable("Use arc4random instead.");
                         ^
/usr/local/include/stdlib.h:229:22: note: insert '_Nullable' if the pointer may be null
int      rand_r(unsigned *) __swift_unavailable("Use arc4random instead.");
                         ^
                          _Nullable
/usr/local/include/stdlib.h:229:22: note: insert '_Nonnull' if the pointer should never be null
int      rand_r(unsigned *) __swift_unavailable("Use arc4random instead.");
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:231:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                             ^
/usr/local/include/stdlib.h:231:27: note: insert '_Nullable' if the pointer may be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                             ^
                               _Nullable
/usr/local/include/stdlib.h:231:27: note: insert '_Nonnull' if the pointer should never be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                             ^
                               _Nonnull
/usr/local/include/stdlib.h:231:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                                                ^
/usr/local/include/stdlib.h:231:46: note: insert '_Nullable' if the pointer may be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                                                ^
                                                  _Nullable
/usr/local/include/stdlib.h:231:46: note: insert '_Nonnull' if the pointer should never be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                                                ^
                                                  _Nonnull
/usr/local/include/stdlib.h:231:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
        ^
/usr/local/include/stdlib.h:231:6: note: insert '_Nullable' if the pointer may be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
        ^
          _Nullable 
/usr/local/include/stdlib.h:231:6: note: insert '_Nonnull' if the pointer should never be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:236:24: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
        *seed48(unsigned short[3]);
                              ^
/usr/local/include/stdlib.h:236:24: note: insert '_Nullable' if the array parameter may be null
        *seed48(unsigned short[3]);
                              ^
                               _Nullable 
/usr/local/include/stdlib.h:236:24: note: insert '_Nonnull' if the array parameter should never be null
        *seed48(unsigned short[3]);
                              ^
                               _Nonnull 
/usr/local/include/stdlib.h:236:2: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        *seed48(unsigned short[3]);
        ^
/usr/local/include/stdlib.h:236:2: note: insert '_Nullable' if the pointer may be null
        *seed48(unsigned short[3]);
        ^
          _Nullable 
/usr/local/include/stdlib.h:236:2: note: insert '_Nonnull' if the pointer should never be null
        *seed48(unsigned short[3]);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:237:24: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                           ^
/usr/local/include/stdlib.h:237:24: note: insert '_Nullable' if the pointer may be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                           ^
                             _Nullable
/usr/local/include/stdlib.h:237:24: note: insert '_Nonnull' if the pointer should never be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                           ^
                             _Nonnull
/usr/local/include/stdlib.h:237:45: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                                                ^
/usr/local/include/stdlib.h:237:45: note: insert '_Nullable' if the pointer may be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                                                ^
                                                  _Nullable
/usr/local/include/stdlib.h:237:45: note: insert '_Nonnull' if the pointer should never be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                                                ^
                                                  _Nonnull
/usr/local/include/stdlib.h:239:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     setkey(const char *) __DARWIN_ALIAS(setkey);
                           ^
/usr/local/include/stdlib.h:239:25: note: insert '_Nullable' if the pointer may be null
void     setkey(const char *) __DARWIN_ALIAS(setkey);
                           ^
                            _Nullable
/usr/local/include/stdlib.h:239:25: note: insert '_Nonnull' if the pointer should never be null
void     setkey(const char *) __DARWIN_ALIAS(setkey);
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:243:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *setstate(const char *);
                             ^
/usr/local/include/stdlib.h:243:27: note: insert '_Nullable' if the pointer may be null
char    *setstate(const char *);
                             ^
                              _Nullable
/usr/local/include/stdlib.h:243:27: note: insert '_Nonnull' if the pointer should never be null
char    *setstate(const char *);
                             ^
                              _Nonnull
/usr/local/include/stdlib.h:243:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *setstate(const char *);
        ^
/usr/local/include/stdlib.h:243:6: note: insert '_Nullable' if the pointer may be null
char    *setstate(const char *);
        ^
          _Nullable 
/usr/local/include/stdlib.h:243:6: note: insert '_Nonnull' if the pointer should never be null
char    *setstate(const char *);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:252:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      unsetenv(const char *) __DARWIN_ALIAS(unsetenv);
                             ^
/usr/local/include/stdlib.h:252:26: note: insert '_Nullable' if the pointer may be null
int      unsetenv(const char *) __DARWIN_ALIAS(unsetenv);
                             ^
                              _Nullable
/usr/local/include/stdlib.h:252:26: note: insert '_Nonnull' if the pointer should never be null
int      unsetenv(const char *) __DARWIN_ALIAS(unsetenv);
                             ^
                              _Nonnull
/usr/local/include/stdlib.h:265:42: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     arc4random_addrandom(unsigned char * /*dat*/, int /*datlen*/)
                                            ^
/usr/local/include/stdlib.h:265:42: note: insert '_Nullable' if the pointer may be null
void     arc4random_addrandom(unsigned char * /*dat*/, int /*datlen*/)
                                            ^
                                              _Nullable
/usr/local/include/stdlib.h:265:42: note: insert '_Nonnull' if the pointer should never be null
void     arc4random_addrandom(unsigned char * /*dat*/, int /*datlen*/)
                                            ^
                                              _Nonnull
/usr/local/include/stdlib.h:270:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     arc4random_buf(void * __buf, size_t __nbytes) __OSX_AVAILABLE_STARTING(__MAC_10_7, __IPHONE_4_3);
                             ^
/usr/local/include/stdlib.h:270:27: note: insert '_Nullable' if the pointer may be null
void     arc4random_buf(void * __buf, size_t __nbytes) __OSX_AVAILABLE_STARTING(__MAC_10_7, __IPHONE_4_3);
                             ^
                               _Nullable
/usr/local/include/stdlib.h:270:27: note: insert '_Nonnull' if the pointer should never be null
void     arc4random_buf(void * __buf, size_t __nbytes) __OSX_AVAILABLE_STARTING(__MAC_10_7, __IPHONE_4_3);
                             ^
                               _Nonnull
/usr/local/include/stdlib.h:276:28: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                              ^
/usr/local/include/stdlib.h:276:28: note: insert '_Nullable' if the pointer may be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                              ^
                                _Nullable 
/usr/local/include/stdlib.h:276:28: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                              ^
                                _Nonnull 
/usr/local/include/stdlib.h:276:47: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                                                 ^
/usr/local/include/stdlib.h:276:47: note: insert '_Nullable' if the pointer may be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                                                 ^
                                                   _Nullable 
/usr/local/include/stdlib.h:276:47: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                                                 ^
                                                   _Nonnull 
/usr/local/include/stdlib.h:277:59: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                 ^
/usr/local/include/stdlib.h:277:59: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                 ^
                                                                  _Nullable
/usr/local/include/stdlib.h:277:59: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                 ^
                                                                  _Nonnull
/usr/local/include/stdlib.h:277:73: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                               ^
/usr/local/include/stdlib.h:277:73: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                               ^
                                                                                _Nullable
/usr/local/include/stdlib.h:277:73: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                               ^
                                                                                _Nonnull
/usr/local/include/stdlib.h:276:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
        ^
/usr/local/include/stdlib.h:276:6: note: insert '_Nullable' if the pointer may be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
        ^
          _Nullable 
/usr/local/include/stdlib.h:276:6: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
        ^
          _Nonnull 
/usr/local/include/stdlib.h:281:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *cgetcap(char *, const char *, int);
                      ^
/usr/local/include/stdlib.h:281:20: note: insert '_Nullable' if the pointer may be null
char    *cgetcap(char *, const char *, int);
                      ^
                       _Nullable
/usr/local/include/stdlib.h:281:20: note: insert '_Nonnull' if the pointer should never be null
char    *cgetcap(char *, const char *, int);
                      ^
                       _Nonnull
/usr/local/include/stdlib.h:281:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *cgetcap(char *, const char *, int);
                                    ^
/usr/local/include/stdlib.h:281:34: note: insert '_Nullable' if the pointer may be null
char    *cgetcap(char *, const char *, int);
                                    ^
                                     _Nullable
/usr/local/include/stdlib.h:281:34: note: insert '_Nonnull' if the pointer should never be null
char    *cgetcap(char *, const char *, int);
                                    ^
                                     _Nonnull
/usr/local/include/stdlib.h:281:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *cgetcap(char *, const char *, int);
        ^
/usr/local/include/stdlib.h:281:6: note: insert '_Nullable' if the pointer may be null
char    *cgetcap(char *, const char *, int);
        ^
          _Nullable 
/usr/local/include/stdlib.h:281:6: note: insert '_Nonnull' if the pointer should never be null
char    *cgetcap(char *, const char *, int);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:283:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                      ^
/usr/local/include/stdlib.h:283:19: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                      ^
                       _Nullable
/usr/local/include/stdlib.h:283:19: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                      ^
                       _Nonnull
/usr/local/include/stdlib.h:283:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                       ^
/usr/local/include/stdlib.h:283:20: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                       ^
                        _Nullable
/usr/local/include/stdlib.h:283:20: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                       ^
                        _Nonnull
/usr/local/include/stdlib.h:283:28: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                               ^
/usr/local/include/stdlib.h:283:28: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                               ^
                                _Nullable
/usr/local/include/stdlib.h:283:28: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                               ^
                                _Nonnull
/usr/local/include/stdlib.h:283:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                                ^
/usr/local/include/stdlib.h:283:29: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                                ^
                                 _Nullable
/usr/local/include/stdlib.h:283:29: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                                ^
                                 _Nonnull
/usr/local/include/stdlib.h:283:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                                              ^
/usr/local/include/stdlib.h:283:43: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                                              ^
                                               _Nullable
/usr/local/include/stdlib.h:283:43: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                                              ^
                                               _Nonnull
/usr/local/include/stdlib.h:284:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                        ^
/usr/local/include/stdlib.h:284:21: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                        ^
                         _Nullable
/usr/local/include/stdlib.h:284:21: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                        ^
                         _Nonnull
/usr/local/include/stdlib.h:284:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                         ^
/usr/local/include/stdlib.h:284:22: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:284:22: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:284:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                                 ^
/usr/local/include/stdlib.h:284:30: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                                 ^
                                  _Nullable
/usr/local/include/stdlib.h:284:30: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                                 ^
                                  _Nonnull
/usr/local/include/stdlib.h:284:31: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                                  ^
/usr/local/include/stdlib.h:284:31: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                                  ^
                                   _Nullable
/usr/local/include/stdlib.h:284:31: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                                  ^
                                   _Nonnull
/usr/local/include/stdlib.h:285:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetmatch(const char *, const char *);
                              ^
/usr/local/include/stdlib.h:285:27: note: insert '_Nullable' if the pointer may be null
int      cgetmatch(const char *, const char *);
                              ^
                               _Nullable
/usr/local/include/stdlib.h:285:27: note: insert '_Nonnull' if the pointer should never be null
int      cgetmatch(const char *, const char *);
                              ^
                               _Nonnull
/usr/local/include/stdlib.h:285:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetmatch(const char *, const char *);
                                            ^
/usr/local/include/stdlib.h:285:41: note: insert '_Nullable' if the pointer may be null
int      cgetmatch(const char *, const char *);
                                            ^
                                             _Nullable
/usr/local/include/stdlib.h:285:41: note: insert '_Nonnull' if the pointer should never be null
int      cgetmatch(const char *, const char *);
                                            ^
                                             _Nonnull
/usr/local/include/stdlib.h:286:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                       ^
/usr/local/include/stdlib.h:286:20: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                       ^
                        _Nullable
/usr/local/include/stdlib.h:286:20: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                       ^
                        _Nonnull
/usr/local/include/stdlib.h:286:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                        ^
/usr/local/include/stdlib.h:286:21: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                        ^
                         _Nullable
/usr/local/include/stdlib.h:286:21: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                        ^
                         _Nonnull
/usr/local/include/stdlib.h:286:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                                ^
/usr/local/include/stdlib.h:286:29: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                                ^
                                 _Nullable
/usr/local/include/stdlib.h:286:29: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                                ^
                                 _Nonnull
/usr/local/include/stdlib.h:286:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                                 ^
/usr/local/include/stdlib.h:286:30: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                                 ^
                                  _Nullable
/usr/local/include/stdlib.h:286:30: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                                 ^
                                  _Nonnull
/usr/local/include/stdlib.h:287:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnum(char *, const char *, long *);
                      ^
/usr/local/include/stdlib.h:287:19: note: insert '_Nullable' if the pointer may be null
int      cgetnum(char *, const char *, long *);
                      ^
                       _Nullable
/usr/local/include/stdlib.h:287:19: note: insert '_Nonnull' if the pointer should never be null
int      cgetnum(char *, const char *, long *);
                      ^
                       _Nonnull
/usr/local/include/stdlib.h:287:33: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnum(char *, const char *, long *);
                                    ^
/usr/local/include/stdlib.h:287:33: note: insert '_Nullable' if the pointer may be null
int      cgetnum(char *, const char *, long *);
                                    ^
                                     _Nullable
/usr/local/include/stdlib.h:287:33: note: insert '_Nonnull' if the pointer should never be null
int      cgetnum(char *, const char *, long *);
                                    ^
                                     _Nonnull
/usr/local/include/stdlib.h:287:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnum(char *, const char *, long *);
                                            ^
/usr/local/include/stdlib.h:287:41: note: insert '_Nullable' if the pointer may be null
int      cgetnum(char *, const char *, long *);
                                            ^
                                             _Nullable
/usr/local/include/stdlib.h:287:41: note: insert '_Nonnull' if the pointer should never be null
int      cgetnum(char *, const char *, long *);
                                            ^
                                             _Nonnull
/usr/local/include/stdlib.h:288:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetset(const char *);
                            ^
/usr/local/include/stdlib.h:288:25: note: insert '_Nullable' if the pointer may be null
int      cgetset(const char *);
                            ^
                             _Nullable
/usr/local/include/stdlib.h:288:25: note: insert '_Nonnull' if the pointer should never be null
int      cgetset(const char *);
                            ^
                             _Nonnull
/usr/local/include/stdlib.h:289:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                      ^
/usr/local/include/stdlib.h:289:19: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                      ^
                       _Nullable
/usr/local/include/stdlib.h:289:19: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                      ^
                       _Nonnull
/usr/local/include/stdlib.h:289:33: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                                    ^
/usr/local/include/stdlib.h:289:33: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                                    ^
                                     _Nullable
/usr/local/include/stdlib.h:289:33: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                                    ^
                                     _Nonnull
/usr/local/include/stdlib.h:289:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                                            ^
/usr/local/include/stdlib.h:289:41: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                                            ^
                                             _Nullable
/usr/local/include/stdlib.h:289:41: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                                            ^
                                             _Nonnull
/usr/local/include/stdlib.h:289:42: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                                             ^
/usr/local/include/stdlib.h:289:42: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                                             ^
                                              _Nullable
/usr/local/include/stdlib.h:289:42: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                                             ^
                                              _Nonnull
/usr/local/include/stdlib.h:290:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                       ^
/usr/local/include/stdlib.h:290:20: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                       ^
                        _Nullable
/usr/local/include/stdlib.h:290:20: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                       ^
                        _Nonnull
/usr/local/include/stdlib.h:290:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                                     ^
/usr/local/include/stdlib.h:290:34: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                                     ^
                                      _Nullable
/usr/local/include/stdlib.h:290:34: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                                     ^
                                      _Nonnull
/usr/local/include/stdlib.h:290:42: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                                             ^
/usr/local/include/stdlib.h:290:42: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                                             ^
                                              _Nullable
/usr/local/include/stdlib.h:290:42: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                                             ^
                                              _Nonnull
/usr/local/include/stdlib.h:290:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                                              ^
/usr/local/include/stdlib.h:290:43: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                                              ^
                                               _Nullable
/usr/local/include/stdlib.h:290:43: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                                              ^
                                               _Nonnull
/usr/local/include/stdlib.h:293:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *devname(dev_t, mode_t);
        ^
/usr/local/include/stdlib.h:293:6: note: insert '_Nullable' if the pointer may be null
char    *devname(dev_t, mode_t);
        ^
          _Nullable 
/usr/local/include/stdlib.h:293:6: note: insert '_Nonnull' if the pointer should never be null
char    *devname(dev_t, mode_t);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:294:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *devname_r(dev_t, mode_t, char *buf, int len);
                                       ^
/usr/local/include/stdlib.h:294:37: note: insert '_Nullable' if the pointer may be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
                                       ^
                                         _Nullable 
/usr/local/include/stdlib.h:294:37: note: insert '_Nonnull' if the pointer should never be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
                                       ^
                                         _Nonnull 
/usr/local/include/stdlib.h:294:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *devname_r(dev_t, mode_t, char *buf, int len);
        ^
/usr/local/include/stdlib.h:294:6: note: insert '_Nullable' if the pointer may be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
        ^
          _Nullable 
/usr/local/include/stdlib.h:294:6: note: insert '_Nonnull' if the pointer should never be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:295:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getbsize(int *, long *);
                      ^
/usr/local/include/stdlib.h:295:20: note: insert '_Nullable' if the pointer may be null
char    *getbsize(int *, long *);
                      ^
                       _Nullable
/usr/local/include/stdlib.h:295:20: note: insert '_Nonnull' if the pointer should never be null
char    *getbsize(int *, long *);
                      ^
                       _Nonnull
/usr/local/include/stdlib.h:295:28: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getbsize(int *, long *);
                              ^
/usr/local/include/stdlib.h:295:28: note: insert '_Nullable' if the pointer may be null
char    *getbsize(int *, long *);
                              ^
                               _Nullable
/usr/local/include/stdlib.h:295:28: note: insert '_Nonnull' if the pointer should never be null
char    *getbsize(int *, long *);
                              ^
                               _Nonnull
/usr/local/include/stdlib.h:295:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getbsize(int *, long *);
        ^
/usr/local/include/stdlib.h:295:6: note: insert '_Nullable' if the pointer may be null
char    *getbsize(int *, long *);
        ^
          _Nullable 
/usr/local/include/stdlib.h:295:6: note: insert '_Nonnull' if the pointer should never be null
char    *getbsize(int *, long *);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:296:24: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
int      getloadavg(double [], int);
                           ^
/usr/local/include/stdlib.h:296:24: note: insert '_Nullable' if the array parameter may be null
int      getloadavg(double [], int);
                           ^
                            _Nullable
/usr/local/include/stdlib.h:296:24: note: insert '_Nonnull' if the array parameter should never be null
int      getloadavg(double [], int);
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:298:2: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        *getprogname(void);
        ^
/usr/local/include/stdlib.h:298:2: note: insert '_Nullable' if the pointer may be null
        *getprogname(void);
        ^
          _Nullable 
/usr/local/include/stdlib.h:298:2: note: insert '_Nonnull' if the pointer should never be null
        *getprogname(void);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:299:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     setprogname(const char *);
                                ^
/usr/local/include/stdlib.h:299:30: note: insert '_Nullable' if the pointer may be null
void     setprogname(const char *);
                                ^
                                 _Nullable
/usr/local/include/stdlib.h:299:30: note: insert '_Nonnull' if the pointer should never be null
void     setprogname(const char *);
                                ^
                                 _Nonnull
/usr/local/include/stdlib.h:309:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      heapsort(void *__base, size_t __nel, size_t __width,
                       ^
/usr/local/include/stdlib.h:309:20: note: insert '_Nullable' if the pointer may be null
int      heapsort(void *__base, size_t __nel, size_t __width,
                       ^
                         _Nullable 
/usr/local/include/stdlib.h:309:20: note: insert '_Nonnull' if the pointer should never be null
int      heapsort(void *__base, size_t __nel, size_t __width,
                       ^
                         _Nonnull 
/usr/local/include/stdlib.h:310:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
/usr/local/include/stdlib.h:310:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:310:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:310:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
/usr/local/include/stdlib.h:310:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:310:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:312:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      heapsort_b(void *__base, size_t __nel, size_t __width,
                         ^
/usr/local/include/stdlib.h:312:22: note: insert '_Nullable' if the pointer may be null
int      heapsort_b(void *__base, size_t __nel, size_t __width,
                         ^
                           _Nullable 
/usr/local/include/stdlib.h:312:22: note: insert '_Nonnull' if the pointer should never be null
int      heapsort_b(void *__base, size_t __nel, size_t __width,
                         ^
                           _Nonnull 
/usr/local/include/stdlib.h:313:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
/usr/local/include/stdlib.h:313:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:313:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:313:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
/usr/local/include/stdlib.h:313:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:313:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:316:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mergesort(void *__base, size_t __nel, size_t __width,
                        ^
/usr/local/include/stdlib.h:316:21: note: insert '_Nullable' if the pointer may be null
int      mergesort(void *__base, size_t __nel, size_t __width,
                        ^
                          _Nullable 
/usr/local/include/stdlib.h:316:21: note: insert '_Nonnull' if the pointer should never be null
int      mergesort(void *__base, size_t __nel, size_t __width,
                        ^
                          _Nonnull 
/usr/local/include/stdlib.h:317:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
/usr/local/include/stdlib.h:317:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:317:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:317:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
/usr/local/include/stdlib.h:317:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:317:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:319:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mergesort_b(void *__base, size_t __nel, size_t __width,
                          ^
/usr/local/include/stdlib.h:319:23: note: insert '_Nullable' if the pointer may be null
int      mergesort_b(void *__base, size_t __nel, size_t __width,
                          ^
                            _Nullable 
/usr/local/include/stdlib.h:319:23: note: insert '_Nonnull' if the pointer should never be null
int      mergesort_b(void *__base, size_t __nel, size_t __width,
                          ^
                            _Nonnull 
/usr/local/include/stdlib.h:320:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
/usr/local/include/stdlib.h:320:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:320:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:320:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
/usr/local/include/stdlib.h:320:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:320:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:323:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort(void *__base, size_t __nel, size_t __width,
                    ^
/usr/local/include/stdlib.h:323:18: note: insert '_Nullable' if the pointer may be null
void     psort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nullable 
/usr/local/include/stdlib.h:323:18: note: insert '_Nonnull' if the pointer should never be null
void     psort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nonnull 
/usr/local/include/stdlib.h:324:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *))
                                                 ^
/usr/local/include/stdlib.h:324:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *))
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:324:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *))
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:324:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *))
                                                               ^
/usr/local/include/stdlib.h:324:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *))
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:324:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *))
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:327:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort_b(void *__base, size_t __nel, size_t __width,
                      ^
/usr/local/include/stdlib.h:327:20: note: insert '_Nullable' if the pointer may be null
void     psort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nullable 
/usr/local/include/stdlib.h:327:20: note: insert '_Nonnull' if the pointer should never be null
void     psort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nonnull 
/usr/local/include/stdlib.h:328:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
/usr/local/include/stdlib.h:328:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:328:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:328:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
/usr/local/include/stdlib.h:328:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:328:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:331:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
/usr/local/include/stdlib.h:331:20: note: insert '_Nullable' if the pointer may be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nullable 
/usr/local/include/stdlib.h:331:20: note: insert '_Nonnull' if the pointer should never be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nonnull 
/usr/local/include/stdlib.h:331:64: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
/usr/local/include/stdlib.h:331:64: note: insert '_Nullable' if the pointer may be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nullable
/usr/local/include/stdlib.h:331:64: note: insert '_Nonnull' if the pointer should never be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nonnull
/usr/local/include/stdlib.h:332:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                           ^
/usr/local/include/stdlib.h:332:37: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                           ^
                                            _Nullable
/usr/local/include/stdlib.h:332:37: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                           ^
                                            _Nonnull
/usr/local/include/stdlib.h:332:51: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                                         ^
/usr/local/include/stdlib.h:332:51: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                                         ^
                                                          _Nullable
/usr/local/include/stdlib.h:332:51: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                                         ^
                                                          _Nonnull
/usr/local/include/stdlib.h:332:65: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                                                       ^
/usr/local/include/stdlib.h:332:65: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                                                       ^
                                                                        _Nullable
/usr/local/include/stdlib.h:332:65: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                                                       ^
                                                                        _Nonnull
/usr/local/include/stdlib.h:335:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort_b(void *__base, size_t __nel, size_t __width,
                      ^
/usr/local/include/stdlib.h:335:20: note: insert '_Nullable' if the pointer may be null
void     qsort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nullable 
/usr/local/include/stdlib.h:335:20: note: insert '_Nonnull' if the pointer should never be null
void     qsort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nonnull 
/usr/local/include/stdlib.h:336:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
/usr/local/include/stdlib.h:336:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:336:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:336:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
/usr/local/include/stdlib.h:336:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:336:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:339:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
/usr/local/include/stdlib.h:339:20: note: insert '_Nullable' if the pointer may be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nullable 
/usr/local/include/stdlib.h:339:20: note: insert '_Nonnull' if the pointer should never be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nonnull 
/usr/local/include/stdlib.h:339:64: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
/usr/local/include/stdlib.h:339:64: note: insert '_Nullable' if the pointer may be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nullable
/usr/local/include/stdlib.h:339:64: note: insert '_Nonnull' if the pointer should never be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nonnull
/usr/local/include/stdlib.h:340:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                           ^
/usr/local/include/stdlib.h:340:37: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                           ^
                                            _Nullable
/usr/local/include/stdlib.h:340:37: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                           ^
                                            _Nonnull
/usr/local/include/stdlib.h:340:51: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                         ^
/usr/local/include/stdlib.h:340:51: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                         ^
                                                          _Nullable
/usr/local/include/stdlib.h:340:51: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                         ^
                                                          _Nonnull
/usr/local/include/stdlib.h:340:65: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                                       ^
/usr/local/include/stdlib.h:340:65: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                                       ^
                                                                        _Nullable
/usr/local/include/stdlib.h:340:65: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                                       ^
                                                                        _Nonnull
/usr/local/include/stdlib.h:341:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                       ^
/usr/local/include/stdlib.h:341:36: note: insert '_Nullable' if the pointer may be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                       ^
                                        _Nullable
/usr/local/include/stdlib.h:341:36: note: insert '_Nonnull' if the pointer should never be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                       ^
                                        _Nonnull
/usr/local/include/stdlib.h:341:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
/usr/local/include/stdlib.h:341:37: note: insert '_Nullable' if the pointer may be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                          _Nullable 
/usr/local/include/stdlib.h:341:37: note: insert '_Nonnull' if the pointer should never be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                          _Nonnull 
/usr/local/include/stdlib.h:341:77: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                ^
/usr/local/include/stdlib.h:341:77: note: insert '_Nullable' if the pointer may be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                ^
                                                                                  _Nullable 
/usr/local/include/stdlib.h:341:77: note: insert '_Nonnull' if the pointer should never be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                ^
                                                                                  _Nonnull 
/usr/local/include/stdlib.h:343:24: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int     rpmatch(const char *)
                           ^
/usr/local/include/stdlib.h:343:24: note: insert '_Nullable' if the pointer may be null
int     rpmatch(const char *)
                           ^
                            _Nullable
/usr/local/include/stdlib.h:343:24: note: insert '_Nonnull' if the pointer should never be null
int     rpmatch(const char *)
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:345:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
/usr/local/include/stdlib.h:345:37: note: insert '_Nullable' if the pointer may be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                         _Nullable
/usr/local/include/stdlib.h:345:37: note: insert '_Nonnull' if the pointer should never be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                         _Nonnull
/usr/local/include/stdlib.h:345:38: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                         ^
/usr/local/include/stdlib.h:345:38: note: insert '_Nullable' if the pointer may be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                         ^
                                           _Nullable 
/usr/local/include/stdlib.h:345:38: note: insert '_Nonnull' if the pointer should never be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                         ^
                                           _Nonnull 
/usr/local/include/stdlib.h:345:78: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                 ^
/usr/local/include/stdlib.h:345:78: note: insert '_Nullable' if the pointer may be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                 ^
                                                                                   _Nullable 
/usr/local/include/stdlib.h:345:78: note: insert '_Nonnull' if the pointer should never be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                 ^
                                                                                   _Nonnull 
/usr/local/include/stdlib.h:349:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
                       ^
/usr/local/include/stdlib.h:349:21: note: insert '_Nullable' if the pointer may be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
                       ^
                         _Nullable 
/usr/local/include/stdlib.h:349:21: note: insert '_Nonnull' if the pointer should never be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
                       ^
                         _Nonnull 
/usr/local/include/stdlib.h:349:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
        ^
/usr/local/include/stdlib.h:349:6: note: insert '_Nullable' if the pointer may be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
        ^
          _Nullable 
/usr/local/include/stdlib.h:349:6: note: insert '_Nonnull' if the pointer should never be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:351:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                            ^
/usr/local/include/stdlib.h:351:22: note: insert '_Nullable' if the pointer may be null
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                            ^
                              _Nullable 
/usr/local/include/stdlib.h:351:22: note: insert '_Nonnull' if the pointer should never be null
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                            ^
                              _Nonnull 
/usr/local/include/stdlib.h:351:84: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                                                                                          ^
/usr/local/include/stdlib.h:351:84: note: insert '_Nullable' if the pointer may be null
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                                                                                          ^
                                                                                           _Nullable
/usr/local/include/stdlib.h:351:84: note: insert '_Nonnull' if the pointer should never be null
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                                                                                          ^
                                                                                           _Nonnull
/usr/local/include/stdlib.h:351:85: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                                                                                           ^
/usr/local/include/stdlib.h:351:85: note: insert '_Nullable' if the pointer may be null
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                                                                                           ^
                                                                                             _Nullable 
/usr/local/include/stdlib.h:351:85: note: insert '_Nonnull' if the pointer should never be null
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                                                                                           ^
                                                                                             _Nonnull 
/usr/local/include/stdlib.h:355:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoq(const char *__str, char **__endptr, int __base);
                           ^
/usr/local/include/stdlib.h:355:21: note: insert '_Nullable' if the pointer may be null
         strtoq(const char *__str, char **__endptr, int __base);
                           ^
                             _Nullable 
/usr/local/include/stdlib.h:355:21: note: insert '_Nonnull' if the pointer should never be null
         strtoq(const char *__str, char **__endptr, int __base);
                           ^
                             _Nonnull 
/usr/local/include/stdlib.h:355:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoq(const char *__str, char **__endptr, int __base);
                                        ^
/usr/local/include/stdlib.h:355:34: note: insert '_Nullable' if the pointer may be null
         strtoq(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nullable
/usr/local/include/stdlib.h:355:34: note: insert '_Nonnull' if the pointer should never be null
         strtoq(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nonnull
/usr/local/include/stdlib.h:355:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoq(const char *__str, char **__endptr, int __base);
                                         ^
/usr/local/include/stdlib.h:355:35: note: insert '_Nullable' if the pointer may be null
         strtoq(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nullable 
/usr/local/include/stdlib.h:355:35: note: insert '_Nonnull' if the pointer should never be null
         strtoq(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nonnull 
/usr/local/include/stdlib.h:357:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtouq(const char *__str, char **__endptr, int __base);
                            ^
/usr/local/include/stdlib.h:357:22: note: insert '_Nullable' if the pointer may be null
         strtouq(const char *__str, char **__endptr, int __base);
                            ^
                              _Nullable 
/usr/local/include/stdlib.h:357:22: note: insert '_Nonnull' if the pointer should never be null
         strtouq(const char *__str, char **__endptr, int __base);
                            ^
                              _Nonnull 
/usr/local/include/stdlib.h:357:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtouq(const char *__str, char **__endptr, int __base);
                                         ^
/usr/local/include/stdlib.h:357:35: note: insert '_Nullable' if the pointer may be null
         strtouq(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nullable
/usr/local/include/stdlib.h:357:35: note: insert '_Nonnull' if the pointer should never be null
         strtouq(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nonnull
/usr/local/include/stdlib.h:357:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtouq(const char *__str, char **__endptr, int __base);
                                          ^
/usr/local/include/stdlib.h:357:36: note: insert '_Nullable' if the pointer may be null
         strtouq(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nullable 
/usr/local/include/stdlib.h:357:36: note: insert '_Nonnull' if the pointer should never be null
         strtouq(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nonnull 
/usr/local/include/stdlib.h:359:13: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
extern char *suboptarg;         /* getsubopt(3) external variable */
            ^
/usr/local/include/stdlib.h:359:13: note: insert '_Nullable' if the pointer may be null
extern char *suboptarg;         /* getsubopt(3) external variable */
            ^
              _Nullable 
/usr/local/include/stdlib.h:359:13: note: insert '_Nonnull' if the pointer should never be null
extern char *suboptarg;         /* getsubopt(3) external variable */
            ^
              _Nonnull 
193 warnings generated.
checked program was:
/* begin */
1: #include "ruby.h"
2: 
3: #include <mysql.h>
4: 
5: /*top*/
6: typedef int conftest_type;
7: conftest_type conftestval = (int)SSL_MODE_PREFERRED;
/* end */

--------------------

have_const: checking for SSL_MODE_REQUIRED in mysql.h... -------------------- yes

"gcc -I/Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/x86_64-darwin19 -I/Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/backward -I/Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0 -I. -I/usr/local/opt/mysql-client/include/mysql  -I/usr/local/opt/libyaml/include -I/usr/local/opt/libksba/include -I/usr/local/opt/readline/include -I/usr/local/opt/zlib/include -I/usr/local/opt/openssl@1.1/include -D_XOPEN_SOURCE -D_DARWIN_C_SOURCE -D_DARWIN_UNLIMITED_SELECT -D_REENTRANT   -O3 -ggdb3 -Wall -Wextra -Wdeprecated-declarations -Wdivision-by-zero -Wimplicit-function-declaration -Wimplicit-int -Wpointer-arith -Wshorten-64-to-32 -Wwrite-strings -Wmissing-noreturn -Wno-constant-logical-operand -Wno-long-long -Wno-missing-field-initializers -Wno-overlength-strings -Wno-parentheses-equality -Wno-self-assign -Wno-tautological-compare -Wno-unused-parameter -Wno-unused-value -Wunused-variable -Wextra-tokens  -fno-common -pipe   -c conftest.c"
In file included from conftest.c:1:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby.h:33:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/ruby.h:29:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/defines.h:126:
In file included from /usr/local/include/stdio.h:64:
/usr/local/include/_stdio.h:93:16: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        unsigned char   *_base;
                        ^
/usr/local/include/_stdio.h:93:16: note: insert '_Nullable' if the pointer may be null
        unsigned char   *_base;
                        ^
                          _Nullable 
/usr/local/include/_stdio.h:93:16: note: insert '_Nonnull' if the pointer should never be null
        unsigned char   *_base;
                        ^
                          _Nonnull 
/usr/local/include/_stdio.h:138:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
/usr/local/include/_stdio.h:138:32: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
                                           _Nullable
/usr/local/include/_stdio.h:138:32: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
                                           _Nonnull
/usr/local/include/_stdio.h:138:40: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
/usr/local/include/_stdio.h:138:40: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
                                                   _Nullable
/usr/local/include/_stdio.h:138:40: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
                                                   _Nonnull
/usr/local/include/_stdio.h:139:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
/usr/local/include/_stdio.h:139:35: note: insert '_Nullable' if the pointer may be null
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
                                           _Nullable
/usr/local/include/_stdio.h:139:35: note: insert '_Nonnull' if the pointer should never be null
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
                                           _Nonnull
/usr/local/include/_stdio.h:140:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
/usr/local/include/_stdio.h:140:32: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
                                           _Nullable
/usr/local/include/_stdio.h:140:32: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
                                           _Nonnull
/usr/local/include/_stdio.h:140:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
/usr/local/include/_stdio.h:140:46: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
                                                         _Nullable
/usr/local/include/_stdio.h:140:46: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
                                                         _Nonnull
/usr/local/include/_stdio.h:144:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
/usr/local/include/_stdio.h:144:18: note: insert '_Nullable' if the pointer may be null
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
                          _Nullable 
/usr/local/include/_stdio.h:144:18: note: insert '_Nonnull' if the pointer should never be null
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
                          _Nonnull 
In file included from conftest.c:1:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby.h:33:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/ruby.h:29:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/defines.h:126:
/usr/local/include/stdio.h:67:13: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
extern FILE *__stdinp;
            ^
/usr/local/include/stdio.h:67:13: note: insert '_Nullable' if the pointer may be null
extern FILE *__stdinp;
            ^
              _Nullable 
/usr/local/include/stdio.h:67:13: note: insert '_Nonnull' if the pointer should never be null
extern FILE *__stdinp;
            ^
              _Nonnull 
/usr/local/include/stdio.h:386:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 int (* _Nullable)(void *, const char *, int),
                                        ^
/usr/local/include/stdio.h:386:41: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *, const char *, int),
                                        ^
                                         _Nullable
/usr/local/include/stdio.h:386:41: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *, const char *, int),
                                        ^
                                         _Nonnull
/usr/local/include/stdio.h:386:55: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
/usr/local/include/stdio.h:386:55: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
                                                       _Nullable
/usr/local/include/stdio.h:386:55: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
                                                       _Nonnull
/usr/local/include/stdio.h:387:44: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
/usr/local/include/stdio.h:387:44: note: insert '_Nullable' if the pointer may be null
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
                                            _Nullable
/usr/local/include/stdio.h:387:44: note: insert '_Nonnull' if the pointer should never be null
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
                                            _Nonnull
/usr/local/include/stdio.h:388:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 int (* _Nullable)(void *));
                                        ^
/usr/local/include/stdio.h:388:41: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *));
                                        ^
                                         _Nullable
/usr/local/include/stdio.h:388:41: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *));
                                        ^
                                         _Nonnull
/usr/local/include/stdio.h:384:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
FILE    *funopen(const void *,
        ^
/usr/local/include/stdio.h:384:6: note: insert '_Nullable' if the pointer may be null
FILE    *funopen(const void *,
        ^
          _Nullable 
/usr/local/include/stdio.h:384:6: note: insert '_Nonnull' if the pointer should never be null
FILE    *funopen(const void *,
        ^
          _Nonnull 
In file included from conftest.c:1:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby.h:33:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/ruby.h:29:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/defines.h:134:
/usr/local/include/stdlib.h:134:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   atof(const char *);
                         ^
/usr/local/include/stdlib.h:134:25: note: insert '_Nullable' if the pointer may be null
double   atof(const char *);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:134:25: note: insert '_Nonnull' if the pointer should never be null
double   atof(const char *);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:135:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      atoi(const char *);
                         ^
/usr/local/include/stdlib.h:135:22: note: insert '_Nullable' if the pointer may be null
int      atoi(const char *);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:135:22: note: insert '_Nonnull' if the pointer should never be null
int      atoi(const char *);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:136:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     atol(const char *);
                         ^
/usr/local/include/stdlib.h:136:23: note: insert '_Nullable' if the pointer may be null
long     atol(const char *);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:136:23: note: insert '_Nonnull' if the pointer should never be null
long     atol(const char *);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:139:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         atoll(const char *);
                          ^
/usr/local/include/stdlib.h:139:20: note: insert '_Nullable' if the pointer may be null
         atoll(const char *);
                          ^
                           _Nullable
/usr/local/include/stdlib.h:139:20: note: insert '_Nonnull' if the pointer should never be null
         atoll(const char *);
                          ^
                           _Nonnull
/usr/local/include/stdlib.h:141:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                            ^
/usr/local/include/stdlib.h:141:26: note: insert '_Nullable' if the pointer may be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                            ^
                              _Nullable 
/usr/local/include/stdlib.h:141:26: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                            ^
                              _Nonnull 
/usr/local/include/stdlib.h:141:45: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                                               ^
/usr/local/include/stdlib.h:141:45: note: insert '_Nullable' if the pointer may be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                                               ^
                                                 _Nullable 
/usr/local/include/stdlib.h:141:45: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                                               ^
                                                 _Nonnull 
/usr/local/include/stdlib.h:142:59: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                 ^
/usr/local/include/stdlib.h:142:59: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                 ^
                                                                  _Nullable
/usr/local/include/stdlib.h:142:59: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                 ^
                                                                  _Nonnull
/usr/local/include/stdlib.h:142:73: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                               ^
/usr/local/include/stdlib.h:142:73: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                               ^
                                                                                _Nullable
/usr/local/include/stdlib.h:142:73: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                               ^
                                                                                _Nonnull
/usr/local/include/stdlib.h:141:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch(const void *__key, const void *__base, size_t __nel,
        ^
/usr/local/include/stdlib.h:141:6: note: insert '_Nullable' if the pointer may be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
        ^
          _Nullable 
/usr/local/include/stdlib.h:141:6: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
        ^
          _Nonnull 
/usr/local/include/stdlib.h:147:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getenv(const char *);
                           ^
/usr/local/include/stdlib.h:147:25: note: insert '_Nullable' if the pointer may be null
char    *getenv(const char *);
                           ^
                            _Nullable
/usr/local/include/stdlib.h:147:25: note: insert '_Nonnull' if the pointer should never be null
char    *getenv(const char *);
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:147:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getenv(const char *);
        ^
/usr/local/include/stdlib.h:147:6: note: insert '_Nullable' if the pointer may be null
char    *getenv(const char *);
        ^
          _Nullable 
/usr/local/include/stdlib.h:147:6: note: insert '_Nonnull' if the pointer should never be null
char    *getenv(const char *);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:156:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mblen(const char *__s, size_t __n);
                          ^
/usr/local/include/stdlib.h:156:23: note: insert '_Nullable' if the pointer may be null
int      mblen(const char *__s, size_t __n);
                          ^
                            _Nullable 
/usr/local/include/stdlib.h:156:23: note: insert '_Nonnull' if the pointer should never be null
int      mblen(const char *__s, size_t __n);
                          ^
                            _Nonnull 
/usr/local/include/stdlib.h:157:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                          ^
/usr/local/include/stdlib.h:157:26: note: insert '_Nullable' if the pointer may be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                          ^
                            _Nullable
/usr/local/include/stdlib.h:157:26: note: insert '_Nonnull' if the pointer should never be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                          ^
                            _Nonnull
/usr/local/include/stdlib.h:157:52: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                                                    ^
/usr/local/include/stdlib.h:157:52: note: insert '_Nullable' if the pointer may be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                                                    ^
                                                      _Nullable
/usr/local/include/stdlib.h:157:52: note: insert '_Nonnull' if the pointer should never be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                                                    ^
                                                      _Nonnull
/usr/local/include/stdlib.h:158:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                        ^
/usr/local/include/stdlib.h:158:21: note: insert '_Nullable' if the pointer may be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                        ^
                          _Nullable
/usr/local/include/stdlib.h:158:21: note: insert '_Nonnull' if the pointer should never be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                        ^
                          _Nonnull
/usr/local/include/stdlib.h:158:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                                                 ^
/usr/local/include/stdlib.h:158:46: note: insert '_Nullable' if the pointer may be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                                                 ^
                                                   _Nullable
/usr/local/include/stdlib.h:158:46: note: insert '_Nonnull' if the pointer should never be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                                                 ^
                                                   _Nonnull
/usr/local/include/stdlib.h:160:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort(void *__base, size_t __nel, size_t __width,
                    ^
/usr/local/include/stdlib.h:160:18: note: insert '_Nullable' if the pointer may be null
void     qsort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nullable 
/usr/local/include/stdlib.h:160:18: note: insert '_Nonnull' if the pointer should never be null
void     qsort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nonnull 
/usr/local/include/stdlib.h:161:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
/usr/local/include/stdlib.h:161:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:161:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:161:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
/usr/local/include/stdlib.h:161:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:161:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:165:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                           ^
/usr/local/include/stdlib.h:165:27: note: insert '_Nullable' if the pointer may be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                           ^
                            _Nullable
/usr/local/include/stdlib.h:165:27: note: insert '_Nonnull' if the pointer should never be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:165:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                   ^
/usr/local/include/stdlib.h:165:35: note: insert '_Nullable' if the pointer may be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                   ^
                                    _Nullable
/usr/local/include/stdlib.h:165:35: note: insert '_Nonnull' if the pointer should never be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                   ^
                                    _Nonnull
/usr/local/include/stdlib.h:165:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                    ^
/usr/local/include/stdlib.h:165:36: note: insert '_Nullable' if the pointer may be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                    ^
                                     _Nullable
/usr/local/include/stdlib.h:165:36: note: insert '_Nonnull' if the pointer should never be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                    ^
                                     _Nonnull
/usr/local/include/stdlib.h:166:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                           ^
/usr/local/include/stdlib.h:166:26: note: insert '_Nullable' if the pointer may be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                           ^
                            _Nullable
/usr/local/include/stdlib.h:166:26: note: insert '_Nonnull' if the pointer should never be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:166:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                   ^
/usr/local/include/stdlib.h:166:34: note: insert '_Nullable' if the pointer may be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                   ^
                                    _Nullable
/usr/local/include/stdlib.h:166:34: note: insert '_Nonnull' if the pointer should never be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                   ^
                                    _Nonnull
/usr/local/include/stdlib.h:166:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                    ^
/usr/local/include/stdlib.h:166:35: note: insert '_Nullable' if the pointer may be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                    ^
                                     _Nullable
/usr/local/include/stdlib.h:166:35: note: insert '_Nonnull' if the pointer should never be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                    ^
                                     _Nonnull
/usr/local/include/stdlib.h:167:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     strtol(const char *__str, char **__endptr, int __base);
                           ^
/usr/local/include/stdlib.h:167:25: note: insert '_Nullable' if the pointer may be null
long     strtol(const char *__str, char **__endptr, int __base);
                           ^
                             _Nullable 
/usr/local/include/stdlib.h:167:25: note: insert '_Nonnull' if the pointer should never be null
long     strtol(const char *__str, char **__endptr, int __base);
                           ^
                             _Nonnull 
/usr/local/include/stdlib.h:167:38: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     strtol(const char *__str, char **__endptr, int __base);
                                        ^
/usr/local/include/stdlib.h:167:38: note: insert '_Nullable' if the pointer may be null
long     strtol(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nullable
/usr/local/include/stdlib.h:167:38: note: insert '_Nonnull' if the pointer should never be null
long     strtol(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nonnull
/usr/local/include/stdlib.h:167:39: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     strtol(const char *__str, char **__endptr, int __base);
                                         ^
/usr/local/include/stdlib.h:167:39: note: insert '_Nullable' if the pointer may be null
long     strtol(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nullable 
/usr/local/include/stdlib.h:167:39: note: insert '_Nonnull' if the pointer should never be null
long     strtol(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nonnull 
/usr/local/include/stdlib.h:169:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtold(const char *, char **);
                            ^
/usr/local/include/stdlib.h:169:22: note: insert '_Nullable' if the pointer may be null
         strtold(const char *, char **);
                            ^
                             _Nullable
/usr/local/include/stdlib.h:169:22: note: insert '_Nonnull' if the pointer should never be null
         strtold(const char *, char **);
                            ^
                             _Nonnull
/usr/local/include/stdlib.h:169:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtold(const char *, char **);
                                    ^
/usr/local/include/stdlib.h:169:30: note: insert '_Nullable' if the pointer may be null
         strtold(const char *, char **);
                                    ^
                                     _Nullable
/usr/local/include/stdlib.h:169:30: note: insert '_Nonnull' if the pointer should never be null
         strtold(const char *, char **);
                                    ^
                                     _Nonnull
/usr/local/include/stdlib.h:169:31: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtold(const char *, char **);
                                     ^
/usr/local/include/stdlib.h:169:31: note: insert '_Nullable' if the pointer may be null
         strtold(const char *, char **);
                                     ^
                                      _Nullable
/usr/local/include/stdlib.h:169:31: note: insert '_Nonnull' if the pointer should never be null
         strtold(const char *, char **);
                                     ^
                                      _Nonnull
/usr/local/include/stdlib.h:172:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoll(const char *__str, char **__endptr, int __base);
                            ^
/usr/local/include/stdlib.h:172:22: note: insert '_Nullable' if the pointer may be null
         strtoll(const char *__str, char **__endptr, int __base);
                            ^
                              _Nullable 
/usr/local/include/stdlib.h:172:22: note: insert '_Nonnull' if the pointer should never be null
         strtoll(const char *__str, char **__endptr, int __base);
                            ^
                              _Nonnull 
/usr/local/include/stdlib.h:172:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoll(const char *__str, char **__endptr, int __base);
                                         ^
/usr/local/include/stdlib.h:172:35: note: insert '_Nullable' if the pointer may be null
         strtoll(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nullable
/usr/local/include/stdlib.h:172:35: note: insert '_Nonnull' if the pointer should never be null
         strtoll(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nonnull
/usr/local/include/stdlib.h:172:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoll(const char *__str, char **__endptr, int __base);
                                          ^
/usr/local/include/stdlib.h:172:36: note: insert '_Nullable' if the pointer may be null
         strtoll(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nullable 
/usr/local/include/stdlib.h:172:36: note: insert '_Nonnull' if the pointer should never be null
         strtoll(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nonnull 
/usr/local/include/stdlib.h:175:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoul(const char *__str, char **__endptr, int __base);
                            ^
/usr/local/include/stdlib.h:175:22: note: insert '_Nullable' if the pointer may be null
         strtoul(const char *__str, char **__endptr, int __base);
                            ^
                              _Nullable 
/usr/local/include/stdlib.h:175:22: note: insert '_Nonnull' if the pointer should never be null
         strtoul(const char *__str, char **__endptr, int __base);
                            ^
                              _Nonnull 
/usr/local/include/stdlib.h:175:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoul(const char *__str, char **__endptr, int __base);
                                         ^
/usr/local/include/stdlib.h:175:35: note: insert '_Nullable' if the pointer may be null
         strtoul(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nullable
/usr/local/include/stdlib.h:175:35: note: insert '_Nonnull' if the pointer should never be null
         strtoul(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nonnull
/usr/local/include/stdlib.h:175:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoul(const char *__str, char **__endptr, int __base);
                                          ^
/usr/local/include/stdlib.h:175:36: note: insert '_Nullable' if the pointer may be null
         strtoul(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nullable 
/usr/local/include/stdlib.h:175:36: note: insert '_Nonnull' if the pointer should never be null
         strtoul(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nonnull 
/usr/local/include/stdlib.h:178:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoull(const char *__str, char **__endptr, int __base);
                             ^
/usr/local/include/stdlib.h:178:23: note: insert '_Nullable' if the pointer may be null
         strtoull(const char *__str, char **__endptr, int __base);
                             ^
                               _Nullable 
/usr/local/include/stdlib.h:178:23: note: insert '_Nonnull' if the pointer should never be null
         strtoull(const char *__str, char **__endptr, int __base);
                             ^
                               _Nonnull 
/usr/local/include/stdlib.h:178:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoull(const char *__str, char **__endptr, int __base);
                                          ^
/usr/local/include/stdlib.h:178:36: note: insert '_Nullable' if the pointer may be null
         strtoull(const char *__str, char **__endptr, int __base);
                                          ^
                                           _Nullable
/usr/local/include/stdlib.h:178:36: note: insert '_Nonnull' if the pointer should never be null
         strtoull(const char *__str, char **__endptr, int __base);
                                          ^
                                           _Nonnull
/usr/local/include/stdlib.h:178:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoull(const char *__str, char **__endptr, int __base);
                                           ^
/usr/local/include/stdlib.h:178:37: note: insert '_Nullable' if the pointer may be null
         strtoull(const char *__str, char **__endptr, int __base);
                                           ^
                                             _Nullable 
/usr/local/include/stdlib.h:178:37: note: insert '_Nonnull' if the pointer should never be null
         strtoull(const char *__str, char **__endptr, int __base);
                                           ^
                                             _Nonnull 
/usr/local/include/stdlib.h:190:24: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      system(const char *) __DARWIN_ALIAS_C(system);
                           ^
/usr/local/include/stdlib.h:190:24: note: insert '_Nullable' if the pointer may be null
int      system(const char *) __DARWIN_ALIAS_C(system);
                           ^
                            _Nullable
/usr/local/include/stdlib.h:190:24: note: insert '_Nonnull' if the pointer should never be null
int      system(const char *) __DARWIN_ALIAS_C(system);
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:194:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                       ^
/usr/local/include/stdlib.h:194:23: note: insert '_Nullable' if the pointer may be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                       ^
                         _Nullable
/usr/local/include/stdlib.h:194:23: note: insert '_Nonnull' if the pointer should never be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                       ^
                         _Nonnull
/usr/local/include/stdlib.h:194:51: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                                                   ^
/usr/local/include/stdlib.h:194:51: note: insert '_Nullable' if the pointer may be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                                                   ^
                                                     _Nullable
/usr/local/include/stdlib.h:194:51: note: insert '_Nonnull' if the pointer should never be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                                                   ^
                                                     _Nonnull
/usr/local/include/stdlib.h:195:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      wctomb(char *, wchar_t);
                     ^
/usr/local/include/stdlib.h:195:18: note: insert '_Nullable' if the pointer may be null
int      wctomb(char *, wchar_t);
                     ^
                      _Nullable
/usr/local/include/stdlib.h:195:18: note: insert '_Nonnull' if the pointer should never be null
int      wctomb(char *, wchar_t);
                     ^
                      _Nonnull
/usr/local/include/stdlib.h:199:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     a64l(const char *);
                         ^
/usr/local/include/stdlib.h:199:23: note: insert '_Nullable' if the pointer may be null
long     a64l(const char *);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:199:23: note: insert '_Nonnull' if the pointer should never be null
long     a64l(const char *);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:201:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
/usr/local/include/stdlib.h:201:29: note: insert '_Nullable' if the pointer may be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nullable 
/usr/local/include/stdlib.h:201:29: note: insert '_Nonnull' if the pointer should never be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nonnull 
/usr/local/include/stdlib.h:201:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
/usr/local/include/stdlib.h:201:46: note: insert '_Nullable' if the pointer may be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nullable 
/usr/local/include/stdlib.h:201:46: note: insert '_Nonnull' if the pointer should never be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nonnull 
/usr/local/include/stdlib.h:201:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
/usr/local/include/stdlib.h:201:6: note: insert '_Nullable' if the pointer may be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nullable 
/usr/local/include/stdlib.h:201:6: note: insert '_Nonnull' if the pointer should never be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nonnull 
/usr/local/include/stdlib.h:202:31: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
double   erand48(unsigned short[3]);
                               ^
/usr/local/include/stdlib.h:202:31: note: insert '_Nullable' if the array parameter may be null
double   erand48(unsigned short[3]);
                               ^
                                _Nullable 
/usr/local/include/stdlib.h:202:31: note: insert '_Nonnull' if the array parameter should never be null
double   erand48(unsigned short[3]);
                               ^
                                _Nonnull 
/usr/local/include/stdlib.h:203:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
/usr/local/include/stdlib.h:203:29: note: insert '_Nullable' if the pointer may be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nullable 
/usr/local/include/stdlib.h:203:29: note: insert '_Nonnull' if the pointer should never be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nonnull 
/usr/local/include/stdlib.h:203:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
/usr/local/include/stdlib.h:203:46: note: insert '_Nullable' if the pointer may be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nullable 
/usr/local/include/stdlib.h:203:46: note: insert '_Nonnull' if the pointer should never be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nonnull 
/usr/local/include/stdlib.h:203:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
/usr/local/include/stdlib.h:203:6: note: insert '_Nullable' if the pointer may be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nullable 
/usr/local/include/stdlib.h:203:6: note: insert '_Nonnull' if the pointer should never be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nonnull 
/usr/local/include/stdlib.h:204:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *gcvt(double, int, char *); /* LEGACY */
                                ^
/usr/local/include/stdlib.h:204:30: note: insert '_Nullable' if the pointer may be null
char    *gcvt(double, int, char *); /* LEGACY */
                                ^
                                 _Nullable
/usr/local/include/stdlib.h:204:30: note: insert '_Nonnull' if the pointer should never be null
char    *gcvt(double, int, char *); /* LEGACY */
                                ^
                                 _Nonnull
/usr/local/include/stdlib.h:204:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *gcvt(double, int, char *); /* LEGACY */
        ^
/usr/local/include/stdlib.h:204:6: note: insert '_Nullable' if the pointer may be null
char    *gcvt(double, int, char *); /* LEGACY */
        ^
          _Nullable 
/usr/local/include/stdlib.h:204:6: note: insert '_Nonnull' if the pointer should never be null
char    *gcvt(double, int, char *); /* LEGACY */
        ^
          _Nonnull 
/usr/local/include/stdlib.h:205:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                        ^
/usr/local/include/stdlib.h:205:21: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                        ^
                         _Nullable
/usr/local/include/stdlib.h:205:21: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                        ^
                         _Nonnull
/usr/local/include/stdlib.h:205:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                         ^
/usr/local/include/stdlib.h:205:22: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:205:22: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:205:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                 ^
/usr/local/include/stdlib.h:205:30: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                 ^
                                   _Nullable
/usr/local/include/stdlib.h:205:30: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                 ^
                                   _Nonnull
/usr/local/include/stdlib.h:205:38: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                         ^
/usr/local/include/stdlib.h:205:38: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                         ^
                                          _Nullable
/usr/local/include/stdlib.h:205:38: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                         ^
                                          _Nonnull
/usr/local/include/stdlib.h:205:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                                 ^
/usr/local/include/stdlib.h:205:46: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:205:46: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:205:47: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                                  ^
/usr/local/include/stdlib.h:205:47: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                                  ^
                                                   _Nullable
/usr/local/include/stdlib.h:205:47: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                                  ^
                                                   _Nonnull
/usr/local/include/stdlib.h:208:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
                                  ^
/usr/local/include/stdlib.h:208:32: note: insert '_Nullable' if the pointer may be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
                                  ^
                                   _Nullable
/usr/local/include/stdlib.h:208:32: note: insert '_Nonnull' if the pointer should never be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
                                  ^
                                   _Nonnull
/usr/local/include/stdlib.h:208:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
        ^
/usr/local/include/stdlib.h:208:6: note: insert '_Nullable' if the pointer may be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
        ^
          _Nullable 
/usr/local/include/stdlib.h:208:6: note: insert '_Nonnull' if the pointer should never be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
        ^
          _Nonnull 
/usr/local/include/stdlib.h:212:29: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
long     jrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
/usr/local/include/stdlib.h:212:29: note: insert '_Nullable' if the array parameter may be null
long     jrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nullable 
/usr/local/include/stdlib.h:212:29: note: insert '_Nonnull' if the array parameter should never be null
long     jrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nonnull 
/usr/local/include/stdlib.h:213:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *l64a(long);
        ^
/usr/local/include/stdlib.h:213:6: note: insert '_Nullable' if the pointer may be null
char    *l64a(long);
        ^
          _Nullable 
/usr/local/include/stdlib.h:213:6: note: insert '_Nonnull' if the pointer should never be null
char    *l64a(long);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:214:29: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
void     lcong48(unsigned short[7]);
                               ^
/usr/local/include/stdlib.h:214:29: note: insert '_Nullable' if the array parameter may be null
void     lcong48(unsigned short[7]);
                               ^
                                _Nullable 
/usr/local/include/stdlib.h:214:29: note: insert '_Nonnull' if the array parameter should never be null
void     lcong48(unsigned short[7]);
                               ^
                                _Nonnull 
/usr/local/include/stdlib.h:216:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *mktemp(char *);
                     ^
/usr/local/include/stdlib.h:216:19: note: insert '_Nullable' if the pointer may be null
char    *mktemp(char *);
                     ^
                      _Nullable
/usr/local/include/stdlib.h:216:19: note: insert '_Nonnull' if the pointer should never be null
char    *mktemp(char *);
                     ^
                      _Nonnull
/usr/local/include/stdlib.h:216:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *mktemp(char *);
        ^
/usr/local/include/stdlib.h:216:6: note: insert '_Nullable' if the pointer may be null
char    *mktemp(char *);
        ^
          _Nullable 
/usr/local/include/stdlib.h:216:6: note: insert '_Nonnull' if the pointer should never be null
char    *mktemp(char *);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:217:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mkstemp(char *);
                      ^
/usr/local/include/stdlib.h:217:19: note: insert '_Nullable' if the pointer may be null
int      mkstemp(char *);
                      ^
                       _Nullable
/usr/local/include/stdlib.h:217:19: note: insert '_Nonnull' if the pointer should never be null
int      mkstemp(char *);
                      ^
                       _Nonnull
/usr/local/include/stdlib.h:219:29: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
long     nrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
/usr/local/include/stdlib.h:219:29: note: insert '_Nullable' if the array parameter may be null
long     nrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nullable 
/usr/local/include/stdlib.h:219:29: note: insert '_Nonnull' if the array parameter should never be null
long     nrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nonnull 
/usr/local/include/stdlib.h:221:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ptsname(int);
        ^
/usr/local/include/stdlib.h:221:6: note: insert '_Nullable' if the pointer may be null
char    *ptsname(int);
        ^
          _Nullable 
/usr/local/include/stdlib.h:221:6: note: insert '_Nonnull' if the pointer should never be null
char    *ptsname(int);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:224:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int ptsname_r(int fildes, char *buffer, size_t buflen) __API_AVAILABLE(macos(10.13.4), ios(11.3), tvos(11.3), watchos(4.3));
                               ^
/usr/local/include/stdlib.h:224:32: note: insert '_Nullable' if the pointer may be null
int ptsname_r(int fildes, char *buffer, size_t buflen) __API_AVAILABLE(macos(10.13.4), ios(11.3), tvos(11.3), watchos(4.3));
                               ^
                                 _Nullable 
/usr/local/include/stdlib.h:224:32: note: insert '_Nonnull' if the pointer should never be null
int ptsname_r(int fildes, char *buffer, size_t buflen) __API_AVAILABLE(macos(10.13.4), ios(11.3), tvos(11.3), watchos(4.3));
                               ^
                                 _Nonnull 
/usr/local/include/stdlib.h:227:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      putenv(char *) __DARWIN_ALIAS(putenv);
                     ^
/usr/local/include/stdlib.h:227:18: note: insert '_Nullable' if the pointer may be null
int      putenv(char *) __DARWIN_ALIAS(putenv);
                     ^
                      _Nullable
/usr/local/include/stdlib.h:227:18: note: insert '_Nonnull' if the pointer should never be null
int      putenv(char *) __DARWIN_ALIAS(putenv);
                     ^
                      _Nonnull
/usr/local/include/stdlib.h:229:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      rand_r(unsigned *) __swift_unavailable("Use arc4random instead.");
                         ^
/usr/local/include/stdlib.h:229:22: note: insert '_Nullable' if the pointer may be null
int      rand_r(unsigned *) __swift_unavailable("Use arc4random instead.");
                         ^
                          _Nullable
/usr/local/include/stdlib.h:229:22: note: insert '_Nonnull' if the pointer should never be null
int      rand_r(unsigned *) __swift_unavailable("Use arc4random instead.");
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:231:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                             ^
/usr/local/include/stdlib.h:231:27: note: insert '_Nullable' if the pointer may be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                             ^
                               _Nullable
/usr/local/include/stdlib.h:231:27: note: insert '_Nonnull' if the pointer should never be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                             ^
                               _Nonnull
/usr/local/include/stdlib.h:231:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                                                ^
/usr/local/include/stdlib.h:231:46: note: insert '_Nullable' if the pointer may be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                                                ^
                                                  _Nullable
/usr/local/include/stdlib.h:231:46: note: insert '_Nonnull' if the pointer should never be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                                                ^
                                                  _Nonnull
/usr/local/include/stdlib.h:231:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
        ^
/usr/local/include/stdlib.h:231:6: note: insert '_Nullable' if the pointer may be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
        ^
          _Nullable 
/usr/local/include/stdlib.h:231:6: note: insert '_Nonnull' if the pointer should never be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:236:24: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
        *seed48(unsigned short[3]);
                              ^
/usr/local/include/stdlib.h:236:24: note: insert '_Nullable' if the array parameter may be null
        *seed48(unsigned short[3]);
                              ^
                               _Nullable 
/usr/local/include/stdlib.h:236:24: note: insert '_Nonnull' if the array parameter should never be null
        *seed48(unsigned short[3]);
                              ^
                               _Nonnull 
/usr/local/include/stdlib.h:236:2: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        *seed48(unsigned short[3]);
        ^
/usr/local/include/stdlib.h:236:2: note: insert '_Nullable' if the pointer may be null
        *seed48(unsigned short[3]);
        ^
          _Nullable 
/usr/local/include/stdlib.h:236:2: note: insert '_Nonnull' if the pointer should never be null
        *seed48(unsigned short[3]);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:237:24: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                           ^
/usr/local/include/stdlib.h:237:24: note: insert '_Nullable' if the pointer may be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                           ^
                             _Nullable
/usr/local/include/stdlib.h:237:24: note: insert '_Nonnull' if the pointer should never be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                           ^
                             _Nonnull
/usr/local/include/stdlib.h:237:45: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                                                ^
/usr/local/include/stdlib.h:237:45: note: insert '_Nullable' if the pointer may be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                                                ^
                                                  _Nullable
/usr/local/include/stdlib.h:237:45: note: insert '_Nonnull' if the pointer should never be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                                                ^
                                                  _Nonnull
/usr/local/include/stdlib.h:239:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     setkey(const char *) __DARWIN_ALIAS(setkey);
                           ^
/usr/local/include/stdlib.h:239:25: note: insert '_Nullable' if the pointer may be null
void     setkey(const char *) __DARWIN_ALIAS(setkey);
                           ^
                            _Nullable
/usr/local/include/stdlib.h:239:25: note: insert '_Nonnull' if the pointer should never be null
void     setkey(const char *) __DARWIN_ALIAS(setkey);
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:243:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *setstate(const char *);
                             ^
/usr/local/include/stdlib.h:243:27: note: insert '_Nullable' if the pointer may be null
char    *setstate(const char *);
                             ^
                              _Nullable
/usr/local/include/stdlib.h:243:27: note: insert '_Nonnull' if the pointer should never be null
char    *setstate(const char *);
                             ^
                              _Nonnull
/usr/local/include/stdlib.h:243:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *setstate(const char *);
        ^
/usr/local/include/stdlib.h:243:6: note: insert '_Nullable' if the pointer may be null
char    *setstate(const char *);
        ^
          _Nullable 
/usr/local/include/stdlib.h:243:6: note: insert '_Nonnull' if the pointer should never be null
char    *setstate(const char *);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:252:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      unsetenv(const char *) __DARWIN_ALIAS(unsetenv);
                             ^
/usr/local/include/stdlib.h:252:26: note: insert '_Nullable' if the pointer may be null
int      unsetenv(const char *) __DARWIN_ALIAS(unsetenv);
                             ^
                              _Nullable
/usr/local/include/stdlib.h:252:26: note: insert '_Nonnull' if the pointer should never be null
int      unsetenv(const char *) __DARWIN_ALIAS(unsetenv);
                             ^
                              _Nonnull
/usr/local/include/stdlib.h:265:42: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     arc4random_addrandom(unsigned char * /*dat*/, int /*datlen*/)
                                            ^
/usr/local/include/stdlib.h:265:42: note: insert '_Nullable' if the pointer may be null
void     arc4random_addrandom(unsigned char * /*dat*/, int /*datlen*/)
                                            ^
                                              _Nullable
/usr/local/include/stdlib.h:265:42: note: insert '_Nonnull' if the pointer should never be null
void     arc4random_addrandom(unsigned char * /*dat*/, int /*datlen*/)
                                            ^
                                              _Nonnull
/usr/local/include/stdlib.h:270:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     arc4random_buf(void * __buf, size_t __nbytes) __OSX_AVAILABLE_STARTING(__MAC_10_7, __IPHONE_4_3);
                             ^
/usr/local/include/stdlib.h:270:27: note: insert '_Nullable' if the pointer may be null
void     arc4random_buf(void * __buf, size_t __nbytes) __OSX_AVAILABLE_STARTING(__MAC_10_7, __IPHONE_4_3);
                             ^
                               _Nullable
/usr/local/include/stdlib.h:270:27: note: insert '_Nonnull' if the pointer should never be null
void     arc4random_buf(void * __buf, size_t __nbytes) __OSX_AVAILABLE_STARTING(__MAC_10_7, __IPHONE_4_3);
                             ^
                               _Nonnull
/usr/local/include/stdlib.h:276:28: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                              ^
/usr/local/include/stdlib.h:276:28: note: insert '_Nullable' if the pointer may be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                              ^
                                _Nullable 
/usr/local/include/stdlib.h:276:28: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                              ^
                                _Nonnull 
/usr/local/include/stdlib.h:276:47: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                                                 ^
/usr/local/include/stdlib.h:276:47: note: insert '_Nullable' if the pointer may be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                                                 ^
                                                   _Nullable 
/usr/local/include/stdlib.h:276:47: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                                                 ^
                                                   _Nonnull 
/usr/local/include/stdlib.h:277:59: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                 ^
/usr/local/include/stdlib.h:277:59: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                 ^
                                                                  _Nullable
/usr/local/include/stdlib.h:277:59: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                 ^
                                                                  _Nonnull
/usr/local/include/stdlib.h:277:73: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                               ^
/usr/local/include/stdlib.h:277:73: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                               ^
                                                                                _Nullable
/usr/local/include/stdlib.h:277:73: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                               ^
                                                                                _Nonnull
/usr/local/include/stdlib.h:276:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
        ^
/usr/local/include/stdlib.h:276:6: note: insert '_Nullable' if the pointer may be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
        ^
          _Nullable 
/usr/local/include/stdlib.h:276:6: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
        ^
          _Nonnull 
/usr/local/include/stdlib.h:281:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *cgetcap(char *, const char *, int);
                      ^
/usr/local/include/stdlib.h:281:20: note: insert '_Nullable' if the pointer may be null
char    *cgetcap(char *, const char *, int);
                      ^
                       _Nullable
/usr/local/include/stdlib.h:281:20: note: insert '_Nonnull' if the pointer should never be null
char    *cgetcap(char *, const char *, int);
                      ^
                       _Nonnull
/usr/local/include/stdlib.h:281:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *cgetcap(char *, const char *, int);
                                    ^
/usr/local/include/stdlib.h:281:34: note: insert '_Nullable' if the pointer may be null
char    *cgetcap(char *, const char *, int);
                                    ^
                                     _Nullable
/usr/local/include/stdlib.h:281:34: note: insert '_Nonnull' if the pointer should never be null
char    *cgetcap(char *, const char *, int);
                                    ^
                                     _Nonnull
/usr/local/include/stdlib.h:281:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *cgetcap(char *, const char *, int);
        ^
/usr/local/include/stdlib.h:281:6: note: insert '_Nullable' if the pointer may be null
char    *cgetcap(char *, const char *, int);
        ^
          _Nullable 
/usr/local/include/stdlib.h:281:6: note: insert '_Nonnull' if the pointer should never be null
char    *cgetcap(char *, const char *, int);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:283:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                      ^
/usr/local/include/stdlib.h:283:19: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                      ^
                       _Nullable
/usr/local/include/stdlib.h:283:19: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                      ^
                       _Nonnull
/usr/local/include/stdlib.h:283:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                       ^
/usr/local/include/stdlib.h:283:20: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                       ^
                        _Nullable
/usr/local/include/stdlib.h:283:20: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                       ^
                        _Nonnull
/usr/local/include/stdlib.h:283:28: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                               ^
/usr/local/include/stdlib.h:283:28: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                               ^
                                _Nullable
/usr/local/include/stdlib.h:283:28: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                               ^
                                _Nonnull
/usr/local/include/stdlib.h:283:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                                ^
/usr/local/include/stdlib.h:283:29: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                                ^
                                 _Nullable
/usr/local/include/stdlib.h:283:29: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                                ^
                                 _Nonnull
/usr/local/include/stdlib.h:283:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                                              ^
/usr/local/include/stdlib.h:283:43: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                                              ^
                                               _Nullable
/usr/local/include/stdlib.h:283:43: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                                              ^
                                               _Nonnull
/usr/local/include/stdlib.h:284:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                        ^
/usr/local/include/stdlib.h:284:21: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                        ^
                         _Nullable
/usr/local/include/stdlib.h:284:21: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                        ^
                         _Nonnull
/usr/local/include/stdlib.h:284:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                         ^
/usr/local/include/stdlib.h:284:22: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:284:22: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:284:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                                 ^
/usr/local/include/stdlib.h:284:30: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                                 ^
                                  _Nullable
/usr/local/include/stdlib.h:284:30: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                                 ^
                                  _Nonnull
/usr/local/include/stdlib.h:284:31: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                                  ^
/usr/local/include/stdlib.h:284:31: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                                  ^
                                   _Nullable
/usr/local/include/stdlib.h:284:31: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                                  ^
                                   _Nonnull
/usr/local/include/stdlib.h:285:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetmatch(const char *, const char *);
                              ^
/usr/local/include/stdlib.h:285:27: note: insert '_Nullable' if the pointer may be null
int      cgetmatch(const char *, const char *);
                              ^
                               _Nullable
/usr/local/include/stdlib.h:285:27: note: insert '_Nonnull' if the pointer should never be null
int      cgetmatch(const char *, const char *);
                              ^
                               _Nonnull
/usr/local/include/stdlib.h:285:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetmatch(const char *, const char *);
                                            ^
/usr/local/include/stdlib.h:285:41: note: insert '_Nullable' if the pointer may be null
int      cgetmatch(const char *, const char *);
                                            ^
                                             _Nullable
/usr/local/include/stdlib.h:285:41: note: insert '_Nonnull' if the pointer should never be null
int      cgetmatch(const char *, const char *);
                                            ^
                                             _Nonnull
/usr/local/include/stdlib.h:286:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                       ^
/usr/local/include/stdlib.h:286:20: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                       ^
                        _Nullable
/usr/local/include/stdlib.h:286:20: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                       ^
                        _Nonnull
/usr/local/include/stdlib.h:286:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                        ^
/usr/local/include/stdlib.h:286:21: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                        ^
                         _Nullable
/usr/local/include/stdlib.h:286:21: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                        ^
                         _Nonnull
/usr/local/include/stdlib.h:286:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                                ^
/usr/local/include/stdlib.h:286:29: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                                ^
                                 _Nullable
/usr/local/include/stdlib.h:286:29: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                                ^
                                 _Nonnull
/usr/local/include/stdlib.h:286:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                                 ^
/usr/local/include/stdlib.h:286:30: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                                 ^
                                  _Nullable
/usr/local/include/stdlib.h:286:30: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                                 ^
                                  _Nonnull
/usr/local/include/stdlib.h:287:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnum(char *, const char *, long *);
                      ^
/usr/local/include/stdlib.h:287:19: note: insert '_Nullable' if the pointer may be null
int      cgetnum(char *, const char *, long *);
                      ^
                       _Nullable
/usr/local/include/stdlib.h:287:19: note: insert '_Nonnull' if the pointer should never be null
int      cgetnum(char *, const char *, long *);
                      ^
                       _Nonnull
/usr/local/include/stdlib.h:287:33: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnum(char *, const char *, long *);
                                    ^
/usr/local/include/stdlib.h:287:33: note: insert '_Nullable' if the pointer may be null
int      cgetnum(char *, const char *, long *);
                                    ^
                                     _Nullable
/usr/local/include/stdlib.h:287:33: note: insert '_Nonnull' if the pointer should never be null
int      cgetnum(char *, const char *, long *);
                                    ^
                                     _Nonnull
/usr/local/include/stdlib.h:287:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnum(char *, const char *, long *);
                                            ^
/usr/local/include/stdlib.h:287:41: note: insert '_Nullable' if the pointer may be null
int      cgetnum(char *, const char *, long *);
                                            ^
                                             _Nullable
/usr/local/include/stdlib.h:287:41: note: insert '_Nonnull' if the pointer should never be null
int      cgetnum(char *, const char *, long *);
                                            ^
                                             _Nonnull
/usr/local/include/stdlib.h:288:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetset(const char *);
                            ^
/usr/local/include/stdlib.h:288:25: note: insert '_Nullable' if the pointer may be null
int      cgetset(const char *);
                            ^
                             _Nullable
/usr/local/include/stdlib.h:288:25: note: insert '_Nonnull' if the pointer should never be null
int      cgetset(const char *);
                            ^
                             _Nonnull
/usr/local/include/stdlib.h:289:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                      ^
/usr/local/include/stdlib.h:289:19: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                      ^
                       _Nullable
/usr/local/include/stdlib.h:289:19: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                      ^
                       _Nonnull
/usr/local/include/stdlib.h:289:33: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                                    ^
/usr/local/include/stdlib.h:289:33: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                                    ^
                                     _Nullable
/usr/local/include/stdlib.h:289:33: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                                    ^
                                     _Nonnull
/usr/local/include/stdlib.h:289:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                                            ^
/usr/local/include/stdlib.h:289:41: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                                            ^
                                             _Nullable
/usr/local/include/stdlib.h:289:41: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                                            ^
                                             _Nonnull
/usr/local/include/stdlib.h:289:42: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                                             ^
/usr/local/include/stdlib.h:289:42: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                                             ^
                                              _Nullable
/usr/local/include/stdlib.h:289:42: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                                             ^
                                              _Nonnull
/usr/local/include/stdlib.h:290:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                       ^
/usr/local/include/stdlib.h:290:20: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                       ^
                        _Nullable
/usr/local/include/stdlib.h:290:20: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                       ^
                        _Nonnull
/usr/local/include/stdlib.h:290:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                                     ^
/usr/local/include/stdlib.h:290:34: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                                     ^
                                      _Nullable
/usr/local/include/stdlib.h:290:34: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                                     ^
                                      _Nonnull
/usr/local/include/stdlib.h:290:42: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                                             ^
/usr/local/include/stdlib.h:290:42: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                                             ^
                                              _Nullable
/usr/local/include/stdlib.h:290:42: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                                             ^
                                              _Nonnull
/usr/local/include/stdlib.h:290:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                                              ^
/usr/local/include/stdlib.h:290:43: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                                              ^
                                               _Nullable
/usr/local/include/stdlib.h:290:43: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                                              ^
                                               _Nonnull
/usr/local/include/stdlib.h:293:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *devname(dev_t, mode_t);
        ^
/usr/local/include/stdlib.h:293:6: note: insert '_Nullable' if the pointer may be null
char    *devname(dev_t, mode_t);
        ^
          _Nullable 
/usr/local/include/stdlib.h:293:6: note: insert '_Nonnull' if the pointer should never be null
char    *devname(dev_t, mode_t);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:294:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *devname_r(dev_t, mode_t, char *buf, int len);
                                       ^
/usr/local/include/stdlib.h:294:37: note: insert '_Nullable' if the pointer may be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
                                       ^
                                         _Nullable 
/usr/local/include/stdlib.h:294:37: note: insert '_Nonnull' if the pointer should never be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
                                       ^
                                         _Nonnull 
/usr/local/include/stdlib.h:294:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *devname_r(dev_t, mode_t, char *buf, int len);
        ^
/usr/local/include/stdlib.h:294:6: note: insert '_Nullable' if the pointer may be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
        ^
          _Nullable 
/usr/local/include/stdlib.h:294:6: note: insert '_Nonnull' if the pointer should never be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:295:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getbsize(int *, long *);
                      ^
/usr/local/include/stdlib.h:295:20: note: insert '_Nullable' if the pointer may be null
char    *getbsize(int *, long *);
                      ^
                       _Nullable
/usr/local/include/stdlib.h:295:20: note: insert '_Nonnull' if the pointer should never be null
char    *getbsize(int *, long *);
                      ^
                       _Nonnull
/usr/local/include/stdlib.h:295:28: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getbsize(int *, long *);
                              ^
/usr/local/include/stdlib.h:295:28: note: insert '_Nullable' if the pointer may be null
char    *getbsize(int *, long *);
                              ^
                               _Nullable
/usr/local/include/stdlib.h:295:28: note: insert '_Nonnull' if the pointer should never be null
char    *getbsize(int *, long *);
                              ^
                               _Nonnull
/usr/local/include/stdlib.h:295:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getbsize(int *, long *);
        ^
/usr/local/include/stdlib.h:295:6: note: insert '_Nullable' if the pointer may be null
char    *getbsize(int *, long *);
        ^
          _Nullable 
/usr/local/include/stdlib.h:295:6: note: insert '_Nonnull' if the pointer should never be null
char    *getbsize(int *, long *);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:296:24: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
int      getloadavg(double [], int);
                           ^
/usr/local/include/stdlib.h:296:24: note: insert '_Nullable' if the array parameter may be null
int      getloadavg(double [], int);
                           ^
                            _Nullable
/usr/local/include/stdlib.h:296:24: note: insert '_Nonnull' if the array parameter should never be null
int      getloadavg(double [], int);
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:298:2: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        *getprogname(void);
        ^
/usr/local/include/stdlib.h:298:2: note: insert '_Nullable' if the pointer may be null
        *getprogname(void);
        ^
          _Nullable 
/usr/local/include/stdlib.h:298:2: note: insert '_Nonnull' if the pointer should never be null
        *getprogname(void);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:299:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     setprogname(const char *);
                                ^
/usr/local/include/stdlib.h:299:30: note: insert '_Nullable' if the pointer may be null
void     setprogname(const char *);
                                ^
                                 _Nullable
/usr/local/include/stdlib.h:299:30: note: insert '_Nonnull' if the pointer should never be null
void     setprogname(const char *);
                                ^
                                 _Nonnull
/usr/local/include/stdlib.h:309:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      heapsort(void *__base, size_t __nel, size_t __width,
                       ^
/usr/local/include/stdlib.h:309:20: note: insert '_Nullable' if the pointer may be null
int      heapsort(void *__base, size_t __nel, size_t __width,
                       ^
                         _Nullable 
/usr/local/include/stdlib.h:309:20: note: insert '_Nonnull' if the pointer should never be null
int      heapsort(void *__base, size_t __nel, size_t __width,
                       ^
                         _Nonnull 
/usr/local/include/stdlib.h:310:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
/usr/local/include/stdlib.h:310:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:310:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:310:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
/usr/local/include/stdlib.h:310:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:310:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:312:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      heapsort_b(void *__base, size_t __nel, size_t __width,
                         ^
/usr/local/include/stdlib.h:312:22: note: insert '_Nullable' if the pointer may be null
int      heapsort_b(void *__base, size_t __nel, size_t __width,
                         ^
                           _Nullable 
/usr/local/include/stdlib.h:312:22: note: insert '_Nonnull' if the pointer should never be null
int      heapsort_b(void *__base, size_t __nel, size_t __width,
                         ^
                           _Nonnull 
/usr/local/include/stdlib.h:313:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
/usr/local/include/stdlib.h:313:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:313:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:313:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
/usr/local/include/stdlib.h:313:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:313:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:316:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mergesort(void *__base, size_t __nel, size_t __width,
                        ^
/usr/local/include/stdlib.h:316:21: note: insert '_Nullable' if the pointer may be null
int      mergesort(void *__base, size_t __nel, size_t __width,
                        ^
                          _Nullable 
/usr/local/include/stdlib.h:316:21: note: insert '_Nonnull' if the pointer should never be null
int      mergesort(void *__base, size_t __nel, size_t __width,
                        ^
                          _Nonnull 
/usr/local/include/stdlib.h:317:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
/usr/local/include/stdlib.h:317:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:317:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:317:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
/usr/local/include/stdlib.h:317:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:317:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:319:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mergesort_b(void *__base, size_t __nel, size_t __width,
                          ^
/usr/local/include/stdlib.h:319:23: note: insert '_Nullable' if the pointer may be null
int      mergesort_b(void *__base, size_t __nel, size_t __width,
                          ^
                            _Nullable 
/usr/local/include/stdlib.h:319:23: note: insert '_Nonnull' if the pointer should never be null
int      mergesort_b(void *__base, size_t __nel, size_t __width,
                          ^
                            _Nonnull 
/usr/local/include/stdlib.h:320:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
/usr/local/include/stdlib.h:320:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:320:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:320:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
/usr/local/include/stdlib.h:320:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:320:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:323:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort(void *__base, size_t __nel, size_t __width,
                    ^
/usr/local/include/stdlib.h:323:18: note: insert '_Nullable' if the pointer may be null
void     psort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nullable 
/usr/local/include/stdlib.h:323:18: note: insert '_Nonnull' if the pointer should never be null
void     psort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nonnull 
/usr/local/include/stdlib.h:324:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *))
                                                 ^
/usr/local/include/stdlib.h:324:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *))
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:324:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *))
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:324:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *))
                                                               ^
/usr/local/include/stdlib.h:324:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *))
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:324:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *))
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:327:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort_b(void *__base, size_t __nel, size_t __width,
                      ^
/usr/local/include/stdlib.h:327:20: note: insert '_Nullable' if the pointer may be null
void     psort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nullable 
/usr/local/include/stdlib.h:327:20: note: insert '_Nonnull' if the pointer should never be null
void     psort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nonnull 
/usr/local/include/stdlib.h:328:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
/usr/local/include/stdlib.h:328:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:328:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:328:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
/usr/local/include/stdlib.h:328:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:328:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:331:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
/usr/local/include/stdlib.h:331:20: note: insert '_Nullable' if the pointer may be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nullable 
/usr/local/include/stdlib.h:331:20: note: insert '_Nonnull' if the pointer should never be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nonnull 
/usr/local/include/stdlib.h:331:64: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
/usr/local/include/stdlib.h:331:64: note: insert '_Nullable' if the pointer may be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nullable
/usr/local/include/stdlib.h:331:64: note: insert '_Nonnull' if the pointer should never be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nonnull
/usr/local/include/stdlib.h:332:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                           ^
/usr/local/include/stdlib.h:332:37: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                           ^
                                            _Nullable
/usr/local/include/stdlib.h:332:37: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                           ^
                                            _Nonnull
/usr/local/include/stdlib.h:332:51: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                                         ^
/usr/local/include/stdlib.h:332:51: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                                         ^
                                                          _Nullable
/usr/local/include/stdlib.h:332:51: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                                         ^
                                                          _Nonnull
/usr/local/include/stdlib.h:332:65: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                                                       ^
/usr/local/include/stdlib.h:332:65: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                                                       ^
                                                                        _Nullable
/usr/local/include/stdlib.h:332:65: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                                                       ^
                                                                        _Nonnull
/usr/local/include/stdlib.h:335:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort_b(void *__base, size_t __nel, size_t __width,
                      ^
/usr/local/include/stdlib.h:335:20: note: insert '_Nullable' if the pointer may be null
void     qsort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nullable 
/usr/local/include/stdlib.h:335:20: note: insert '_Nonnull' if the pointer should never be null
void     qsort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nonnull 
/usr/local/include/stdlib.h:336:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
/usr/local/include/stdlib.h:336:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:336:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:336:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
/usr/local/include/stdlib.h:336:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:336:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:339:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
/usr/local/include/stdlib.h:339:20: note: insert '_Nullable' if the pointer may be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nullable 
/usr/local/include/stdlib.h:339:20: note: insert '_Nonnull' if the pointer should never be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nonnull 
/usr/local/include/stdlib.h:339:64: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
/usr/local/include/stdlib.h:339:64: note: insert '_Nullable' if the pointer may be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nullable
/usr/local/include/stdlib.h:339:64: note: insert '_Nonnull' if the pointer should never be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nonnull
/usr/local/include/stdlib.h:340:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                           ^
/usr/local/include/stdlib.h:340:37: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                           ^
                                            _Nullable
/usr/local/include/stdlib.h:340:37: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                           ^
                                            _Nonnull
/usr/local/include/stdlib.h:340:51: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                         ^
/usr/local/include/stdlib.h:340:51: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                         ^
                                                          _Nullable
/usr/local/include/stdlib.h:340:51: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                         ^
                                                          _Nonnull
/usr/local/include/stdlib.h:340:65: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                                       ^
/usr/local/include/stdlib.h:340:65: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                                       ^
                                                                        _Nullable
/usr/local/include/stdlib.h:340:65: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                                       ^
                                                                        _Nonnull
/usr/local/include/stdlib.h:341:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                       ^
/usr/local/include/stdlib.h:341:36: note: insert '_Nullable' if the pointer may be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                       ^
                                        _Nullable
/usr/local/include/stdlib.h:341:36: note: insert '_Nonnull' if the pointer should never be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                       ^
                                        _Nonnull
/usr/local/include/stdlib.h:341:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
/usr/local/include/stdlib.h:341:37: note: insert '_Nullable' if the pointer may be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                          _Nullable 
/usr/local/include/stdlib.h:341:37: note: insert '_Nonnull' if the pointer should never be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                          _Nonnull 
/usr/local/include/stdlib.h:341:77: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                ^
/usr/local/include/stdlib.h:341:77: note: insert '_Nullable' if the pointer may be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                ^
                                                                                  _Nullable 
/usr/local/include/stdlib.h:341:77: note: insert '_Nonnull' if the pointer should never be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                ^
                                                                                  _Nonnull 
/usr/local/include/stdlib.h:343:24: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int     rpmatch(const char *)
                           ^
/usr/local/include/stdlib.h:343:24: note: insert '_Nullable' if the pointer may be null
int     rpmatch(const char *)
                           ^
                            _Nullable
/usr/local/include/stdlib.h:343:24: note: insert '_Nonnull' if the pointer should never be null
int     rpmatch(const char *)
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:345:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
/usr/local/include/stdlib.h:345:37: note: insert '_Nullable' if the pointer may be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                         _Nullable
/usr/local/include/stdlib.h:345:37: note: insert '_Nonnull' if the pointer should never be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                         _Nonnull
/usr/local/include/stdlib.h:345:38: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                         ^
/usr/local/include/stdlib.h:345:38: note: insert '_Nullable' if the pointer may be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                         ^
                                           _Nullable 
/usr/local/include/stdlib.h:345:38: note: insert '_Nonnull' if the pointer should never be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                         ^
                                           _Nonnull 
/usr/local/include/stdlib.h:345:78: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                 ^
/usr/local/include/stdlib.h:345:78: note: insert '_Nullable' if the pointer may be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                 ^
                                                                                   _Nullable 
/usr/local/include/stdlib.h:345:78: note: insert '_Nonnull' if the pointer should never be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                 ^
                                                                                   _Nonnull 
/usr/local/include/stdlib.h:349:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
                       ^
/usr/local/include/stdlib.h:349:21: note: insert '_Nullable' if the pointer may be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
                       ^
                         _Nullable 
/usr/local/include/stdlib.h:349:21: note: insert '_Nonnull' if the pointer should never be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
                       ^
                         _Nonnull 
/usr/local/include/stdlib.h:349:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
        ^
/usr/local/include/stdlib.h:349:6: note: insert '_Nullable' if the pointer may be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
        ^
          _Nullable 
/usr/local/include/stdlib.h:349:6: note: insert '_Nonnull' if the pointer should never be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:351:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                            ^
/usr/local/include/stdlib.h:351:22: note: insert '_Nullable' if the pointer may be null
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                            ^
                              _Nullable 
/usr/local/include/stdlib.h:351:22: note: insert '_Nonnull' if the pointer should never be null
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                            ^
                              _Nonnull 
/usr/local/include/stdlib.h:351:84: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                                                                                          ^
/usr/local/include/stdlib.h:351:84: note: insert '_Nullable' if the pointer may be null
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                                                                                          ^
                                                                                           _Nullable
/usr/local/include/stdlib.h:351:84: note: insert '_Nonnull' if the pointer should never be null
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                                                                                          ^
                                                                                           _Nonnull
/usr/local/include/stdlib.h:351:85: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                                                                                           ^
/usr/local/include/stdlib.h:351:85: note: insert '_Nullable' if the pointer may be null
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                                                                                           ^
                                                                                             _Nullable 
/usr/local/include/stdlib.h:351:85: note: insert '_Nonnull' if the pointer should never be null
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                                                                                           ^
                                                                                             _Nonnull 
/usr/local/include/stdlib.h:355:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoq(const char *__str, char **__endptr, int __base);
                           ^
/usr/local/include/stdlib.h:355:21: note: insert '_Nullable' if the pointer may be null
         strtoq(const char *__str, char **__endptr, int __base);
                           ^
                             _Nullable 
/usr/local/include/stdlib.h:355:21: note: insert '_Nonnull' if the pointer should never be null
         strtoq(const char *__str, char **__endptr, int __base);
                           ^
                             _Nonnull 
/usr/local/include/stdlib.h:355:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoq(const char *__str, char **__endptr, int __base);
                                        ^
/usr/local/include/stdlib.h:355:34: note: insert '_Nullable' if the pointer may be null
         strtoq(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nullable
/usr/local/include/stdlib.h:355:34: note: insert '_Nonnull' if the pointer should never be null
         strtoq(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nonnull
/usr/local/include/stdlib.h:355:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoq(const char *__str, char **__endptr, int __base);
                                         ^
/usr/local/include/stdlib.h:355:35: note: insert '_Nullable' if the pointer may be null
         strtoq(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nullable 
/usr/local/include/stdlib.h:355:35: note: insert '_Nonnull' if the pointer should never be null
         strtoq(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nonnull 
/usr/local/include/stdlib.h:357:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtouq(const char *__str, char **__endptr, int __base);
                            ^
/usr/local/include/stdlib.h:357:22: note: insert '_Nullable' if the pointer may be null
         strtouq(const char *__str, char **__endptr, int __base);
                            ^
                              _Nullable 
/usr/local/include/stdlib.h:357:22: note: insert '_Nonnull' if the pointer should never be null
         strtouq(const char *__str, char **__endptr, int __base);
                            ^
                              _Nonnull 
/usr/local/include/stdlib.h:357:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtouq(const char *__str, char **__endptr, int __base);
                                         ^
/usr/local/include/stdlib.h:357:35: note: insert '_Nullable' if the pointer may be null
         strtouq(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nullable
/usr/local/include/stdlib.h:357:35: note: insert '_Nonnull' if the pointer should never be null
         strtouq(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nonnull
/usr/local/include/stdlib.h:357:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtouq(const char *__str, char **__endptr, int __base);
                                          ^
/usr/local/include/stdlib.h:357:36: note: insert '_Nullable' if the pointer may be null
         strtouq(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nullable 
/usr/local/include/stdlib.h:357:36: note: insert '_Nonnull' if the pointer should never be null
         strtouq(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nonnull 
/usr/local/include/stdlib.h:359:13: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
extern char *suboptarg;         /* getsubopt(3) external variable */
            ^
/usr/local/include/stdlib.h:359:13: note: insert '_Nullable' if the pointer may be null
extern char *suboptarg;         /* getsubopt(3) external variable */
            ^
              _Nullable 
/usr/local/include/stdlib.h:359:13: note: insert '_Nonnull' if the pointer should never be null
extern char *suboptarg;         /* getsubopt(3) external variable */
            ^
              _Nonnull 
193 warnings generated.
checked program was:
/* begin */
1: #include "ruby.h"
2: 
3: #include <mysql.h>
4: 
5: /*top*/
6: typedef int conftest_type;
7: conftest_type conftestval = (int)SSL_MODE_REQUIRED;
/* end */

--------------------

have_const: checking for SSL_MODE_VERIFY_CA in mysql.h... -------------------- yes

"gcc -I/Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/x86_64-darwin19 -I/Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/backward -I/Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0 -I. -I/usr/local/opt/mysql-client/include/mysql  -I/usr/local/opt/libyaml/include -I/usr/local/opt/libksba/include -I/usr/local/opt/readline/include -I/usr/local/opt/zlib/include -I/usr/local/opt/openssl@1.1/include -D_XOPEN_SOURCE -D_DARWIN_C_SOURCE -D_DARWIN_UNLIMITED_SELECT -D_REENTRANT   -O3 -ggdb3 -Wall -Wextra -Wdeprecated-declarations -Wdivision-by-zero -Wimplicit-function-declaration -Wimplicit-int -Wpointer-arith -Wshorten-64-to-32 -Wwrite-strings -Wmissing-noreturn -Wno-constant-logical-operand -Wno-long-long -Wno-missing-field-initializers -Wno-overlength-strings -Wno-parentheses-equality -Wno-self-assign -Wno-tautological-compare -Wno-unused-parameter -Wno-unused-value -Wunused-variable -Wextra-tokens  -fno-common -pipe   -c conftest.c"
In file included from conftest.c:1:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby.h:33:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/ruby.h:29:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/defines.h:126:
In file included from /usr/local/include/stdio.h:64:
/usr/local/include/_stdio.h:93:16: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        unsigned char   *_base;
                        ^
/usr/local/include/_stdio.h:93:16: note: insert '_Nullable' if the pointer may be null
        unsigned char   *_base;
                        ^
                          _Nullable 
/usr/local/include/_stdio.h:93:16: note: insert '_Nonnull' if the pointer should never be null
        unsigned char   *_base;
                        ^
                          _Nonnull 
/usr/local/include/_stdio.h:138:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
/usr/local/include/_stdio.h:138:32: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
                                           _Nullable
/usr/local/include/_stdio.h:138:32: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
                                           _Nonnull
/usr/local/include/_stdio.h:138:40: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
/usr/local/include/_stdio.h:138:40: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
                                                   _Nullable
/usr/local/include/_stdio.h:138:40: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
                                                   _Nonnull
/usr/local/include/_stdio.h:139:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
/usr/local/include/_stdio.h:139:35: note: insert '_Nullable' if the pointer may be null
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
                                           _Nullable
/usr/local/include/_stdio.h:139:35: note: insert '_Nonnull' if the pointer should never be null
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
                                           _Nonnull
/usr/local/include/_stdio.h:140:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
/usr/local/include/_stdio.h:140:32: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
                                           _Nullable
/usr/local/include/_stdio.h:140:32: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
                                           _Nonnull
/usr/local/include/_stdio.h:140:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
/usr/local/include/_stdio.h:140:46: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
                                                         _Nullable
/usr/local/include/_stdio.h:140:46: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
                                                         _Nonnull
/usr/local/include/_stdio.h:144:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
/usr/local/include/_stdio.h:144:18: note: insert '_Nullable' if the pointer may be null
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
                          _Nullable 
/usr/local/include/_stdio.h:144:18: note: insert '_Nonnull' if the pointer should never be null
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
                          _Nonnull 
In file included from conftest.c:1:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby.h:33:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/ruby.h:29:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/defines.h:126:
/usr/local/include/stdio.h:67:13: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
extern FILE *__stdinp;
            ^
/usr/local/include/stdio.h:67:13: note: insert '_Nullable' if the pointer may be null
extern FILE *__stdinp;
            ^
              _Nullable 
/usr/local/include/stdio.h:67:13: note: insert '_Nonnull' if the pointer should never be null
extern FILE *__stdinp;
            ^
              _Nonnull 
/usr/local/include/stdio.h:386:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 int (* _Nullable)(void *, const char *, int),
                                        ^
/usr/local/include/stdio.h:386:41: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *, const char *, int),
                                        ^
                                         _Nullable
/usr/local/include/stdio.h:386:41: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *, const char *, int),
                                        ^
                                         _Nonnull
/usr/local/include/stdio.h:386:55: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
/usr/local/include/stdio.h:386:55: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
                                                       _Nullable
/usr/local/include/stdio.h:386:55: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
                                                       _Nonnull
/usr/local/include/stdio.h:387:44: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
/usr/local/include/stdio.h:387:44: note: insert '_Nullable' if the pointer may be null
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
                                            _Nullable
/usr/local/include/stdio.h:387:44: note: insert '_Nonnull' if the pointer should never be null
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
                                            _Nonnull
/usr/local/include/stdio.h:388:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 int (* _Nullable)(void *));
                                        ^
/usr/local/include/stdio.h:388:41: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *));
                                        ^
                                         _Nullable
/usr/local/include/stdio.h:388:41: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *));
                                        ^
                                         _Nonnull
/usr/local/include/stdio.h:384:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
FILE    *funopen(const void *,
        ^
/usr/local/include/stdio.h:384:6: note: insert '_Nullable' if the pointer may be null
FILE    *funopen(const void *,
        ^
          _Nullable 
/usr/local/include/stdio.h:384:6: note: insert '_Nonnull' if the pointer should never be null
FILE    *funopen(const void *,
        ^
          _Nonnull 
In file included from conftest.c:1:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby.h:33:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/ruby.h:29:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/defines.h:134:
/usr/local/include/stdlib.h:134:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   atof(const char *);
                         ^
/usr/local/include/stdlib.h:134:25: note: insert '_Nullable' if the pointer may be null
double   atof(const char *);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:134:25: note: insert '_Nonnull' if the pointer should never be null
double   atof(const char *);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:135:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      atoi(const char *);
                         ^
/usr/local/include/stdlib.h:135:22: note: insert '_Nullable' if the pointer may be null
int      atoi(const char *);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:135:22: note: insert '_Nonnull' if the pointer should never be null
int      atoi(const char *);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:136:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     atol(const char *);
                         ^
/usr/local/include/stdlib.h:136:23: note: insert '_Nullable' if the pointer may be null
long     atol(const char *);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:136:23: note: insert '_Nonnull' if the pointer should never be null
long     atol(const char *);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:139:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         atoll(const char *);
                          ^
/usr/local/include/stdlib.h:139:20: note: insert '_Nullable' if the pointer may be null
         atoll(const char *);
                          ^
                           _Nullable
/usr/local/include/stdlib.h:139:20: note: insert '_Nonnull' if the pointer should never be null
         atoll(const char *);
                          ^
                           _Nonnull
/usr/local/include/stdlib.h:141:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                            ^
/usr/local/include/stdlib.h:141:26: note: insert '_Nullable' if the pointer may be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                            ^
                              _Nullable 
/usr/local/include/stdlib.h:141:26: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                            ^
                              _Nonnull 
/usr/local/include/stdlib.h:141:45: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                                               ^
/usr/local/include/stdlib.h:141:45: note: insert '_Nullable' if the pointer may be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                                               ^
                                                 _Nullable 
/usr/local/include/stdlib.h:141:45: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                                               ^
                                                 _Nonnull 
/usr/local/include/stdlib.h:142:59: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                 ^
/usr/local/include/stdlib.h:142:59: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                 ^
                                                                  _Nullable
/usr/local/include/stdlib.h:142:59: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                 ^
                                                                  _Nonnull
/usr/local/include/stdlib.h:142:73: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                               ^
/usr/local/include/stdlib.h:142:73: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                               ^
                                                                                _Nullable
/usr/local/include/stdlib.h:142:73: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                               ^
                                                                                _Nonnull
/usr/local/include/stdlib.h:141:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch(const void *__key, const void *__base, size_t __nel,
        ^
/usr/local/include/stdlib.h:141:6: note: insert '_Nullable' if the pointer may be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
        ^
          _Nullable 
/usr/local/include/stdlib.h:141:6: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
        ^
          _Nonnull 
/usr/local/include/stdlib.h:147:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getenv(const char *);
                           ^
/usr/local/include/stdlib.h:147:25: note: insert '_Nullable' if the pointer may be null
char    *getenv(const char *);
                           ^
                            _Nullable
/usr/local/include/stdlib.h:147:25: note: insert '_Nonnull' if the pointer should never be null
char    *getenv(const char *);
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:147:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getenv(const char *);
        ^
/usr/local/include/stdlib.h:147:6: note: insert '_Nullable' if the pointer may be null
char    *getenv(const char *);
        ^
          _Nullable 
/usr/local/include/stdlib.h:147:6: note: insert '_Nonnull' if the pointer should never be null
char    *getenv(const char *);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:156:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mblen(const char *__s, size_t __n);
                          ^
/usr/local/include/stdlib.h:156:23: note: insert '_Nullable' if the pointer may be null
int      mblen(const char *__s, size_t __n);
                          ^
                            _Nullable 
/usr/local/include/stdlib.h:156:23: note: insert '_Nonnull' if the pointer should never be null
int      mblen(const char *__s, size_t __n);
                          ^
                            _Nonnull 
/usr/local/include/stdlib.h:157:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                          ^
/usr/local/include/stdlib.h:157:26: note: insert '_Nullable' if the pointer may be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                          ^
                            _Nullable
/usr/local/include/stdlib.h:157:26: note: insert '_Nonnull' if the pointer should never be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                          ^
                            _Nonnull
/usr/local/include/stdlib.h:157:52: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                                                    ^
/usr/local/include/stdlib.h:157:52: note: insert '_Nullable' if the pointer may be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                                                    ^
                                                      _Nullable
/usr/local/include/stdlib.h:157:52: note: insert '_Nonnull' if the pointer should never be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                                                    ^
                                                      _Nonnull
/usr/local/include/stdlib.h:158:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                        ^
/usr/local/include/stdlib.h:158:21: note: insert '_Nullable' if the pointer may be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                        ^
                          _Nullable
/usr/local/include/stdlib.h:158:21: note: insert '_Nonnull' if the pointer should never be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                        ^
                          _Nonnull
/usr/local/include/stdlib.h:158:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                                                 ^
/usr/local/include/stdlib.h:158:46: note: insert '_Nullable' if the pointer may be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                                                 ^
                                                   _Nullable
/usr/local/include/stdlib.h:158:46: note: insert '_Nonnull' if the pointer should never be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                                                 ^
                                                   _Nonnull
/usr/local/include/stdlib.h:160:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort(void *__base, size_t __nel, size_t __width,
                    ^
/usr/local/include/stdlib.h:160:18: note: insert '_Nullable' if the pointer may be null
void     qsort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nullable 
/usr/local/include/stdlib.h:160:18: note: insert '_Nonnull' if the pointer should never be null
void     qsort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nonnull 
/usr/local/include/stdlib.h:161:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
/usr/local/include/stdlib.h:161:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:161:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:161:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
/usr/local/include/stdlib.h:161:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:161:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:165:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                           ^
/usr/local/include/stdlib.h:165:27: note: insert '_Nullable' if the pointer may be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                           ^
                            _Nullable
/usr/local/include/stdlib.h:165:27: note: insert '_Nonnull' if the pointer should never be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:165:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                   ^
/usr/local/include/stdlib.h:165:35: note: insert '_Nullable' if the pointer may be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                   ^
                                    _Nullable
/usr/local/include/stdlib.h:165:35: note: insert '_Nonnull' if the pointer should never be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                   ^
                                    _Nonnull
/usr/local/include/stdlib.h:165:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                    ^
/usr/local/include/stdlib.h:165:36: note: insert '_Nullable' if the pointer may be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                    ^
                                     _Nullable
/usr/local/include/stdlib.h:165:36: note: insert '_Nonnull' if the pointer should never be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                    ^
                                     _Nonnull
/usr/local/include/stdlib.h:166:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                           ^
/usr/local/include/stdlib.h:166:26: note: insert '_Nullable' if the pointer may be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                           ^
                            _Nullable
/usr/local/include/stdlib.h:166:26: note: insert '_Nonnull' if the pointer should never be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:166:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                   ^
/usr/local/include/stdlib.h:166:34: note: insert '_Nullable' if the pointer may be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                   ^
                                    _Nullable
/usr/local/include/stdlib.h:166:34: note: insert '_Nonnull' if the pointer should never be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                   ^
                                    _Nonnull
/usr/local/include/stdlib.h:166:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                    ^
/usr/local/include/stdlib.h:166:35: note: insert '_Nullable' if the pointer may be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                    ^
                                     _Nullable
/usr/local/include/stdlib.h:166:35: note: insert '_Nonnull' if the pointer should never be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                    ^
                                     _Nonnull
/usr/local/include/stdlib.h:167:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     strtol(const char *__str, char **__endptr, int __base);
                           ^
/usr/local/include/stdlib.h:167:25: note: insert '_Nullable' if the pointer may be null
long     strtol(const char *__str, char **__endptr, int __base);
                           ^
                             _Nullable 
/usr/local/include/stdlib.h:167:25: note: insert '_Nonnull' if the pointer should never be null
long     strtol(const char *__str, char **__endptr, int __base);
                           ^
                             _Nonnull 
/usr/local/include/stdlib.h:167:38: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     strtol(const char *__str, char **__endptr, int __base);
                                        ^
/usr/local/include/stdlib.h:167:38: note: insert '_Nullable' if the pointer may be null
long     strtol(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nullable
/usr/local/include/stdlib.h:167:38: note: insert '_Nonnull' if the pointer should never be null
long     strtol(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nonnull
/usr/local/include/stdlib.h:167:39: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     strtol(const char *__str, char **__endptr, int __base);
                                         ^
/usr/local/include/stdlib.h:167:39: note: insert '_Nullable' if the pointer may be null
long     strtol(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nullable 
/usr/local/include/stdlib.h:167:39: note: insert '_Nonnull' if the pointer should never be null
long     strtol(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nonnull 
/usr/local/include/stdlib.h:169:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtold(const char *, char **);
                            ^
/usr/local/include/stdlib.h:169:22: note: insert '_Nullable' if the pointer may be null
         strtold(const char *, char **);
                            ^
                             _Nullable
/usr/local/include/stdlib.h:169:22: note: insert '_Nonnull' if the pointer should never be null
         strtold(const char *, char **);
                            ^
                             _Nonnull
/usr/local/include/stdlib.h:169:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtold(const char *, char **);
                                    ^
/usr/local/include/stdlib.h:169:30: note: insert '_Nullable' if the pointer may be null
         strtold(const char *, char **);
                                    ^
                                     _Nullable
/usr/local/include/stdlib.h:169:30: note: insert '_Nonnull' if the pointer should never be null
         strtold(const char *, char **);
                                    ^
                                     _Nonnull
/usr/local/include/stdlib.h:169:31: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtold(const char *, char **);
                                     ^
/usr/local/include/stdlib.h:169:31: note: insert '_Nullable' if the pointer may be null
         strtold(const char *, char **);
                                     ^
                                      _Nullable
/usr/local/include/stdlib.h:169:31: note: insert '_Nonnull' if the pointer should never be null
         strtold(const char *, char **);
                                     ^
                                      _Nonnull
/usr/local/include/stdlib.h:172:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoll(const char *__str, char **__endptr, int __base);
                            ^
/usr/local/include/stdlib.h:172:22: note: insert '_Nullable' if the pointer may be null
         strtoll(const char *__str, char **__endptr, int __base);
                            ^
                              _Nullable 
/usr/local/include/stdlib.h:172:22: note: insert '_Nonnull' if the pointer should never be null
         strtoll(const char *__str, char **__endptr, int __base);
                            ^
                              _Nonnull 
/usr/local/include/stdlib.h:172:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoll(const char *__str, char **__endptr, int __base);
                                         ^
/usr/local/include/stdlib.h:172:35: note: insert '_Nullable' if the pointer may be null
         strtoll(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nullable
/usr/local/include/stdlib.h:172:35: note: insert '_Nonnull' if the pointer should never be null
         strtoll(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nonnull
/usr/local/include/stdlib.h:172:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoll(const char *__str, char **__endptr, int __base);
                                          ^
/usr/local/include/stdlib.h:172:36: note: insert '_Nullable' if the pointer may be null
         strtoll(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nullable 
/usr/local/include/stdlib.h:172:36: note: insert '_Nonnull' if the pointer should never be null
         strtoll(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nonnull 
/usr/local/include/stdlib.h:175:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoul(const char *__str, char **__endptr, int __base);
                            ^
/usr/local/include/stdlib.h:175:22: note: insert '_Nullable' if the pointer may be null
         strtoul(const char *__str, char **__endptr, int __base);
                            ^
                              _Nullable 
/usr/local/include/stdlib.h:175:22: note: insert '_Nonnull' if the pointer should never be null
         strtoul(const char *__str, char **__endptr, int __base);
                            ^
                              _Nonnull 
/usr/local/include/stdlib.h:175:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoul(const char *__str, char **__endptr, int __base);
                                         ^
/usr/local/include/stdlib.h:175:35: note: insert '_Nullable' if the pointer may be null
         strtoul(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nullable
/usr/local/include/stdlib.h:175:35: note: insert '_Nonnull' if the pointer should never be null
         strtoul(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nonnull
/usr/local/include/stdlib.h:175:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoul(const char *__str, char **__endptr, int __base);
                                          ^
/usr/local/include/stdlib.h:175:36: note: insert '_Nullable' if the pointer may be null
         strtoul(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nullable 
/usr/local/include/stdlib.h:175:36: note: insert '_Nonnull' if the pointer should never be null
         strtoul(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nonnull 
/usr/local/include/stdlib.h:178:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoull(const char *__str, char **__endptr, int __base);
                             ^
/usr/local/include/stdlib.h:178:23: note: insert '_Nullable' if the pointer may be null
         strtoull(const char *__str, char **__endptr, int __base);
                             ^
                               _Nullable 
/usr/local/include/stdlib.h:178:23: note: insert '_Nonnull' if the pointer should never be null
         strtoull(const char *__str, char **__endptr, int __base);
                             ^
                               _Nonnull 
/usr/local/include/stdlib.h:178:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoull(const char *__str, char **__endptr, int __base);
                                          ^
/usr/local/include/stdlib.h:178:36: note: insert '_Nullable' if the pointer may be null
         strtoull(const char *__str, char **__endptr, int __base);
                                          ^
                                           _Nullable
/usr/local/include/stdlib.h:178:36: note: insert '_Nonnull' if the pointer should never be null
         strtoull(const char *__str, char **__endptr, int __base);
                                          ^
                                           _Nonnull
/usr/local/include/stdlib.h:178:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoull(const char *__str, char **__endptr, int __base);
                                           ^
/usr/local/include/stdlib.h:178:37: note: insert '_Nullable' if the pointer may be null
         strtoull(const char *__str, char **__endptr, int __base);
                                           ^
                                             _Nullable 
/usr/local/include/stdlib.h:178:37: note: insert '_Nonnull' if the pointer should never be null
         strtoull(const char *__str, char **__endptr, int __base);
                                           ^
                                             _Nonnull 
/usr/local/include/stdlib.h:190:24: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      system(const char *) __DARWIN_ALIAS_C(system);
                           ^
/usr/local/include/stdlib.h:190:24: note: insert '_Nullable' if the pointer may be null
int      system(const char *) __DARWIN_ALIAS_C(system);
                           ^
                            _Nullable
/usr/local/include/stdlib.h:190:24: note: insert '_Nonnull' if the pointer should never be null
int      system(const char *) __DARWIN_ALIAS_C(system);
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:194:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                       ^
/usr/local/include/stdlib.h:194:23: note: insert '_Nullable' if the pointer may be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                       ^
                         _Nullable
/usr/local/include/stdlib.h:194:23: note: insert '_Nonnull' if the pointer should never be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                       ^
                         _Nonnull
/usr/local/include/stdlib.h:194:51: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                                                   ^
/usr/local/include/stdlib.h:194:51: note: insert '_Nullable' if the pointer may be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                                                   ^
                                                     _Nullable
/usr/local/include/stdlib.h:194:51: note: insert '_Nonnull' if the pointer should never be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                                                   ^
                                                     _Nonnull
/usr/local/include/stdlib.h:195:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      wctomb(char *, wchar_t);
                     ^
/usr/local/include/stdlib.h:195:18: note: insert '_Nullable' if the pointer may be null
int      wctomb(char *, wchar_t);
                     ^
                      _Nullable
/usr/local/include/stdlib.h:195:18: note: insert '_Nonnull' if the pointer should never be null
int      wctomb(char *, wchar_t);
                     ^
                      _Nonnull
/usr/local/include/stdlib.h:199:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     a64l(const char *);
                         ^
/usr/local/include/stdlib.h:199:23: note: insert '_Nullable' if the pointer may be null
long     a64l(const char *);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:199:23: note: insert '_Nonnull' if the pointer should never be null
long     a64l(const char *);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:201:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
/usr/local/include/stdlib.h:201:29: note: insert '_Nullable' if the pointer may be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nullable 
/usr/local/include/stdlib.h:201:29: note: insert '_Nonnull' if the pointer should never be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nonnull 
/usr/local/include/stdlib.h:201:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
/usr/local/include/stdlib.h:201:46: note: insert '_Nullable' if the pointer may be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nullable 
/usr/local/include/stdlib.h:201:46: note: insert '_Nonnull' if the pointer should never be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nonnull 
/usr/local/include/stdlib.h:201:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
/usr/local/include/stdlib.h:201:6: note: insert '_Nullable' if the pointer may be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nullable 
/usr/local/include/stdlib.h:201:6: note: insert '_Nonnull' if the pointer should never be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nonnull 
/usr/local/include/stdlib.h:202:31: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
double   erand48(unsigned short[3]);
                               ^
/usr/local/include/stdlib.h:202:31: note: insert '_Nullable' if the array parameter may be null
double   erand48(unsigned short[3]);
                               ^
                                _Nullable 
/usr/local/include/stdlib.h:202:31: note: insert '_Nonnull' if the array parameter should never be null
double   erand48(unsigned short[3]);
                               ^
                                _Nonnull 
/usr/local/include/stdlib.h:203:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
/usr/local/include/stdlib.h:203:29: note: insert '_Nullable' if the pointer may be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nullable 
/usr/local/include/stdlib.h:203:29: note: insert '_Nonnull' if the pointer should never be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nonnull 
/usr/local/include/stdlib.h:203:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
/usr/local/include/stdlib.h:203:46: note: insert '_Nullable' if the pointer may be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nullable 
/usr/local/include/stdlib.h:203:46: note: insert '_Nonnull' if the pointer should never be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nonnull 
/usr/local/include/stdlib.h:203:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
/usr/local/include/stdlib.h:203:6: note: insert '_Nullable' if the pointer may be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nullable 
/usr/local/include/stdlib.h:203:6: note: insert '_Nonnull' if the pointer should never be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nonnull 
/usr/local/include/stdlib.h:204:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *gcvt(double, int, char *); /* LEGACY */
                                ^
/usr/local/include/stdlib.h:204:30: note: insert '_Nullable' if the pointer may be null
char    *gcvt(double, int, char *); /* LEGACY */
                                ^
                                 _Nullable
/usr/local/include/stdlib.h:204:30: note: insert '_Nonnull' if the pointer should never be null
char    *gcvt(double, int, char *); /* LEGACY */
                                ^
                                 _Nonnull
/usr/local/include/stdlib.h:204:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *gcvt(double, int, char *); /* LEGACY */
        ^
/usr/local/include/stdlib.h:204:6: note: insert '_Nullable' if the pointer may be null
char    *gcvt(double, int, char *); /* LEGACY */
        ^
          _Nullable 
/usr/local/include/stdlib.h:204:6: note: insert '_Nonnull' if the pointer should never be null
char    *gcvt(double, int, char *); /* LEGACY */
        ^
          _Nonnull 
/usr/local/include/stdlib.h:205:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                        ^
/usr/local/include/stdlib.h:205:21: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                        ^
                         _Nullable
/usr/local/include/stdlib.h:205:21: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                        ^
                         _Nonnull
/usr/local/include/stdlib.h:205:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                         ^
/usr/local/include/stdlib.h:205:22: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:205:22: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:205:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                 ^
/usr/local/include/stdlib.h:205:30: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                 ^
                                   _Nullable
/usr/local/include/stdlib.h:205:30: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                 ^
                                   _Nonnull
/usr/local/include/stdlib.h:205:38: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                         ^
/usr/local/include/stdlib.h:205:38: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                         ^
                                          _Nullable
/usr/local/include/stdlib.h:205:38: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                         ^
                                          _Nonnull
/usr/local/include/stdlib.h:205:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                                 ^
/usr/local/include/stdlib.h:205:46: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:205:46: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:205:47: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                                  ^
/usr/local/include/stdlib.h:205:47: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                                  ^
                                                   _Nullable
/usr/local/include/stdlib.h:205:47: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                                  ^
                                                   _Nonnull
/usr/local/include/stdlib.h:208:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
                                  ^
/usr/local/include/stdlib.h:208:32: note: insert '_Nullable' if the pointer may be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
                                  ^
                                   _Nullable
/usr/local/include/stdlib.h:208:32: note: insert '_Nonnull' if the pointer should never be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
                                  ^
                                   _Nonnull
/usr/local/include/stdlib.h:208:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
        ^
/usr/local/include/stdlib.h:208:6: note: insert '_Nullable' if the pointer may be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
        ^
          _Nullable 
/usr/local/include/stdlib.h:208:6: note: insert '_Nonnull' if the pointer should never be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
        ^
          _Nonnull 
/usr/local/include/stdlib.h:212:29: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
long     jrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
/usr/local/include/stdlib.h:212:29: note: insert '_Nullable' if the array parameter may be null
long     jrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nullable 
/usr/local/include/stdlib.h:212:29: note: insert '_Nonnull' if the array parameter should never be null
long     jrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nonnull 
/usr/local/include/stdlib.h:213:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *l64a(long);
        ^
/usr/local/include/stdlib.h:213:6: note: insert '_Nullable' if the pointer may be null
char    *l64a(long);
        ^
          _Nullable 
/usr/local/include/stdlib.h:213:6: note: insert '_Nonnull' if the pointer should never be null
char    *l64a(long);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:214:29: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
void     lcong48(unsigned short[7]);
                               ^
/usr/local/include/stdlib.h:214:29: note: insert '_Nullable' if the array parameter may be null
void     lcong48(unsigned short[7]);
                               ^
                                _Nullable 
/usr/local/include/stdlib.h:214:29: note: insert '_Nonnull' if the array parameter should never be null
void     lcong48(unsigned short[7]);
                               ^
                                _Nonnull 
/usr/local/include/stdlib.h:216:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *mktemp(char *);
                     ^
/usr/local/include/stdlib.h:216:19: note: insert '_Nullable' if the pointer may be null
char    *mktemp(char *);
                     ^
                      _Nullable
/usr/local/include/stdlib.h:216:19: note: insert '_Nonnull' if the pointer should never be null
char    *mktemp(char *);
                     ^
                      _Nonnull
/usr/local/include/stdlib.h:216:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *mktemp(char *);
        ^
/usr/local/include/stdlib.h:216:6: note: insert '_Nullable' if the pointer may be null
char    *mktemp(char *);
        ^
          _Nullable 
/usr/local/include/stdlib.h:216:6: note: insert '_Nonnull' if the pointer should never be null
char    *mktemp(char *);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:217:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mkstemp(char *);
                      ^
/usr/local/include/stdlib.h:217:19: note: insert '_Nullable' if the pointer may be null
int      mkstemp(char *);
                      ^
                       _Nullable
/usr/local/include/stdlib.h:217:19: note: insert '_Nonnull' if the pointer should never be null
int      mkstemp(char *);
                      ^
                       _Nonnull
/usr/local/include/stdlib.h:219:29: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
long     nrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
/usr/local/include/stdlib.h:219:29: note: insert '_Nullable' if the array parameter may be null
long     nrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nullable 
/usr/local/include/stdlib.h:219:29: note: insert '_Nonnull' if the array parameter should never be null
long     nrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nonnull 
/usr/local/include/stdlib.h:221:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ptsname(int);
        ^
/usr/local/include/stdlib.h:221:6: note: insert '_Nullable' if the pointer may be null
char    *ptsname(int);
        ^
          _Nullable 
/usr/local/include/stdlib.h:221:6: note: insert '_Nonnull' if the pointer should never be null
char    *ptsname(int);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:224:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int ptsname_r(int fildes, char *buffer, size_t buflen) __API_AVAILABLE(macos(10.13.4), ios(11.3), tvos(11.3), watchos(4.3));
                               ^
/usr/local/include/stdlib.h:224:32: note: insert '_Nullable' if the pointer may be null
int ptsname_r(int fildes, char *buffer, size_t buflen) __API_AVAILABLE(macos(10.13.4), ios(11.3), tvos(11.3), watchos(4.3));
                               ^
                                 _Nullable 
/usr/local/include/stdlib.h:224:32: note: insert '_Nonnull' if the pointer should never be null
int ptsname_r(int fildes, char *buffer, size_t buflen) __API_AVAILABLE(macos(10.13.4), ios(11.3), tvos(11.3), watchos(4.3));
                               ^
                                 _Nonnull 
/usr/local/include/stdlib.h:227:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      putenv(char *) __DARWIN_ALIAS(putenv);
                     ^
/usr/local/include/stdlib.h:227:18: note: insert '_Nullable' if the pointer may be null
int      putenv(char *) __DARWIN_ALIAS(putenv);
                     ^
                      _Nullable
/usr/local/include/stdlib.h:227:18: note: insert '_Nonnull' if the pointer should never be null
int      putenv(char *) __DARWIN_ALIAS(putenv);
                     ^
                      _Nonnull
/usr/local/include/stdlib.h:229:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      rand_r(unsigned *) __swift_unavailable("Use arc4random instead.");
                         ^
/usr/local/include/stdlib.h:229:22: note: insert '_Nullable' if the pointer may be null
int      rand_r(unsigned *) __swift_unavailable("Use arc4random instead.");
                         ^
                          _Nullable
/usr/local/include/stdlib.h:229:22: note: insert '_Nonnull' if the pointer should never be null
int      rand_r(unsigned *) __swift_unavailable("Use arc4random instead.");
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:231:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                             ^
/usr/local/include/stdlib.h:231:27: note: insert '_Nullable' if the pointer may be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                             ^
                               _Nullable
/usr/local/include/stdlib.h:231:27: note: insert '_Nonnull' if the pointer should never be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                             ^
                               _Nonnull
/usr/local/include/stdlib.h:231:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                                                ^
/usr/local/include/stdlib.h:231:46: note: insert '_Nullable' if the pointer may be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                                                ^
                                                  _Nullable
/usr/local/include/stdlib.h:231:46: note: insert '_Nonnull' if the pointer should never be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                                                ^
                                                  _Nonnull
/usr/local/include/stdlib.h:231:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
        ^
/usr/local/include/stdlib.h:231:6: note: insert '_Nullable' if the pointer may be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
        ^
          _Nullable 
/usr/local/include/stdlib.h:231:6: note: insert '_Nonnull' if the pointer should never be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:236:24: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
        *seed48(unsigned short[3]);
                              ^
/usr/local/include/stdlib.h:236:24: note: insert '_Nullable' if the array parameter may be null
        *seed48(unsigned short[3]);
                              ^
                               _Nullable 
/usr/local/include/stdlib.h:236:24: note: insert '_Nonnull' if the array parameter should never be null
        *seed48(unsigned short[3]);
                              ^
                               _Nonnull 
/usr/local/include/stdlib.h:236:2: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        *seed48(unsigned short[3]);
        ^
/usr/local/include/stdlib.h:236:2: note: insert '_Nullable' if the pointer may be null
        *seed48(unsigned short[3]);
        ^
          _Nullable 
/usr/local/include/stdlib.h:236:2: note: insert '_Nonnull' if the pointer should never be null
        *seed48(unsigned short[3]);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:237:24: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                           ^
/usr/local/include/stdlib.h:237:24: note: insert '_Nullable' if the pointer may be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                           ^
                             _Nullable
/usr/local/include/stdlib.h:237:24: note: insert '_Nonnull' if the pointer should never be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                           ^
                             _Nonnull
/usr/local/include/stdlib.h:237:45: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                                                ^
/usr/local/include/stdlib.h:237:45: note: insert '_Nullable' if the pointer may be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                                                ^
                                                  _Nullable
/usr/local/include/stdlib.h:237:45: note: insert '_Nonnull' if the pointer should never be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                                                ^
                                                  _Nonnull
/usr/local/include/stdlib.h:239:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     setkey(const char *) __DARWIN_ALIAS(setkey);
                           ^
/usr/local/include/stdlib.h:239:25: note: insert '_Nullable' if the pointer may be null
void     setkey(const char *) __DARWIN_ALIAS(setkey);
                           ^
                            _Nullable
/usr/local/include/stdlib.h:239:25: note: insert '_Nonnull' if the pointer should never be null
void     setkey(const char *) __DARWIN_ALIAS(setkey);
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:243:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *setstate(const char *);
                             ^
/usr/local/include/stdlib.h:243:27: note: insert '_Nullable' if the pointer may be null
char    *setstate(const char *);
                             ^
                              _Nullable
/usr/local/include/stdlib.h:243:27: note: insert '_Nonnull' if the pointer should never be null
char    *setstate(const char *);
                             ^
                              _Nonnull
/usr/local/include/stdlib.h:243:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *setstate(const char *);
        ^
/usr/local/include/stdlib.h:243:6: note: insert '_Nullable' if the pointer may be null
char    *setstate(const char *);
        ^
          _Nullable 
/usr/local/include/stdlib.h:243:6: note: insert '_Nonnull' if the pointer should never be null
char    *setstate(const char *);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:252:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      unsetenv(const char *) __DARWIN_ALIAS(unsetenv);
                             ^
/usr/local/include/stdlib.h:252:26: note: insert '_Nullable' if the pointer may be null
int      unsetenv(const char *) __DARWIN_ALIAS(unsetenv);
                             ^
                              _Nullable
/usr/local/include/stdlib.h:252:26: note: insert '_Nonnull' if the pointer should never be null
int      unsetenv(const char *) __DARWIN_ALIAS(unsetenv);
                             ^
                              _Nonnull
/usr/local/include/stdlib.h:265:42: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     arc4random_addrandom(unsigned char * /*dat*/, int /*datlen*/)
                                            ^
/usr/local/include/stdlib.h:265:42: note: insert '_Nullable' if the pointer may be null
void     arc4random_addrandom(unsigned char * /*dat*/, int /*datlen*/)
                                            ^
                                              _Nullable
/usr/local/include/stdlib.h:265:42: note: insert '_Nonnull' if the pointer should never be null
void     arc4random_addrandom(unsigned char * /*dat*/, int /*datlen*/)
                                            ^
                                              _Nonnull
/usr/local/include/stdlib.h:270:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     arc4random_buf(void * __buf, size_t __nbytes) __OSX_AVAILABLE_STARTING(__MAC_10_7, __IPHONE_4_3);
                             ^
/usr/local/include/stdlib.h:270:27: note: insert '_Nullable' if the pointer may be null
void     arc4random_buf(void * __buf, size_t __nbytes) __OSX_AVAILABLE_STARTING(__MAC_10_7, __IPHONE_4_3);
                             ^
                               _Nullable
/usr/local/include/stdlib.h:270:27: note: insert '_Nonnull' if the pointer should never be null
void     arc4random_buf(void * __buf, size_t __nbytes) __OSX_AVAILABLE_STARTING(__MAC_10_7, __IPHONE_4_3);
                             ^
                               _Nonnull
/usr/local/include/stdlib.h:276:28: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                              ^
/usr/local/include/stdlib.h:276:28: note: insert '_Nullable' if the pointer may be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                              ^
                                _Nullable 
/usr/local/include/stdlib.h:276:28: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                              ^
                                _Nonnull 
/usr/local/include/stdlib.h:276:47: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                                                 ^
/usr/local/include/stdlib.h:276:47: note: insert '_Nullable' if the pointer may be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                                                 ^
                                                   _Nullable 
/usr/local/include/stdlib.h:276:47: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                                                 ^
                                                   _Nonnull 
/usr/local/include/stdlib.h:277:59: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                 ^
/usr/local/include/stdlib.h:277:59: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                 ^
                                                                  _Nullable
/usr/local/include/stdlib.h:277:59: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                 ^
                                                                  _Nonnull
/usr/local/include/stdlib.h:277:73: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                               ^
/usr/local/include/stdlib.h:277:73: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                               ^
                                                                                _Nullable
/usr/local/include/stdlib.h:277:73: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                               ^
                                                                                _Nonnull
/usr/local/include/stdlib.h:276:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
        ^
/usr/local/include/stdlib.h:276:6: note: insert '_Nullable' if the pointer may be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
        ^
          _Nullable 
/usr/local/include/stdlib.h:276:6: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
        ^
          _Nonnull 
/usr/local/include/stdlib.h:281:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *cgetcap(char *, const char *, int);
                      ^
/usr/local/include/stdlib.h:281:20: note: insert '_Nullable' if the pointer may be null
char    *cgetcap(char *, const char *, int);
                      ^
                       _Nullable
/usr/local/include/stdlib.h:281:20: note: insert '_Nonnull' if the pointer should never be null
char    *cgetcap(char *, const char *, int);
                      ^
                       _Nonnull
/usr/local/include/stdlib.h:281:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *cgetcap(char *, const char *, int);
                                    ^
/usr/local/include/stdlib.h:281:34: note: insert '_Nullable' if the pointer may be null
char    *cgetcap(char *, const char *, int);
                                    ^
                                     _Nullable
/usr/local/include/stdlib.h:281:34: note: insert '_Nonnull' if the pointer should never be null
char    *cgetcap(char *, const char *, int);
                                    ^
                                     _Nonnull
/usr/local/include/stdlib.h:281:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *cgetcap(char *, const char *, int);
        ^
/usr/local/include/stdlib.h:281:6: note: insert '_Nullable' if the pointer may be null
char    *cgetcap(char *, const char *, int);
        ^
          _Nullable 
/usr/local/include/stdlib.h:281:6: note: insert '_Nonnull' if the pointer should never be null
char    *cgetcap(char *, const char *, int);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:283:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                      ^
/usr/local/include/stdlib.h:283:19: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                      ^
                       _Nullable
/usr/local/include/stdlib.h:283:19: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                      ^
                       _Nonnull
/usr/local/include/stdlib.h:283:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                       ^
/usr/local/include/stdlib.h:283:20: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                       ^
                        _Nullable
/usr/local/include/stdlib.h:283:20: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                       ^
                        _Nonnull
/usr/local/include/stdlib.h:283:28: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                               ^
/usr/local/include/stdlib.h:283:28: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                               ^
                                _Nullable
/usr/local/include/stdlib.h:283:28: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                               ^
                                _Nonnull
/usr/local/include/stdlib.h:283:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                                ^
/usr/local/include/stdlib.h:283:29: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                                ^
                                 _Nullable
/usr/local/include/stdlib.h:283:29: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                                ^
                                 _Nonnull
/usr/local/include/stdlib.h:283:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                                              ^
/usr/local/include/stdlib.h:283:43: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                                              ^
                                               _Nullable
/usr/local/include/stdlib.h:283:43: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                                              ^
                                               _Nonnull
/usr/local/include/stdlib.h:284:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                        ^
/usr/local/include/stdlib.h:284:21: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                        ^
                         _Nullable
/usr/local/include/stdlib.h:284:21: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                        ^
                         _Nonnull
/usr/local/include/stdlib.h:284:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                         ^
/usr/local/include/stdlib.h:284:22: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:284:22: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:284:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                                 ^
/usr/local/include/stdlib.h:284:30: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                                 ^
                                  _Nullable
/usr/local/include/stdlib.h:284:30: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                                 ^
                                  _Nonnull
/usr/local/include/stdlib.h:284:31: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                                  ^
/usr/local/include/stdlib.h:284:31: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                                  ^
                                   _Nullable
/usr/local/include/stdlib.h:284:31: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                                  ^
                                   _Nonnull
/usr/local/include/stdlib.h:285:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetmatch(const char *, const char *);
                              ^
/usr/local/include/stdlib.h:285:27: note: insert '_Nullable' if the pointer may be null
int      cgetmatch(const char *, const char *);
                              ^
                               _Nullable
/usr/local/include/stdlib.h:285:27: note: insert '_Nonnull' if the pointer should never be null
int      cgetmatch(const char *, const char *);
                              ^
                               _Nonnull
/usr/local/include/stdlib.h:285:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetmatch(const char *, const char *);
                                            ^
/usr/local/include/stdlib.h:285:41: note: insert '_Nullable' if the pointer may be null
int      cgetmatch(const char *, const char *);
                                            ^
                                             _Nullable
/usr/local/include/stdlib.h:285:41: note: insert '_Nonnull' if the pointer should never be null
int      cgetmatch(const char *, const char *);
                                            ^
                                             _Nonnull
/usr/local/include/stdlib.h:286:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                       ^
/usr/local/include/stdlib.h:286:20: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                       ^
                        _Nullable
/usr/local/include/stdlib.h:286:20: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                       ^
                        _Nonnull
/usr/local/include/stdlib.h:286:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                        ^
/usr/local/include/stdlib.h:286:21: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                        ^
                         _Nullable
/usr/local/include/stdlib.h:286:21: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                        ^
                         _Nonnull
/usr/local/include/stdlib.h:286:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                                ^
/usr/local/include/stdlib.h:286:29: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                                ^
                                 _Nullable
/usr/local/include/stdlib.h:286:29: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                                ^
                                 _Nonnull
/usr/local/include/stdlib.h:286:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                                 ^
/usr/local/include/stdlib.h:286:30: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                                 ^
                                  _Nullable
/usr/local/include/stdlib.h:286:30: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                                 ^
                                  _Nonnull
/usr/local/include/stdlib.h:287:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnum(char *, const char *, long *);
                      ^
/usr/local/include/stdlib.h:287:19: note: insert '_Nullable' if the pointer may be null
int      cgetnum(char *, const char *, long *);
                      ^
                       _Nullable
/usr/local/include/stdlib.h:287:19: note: insert '_Nonnull' if the pointer should never be null
int      cgetnum(char *, const char *, long *);
                      ^
                       _Nonnull
/usr/local/include/stdlib.h:287:33: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnum(char *, const char *, long *);
                                    ^
/usr/local/include/stdlib.h:287:33: note: insert '_Nullable' if the pointer may be null
int      cgetnum(char *, const char *, long *);
                                    ^
                                     _Nullable
/usr/local/include/stdlib.h:287:33: note: insert '_Nonnull' if the pointer should never be null
int      cgetnum(char *, const char *, long *);
                                    ^
                                     _Nonnull
/usr/local/include/stdlib.h:287:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnum(char *, const char *, long *);
                                            ^
/usr/local/include/stdlib.h:287:41: note: insert '_Nullable' if the pointer may be null
int      cgetnum(char *, const char *, long *);
                                            ^
                                             _Nullable
/usr/local/include/stdlib.h:287:41: note: insert '_Nonnull' if the pointer should never be null
int      cgetnum(char *, const char *, long *);
                                            ^
                                             _Nonnull
/usr/local/include/stdlib.h:288:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetset(const char *);
                            ^
/usr/local/include/stdlib.h:288:25: note: insert '_Nullable' if the pointer may be null
int      cgetset(const char *);
                            ^
                             _Nullable
/usr/local/include/stdlib.h:288:25: note: insert '_Nonnull' if the pointer should never be null
int      cgetset(const char *);
                            ^
                             _Nonnull
/usr/local/include/stdlib.h:289:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                      ^
/usr/local/include/stdlib.h:289:19: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                      ^
                       _Nullable
/usr/local/include/stdlib.h:289:19: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                      ^
                       _Nonnull
/usr/local/include/stdlib.h:289:33: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                                    ^
/usr/local/include/stdlib.h:289:33: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                                    ^
                                     _Nullable
/usr/local/include/stdlib.h:289:33: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                                    ^
                                     _Nonnull
/usr/local/include/stdlib.h:289:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                                            ^
/usr/local/include/stdlib.h:289:41: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                                            ^
                                             _Nullable
/usr/local/include/stdlib.h:289:41: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                                            ^
                                             _Nonnull
/usr/local/include/stdlib.h:289:42: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                                             ^
/usr/local/include/stdlib.h:289:42: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                                             ^
                                              _Nullable
/usr/local/include/stdlib.h:289:42: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                                             ^
                                              _Nonnull
/usr/local/include/stdlib.h:290:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                       ^
/usr/local/include/stdlib.h:290:20: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                       ^
                        _Nullable
/usr/local/include/stdlib.h:290:20: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                       ^
                        _Nonnull
/usr/local/include/stdlib.h:290:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                                     ^
/usr/local/include/stdlib.h:290:34: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                                     ^
                                      _Nullable
/usr/local/include/stdlib.h:290:34: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                                     ^
                                      _Nonnull
/usr/local/include/stdlib.h:290:42: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                                             ^
/usr/local/include/stdlib.h:290:42: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                                             ^
                                              _Nullable
/usr/local/include/stdlib.h:290:42: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                                             ^
                                              _Nonnull
/usr/local/include/stdlib.h:290:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                                              ^
/usr/local/include/stdlib.h:290:43: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                                              ^
                                               _Nullable
/usr/local/include/stdlib.h:290:43: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                                              ^
                                               _Nonnull
/usr/local/include/stdlib.h:293:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *devname(dev_t, mode_t);
        ^
/usr/local/include/stdlib.h:293:6: note: insert '_Nullable' if the pointer may be null
char    *devname(dev_t, mode_t);
        ^
          _Nullable 
/usr/local/include/stdlib.h:293:6: note: insert '_Nonnull' if the pointer should never be null
char    *devname(dev_t, mode_t);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:294:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *devname_r(dev_t, mode_t, char *buf, int len);
                                       ^
/usr/local/include/stdlib.h:294:37: note: insert '_Nullable' if the pointer may be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
                                       ^
                                         _Nullable 
/usr/local/include/stdlib.h:294:37: note: insert '_Nonnull' if the pointer should never be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
                                       ^
                                         _Nonnull 
/usr/local/include/stdlib.h:294:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *devname_r(dev_t, mode_t, char *buf, int len);
        ^
/usr/local/include/stdlib.h:294:6: note: insert '_Nullable' if the pointer may be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
        ^
          _Nullable 
/usr/local/include/stdlib.h:294:6: note: insert '_Nonnull' if the pointer should never be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:295:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getbsize(int *, long *);
                      ^
/usr/local/include/stdlib.h:295:20: note: insert '_Nullable' if the pointer may be null
char    *getbsize(int *, long *);
                      ^
                       _Nullable
/usr/local/include/stdlib.h:295:20: note: insert '_Nonnull' if the pointer should never be null
char    *getbsize(int *, long *);
                      ^
                       _Nonnull
/usr/local/include/stdlib.h:295:28: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getbsize(int *, long *);
                              ^
/usr/local/include/stdlib.h:295:28: note: insert '_Nullable' if the pointer may be null
char    *getbsize(int *, long *);
                              ^
                               _Nullable
/usr/local/include/stdlib.h:295:28: note: insert '_Nonnull' if the pointer should never be null
char    *getbsize(int *, long *);
                              ^
                               _Nonnull
/usr/local/include/stdlib.h:295:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getbsize(int *, long *);
        ^
/usr/local/include/stdlib.h:295:6: note: insert '_Nullable' if the pointer may be null
char    *getbsize(int *, long *);
        ^
          _Nullable 
/usr/local/include/stdlib.h:295:6: note: insert '_Nonnull' if the pointer should never be null
char    *getbsize(int *, long *);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:296:24: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
int      getloadavg(double [], int);
                           ^
/usr/local/include/stdlib.h:296:24: note: insert '_Nullable' if the array parameter may be null
int      getloadavg(double [], int);
                           ^
                            _Nullable
/usr/local/include/stdlib.h:296:24: note: insert '_Nonnull' if the array parameter should never be null
int      getloadavg(double [], int);
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:298:2: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        *getprogname(void);
        ^
/usr/local/include/stdlib.h:298:2: note: insert '_Nullable' if the pointer may be null
        *getprogname(void);
        ^
          _Nullable 
/usr/local/include/stdlib.h:298:2: note: insert '_Nonnull' if the pointer should never be null
        *getprogname(void);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:299:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     setprogname(const char *);
                                ^
/usr/local/include/stdlib.h:299:30: note: insert '_Nullable' if the pointer may be null
void     setprogname(const char *);
                                ^
                                 _Nullable
/usr/local/include/stdlib.h:299:30: note: insert '_Nonnull' if the pointer should never be null
void     setprogname(const char *);
                                ^
                                 _Nonnull
/usr/local/include/stdlib.h:309:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      heapsort(void *__base, size_t __nel, size_t __width,
                       ^
/usr/local/include/stdlib.h:309:20: note: insert '_Nullable' if the pointer may be null
int      heapsort(void *__base, size_t __nel, size_t __width,
                       ^
                         _Nullable 
/usr/local/include/stdlib.h:309:20: note: insert '_Nonnull' if the pointer should never be null
int      heapsort(void *__base, size_t __nel, size_t __width,
                       ^
                         _Nonnull 
/usr/local/include/stdlib.h:310:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
/usr/local/include/stdlib.h:310:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:310:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:310:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
/usr/local/include/stdlib.h:310:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:310:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:312:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      heapsort_b(void *__base, size_t __nel, size_t __width,
                         ^
/usr/local/include/stdlib.h:312:22: note: insert '_Nullable' if the pointer may be null
int      heapsort_b(void *__base, size_t __nel, size_t __width,
                         ^
                           _Nullable 
/usr/local/include/stdlib.h:312:22: note: insert '_Nonnull' if the pointer should never be null
int      heapsort_b(void *__base, size_t __nel, size_t __width,
                         ^
                           _Nonnull 
/usr/local/include/stdlib.h:313:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
/usr/local/include/stdlib.h:313:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:313:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:313:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
/usr/local/include/stdlib.h:313:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:313:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:316:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mergesort(void *__base, size_t __nel, size_t __width,
                        ^
/usr/local/include/stdlib.h:316:21: note: insert '_Nullable' if the pointer may be null
int      mergesort(void *__base, size_t __nel, size_t __width,
                        ^
                          _Nullable 
/usr/local/include/stdlib.h:316:21: note: insert '_Nonnull' if the pointer should never be null
int      mergesort(void *__base, size_t __nel, size_t __width,
                        ^
                          _Nonnull 
/usr/local/include/stdlib.h:317:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
/usr/local/include/stdlib.h:317:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:317:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:317:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
/usr/local/include/stdlib.h:317:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:317:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:319:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mergesort_b(void *__base, size_t __nel, size_t __width,
                          ^
/usr/local/include/stdlib.h:319:23: note: insert '_Nullable' if the pointer may be null
int      mergesort_b(void *__base, size_t __nel, size_t __width,
                          ^
                            _Nullable 
/usr/local/include/stdlib.h:319:23: note: insert '_Nonnull' if the pointer should never be null
int      mergesort_b(void *__base, size_t __nel, size_t __width,
                          ^
                            _Nonnull 
/usr/local/include/stdlib.h:320:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
/usr/local/include/stdlib.h:320:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:320:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:320:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
/usr/local/include/stdlib.h:320:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:320:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:323:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort(void *__base, size_t __nel, size_t __width,
                    ^
/usr/local/include/stdlib.h:323:18: note: insert '_Nullable' if the pointer may be null
void     psort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nullable 
/usr/local/include/stdlib.h:323:18: note: insert '_Nonnull' if the pointer should never be null
void     psort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nonnull 
/usr/local/include/stdlib.h:324:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *))
                                                 ^
/usr/local/include/stdlib.h:324:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *))
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:324:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *))
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:324:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *))
                                                               ^
/usr/local/include/stdlib.h:324:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *))
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:324:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *))
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:327:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort_b(void *__base, size_t __nel, size_t __width,
                      ^
/usr/local/include/stdlib.h:327:20: note: insert '_Nullable' if the pointer may be null
void     psort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nullable 
/usr/local/include/stdlib.h:327:20: note: insert '_Nonnull' if the pointer should never be null
void     psort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nonnull 
/usr/local/include/stdlib.h:328:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
/usr/local/include/stdlib.h:328:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:328:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:328:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
/usr/local/include/stdlib.h:328:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:328:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:331:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
/usr/local/include/stdlib.h:331:20: note: insert '_Nullable' if the pointer may be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nullable 
/usr/local/include/stdlib.h:331:20: note: insert '_Nonnull' if the pointer should never be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nonnull 
/usr/local/include/stdlib.h:331:64: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
/usr/local/include/stdlib.h:331:64: note: insert '_Nullable' if the pointer may be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nullable
/usr/local/include/stdlib.h:331:64: note: insert '_Nonnull' if the pointer should never be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nonnull
/usr/local/include/stdlib.h:332:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                           ^
/usr/local/include/stdlib.h:332:37: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                           ^
                                            _Nullable
/usr/local/include/stdlib.h:332:37: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                           ^
                                            _Nonnull
/usr/local/include/stdlib.h:332:51: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                                         ^
/usr/local/include/stdlib.h:332:51: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                                         ^
                                                          _Nullable
/usr/local/include/stdlib.h:332:51: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                                         ^
                                                          _Nonnull
/usr/local/include/stdlib.h:332:65: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                                                       ^
/usr/local/include/stdlib.h:332:65: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                                                       ^
                                                                        _Nullable
/usr/local/include/stdlib.h:332:65: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                                                       ^
                                                                        _Nonnull
/usr/local/include/stdlib.h:335:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort_b(void *__base, size_t __nel, size_t __width,
                      ^
/usr/local/include/stdlib.h:335:20: note: insert '_Nullable' if the pointer may be null
void     qsort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nullable 
/usr/local/include/stdlib.h:335:20: note: insert '_Nonnull' if the pointer should never be null
void     qsort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nonnull 
/usr/local/include/stdlib.h:336:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
/usr/local/include/stdlib.h:336:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:336:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:336:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
/usr/local/include/stdlib.h:336:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:336:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:339:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
/usr/local/include/stdlib.h:339:20: note: insert '_Nullable' if the pointer may be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nullable 
/usr/local/include/stdlib.h:339:20: note: insert '_Nonnull' if the pointer should never be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nonnull 
/usr/local/include/stdlib.h:339:64: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
/usr/local/include/stdlib.h:339:64: note: insert '_Nullable' if the pointer may be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nullable
/usr/local/include/stdlib.h:339:64: note: insert '_Nonnull' if the pointer should never be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nonnull
/usr/local/include/stdlib.h:340:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                           ^
/usr/local/include/stdlib.h:340:37: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                           ^
                                            _Nullable
/usr/local/include/stdlib.h:340:37: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                           ^
                                            _Nonnull
/usr/local/include/stdlib.h:340:51: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                         ^
/usr/local/include/stdlib.h:340:51: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                         ^
                                                          _Nullable
/usr/local/include/stdlib.h:340:51: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                         ^
                                                          _Nonnull
/usr/local/include/stdlib.h:340:65: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                                       ^
/usr/local/include/stdlib.h:340:65: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                                       ^
                                                                        _Nullable
/usr/local/include/stdlib.h:340:65: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                                       ^
                                                                        _Nonnull
/usr/local/include/stdlib.h:341:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                       ^
/usr/local/include/stdlib.h:341:36: note: insert '_Nullable' if the pointer may be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                       ^
                                        _Nullable
/usr/local/include/stdlib.h:341:36: note: insert '_Nonnull' if the pointer should never be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                       ^
                                        _Nonnull
/usr/local/include/stdlib.h:341:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
/usr/local/include/stdlib.h:341:37: note: insert '_Nullable' if the pointer may be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                          _Nullable 
/usr/local/include/stdlib.h:341:37: note: insert '_Nonnull' if the pointer should never be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                          _Nonnull 
/usr/local/include/stdlib.h:341:77: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                ^
/usr/local/include/stdlib.h:341:77: note: insert '_Nullable' if the pointer may be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                ^
                                                                                  _Nullable 
/usr/local/include/stdlib.h:341:77: note: insert '_Nonnull' if the pointer should never be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                ^
                                                                                  _Nonnull 
/usr/local/include/stdlib.h:343:24: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int     rpmatch(const char *)
                           ^
/usr/local/include/stdlib.h:343:24: note: insert '_Nullable' if the pointer may be null
int     rpmatch(const char *)
                           ^
                            _Nullable
/usr/local/include/stdlib.h:343:24: note: insert '_Nonnull' if the pointer should never be null
int     rpmatch(const char *)
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:345:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
/usr/local/include/stdlib.h:345:37: note: insert '_Nullable' if the pointer may be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                         _Nullable
/usr/local/include/stdlib.h:345:37: note: insert '_Nonnull' if the pointer should never be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                         _Nonnull
/usr/local/include/stdlib.h:345:38: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                         ^
/usr/local/include/stdlib.h:345:38: note: insert '_Nullable' if the pointer may be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                         ^
                                           _Nullable 
/usr/local/include/stdlib.h:345:38: note: insert '_Nonnull' if the pointer should never be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                         ^
                                           _Nonnull 
/usr/local/include/stdlib.h:345:78: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                 ^
/usr/local/include/stdlib.h:345:78: note: insert '_Nullable' if the pointer may be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                 ^
                                                                                   _Nullable 
/usr/local/include/stdlib.h:345:78: note: insert '_Nonnull' if the pointer should never be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                 ^
                                                                                   _Nonnull 
/usr/local/include/stdlib.h:349:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
                       ^
/usr/local/include/stdlib.h:349:21: note: insert '_Nullable' if the pointer may be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
                       ^
                         _Nullable 
/usr/local/include/stdlib.h:349:21: note: insert '_Nonnull' if the pointer should never be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
                       ^
                         _Nonnull 
/usr/local/include/stdlib.h:349:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
        ^
/usr/local/include/stdlib.h:349:6: note: insert '_Nullable' if the pointer may be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
        ^
          _Nullable 
/usr/local/include/stdlib.h:349:6: note: insert '_Nonnull' if the pointer should never be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:351:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                            ^
/usr/local/include/stdlib.h:351:22: note: insert '_Nullable' if the pointer may be null
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                            ^
                              _Nullable 
/usr/local/include/stdlib.h:351:22: note: insert '_Nonnull' if the pointer should never be null
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                            ^
                              _Nonnull 
/usr/local/include/stdlib.h:351:84: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                                                                                          ^
/usr/local/include/stdlib.h:351:84: note: insert '_Nullable' if the pointer may be null
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                                                                                          ^
                                                                                           _Nullable
/usr/local/include/stdlib.h:351:84: note: insert '_Nonnull' if the pointer should never be null
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                                                                                          ^
                                                                                           _Nonnull
/usr/local/include/stdlib.h:351:85: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                                                                                           ^
/usr/local/include/stdlib.h:351:85: note: insert '_Nullable' if the pointer may be null
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                                                                                           ^
                                                                                             _Nullable 
/usr/local/include/stdlib.h:351:85: note: insert '_Nonnull' if the pointer should never be null
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                                                                                           ^
                                                                                             _Nonnull 
/usr/local/include/stdlib.h:355:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoq(const char *__str, char **__endptr, int __base);
                           ^
/usr/local/include/stdlib.h:355:21: note: insert '_Nullable' if the pointer may be null
         strtoq(const char *__str, char **__endptr, int __base);
                           ^
                             _Nullable 
/usr/local/include/stdlib.h:355:21: note: insert '_Nonnull' if the pointer should never be null
         strtoq(const char *__str, char **__endptr, int __base);
                           ^
                             _Nonnull 
/usr/local/include/stdlib.h:355:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoq(const char *__str, char **__endptr, int __base);
                                        ^
/usr/local/include/stdlib.h:355:34: note: insert '_Nullable' if the pointer may be null
         strtoq(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nullable
/usr/local/include/stdlib.h:355:34: note: insert '_Nonnull' if the pointer should never be null
         strtoq(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nonnull
/usr/local/include/stdlib.h:355:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoq(const char *__str, char **__endptr, int __base);
                                         ^
/usr/local/include/stdlib.h:355:35: note: insert '_Nullable' if the pointer may be null
         strtoq(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nullable 
/usr/local/include/stdlib.h:355:35: note: insert '_Nonnull' if the pointer should never be null
         strtoq(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nonnull 
/usr/local/include/stdlib.h:357:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtouq(const char *__str, char **__endptr, int __base);
                            ^
/usr/local/include/stdlib.h:357:22: note: insert '_Nullable' if the pointer may be null
         strtouq(const char *__str, char **__endptr, int __base);
                            ^
                              _Nullable 
/usr/local/include/stdlib.h:357:22: note: insert '_Nonnull' if the pointer should never be null
         strtouq(const char *__str, char **__endptr, int __base);
                            ^
                              _Nonnull 
/usr/local/include/stdlib.h:357:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtouq(const char *__str, char **__endptr, int __base);
                                         ^
/usr/local/include/stdlib.h:357:35: note: insert '_Nullable' if the pointer may be null
         strtouq(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nullable
/usr/local/include/stdlib.h:357:35: note: insert '_Nonnull' if the pointer should never be null
         strtouq(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nonnull
/usr/local/include/stdlib.h:357:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtouq(const char *__str, char **__endptr, int __base);
                                          ^
/usr/local/include/stdlib.h:357:36: note: insert '_Nullable' if the pointer may be null
         strtouq(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nullable 
/usr/local/include/stdlib.h:357:36: note: insert '_Nonnull' if the pointer should never be null
         strtouq(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nonnull 
/usr/local/include/stdlib.h:359:13: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
extern char *suboptarg;         /* getsubopt(3) external variable */
            ^
/usr/local/include/stdlib.h:359:13: note: insert '_Nullable' if the pointer may be null
extern char *suboptarg;         /* getsubopt(3) external variable */
            ^
              _Nullable 
/usr/local/include/stdlib.h:359:13: note: insert '_Nonnull' if the pointer should never be null
extern char *suboptarg;         /* getsubopt(3) external variable */
            ^
              _Nonnull 
193 warnings generated.
checked program was:
/* begin */
1: #include "ruby.h"
2: 
3: #include <mysql.h>
4: 
5: /*top*/
6: typedef int conftest_type;
7: conftest_type conftestval = (int)SSL_MODE_VERIFY_CA;
/* end */

--------------------

have_const: checking for SSL_MODE_VERIFY_IDENTITY in mysql.h... -------------------- yes

"gcc -I/Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/x86_64-darwin19 -I/Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/backward -I/Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0 -I. -I/usr/local/opt/mysql-client/include/mysql  -I/usr/local/opt/libyaml/include -I/usr/local/opt/libksba/include -I/usr/local/opt/readline/include -I/usr/local/opt/zlib/include -I/usr/local/opt/openssl@1.1/include -D_XOPEN_SOURCE -D_DARWIN_C_SOURCE -D_DARWIN_UNLIMITED_SELECT -D_REENTRANT   -O3 -ggdb3 -Wall -Wextra -Wdeprecated-declarations -Wdivision-by-zero -Wimplicit-function-declaration -Wimplicit-int -Wpointer-arith -Wshorten-64-to-32 -Wwrite-strings -Wmissing-noreturn -Wno-constant-logical-operand -Wno-long-long -Wno-missing-field-initializers -Wno-overlength-strings -Wno-parentheses-equality -Wno-self-assign -Wno-tautological-compare -Wno-unused-parameter -Wno-unused-value -Wunused-variable -Wextra-tokens  -fno-common -pipe   -c conftest.c"
In file included from conftest.c:1:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby.h:33:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/ruby.h:29:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/defines.h:126:
In file included from /usr/local/include/stdio.h:64:
/usr/local/include/_stdio.h:93:16: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        unsigned char   *_base;
                        ^
/usr/local/include/_stdio.h:93:16: note: insert '_Nullable' if the pointer may be null
        unsigned char   *_base;
                        ^
                          _Nullable 
/usr/local/include/_stdio.h:93:16: note: insert '_Nonnull' if the pointer should never be null
        unsigned char   *_base;
                        ^
                          _Nonnull 
/usr/local/include/_stdio.h:138:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
/usr/local/include/_stdio.h:138:32: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
                                           _Nullable
/usr/local/include/_stdio.h:138:32: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
                                           _Nonnull
/usr/local/include/_stdio.h:138:40: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
/usr/local/include/_stdio.h:138:40: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
                                                   _Nullable
/usr/local/include/_stdio.h:138:40: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
                                                   _Nonnull
/usr/local/include/_stdio.h:139:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
/usr/local/include/_stdio.h:139:35: note: insert '_Nullable' if the pointer may be null
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
                                           _Nullable
/usr/local/include/_stdio.h:139:35: note: insert '_Nonnull' if the pointer should never be null
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
                                           _Nonnull
/usr/local/include/_stdio.h:140:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
/usr/local/include/_stdio.h:140:32: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
                                           _Nullable
/usr/local/include/_stdio.h:140:32: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
                                           _Nonnull
/usr/local/include/_stdio.h:140:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
/usr/local/include/_stdio.h:140:46: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
                                                         _Nullable
/usr/local/include/_stdio.h:140:46: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
                                                         _Nonnull
/usr/local/include/_stdio.h:144:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
/usr/local/include/_stdio.h:144:18: note: insert '_Nullable' if the pointer may be null
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
                          _Nullable 
/usr/local/include/_stdio.h:144:18: note: insert '_Nonnull' if the pointer should never be null
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
                          _Nonnull 
In file included from conftest.c:1:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby.h:33:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/ruby.h:29:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/defines.h:126:
/usr/local/include/stdio.h:67:13: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
extern FILE *__stdinp;
            ^
/usr/local/include/stdio.h:67:13: note: insert '_Nullable' if the pointer may be null
extern FILE *__stdinp;
            ^
              _Nullable 
/usr/local/include/stdio.h:67:13: note: insert '_Nonnull' if the pointer should never be null
extern FILE *__stdinp;
            ^
              _Nonnull 
/usr/local/include/stdio.h:386:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 int (* _Nullable)(void *, const char *, int),
                                        ^
/usr/local/include/stdio.h:386:41: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *, const char *, int),
                                        ^
                                         _Nullable
/usr/local/include/stdio.h:386:41: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *, const char *, int),
                                        ^
                                         _Nonnull
/usr/local/include/stdio.h:386:55: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
/usr/local/include/stdio.h:386:55: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
                                                       _Nullable
/usr/local/include/stdio.h:386:55: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
                                                       _Nonnull
/usr/local/include/stdio.h:387:44: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
/usr/local/include/stdio.h:387:44: note: insert '_Nullable' if the pointer may be null
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
                                            _Nullable
/usr/local/include/stdio.h:387:44: note: insert '_Nonnull' if the pointer should never be null
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
                                            _Nonnull
/usr/local/include/stdio.h:388:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 int (* _Nullable)(void *));
                                        ^
/usr/local/include/stdio.h:388:41: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *));
                                        ^
                                         _Nullable
/usr/local/include/stdio.h:388:41: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *));
                                        ^
                                         _Nonnull
/usr/local/include/stdio.h:384:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
FILE    *funopen(const void *,
        ^
/usr/local/include/stdio.h:384:6: note: insert '_Nullable' if the pointer may be null
FILE    *funopen(const void *,
        ^
          _Nullable 
/usr/local/include/stdio.h:384:6: note: insert '_Nonnull' if the pointer should never be null
FILE    *funopen(const void *,
        ^
          _Nonnull 
In file included from conftest.c:1:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby.h:33:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/ruby.h:29:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/defines.h:134:
/usr/local/include/stdlib.h:134:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   atof(const char *);
                         ^
/usr/local/include/stdlib.h:134:25: note: insert '_Nullable' if the pointer may be null
double   atof(const char *);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:134:25: note: insert '_Nonnull' if the pointer should never be null
double   atof(const char *);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:135:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      atoi(const char *);
                         ^
/usr/local/include/stdlib.h:135:22: note: insert '_Nullable' if the pointer may be null
int      atoi(const char *);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:135:22: note: insert '_Nonnull' if the pointer should never be null
int      atoi(const char *);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:136:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     atol(const char *);
                         ^
/usr/local/include/stdlib.h:136:23: note: insert '_Nullable' if the pointer may be null
long     atol(const char *);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:136:23: note: insert '_Nonnull' if the pointer should never be null
long     atol(const char *);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:139:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         atoll(const char *);
                          ^
/usr/local/include/stdlib.h:139:20: note: insert '_Nullable' if the pointer may be null
         atoll(const char *);
                          ^
                           _Nullable
/usr/local/include/stdlib.h:139:20: note: insert '_Nonnull' if the pointer should never be null
         atoll(const char *);
                          ^
                           _Nonnull
/usr/local/include/stdlib.h:141:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                            ^
/usr/local/include/stdlib.h:141:26: note: insert '_Nullable' if the pointer may be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                            ^
                              _Nullable 
/usr/local/include/stdlib.h:141:26: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                            ^
                              _Nonnull 
/usr/local/include/stdlib.h:141:45: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                                               ^
/usr/local/include/stdlib.h:141:45: note: insert '_Nullable' if the pointer may be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                                               ^
                                                 _Nullable 
/usr/local/include/stdlib.h:141:45: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                                               ^
                                                 _Nonnull 
/usr/local/include/stdlib.h:142:59: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                 ^
/usr/local/include/stdlib.h:142:59: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                 ^
                                                                  _Nullable
/usr/local/include/stdlib.h:142:59: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                 ^
                                                                  _Nonnull
/usr/local/include/stdlib.h:142:73: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                               ^
/usr/local/include/stdlib.h:142:73: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                               ^
                                                                                _Nullable
/usr/local/include/stdlib.h:142:73: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                               ^
                                                                                _Nonnull
/usr/local/include/stdlib.h:141:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch(const void *__key, const void *__base, size_t __nel,
        ^
/usr/local/include/stdlib.h:141:6: note: insert '_Nullable' if the pointer may be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
        ^
          _Nullable 
/usr/local/include/stdlib.h:141:6: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
        ^
          _Nonnull 
/usr/local/include/stdlib.h:147:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getenv(const char *);
                           ^
/usr/local/include/stdlib.h:147:25: note: insert '_Nullable' if the pointer may be null
char    *getenv(const char *);
                           ^
                            _Nullable
/usr/local/include/stdlib.h:147:25: note: insert '_Nonnull' if the pointer should never be null
char    *getenv(const char *);
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:147:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getenv(const char *);
        ^
/usr/local/include/stdlib.h:147:6: note: insert '_Nullable' if the pointer may be null
char    *getenv(const char *);
        ^
          _Nullable 
/usr/local/include/stdlib.h:147:6: note: insert '_Nonnull' if the pointer should never be null
char    *getenv(const char *);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:156:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mblen(const char *__s, size_t __n);
                          ^
/usr/local/include/stdlib.h:156:23: note: insert '_Nullable' if the pointer may be null
int      mblen(const char *__s, size_t __n);
                          ^
                            _Nullable 
/usr/local/include/stdlib.h:156:23: note: insert '_Nonnull' if the pointer should never be null
int      mblen(const char *__s, size_t __n);
                          ^
                            _Nonnull 
/usr/local/include/stdlib.h:157:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                          ^
/usr/local/include/stdlib.h:157:26: note: insert '_Nullable' if the pointer may be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                          ^
                            _Nullable
/usr/local/include/stdlib.h:157:26: note: insert '_Nonnull' if the pointer should never be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                          ^
                            _Nonnull
/usr/local/include/stdlib.h:157:52: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                                                    ^
/usr/local/include/stdlib.h:157:52: note: insert '_Nullable' if the pointer may be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                                                    ^
                                                      _Nullable
/usr/local/include/stdlib.h:157:52: note: insert '_Nonnull' if the pointer should never be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                                                    ^
                                                      _Nonnull
/usr/local/include/stdlib.h:158:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                        ^
/usr/local/include/stdlib.h:158:21: note: insert '_Nullable' if the pointer may be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                        ^
                          _Nullable
/usr/local/include/stdlib.h:158:21: note: insert '_Nonnull' if the pointer should never be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                        ^
                          _Nonnull
/usr/local/include/stdlib.h:158:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                                                 ^
/usr/local/include/stdlib.h:158:46: note: insert '_Nullable' if the pointer may be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                                                 ^
                                                   _Nullable
/usr/local/include/stdlib.h:158:46: note: insert '_Nonnull' if the pointer should never be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                                                 ^
                                                   _Nonnull
/usr/local/include/stdlib.h:160:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort(void *__base, size_t __nel, size_t __width,
                    ^
/usr/local/include/stdlib.h:160:18: note: insert '_Nullable' if the pointer may be null
void     qsort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nullable 
/usr/local/include/stdlib.h:160:18: note: insert '_Nonnull' if the pointer should never be null
void     qsort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nonnull 
/usr/local/include/stdlib.h:161:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
/usr/local/include/stdlib.h:161:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:161:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:161:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
/usr/local/include/stdlib.h:161:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:161:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:165:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                           ^
/usr/local/include/stdlib.h:165:27: note: insert '_Nullable' if the pointer may be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                           ^
                            _Nullable
/usr/local/include/stdlib.h:165:27: note: insert '_Nonnull' if the pointer should never be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:165:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                   ^
/usr/local/include/stdlib.h:165:35: note: insert '_Nullable' if the pointer may be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                   ^
                                    _Nullable
/usr/local/include/stdlib.h:165:35: note: insert '_Nonnull' if the pointer should never be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                   ^
                                    _Nonnull
/usr/local/include/stdlib.h:165:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                    ^
/usr/local/include/stdlib.h:165:36: note: insert '_Nullable' if the pointer may be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                    ^
                                     _Nullable
/usr/local/include/stdlib.h:165:36: note: insert '_Nonnull' if the pointer should never be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                    ^
                                     _Nonnull
/usr/local/include/stdlib.h:166:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                           ^
/usr/local/include/stdlib.h:166:26: note: insert '_Nullable' if the pointer may be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                           ^
                            _Nullable
/usr/local/include/stdlib.h:166:26: note: insert '_Nonnull' if the pointer should never be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:166:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                   ^
/usr/local/include/stdlib.h:166:34: note: insert '_Nullable' if the pointer may be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                   ^
                                    _Nullable
/usr/local/include/stdlib.h:166:34: note: insert '_Nonnull' if the pointer should never be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                   ^
                                    _Nonnull
/usr/local/include/stdlib.h:166:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                    ^
/usr/local/include/stdlib.h:166:35: note: insert '_Nullable' if the pointer may be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                    ^
                                     _Nullable
/usr/local/include/stdlib.h:166:35: note: insert '_Nonnull' if the pointer should never be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                    ^
                                     _Nonnull
/usr/local/include/stdlib.h:167:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     strtol(const char *__str, char **__endptr, int __base);
                           ^
/usr/local/include/stdlib.h:167:25: note: insert '_Nullable' if the pointer may be null
long     strtol(const char *__str, char **__endptr, int __base);
                           ^
                             _Nullable 
/usr/local/include/stdlib.h:167:25: note: insert '_Nonnull' if the pointer should never be null
long     strtol(const char *__str, char **__endptr, int __base);
                           ^
                             _Nonnull 
/usr/local/include/stdlib.h:167:38: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     strtol(const char *__str, char **__endptr, int __base);
                                        ^
/usr/local/include/stdlib.h:167:38: note: insert '_Nullable' if the pointer may be null
long     strtol(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nullable
/usr/local/include/stdlib.h:167:38: note: insert '_Nonnull' if the pointer should never be null
long     strtol(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nonnull
/usr/local/include/stdlib.h:167:39: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     strtol(const char *__str, char **__endptr, int __base);
                                         ^
/usr/local/include/stdlib.h:167:39: note: insert '_Nullable' if the pointer may be null
long     strtol(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nullable 
/usr/local/include/stdlib.h:167:39: note: insert '_Nonnull' if the pointer should never be null
long     strtol(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nonnull 
/usr/local/include/stdlib.h:169:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtold(const char *, char **);
                            ^
/usr/local/include/stdlib.h:169:22: note: insert '_Nullable' if the pointer may be null
         strtold(const char *, char **);
                            ^
                             _Nullable
/usr/local/include/stdlib.h:169:22: note: insert '_Nonnull' if the pointer should never be null
         strtold(const char *, char **);
                            ^
                             _Nonnull
/usr/local/include/stdlib.h:169:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtold(const char *, char **);
                                    ^
/usr/local/include/stdlib.h:169:30: note: insert '_Nullable' if the pointer may be null
         strtold(const char *, char **);
                                    ^
                                     _Nullable
/usr/local/include/stdlib.h:169:30: note: insert '_Nonnull' if the pointer should never be null
         strtold(const char *, char **);
                                    ^
                                     _Nonnull
/usr/local/include/stdlib.h:169:31: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtold(const char *, char **);
                                     ^
/usr/local/include/stdlib.h:169:31: note: insert '_Nullable' if the pointer may be null
         strtold(const char *, char **);
                                     ^
                                      _Nullable
/usr/local/include/stdlib.h:169:31: note: insert '_Nonnull' if the pointer should never be null
         strtold(const char *, char **);
                                     ^
                                      _Nonnull
/usr/local/include/stdlib.h:172:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoll(const char *__str, char **__endptr, int __base);
                            ^
/usr/local/include/stdlib.h:172:22: note: insert '_Nullable' if the pointer may be null
         strtoll(const char *__str, char **__endptr, int __base);
                            ^
                              _Nullable 
/usr/local/include/stdlib.h:172:22: note: insert '_Nonnull' if the pointer should never be null
         strtoll(const char *__str, char **__endptr, int __base);
                            ^
                              _Nonnull 
/usr/local/include/stdlib.h:172:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoll(const char *__str, char **__endptr, int __base);
                                         ^
/usr/local/include/stdlib.h:172:35: note: insert '_Nullable' if the pointer may be null
         strtoll(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nullable
/usr/local/include/stdlib.h:172:35: note: insert '_Nonnull' if the pointer should never be null
         strtoll(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nonnull
/usr/local/include/stdlib.h:172:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoll(const char *__str, char **__endptr, int __base);
                                          ^
/usr/local/include/stdlib.h:172:36: note: insert '_Nullable' if the pointer may be null
         strtoll(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nullable 
/usr/local/include/stdlib.h:172:36: note: insert '_Nonnull' if the pointer should never be null
         strtoll(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nonnull 
/usr/local/include/stdlib.h:175:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoul(const char *__str, char **__endptr, int __base);
                            ^
/usr/local/include/stdlib.h:175:22: note: insert '_Nullable' if the pointer may be null
         strtoul(const char *__str, char **__endptr, int __base);
                            ^
                              _Nullable 
/usr/local/include/stdlib.h:175:22: note: insert '_Nonnull' if the pointer should never be null
         strtoul(const char *__str, char **__endptr, int __base);
                            ^
                              _Nonnull 
/usr/local/include/stdlib.h:175:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoul(const char *__str, char **__endptr, int __base);
                                         ^
/usr/local/include/stdlib.h:175:35: note: insert '_Nullable' if the pointer may be null
         strtoul(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nullable
/usr/local/include/stdlib.h:175:35: note: insert '_Nonnull' if the pointer should never be null
         strtoul(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nonnull
/usr/local/include/stdlib.h:175:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoul(const char *__str, char **__endptr, int __base);
                                          ^
/usr/local/include/stdlib.h:175:36: note: insert '_Nullable' if the pointer may be null
         strtoul(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nullable 
/usr/local/include/stdlib.h:175:36: note: insert '_Nonnull' if the pointer should never be null
         strtoul(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nonnull 
/usr/local/include/stdlib.h:178:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoull(const char *__str, char **__endptr, int __base);
                             ^
/usr/local/include/stdlib.h:178:23: note: insert '_Nullable' if the pointer may be null
         strtoull(const char *__str, char **__endptr, int __base);
                             ^
                               _Nullable 
/usr/local/include/stdlib.h:178:23: note: insert '_Nonnull' if the pointer should never be null
         strtoull(const char *__str, char **__endptr, int __base);
                             ^
                               _Nonnull 
/usr/local/include/stdlib.h:178:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoull(const char *__str, char **__endptr, int __base);
                                          ^
/usr/local/include/stdlib.h:178:36: note: insert '_Nullable' if the pointer may be null
         strtoull(const char *__str, char **__endptr, int __base);
                                          ^
                                           _Nullable
/usr/local/include/stdlib.h:178:36: note: insert '_Nonnull' if the pointer should never be null
         strtoull(const char *__str, char **__endptr, int __base);
                                          ^
                                           _Nonnull
/usr/local/include/stdlib.h:178:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoull(const char *__str, char **__endptr, int __base);
                                           ^
/usr/local/include/stdlib.h:178:37: note: insert '_Nullable' if the pointer may be null
         strtoull(const char *__str, char **__endptr, int __base);
                                           ^
                                             _Nullable 
/usr/local/include/stdlib.h:178:37: note: insert '_Nonnull' if the pointer should never be null
         strtoull(const char *__str, char **__endptr, int __base);
                                           ^
                                             _Nonnull 
/usr/local/include/stdlib.h:190:24: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      system(const char *) __DARWIN_ALIAS_C(system);
                           ^
/usr/local/include/stdlib.h:190:24: note: insert '_Nullable' if the pointer may be null
int      system(const char *) __DARWIN_ALIAS_C(system);
                           ^
                            _Nullable
/usr/local/include/stdlib.h:190:24: note: insert '_Nonnull' if the pointer should never be null
int      system(const char *) __DARWIN_ALIAS_C(system);
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:194:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                       ^
/usr/local/include/stdlib.h:194:23: note: insert '_Nullable' if the pointer may be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                       ^
                         _Nullable
/usr/local/include/stdlib.h:194:23: note: insert '_Nonnull' if the pointer should never be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                       ^
                         _Nonnull
/usr/local/include/stdlib.h:194:51: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                                                   ^
/usr/local/include/stdlib.h:194:51: note: insert '_Nullable' if the pointer may be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                                                   ^
                                                     _Nullable
/usr/local/include/stdlib.h:194:51: note: insert '_Nonnull' if the pointer should never be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                                                   ^
                                                     _Nonnull
/usr/local/include/stdlib.h:195:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      wctomb(char *, wchar_t);
                     ^
/usr/local/include/stdlib.h:195:18: note: insert '_Nullable' if the pointer may be null
int      wctomb(char *, wchar_t);
                     ^
                      _Nullable
/usr/local/include/stdlib.h:195:18: note: insert '_Nonnull' if the pointer should never be null
int      wctomb(char *, wchar_t);
                     ^
                      _Nonnull
/usr/local/include/stdlib.h:199:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     a64l(const char *);
                         ^
/usr/local/include/stdlib.h:199:23: note: insert '_Nullable' if the pointer may be null
long     a64l(const char *);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:199:23: note: insert '_Nonnull' if the pointer should never be null
long     a64l(const char *);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:201:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
/usr/local/include/stdlib.h:201:29: note: insert '_Nullable' if the pointer may be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nullable 
/usr/local/include/stdlib.h:201:29: note: insert '_Nonnull' if the pointer should never be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nonnull 
/usr/local/include/stdlib.h:201:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
/usr/local/include/stdlib.h:201:46: note: insert '_Nullable' if the pointer may be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nullable 
/usr/local/include/stdlib.h:201:46: note: insert '_Nonnull' if the pointer should never be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nonnull 
/usr/local/include/stdlib.h:201:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
/usr/local/include/stdlib.h:201:6: note: insert '_Nullable' if the pointer may be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nullable 
/usr/local/include/stdlib.h:201:6: note: insert '_Nonnull' if the pointer should never be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nonnull 
/usr/local/include/stdlib.h:202:31: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
double   erand48(unsigned short[3]);
                               ^
/usr/local/include/stdlib.h:202:31: note: insert '_Nullable' if the array parameter may be null
double   erand48(unsigned short[3]);
                               ^
                                _Nullable 
/usr/local/include/stdlib.h:202:31: note: insert '_Nonnull' if the array parameter should never be null
double   erand48(unsigned short[3]);
                               ^
                                _Nonnull 
/usr/local/include/stdlib.h:203:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
/usr/local/include/stdlib.h:203:29: note: insert '_Nullable' if the pointer may be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nullable 
/usr/local/include/stdlib.h:203:29: note: insert '_Nonnull' if the pointer should never be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nonnull 
/usr/local/include/stdlib.h:203:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
/usr/local/include/stdlib.h:203:46: note: insert '_Nullable' if the pointer may be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nullable 
/usr/local/include/stdlib.h:203:46: note: insert '_Nonnull' if the pointer should never be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nonnull 
/usr/local/include/stdlib.h:203:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
/usr/local/include/stdlib.h:203:6: note: insert '_Nullable' if the pointer may be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nullable 
/usr/local/include/stdlib.h:203:6: note: insert '_Nonnull' if the pointer should never be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nonnull 
/usr/local/include/stdlib.h:204:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *gcvt(double, int, char *); /* LEGACY */
                                ^
/usr/local/include/stdlib.h:204:30: note: insert '_Nullable' if the pointer may be null
char    *gcvt(double, int, char *); /* LEGACY */
                                ^
                                 _Nullable
/usr/local/include/stdlib.h:204:30: note: insert '_Nonnull' if the pointer should never be null
char    *gcvt(double, int, char *); /* LEGACY */
                                ^
                                 _Nonnull
/usr/local/include/stdlib.h:204:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *gcvt(double, int, char *); /* LEGACY */
        ^
/usr/local/include/stdlib.h:204:6: note: insert '_Nullable' if the pointer may be null
char    *gcvt(double, int, char *); /* LEGACY */
        ^
          _Nullable 
/usr/local/include/stdlib.h:204:6: note: insert '_Nonnull' if the pointer should never be null
char    *gcvt(double, int, char *); /* LEGACY */
        ^
          _Nonnull 
/usr/local/include/stdlib.h:205:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                        ^
/usr/local/include/stdlib.h:205:21: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                        ^
                         _Nullable
/usr/local/include/stdlib.h:205:21: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                        ^
                         _Nonnull
/usr/local/include/stdlib.h:205:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                         ^
/usr/local/include/stdlib.h:205:22: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:205:22: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:205:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                 ^
/usr/local/include/stdlib.h:205:30: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                 ^
                                   _Nullable
/usr/local/include/stdlib.h:205:30: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                 ^
                                   _Nonnull
/usr/local/include/stdlib.h:205:38: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                         ^
/usr/local/include/stdlib.h:205:38: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                         ^
                                          _Nullable
/usr/local/include/stdlib.h:205:38: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                         ^
                                          _Nonnull
/usr/local/include/stdlib.h:205:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                                 ^
/usr/local/include/stdlib.h:205:46: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:205:46: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:205:47: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                                  ^
/usr/local/include/stdlib.h:205:47: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                                  ^
                                                   _Nullable
/usr/local/include/stdlib.h:205:47: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                                  ^
                                                   _Nonnull
/usr/local/include/stdlib.h:208:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
                                  ^
/usr/local/include/stdlib.h:208:32: note: insert '_Nullable' if the pointer may be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
                                  ^
                                   _Nullable
/usr/local/include/stdlib.h:208:32: note: insert '_Nonnull' if the pointer should never be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
                                  ^
                                   _Nonnull
/usr/local/include/stdlib.h:208:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
        ^
/usr/local/include/stdlib.h:208:6: note: insert '_Nullable' if the pointer may be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
        ^
          _Nullable 
/usr/local/include/stdlib.h:208:6: note: insert '_Nonnull' if the pointer should never be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
        ^
          _Nonnull 
/usr/local/include/stdlib.h:212:29: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
long     jrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
/usr/local/include/stdlib.h:212:29: note: insert '_Nullable' if the array parameter may be null
long     jrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nullable 
/usr/local/include/stdlib.h:212:29: note: insert '_Nonnull' if the array parameter should never be null
long     jrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nonnull 
/usr/local/include/stdlib.h:213:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *l64a(long);
        ^
/usr/local/include/stdlib.h:213:6: note: insert '_Nullable' if the pointer may be null
char    *l64a(long);
        ^
          _Nullable 
/usr/local/include/stdlib.h:213:6: note: insert '_Nonnull' if the pointer should never be null
char    *l64a(long);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:214:29: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
void     lcong48(unsigned short[7]);
                               ^
/usr/local/include/stdlib.h:214:29: note: insert '_Nullable' if the array parameter may be null
void     lcong48(unsigned short[7]);
                               ^
                                _Nullable 
/usr/local/include/stdlib.h:214:29: note: insert '_Nonnull' if the array parameter should never be null
void     lcong48(unsigned short[7]);
                               ^
                                _Nonnull 
/usr/local/include/stdlib.h:216:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *mktemp(char *);
                     ^
/usr/local/include/stdlib.h:216:19: note: insert '_Nullable' if the pointer may be null
char    *mktemp(char *);
                     ^
                      _Nullable
/usr/local/include/stdlib.h:216:19: note: insert '_Nonnull' if the pointer should never be null
char    *mktemp(char *);
                     ^
                      _Nonnull
/usr/local/include/stdlib.h:216:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *mktemp(char *);
        ^
/usr/local/include/stdlib.h:216:6: note: insert '_Nullable' if the pointer may be null
char    *mktemp(char *);
        ^
          _Nullable 
/usr/local/include/stdlib.h:216:6: note: insert '_Nonnull' if the pointer should never be null
char    *mktemp(char *);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:217:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mkstemp(char *);
                      ^
/usr/local/include/stdlib.h:217:19: note: insert '_Nullable' if the pointer may be null
int      mkstemp(char *);
                      ^
                       _Nullable
/usr/local/include/stdlib.h:217:19: note: insert '_Nonnull' if the pointer should never be null
int      mkstemp(char *);
                      ^
                       _Nonnull
/usr/local/include/stdlib.h:219:29: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
long     nrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
/usr/local/include/stdlib.h:219:29: note: insert '_Nullable' if the array parameter may be null
long     nrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nullable 
/usr/local/include/stdlib.h:219:29: note: insert '_Nonnull' if the array parameter should never be null
long     nrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nonnull 
/usr/local/include/stdlib.h:221:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ptsname(int);
        ^
/usr/local/include/stdlib.h:221:6: note: insert '_Nullable' if the pointer may be null
char    *ptsname(int);
        ^
          _Nullable 
/usr/local/include/stdlib.h:221:6: note: insert '_Nonnull' if the pointer should never be null
char    *ptsname(int);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:224:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int ptsname_r(int fildes, char *buffer, size_t buflen) __API_AVAILABLE(macos(10.13.4), ios(11.3), tvos(11.3), watchos(4.3));
                               ^
/usr/local/include/stdlib.h:224:32: note: insert '_Nullable' if the pointer may be null
int ptsname_r(int fildes, char *buffer, size_t buflen) __API_AVAILABLE(macos(10.13.4), ios(11.3), tvos(11.3), watchos(4.3));
                               ^
                                 _Nullable 
/usr/local/include/stdlib.h:224:32: note: insert '_Nonnull' if the pointer should never be null
int ptsname_r(int fildes, char *buffer, size_t buflen) __API_AVAILABLE(macos(10.13.4), ios(11.3), tvos(11.3), watchos(4.3));
                               ^
                                 _Nonnull 
/usr/local/include/stdlib.h:227:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      putenv(char *) __DARWIN_ALIAS(putenv);
                     ^
/usr/local/include/stdlib.h:227:18: note: insert '_Nullable' if the pointer may be null
int      putenv(char *) __DARWIN_ALIAS(putenv);
                     ^
                      _Nullable
/usr/local/include/stdlib.h:227:18: note: insert '_Nonnull' if the pointer should never be null
int      putenv(char *) __DARWIN_ALIAS(putenv);
                     ^
                      _Nonnull
/usr/local/include/stdlib.h:229:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      rand_r(unsigned *) __swift_unavailable("Use arc4random instead.");
                         ^
/usr/local/include/stdlib.h:229:22: note: insert '_Nullable' if the pointer may be null
int      rand_r(unsigned *) __swift_unavailable("Use arc4random instead.");
                         ^
                          _Nullable
/usr/local/include/stdlib.h:229:22: note: insert '_Nonnull' if the pointer should never be null
int      rand_r(unsigned *) __swift_unavailable("Use arc4random instead.");
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:231:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                             ^
/usr/local/include/stdlib.h:231:27: note: insert '_Nullable' if the pointer may be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                             ^
                               _Nullable
/usr/local/include/stdlib.h:231:27: note: insert '_Nonnull' if the pointer should never be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                             ^
                               _Nonnull
/usr/local/include/stdlib.h:231:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                                                ^
/usr/local/include/stdlib.h:231:46: note: insert '_Nullable' if the pointer may be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                                                ^
                                                  _Nullable
/usr/local/include/stdlib.h:231:46: note: insert '_Nonnull' if the pointer should never be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                                                ^
                                                  _Nonnull
/usr/local/include/stdlib.h:231:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
        ^
/usr/local/include/stdlib.h:231:6: note: insert '_Nullable' if the pointer may be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
        ^
          _Nullable 
/usr/local/include/stdlib.h:231:6: note: insert '_Nonnull' if the pointer should never be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:236:24: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
        *seed48(unsigned short[3]);
                              ^
/usr/local/include/stdlib.h:236:24: note: insert '_Nullable' if the array parameter may be null
        *seed48(unsigned short[3]);
                              ^
                               _Nullable 
/usr/local/include/stdlib.h:236:24: note: insert '_Nonnull' if the array parameter should never be null
        *seed48(unsigned short[3]);
                              ^
                               _Nonnull 
/usr/local/include/stdlib.h:236:2: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        *seed48(unsigned short[3]);
        ^
/usr/local/include/stdlib.h:236:2: note: insert '_Nullable' if the pointer may be null
        *seed48(unsigned short[3]);
        ^
          _Nullable 
/usr/local/include/stdlib.h:236:2: note: insert '_Nonnull' if the pointer should never be null
        *seed48(unsigned short[3]);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:237:24: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                           ^
/usr/local/include/stdlib.h:237:24: note: insert '_Nullable' if the pointer may be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                           ^
                             _Nullable
/usr/local/include/stdlib.h:237:24: note: insert '_Nonnull' if the pointer should never be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                           ^
                             _Nonnull
/usr/local/include/stdlib.h:237:45: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                                                ^
/usr/local/include/stdlib.h:237:45: note: insert '_Nullable' if the pointer may be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                                                ^
                                                  _Nullable
/usr/local/include/stdlib.h:237:45: note: insert '_Nonnull' if the pointer should never be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                                                ^
                                                  _Nonnull
/usr/local/include/stdlib.h:239:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     setkey(const char *) __DARWIN_ALIAS(setkey);
                           ^
/usr/local/include/stdlib.h:239:25: note: insert '_Nullable' if the pointer may be null
void     setkey(const char *) __DARWIN_ALIAS(setkey);
                           ^
                            _Nullable
/usr/local/include/stdlib.h:239:25: note: insert '_Nonnull' if the pointer should never be null
void     setkey(const char *) __DARWIN_ALIAS(setkey);
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:243:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *setstate(const char *);
                             ^
/usr/local/include/stdlib.h:243:27: note: insert '_Nullable' if the pointer may be null
char    *setstate(const char *);
                             ^
                              _Nullable
/usr/local/include/stdlib.h:243:27: note: insert '_Nonnull' if the pointer should never be null
char    *setstate(const char *);
                             ^
                              _Nonnull
/usr/local/include/stdlib.h:243:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *setstate(const char *);
        ^
/usr/local/include/stdlib.h:243:6: note: insert '_Nullable' if the pointer may be null
char    *setstate(const char *);
        ^
          _Nullable 
/usr/local/include/stdlib.h:243:6: note: insert '_Nonnull' if the pointer should never be null
char    *setstate(const char *);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:252:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      unsetenv(const char *) __DARWIN_ALIAS(unsetenv);
                             ^
/usr/local/include/stdlib.h:252:26: note: insert '_Nullable' if the pointer may be null
int      unsetenv(const char *) __DARWIN_ALIAS(unsetenv);
                             ^
                              _Nullable
/usr/local/include/stdlib.h:252:26: note: insert '_Nonnull' if the pointer should never be null
int      unsetenv(const char *) __DARWIN_ALIAS(unsetenv);
                             ^
                              _Nonnull
/usr/local/include/stdlib.h:265:42: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     arc4random_addrandom(unsigned char * /*dat*/, int /*datlen*/)
                                            ^
/usr/local/include/stdlib.h:265:42: note: insert '_Nullable' if the pointer may be null
void     arc4random_addrandom(unsigned char * /*dat*/, int /*datlen*/)
                                            ^
                                              _Nullable
/usr/local/include/stdlib.h:265:42: note: insert '_Nonnull' if the pointer should never be null
void     arc4random_addrandom(unsigned char * /*dat*/, int /*datlen*/)
                                            ^
                                              _Nonnull
/usr/local/include/stdlib.h:270:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     arc4random_buf(void * __buf, size_t __nbytes) __OSX_AVAILABLE_STARTING(__MAC_10_7, __IPHONE_4_3);
                             ^
/usr/local/include/stdlib.h:270:27: note: insert '_Nullable' if the pointer may be null
void     arc4random_buf(void * __buf, size_t __nbytes) __OSX_AVAILABLE_STARTING(__MAC_10_7, __IPHONE_4_3);
                             ^
                               _Nullable
/usr/local/include/stdlib.h:270:27: note: insert '_Nonnull' if the pointer should never be null
void     arc4random_buf(void * __buf, size_t __nbytes) __OSX_AVAILABLE_STARTING(__MAC_10_7, __IPHONE_4_3);
                             ^
                               _Nonnull
/usr/local/include/stdlib.h:276:28: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                              ^
/usr/local/include/stdlib.h:276:28: note: insert '_Nullable' if the pointer may be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                              ^
                                _Nullable 
/usr/local/include/stdlib.h:276:28: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                              ^
                                _Nonnull 
/usr/local/include/stdlib.h:276:47: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                                                 ^
/usr/local/include/stdlib.h:276:47: note: insert '_Nullable' if the pointer may be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                                                 ^
                                                   _Nullable 
/usr/local/include/stdlib.h:276:47: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                                                 ^
                                                   _Nonnull 
/usr/local/include/stdlib.h:277:59: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                 ^
/usr/local/include/stdlib.h:277:59: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                 ^
                                                                  _Nullable
/usr/local/include/stdlib.h:277:59: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                 ^
                                                                  _Nonnull
/usr/local/include/stdlib.h:277:73: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                               ^
/usr/local/include/stdlib.h:277:73: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                               ^
                                                                                _Nullable
/usr/local/include/stdlib.h:277:73: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                               ^
                                                                                _Nonnull
/usr/local/include/stdlib.h:276:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
        ^
/usr/local/include/stdlib.h:276:6: note: insert '_Nullable' if the pointer may be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
        ^
          _Nullable 
/usr/local/include/stdlib.h:276:6: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
        ^
          _Nonnull 
/usr/local/include/stdlib.h:281:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *cgetcap(char *, const char *, int);
                      ^
/usr/local/include/stdlib.h:281:20: note: insert '_Nullable' if the pointer may be null
char    *cgetcap(char *, const char *, int);
                      ^
                       _Nullable
/usr/local/include/stdlib.h:281:20: note: insert '_Nonnull' if the pointer should never be null
char    *cgetcap(char *, const char *, int);
                      ^
                       _Nonnull
/usr/local/include/stdlib.h:281:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *cgetcap(char *, const char *, int);
                                    ^
/usr/local/include/stdlib.h:281:34: note: insert '_Nullable' if the pointer may be null
char    *cgetcap(char *, const char *, int);
                                    ^
                                     _Nullable
/usr/local/include/stdlib.h:281:34: note: insert '_Nonnull' if the pointer should never be null
char    *cgetcap(char *, const char *, int);
                                    ^
                                     _Nonnull
/usr/local/include/stdlib.h:281:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *cgetcap(char *, const char *, int);
        ^
/usr/local/include/stdlib.h:281:6: note: insert '_Nullable' if the pointer may be null
char    *cgetcap(char *, const char *, int);
        ^
          _Nullable 
/usr/local/include/stdlib.h:281:6: note: insert '_Nonnull' if the pointer should never be null
char    *cgetcap(char *, const char *, int);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:283:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                      ^
/usr/local/include/stdlib.h:283:19: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                      ^
                       _Nullable
/usr/local/include/stdlib.h:283:19: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                      ^
                       _Nonnull
/usr/local/include/stdlib.h:283:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                       ^
/usr/local/include/stdlib.h:283:20: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                       ^
                        _Nullable
/usr/local/include/stdlib.h:283:20: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                       ^
                        _Nonnull
/usr/local/include/stdlib.h:283:28: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                               ^
/usr/local/include/stdlib.h:283:28: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                               ^
                                _Nullable
/usr/local/include/stdlib.h:283:28: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                               ^
                                _Nonnull
/usr/local/include/stdlib.h:283:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                                ^
/usr/local/include/stdlib.h:283:29: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                                ^
                                 _Nullable
/usr/local/include/stdlib.h:283:29: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                                ^
                                 _Nonnull
/usr/local/include/stdlib.h:283:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                                              ^
/usr/local/include/stdlib.h:283:43: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                                              ^
                                               _Nullable
/usr/local/include/stdlib.h:283:43: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                                              ^
                                               _Nonnull
/usr/local/include/stdlib.h:284:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                        ^
/usr/local/include/stdlib.h:284:21: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                        ^
                         _Nullable
/usr/local/include/stdlib.h:284:21: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                        ^
                         _Nonnull
/usr/local/include/stdlib.h:284:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                         ^
/usr/local/include/stdlib.h:284:22: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:284:22: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:284:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                                 ^
/usr/local/include/stdlib.h:284:30: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                                 ^
                                  _Nullable
/usr/local/include/stdlib.h:284:30: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                                 ^
                                  _Nonnull
/usr/local/include/stdlib.h:284:31: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                                  ^
/usr/local/include/stdlib.h:284:31: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                                  ^
                                   _Nullable
/usr/local/include/stdlib.h:284:31: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                                  ^
                                   _Nonnull
/usr/local/include/stdlib.h:285:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetmatch(const char *, const char *);
                              ^
/usr/local/include/stdlib.h:285:27: note: insert '_Nullable' if the pointer may be null
int      cgetmatch(const char *, const char *);
                              ^
                               _Nullable
/usr/local/include/stdlib.h:285:27: note: insert '_Nonnull' if the pointer should never be null
int      cgetmatch(const char *, const char *);
                              ^
                               _Nonnull
/usr/local/include/stdlib.h:285:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetmatch(const char *, const char *);
                                            ^
/usr/local/include/stdlib.h:285:41: note: insert '_Nullable' if the pointer may be null
int      cgetmatch(const char *, const char *);
                                            ^
                                             _Nullable
/usr/local/include/stdlib.h:285:41: note: insert '_Nonnull' if the pointer should never be null
int      cgetmatch(const char *, const char *);
                                            ^
                                             _Nonnull
/usr/local/include/stdlib.h:286:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                       ^
/usr/local/include/stdlib.h:286:20: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                       ^
                        _Nullable
/usr/local/include/stdlib.h:286:20: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                       ^
                        _Nonnull
/usr/local/include/stdlib.h:286:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                        ^
/usr/local/include/stdlib.h:286:21: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                        ^
                         _Nullable
/usr/local/include/stdlib.h:286:21: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                        ^
                         _Nonnull
/usr/local/include/stdlib.h:286:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                                ^
/usr/local/include/stdlib.h:286:29: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                                ^
                                 _Nullable
/usr/local/include/stdlib.h:286:29: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                                ^
                                 _Nonnull
/usr/local/include/stdlib.h:286:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                                 ^
/usr/local/include/stdlib.h:286:30: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                                 ^
                                  _Nullable
/usr/local/include/stdlib.h:286:30: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                                 ^
                                  _Nonnull
/usr/local/include/stdlib.h:287:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnum(char *, const char *, long *);
                      ^
/usr/local/include/stdlib.h:287:19: note: insert '_Nullable' if the pointer may be null
int      cgetnum(char *, const char *, long *);
                      ^
                       _Nullable
/usr/local/include/stdlib.h:287:19: note: insert '_Nonnull' if the pointer should never be null
int      cgetnum(char *, const char *, long *);
                      ^
                       _Nonnull
/usr/local/include/stdlib.h:287:33: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnum(char *, const char *, long *);
                                    ^
/usr/local/include/stdlib.h:287:33: note: insert '_Nullable' if the pointer may be null
int      cgetnum(char *, const char *, long *);
                                    ^
                                     _Nullable
/usr/local/include/stdlib.h:287:33: note: insert '_Nonnull' if the pointer should never be null
int      cgetnum(char *, const char *, long *);
                                    ^
                                     _Nonnull
/usr/local/include/stdlib.h:287:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnum(char *, const char *, long *);
                                            ^
/usr/local/include/stdlib.h:287:41: note: insert '_Nullable' if the pointer may be null
int      cgetnum(char *, const char *, long *);
                                            ^
                                             _Nullable
/usr/local/include/stdlib.h:287:41: note: insert '_Nonnull' if the pointer should never be null
int      cgetnum(char *, const char *, long *);
                                            ^
                                             _Nonnull
/usr/local/include/stdlib.h:288:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetset(const char *);
                            ^
/usr/local/include/stdlib.h:288:25: note: insert '_Nullable' if the pointer may be null
int      cgetset(const char *);
                            ^
                             _Nullable
/usr/local/include/stdlib.h:288:25: note: insert '_Nonnull' if the pointer should never be null
int      cgetset(const char *);
                            ^
                             _Nonnull
/usr/local/include/stdlib.h:289:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                      ^
/usr/local/include/stdlib.h:289:19: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                      ^
                       _Nullable
/usr/local/include/stdlib.h:289:19: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                      ^
                       _Nonnull
/usr/local/include/stdlib.h:289:33: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                                    ^
/usr/local/include/stdlib.h:289:33: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                                    ^
                                     _Nullable
/usr/local/include/stdlib.h:289:33: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                                    ^
                                     _Nonnull
/usr/local/include/stdlib.h:289:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                                            ^
/usr/local/include/stdlib.h:289:41: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                                            ^
                                             _Nullable
/usr/local/include/stdlib.h:289:41: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                                            ^
                                             _Nonnull
/usr/local/include/stdlib.h:289:42: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                                             ^
/usr/local/include/stdlib.h:289:42: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                                             ^
                                              _Nullable
/usr/local/include/stdlib.h:289:42: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                                             ^
                                              _Nonnull
/usr/local/include/stdlib.h:290:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                       ^
/usr/local/include/stdlib.h:290:20: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                       ^
                        _Nullable
/usr/local/include/stdlib.h:290:20: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                       ^
                        _Nonnull
/usr/local/include/stdlib.h:290:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                                     ^
/usr/local/include/stdlib.h:290:34: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                                     ^
                                      _Nullable
/usr/local/include/stdlib.h:290:34: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                                     ^
                                      _Nonnull
/usr/local/include/stdlib.h:290:42: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                                             ^
/usr/local/include/stdlib.h:290:42: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                                             ^
                                              _Nullable
/usr/local/include/stdlib.h:290:42: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                                             ^
                                              _Nonnull
/usr/local/include/stdlib.h:290:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                                              ^
/usr/local/include/stdlib.h:290:43: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                                              ^
                                               _Nullable
/usr/local/include/stdlib.h:290:43: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                                              ^
                                               _Nonnull
/usr/local/include/stdlib.h:293:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *devname(dev_t, mode_t);
        ^
/usr/local/include/stdlib.h:293:6: note: insert '_Nullable' if the pointer may be null
char    *devname(dev_t, mode_t);
        ^
          _Nullable 
/usr/local/include/stdlib.h:293:6: note: insert '_Nonnull' if the pointer should never be null
char    *devname(dev_t, mode_t);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:294:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *devname_r(dev_t, mode_t, char *buf, int len);
                                       ^
/usr/local/include/stdlib.h:294:37: note: insert '_Nullable' if the pointer may be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
                                       ^
                                         _Nullable 
/usr/local/include/stdlib.h:294:37: note: insert '_Nonnull' if the pointer should never be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
                                       ^
                                         _Nonnull 
/usr/local/include/stdlib.h:294:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *devname_r(dev_t, mode_t, char *buf, int len);
        ^
/usr/local/include/stdlib.h:294:6: note: insert '_Nullable' if the pointer may be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
        ^
          _Nullable 
/usr/local/include/stdlib.h:294:6: note: insert '_Nonnull' if the pointer should never be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:295:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getbsize(int *, long *);
                      ^
/usr/local/include/stdlib.h:295:20: note: insert '_Nullable' if the pointer may be null
char    *getbsize(int *, long *);
                      ^
                       _Nullable
/usr/local/include/stdlib.h:295:20: note: insert '_Nonnull' if the pointer should never be null
char    *getbsize(int *, long *);
                      ^
                       _Nonnull
/usr/local/include/stdlib.h:295:28: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getbsize(int *, long *);
                              ^
/usr/local/include/stdlib.h:295:28: note: insert '_Nullable' if the pointer may be null
char    *getbsize(int *, long *);
                              ^
                               _Nullable
/usr/local/include/stdlib.h:295:28: note: insert '_Nonnull' if the pointer should never be null
char    *getbsize(int *, long *);
                              ^
                               _Nonnull
/usr/local/include/stdlib.h:295:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getbsize(int *, long *);
        ^
/usr/local/include/stdlib.h:295:6: note: insert '_Nullable' if the pointer may be null
char    *getbsize(int *, long *);
        ^
          _Nullable 
/usr/local/include/stdlib.h:295:6: note: insert '_Nonnull' if the pointer should never be null
char    *getbsize(int *, long *);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:296:24: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
int      getloadavg(double [], int);
                           ^
/usr/local/include/stdlib.h:296:24: note: insert '_Nullable' if the array parameter may be null
int      getloadavg(double [], int);
                           ^
                            _Nullable
/usr/local/include/stdlib.h:296:24: note: insert '_Nonnull' if the array parameter should never be null
int      getloadavg(double [], int);
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:298:2: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        *getprogname(void);
        ^
/usr/local/include/stdlib.h:298:2: note: insert '_Nullable' if the pointer may be null
        *getprogname(void);
        ^
          _Nullable 
/usr/local/include/stdlib.h:298:2: note: insert '_Nonnull' if the pointer should never be null
        *getprogname(void);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:299:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     setprogname(const char *);
                                ^
/usr/local/include/stdlib.h:299:30: note: insert '_Nullable' if the pointer may be null
void     setprogname(const char *);
                                ^
                                 _Nullable
/usr/local/include/stdlib.h:299:30: note: insert '_Nonnull' if the pointer should never be null
void     setprogname(const char *);
                                ^
                                 _Nonnull
/usr/local/include/stdlib.h:309:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      heapsort(void *__base, size_t __nel, size_t __width,
                       ^
/usr/local/include/stdlib.h:309:20: note: insert '_Nullable' if the pointer may be null
int      heapsort(void *__base, size_t __nel, size_t __width,
                       ^
                         _Nullable 
/usr/local/include/stdlib.h:309:20: note: insert '_Nonnull' if the pointer should never be null
int      heapsort(void *__base, size_t __nel, size_t __width,
                       ^
                         _Nonnull 
/usr/local/include/stdlib.h:310:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
/usr/local/include/stdlib.h:310:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:310:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:310:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
/usr/local/include/stdlib.h:310:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:310:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:312:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      heapsort_b(void *__base, size_t __nel, size_t __width,
                         ^
/usr/local/include/stdlib.h:312:22: note: insert '_Nullable' if the pointer may be null
int      heapsort_b(void *__base, size_t __nel, size_t __width,
                         ^
                           _Nullable 
/usr/local/include/stdlib.h:312:22: note: insert '_Nonnull' if the pointer should never be null
int      heapsort_b(void *__base, size_t __nel, size_t __width,
                         ^
                           _Nonnull 
/usr/local/include/stdlib.h:313:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
/usr/local/include/stdlib.h:313:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:313:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:313:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
/usr/local/include/stdlib.h:313:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:313:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:316:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mergesort(void *__base, size_t __nel, size_t __width,
                        ^
/usr/local/include/stdlib.h:316:21: note: insert '_Nullable' if the pointer may be null
int      mergesort(void *__base, size_t __nel, size_t __width,
                        ^
                          _Nullable 
/usr/local/include/stdlib.h:316:21: note: insert '_Nonnull' if the pointer should never be null
int      mergesort(void *__base, size_t __nel, size_t __width,
                        ^
                          _Nonnull 
/usr/local/include/stdlib.h:317:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
/usr/local/include/stdlib.h:317:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:317:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:317:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
/usr/local/include/stdlib.h:317:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:317:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:319:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mergesort_b(void *__base, size_t __nel, size_t __width,
                          ^
/usr/local/include/stdlib.h:319:23: note: insert '_Nullable' if the pointer may be null
int      mergesort_b(void *__base, size_t __nel, size_t __width,
                          ^
                            _Nullable 
/usr/local/include/stdlib.h:319:23: note: insert '_Nonnull' if the pointer should never be null
int      mergesort_b(void *__base, size_t __nel, size_t __width,
                          ^
                            _Nonnull 
/usr/local/include/stdlib.h:320:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
/usr/local/include/stdlib.h:320:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:320:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:320:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
/usr/local/include/stdlib.h:320:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:320:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:323:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort(void *__base, size_t __nel, size_t __width,
                    ^
/usr/local/include/stdlib.h:323:18: note: insert '_Nullable' if the pointer may be null
void     psort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nullable 
/usr/local/include/stdlib.h:323:18: note: insert '_Nonnull' if the pointer should never be null
void     psort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nonnull 
/usr/local/include/stdlib.h:324:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *))
                                                 ^
/usr/local/include/stdlib.h:324:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *))
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:324:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *))
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:324:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *))
                                                               ^
/usr/local/include/stdlib.h:324:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *))
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:324:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *))
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:327:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort_b(void *__base, size_t __nel, size_t __width,
                      ^
/usr/local/include/stdlib.h:327:20: note: insert '_Nullable' if the pointer may be null
void     psort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nullable 
/usr/local/include/stdlib.h:327:20: note: insert '_Nonnull' if the pointer should never be null
void     psort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nonnull 
/usr/local/include/stdlib.h:328:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
/usr/local/include/stdlib.h:328:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:328:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:328:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
/usr/local/include/stdlib.h:328:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:328:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:331:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
/usr/local/include/stdlib.h:331:20: note: insert '_Nullable' if the pointer may be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nullable 
/usr/local/include/stdlib.h:331:20: note: insert '_Nonnull' if the pointer should never be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nonnull 
/usr/local/include/stdlib.h:331:64: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
/usr/local/include/stdlib.h:331:64: note: insert '_Nullable' if the pointer may be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nullable
/usr/local/include/stdlib.h:331:64: note: insert '_Nonnull' if the pointer should never be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nonnull
/usr/local/include/stdlib.h:332:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                           ^
/usr/local/include/stdlib.h:332:37: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                           ^
                                            _Nullable
/usr/local/include/stdlib.h:332:37: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                           ^
                                            _Nonnull
/usr/local/include/stdlib.h:332:51: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                                         ^
/usr/local/include/stdlib.h:332:51: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                                         ^
                                                          _Nullable
/usr/local/include/stdlib.h:332:51: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                                         ^
                                                          _Nonnull
/usr/local/include/stdlib.h:332:65: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                                                       ^
/usr/local/include/stdlib.h:332:65: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                                                       ^
                                                                        _Nullable
/usr/local/include/stdlib.h:332:65: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                                                       ^
                                                                        _Nonnull
/usr/local/include/stdlib.h:335:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort_b(void *__base, size_t __nel, size_t __width,
                      ^
/usr/local/include/stdlib.h:335:20: note: insert '_Nullable' if the pointer may be null
void     qsort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nullable 
/usr/local/include/stdlib.h:335:20: note: insert '_Nonnull' if the pointer should never be null
void     qsort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nonnull 
/usr/local/include/stdlib.h:336:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
/usr/local/include/stdlib.h:336:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:336:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:336:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
/usr/local/include/stdlib.h:336:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:336:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:339:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
/usr/local/include/stdlib.h:339:20: note: insert '_Nullable' if the pointer may be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nullable 
/usr/local/include/stdlib.h:339:20: note: insert '_Nonnull' if the pointer should never be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nonnull 
/usr/local/include/stdlib.h:339:64: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
/usr/local/include/stdlib.h:339:64: note: insert '_Nullable' if the pointer may be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nullable
/usr/local/include/stdlib.h:339:64: note: insert '_Nonnull' if the pointer should never be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nonnull
/usr/local/include/stdlib.h:340:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                           ^
/usr/local/include/stdlib.h:340:37: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                           ^
                                            _Nullable
/usr/local/include/stdlib.h:340:37: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                           ^
                                            _Nonnull
/usr/local/include/stdlib.h:340:51: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                         ^
/usr/local/include/stdlib.h:340:51: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                         ^
                                                          _Nullable
/usr/local/include/stdlib.h:340:51: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                         ^
                                                          _Nonnull
/usr/local/include/stdlib.h:340:65: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                                       ^
/usr/local/include/stdlib.h:340:65: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                                       ^
                                                                        _Nullable
/usr/local/include/stdlib.h:340:65: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                                       ^
                                                                        _Nonnull
/usr/local/include/stdlib.h:341:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                       ^
/usr/local/include/stdlib.h:341:36: note: insert '_Nullable' if the pointer may be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                       ^
                                        _Nullable
/usr/local/include/stdlib.h:341:36: note: insert '_Nonnull' if the pointer should never be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                       ^
                                        _Nonnull
/usr/local/include/stdlib.h:341:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
/usr/local/include/stdlib.h:341:37: note: insert '_Nullable' if the pointer may be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                          _Nullable 
/usr/local/include/stdlib.h:341:37: note: insert '_Nonnull' if the pointer should never be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                          _Nonnull 
/usr/local/include/stdlib.h:341:77: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                ^
/usr/local/include/stdlib.h:341:77: note: insert '_Nullable' if the pointer may be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                ^
                                                                                  _Nullable 
/usr/local/include/stdlib.h:341:77: note: insert '_Nonnull' if the pointer should never be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                ^
                                                                                  _Nonnull 
/usr/local/include/stdlib.h:343:24: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int     rpmatch(const char *)
                           ^
/usr/local/include/stdlib.h:343:24: note: insert '_Nullable' if the pointer may be null
int     rpmatch(const char *)
                           ^
                            _Nullable
/usr/local/include/stdlib.h:343:24: note: insert '_Nonnull' if the pointer should never be null
int     rpmatch(const char *)
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:345:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
/usr/local/include/stdlib.h:345:37: note: insert '_Nullable' if the pointer may be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                         _Nullable
/usr/local/include/stdlib.h:345:37: note: insert '_Nonnull' if the pointer should never be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                         _Nonnull
/usr/local/include/stdlib.h:345:38: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                         ^
/usr/local/include/stdlib.h:345:38: note: insert '_Nullable' if the pointer may be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                         ^
                                           _Nullable 
/usr/local/include/stdlib.h:345:38: note: insert '_Nonnull' if the pointer should never be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                         ^
                                           _Nonnull 
/usr/local/include/stdlib.h:345:78: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                 ^
/usr/local/include/stdlib.h:345:78: note: insert '_Nullable' if the pointer may be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                 ^
                                                                                   _Nullable 
/usr/local/include/stdlib.h:345:78: note: insert '_Nonnull' if the pointer should never be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                 ^
                                                                                   _Nonnull 
/usr/local/include/stdlib.h:349:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
                       ^
/usr/local/include/stdlib.h:349:21: note: insert '_Nullable' if the pointer may be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
                       ^
                         _Nullable 
/usr/local/include/stdlib.h:349:21: note: insert '_Nonnull' if the pointer should never be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
                       ^
                         _Nonnull 
/usr/local/include/stdlib.h:349:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
        ^
/usr/local/include/stdlib.h:349:6: note: insert '_Nullable' if the pointer may be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
        ^
          _Nullable 
/usr/local/include/stdlib.h:349:6: note: insert '_Nonnull' if the pointer should never be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:351:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                            ^
/usr/local/include/stdlib.h:351:22: note: insert '_Nullable' if the pointer may be null
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                            ^
                              _Nullable 
/usr/local/include/stdlib.h:351:22: note: insert '_Nonnull' if the pointer should never be null
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                            ^
                              _Nonnull 
/usr/local/include/stdlib.h:351:84: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                                                                                          ^
/usr/local/include/stdlib.h:351:84: note: insert '_Nullable' if the pointer may be null
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                                                                                          ^
                                                                                           _Nullable
/usr/local/include/stdlib.h:351:84: note: insert '_Nonnull' if the pointer should never be null
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                                                                                          ^
                                                                                           _Nonnull
/usr/local/include/stdlib.h:351:85: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                                                                                           ^
/usr/local/include/stdlib.h:351:85: note: insert '_Nullable' if the pointer may be null
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                                                                                           ^
                                                                                             _Nullable 
/usr/local/include/stdlib.h:351:85: note: insert '_Nonnull' if the pointer should never be null
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                                                                                           ^
                                                                                             _Nonnull 
/usr/local/include/stdlib.h:355:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoq(const char *__str, char **__endptr, int __base);
                           ^
/usr/local/include/stdlib.h:355:21: note: insert '_Nullable' if the pointer may be null
         strtoq(const char *__str, char **__endptr, int __base);
                           ^
                             _Nullable 
/usr/local/include/stdlib.h:355:21: note: insert '_Nonnull' if the pointer should never be null
         strtoq(const char *__str, char **__endptr, int __base);
                           ^
                             _Nonnull 
/usr/local/include/stdlib.h:355:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoq(const char *__str, char **__endptr, int __base);
                                        ^
/usr/local/include/stdlib.h:355:34: note: insert '_Nullable' if the pointer may be null
         strtoq(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nullable
/usr/local/include/stdlib.h:355:34: note: insert '_Nonnull' if the pointer should never be null
         strtoq(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nonnull
/usr/local/include/stdlib.h:355:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoq(const char *__str, char **__endptr, int __base);
                                         ^
/usr/local/include/stdlib.h:355:35: note: insert '_Nullable' if the pointer may be null
         strtoq(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nullable 
/usr/local/include/stdlib.h:355:35: note: insert '_Nonnull' if the pointer should never be null
         strtoq(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nonnull 
/usr/local/include/stdlib.h:357:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtouq(const char *__str, char **__endptr, int __base);
                            ^
/usr/local/include/stdlib.h:357:22: note: insert '_Nullable' if the pointer may be null
         strtouq(const char *__str, char **__endptr, int __base);
                            ^
                              _Nullable 
/usr/local/include/stdlib.h:357:22: note: insert '_Nonnull' if the pointer should never be null
         strtouq(const char *__str, char **__endptr, int __base);
                            ^
                              _Nonnull 
/usr/local/include/stdlib.h:357:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtouq(const char *__str, char **__endptr, int __base);
                                         ^
/usr/local/include/stdlib.h:357:35: note: insert '_Nullable' if the pointer may be null
         strtouq(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nullable
/usr/local/include/stdlib.h:357:35: note: insert '_Nonnull' if the pointer should never be null
         strtouq(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nonnull
/usr/local/include/stdlib.h:357:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtouq(const char *__str, char **__endptr, int __base);
                                          ^
/usr/local/include/stdlib.h:357:36: note: insert '_Nullable' if the pointer may be null
         strtouq(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nullable 
/usr/local/include/stdlib.h:357:36: note: insert '_Nonnull' if the pointer should never be null
         strtouq(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nonnull 
/usr/local/include/stdlib.h:359:13: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
extern char *suboptarg;         /* getsubopt(3) external variable */
            ^
/usr/local/include/stdlib.h:359:13: note: insert '_Nullable' if the pointer may be null
extern char *suboptarg;         /* getsubopt(3) external variable */
            ^
              _Nullable 
/usr/local/include/stdlib.h:359:13: note: insert '_Nonnull' if the pointer should never be null
extern char *suboptarg;         /* getsubopt(3) external variable */
            ^
              _Nonnull 
193 warnings generated.
checked program was:
/* begin */
1: #include "ruby.h"
2: 
3: #include <mysql.h>
4: 
5: /*top*/
6: typedef int conftest_type;
7: conftest_type conftestval = (int)SSL_MODE_VERIFY_IDENTITY;
/* end */

--------------------

have_struct_member: checking for MYSQL.net.vio in mysql.h... -------------------- yes

"gcc -I/Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/x86_64-darwin19 -I/Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/backward -I/Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0 -I. -I/usr/local/opt/mysql-client/include/mysql  -I/usr/local/opt/libyaml/include -I/usr/local/opt/libksba/include -I/usr/local/opt/readline/include -I/usr/local/opt/zlib/include -I/usr/local/opt/openssl@1.1/include -D_XOPEN_SOURCE -D_DARWIN_C_SOURCE -D_DARWIN_UNLIMITED_SELECT -D_REENTRANT   -O3 -ggdb3 -Wall -Wextra -Wdeprecated-declarations -Wdivision-by-zero -Wimplicit-function-declaration -Wimplicit-int -Wpointer-arith -Wshorten-64-to-32 -Wwrite-strings -Wmissing-noreturn -Wno-constant-logical-operand -Wno-long-long -Wno-missing-field-initializers -Wno-overlength-strings -Wno-parentheses-equality -Wno-self-assign -Wno-tautological-compare -Wno-unused-parameter -Wno-unused-value -Wunused-variable -Wextra-tokens  -fno-common -pipe -DFULL_SSL_MODE_SUPPORT   -c conftest.c"
In file included from conftest.c:1:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby.h:33:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/ruby.h:29:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/defines.h:126:
In file included from /usr/local/include/stdio.h:64:
/usr/local/include/_stdio.h:93:16: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        unsigned char   *_base;
                        ^
/usr/local/include/_stdio.h:93:16: note: insert '_Nullable' if the pointer may be null
        unsigned char   *_base;
                        ^
                          _Nullable 
/usr/local/include/_stdio.h:93:16: note: insert '_Nonnull' if the pointer should never be null
        unsigned char   *_base;
                        ^
                          _Nonnull 
/usr/local/include/_stdio.h:138:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
/usr/local/include/_stdio.h:138:32: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
                                           _Nullable
/usr/local/include/_stdio.h:138:32: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
                                           _Nonnull
/usr/local/include/_stdio.h:138:40: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
/usr/local/include/_stdio.h:138:40: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
                                                   _Nullable
/usr/local/include/_stdio.h:138:40: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
                                                   _Nonnull
/usr/local/include/_stdio.h:139:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
/usr/local/include/_stdio.h:139:35: note: insert '_Nullable' if the pointer may be null
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
                                           _Nullable
/usr/local/include/_stdio.h:139:35: note: insert '_Nonnull' if the pointer should never be null
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
                                           _Nonnull
/usr/local/include/_stdio.h:140:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
/usr/local/include/_stdio.h:140:32: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
                                           _Nullable
/usr/local/include/_stdio.h:140:32: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
                                           _Nonnull
/usr/local/include/_stdio.h:140:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
/usr/local/include/_stdio.h:140:46: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
                                                         _Nullable
/usr/local/include/_stdio.h:140:46: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
                                                         _Nonnull
/usr/local/include/_stdio.h:144:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
/usr/local/include/_stdio.h:144:18: note: insert '_Nullable' if the pointer may be null
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
                          _Nullable 
/usr/local/include/_stdio.h:144:18: note: insert '_Nonnull' if the pointer should never be null
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
                          _Nonnull 
In file included from conftest.c:1:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby.h:33:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/ruby.h:29:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/defines.h:126:
/usr/local/include/stdio.h:67:13: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
extern FILE *__stdinp;
            ^
/usr/local/include/stdio.h:67:13: note: insert '_Nullable' if the pointer may be null
extern FILE *__stdinp;
            ^
              _Nullable 
/usr/local/include/stdio.h:67:13: note: insert '_Nonnull' if the pointer should never be null
extern FILE *__stdinp;
            ^
              _Nonnull 
/usr/local/include/stdio.h:386:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 int (* _Nullable)(void *, const char *, int),
                                        ^
/usr/local/include/stdio.h:386:41: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *, const char *, int),
                                        ^
                                         _Nullable
/usr/local/include/stdio.h:386:41: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *, const char *, int),
                                        ^
                                         _Nonnull
/usr/local/include/stdio.h:386:55: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
/usr/local/include/stdio.h:386:55: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
                                                       _Nullable
/usr/local/include/stdio.h:386:55: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
                                                       _Nonnull
/usr/local/include/stdio.h:387:44: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
/usr/local/include/stdio.h:387:44: note: insert '_Nullable' if the pointer may be null
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
                                            _Nullable
/usr/local/include/stdio.h:387:44: note: insert '_Nonnull' if the pointer should never be null
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
                                            _Nonnull
/usr/local/include/stdio.h:388:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 int (* _Nullable)(void *));
                                        ^
/usr/local/include/stdio.h:388:41: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *));
                                        ^
                                         _Nullable
/usr/local/include/stdio.h:388:41: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *));
                                        ^
                                         _Nonnull
/usr/local/include/stdio.h:384:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
FILE    *funopen(const void *,
        ^
/usr/local/include/stdio.h:384:6: note: insert '_Nullable' if the pointer may be null
FILE    *funopen(const void *,
        ^
          _Nullable 
/usr/local/include/stdio.h:384:6: note: insert '_Nonnull' if the pointer should never be null
FILE    *funopen(const void *,
        ^
          _Nonnull 
In file included from conftest.c:1:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby.h:33:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/ruby.h:29:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/defines.h:134:
/usr/local/include/stdlib.h:134:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   atof(const char *);
                         ^
/usr/local/include/stdlib.h:134:25: note: insert '_Nullable' if the pointer may be null
double   atof(const char *);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:134:25: note: insert '_Nonnull' if the pointer should never be null
double   atof(const char *);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:135:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      atoi(const char *);
                         ^
/usr/local/include/stdlib.h:135:22: note: insert '_Nullable' if the pointer may be null
int      atoi(const char *);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:135:22: note: insert '_Nonnull' if the pointer should never be null
int      atoi(const char *);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:136:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     atol(const char *);
                         ^
/usr/local/include/stdlib.h:136:23: note: insert '_Nullable' if the pointer may be null
long     atol(const char *);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:136:23: note: insert '_Nonnull' if the pointer should never be null
long     atol(const char *);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:139:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         atoll(const char *);
                          ^
/usr/local/include/stdlib.h:139:20: note: insert '_Nullable' if the pointer may be null
         atoll(const char *);
                          ^
                           _Nullable
/usr/local/include/stdlib.h:139:20: note: insert '_Nonnull' if the pointer should never be null
         atoll(const char *);
                          ^
                           _Nonnull
/usr/local/include/stdlib.h:141:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                            ^
/usr/local/include/stdlib.h:141:26: note: insert '_Nullable' if the pointer may be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                            ^
                              _Nullable 
/usr/local/include/stdlib.h:141:26: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                            ^
                              _Nonnull 
/usr/local/include/stdlib.h:141:45: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                                               ^
/usr/local/include/stdlib.h:141:45: note: insert '_Nullable' if the pointer may be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                                               ^
                                                 _Nullable 
/usr/local/include/stdlib.h:141:45: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                                               ^
                                                 _Nonnull 
/usr/local/include/stdlib.h:142:59: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                 ^
/usr/local/include/stdlib.h:142:59: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                 ^
                                                                  _Nullable
/usr/local/include/stdlib.h:142:59: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                 ^
                                                                  _Nonnull
/usr/local/include/stdlib.h:142:73: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                               ^
/usr/local/include/stdlib.h:142:73: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                               ^
                                                                                _Nullable
/usr/local/include/stdlib.h:142:73: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                               ^
                                                                                _Nonnull
/usr/local/include/stdlib.h:141:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch(const void *__key, const void *__base, size_t __nel,
        ^
/usr/local/include/stdlib.h:141:6: note: insert '_Nullable' if the pointer may be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
        ^
          _Nullable 
/usr/local/include/stdlib.h:141:6: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
        ^
          _Nonnull 
/usr/local/include/stdlib.h:147:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getenv(const char *);
                           ^
/usr/local/include/stdlib.h:147:25: note: insert '_Nullable' if the pointer may be null
char    *getenv(const char *);
                           ^
                            _Nullable
/usr/local/include/stdlib.h:147:25: note: insert '_Nonnull' if the pointer should never be null
char    *getenv(const char *);
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:147:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getenv(const char *);
        ^
/usr/local/include/stdlib.h:147:6: note: insert '_Nullable' if the pointer may be null
char    *getenv(const char *);
        ^
          _Nullable 
/usr/local/include/stdlib.h:147:6: note: insert '_Nonnull' if the pointer should never be null
char    *getenv(const char *);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:156:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mblen(const char *__s, size_t __n);
                          ^
/usr/local/include/stdlib.h:156:23: note: insert '_Nullable' if the pointer may be null
int      mblen(const char *__s, size_t __n);
                          ^
                            _Nullable 
/usr/local/include/stdlib.h:156:23: note: insert '_Nonnull' if the pointer should never be null
int      mblen(const char *__s, size_t __n);
                          ^
                            _Nonnull 
/usr/local/include/stdlib.h:157:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                          ^
/usr/local/include/stdlib.h:157:26: note: insert '_Nullable' if the pointer may be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                          ^
                            _Nullable
/usr/local/include/stdlib.h:157:26: note: insert '_Nonnull' if the pointer should never be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                          ^
                            _Nonnull
/usr/local/include/stdlib.h:157:52: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                                                    ^
/usr/local/include/stdlib.h:157:52: note: insert '_Nullable' if the pointer may be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                                                    ^
                                                      _Nullable
/usr/local/include/stdlib.h:157:52: note: insert '_Nonnull' if the pointer should never be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                                                    ^
                                                      _Nonnull
/usr/local/include/stdlib.h:158:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                        ^
/usr/local/include/stdlib.h:158:21: note: insert '_Nullable' if the pointer may be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                        ^
                          _Nullable
/usr/local/include/stdlib.h:158:21: note: insert '_Nonnull' if the pointer should never be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                        ^
                          _Nonnull
/usr/local/include/stdlib.h:158:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                                                 ^
/usr/local/include/stdlib.h:158:46: note: insert '_Nullable' if the pointer may be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                                                 ^
                                                   _Nullable
/usr/local/include/stdlib.h:158:46: note: insert '_Nonnull' if the pointer should never be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                                                 ^
                                                   _Nonnull
/usr/local/include/stdlib.h:160:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort(void *__base, size_t __nel, size_t __width,
                    ^
/usr/local/include/stdlib.h:160:18: note: insert '_Nullable' if the pointer may be null
void     qsort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nullable 
/usr/local/include/stdlib.h:160:18: note: insert '_Nonnull' if the pointer should never be null
void     qsort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nonnull 
/usr/local/include/stdlib.h:161:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
/usr/local/include/stdlib.h:161:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:161:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:161:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
/usr/local/include/stdlib.h:161:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:161:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:165:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                           ^
/usr/local/include/stdlib.h:165:27: note: insert '_Nullable' if the pointer may be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                           ^
                            _Nullable
/usr/local/include/stdlib.h:165:27: note: insert '_Nonnull' if the pointer should never be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:165:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                   ^
/usr/local/include/stdlib.h:165:35: note: insert '_Nullable' if the pointer may be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                   ^
                                    _Nullable
/usr/local/include/stdlib.h:165:35: note: insert '_Nonnull' if the pointer should never be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                   ^
                                    _Nonnull
/usr/local/include/stdlib.h:165:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                    ^
/usr/local/include/stdlib.h:165:36: note: insert '_Nullable' if the pointer may be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                    ^
                                     _Nullable
/usr/local/include/stdlib.h:165:36: note: insert '_Nonnull' if the pointer should never be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                    ^
                                     _Nonnull
/usr/local/include/stdlib.h:166:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                           ^
/usr/local/include/stdlib.h:166:26: note: insert '_Nullable' if the pointer may be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                           ^
                            _Nullable
/usr/local/include/stdlib.h:166:26: note: insert '_Nonnull' if the pointer should never be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:166:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                   ^
/usr/local/include/stdlib.h:166:34: note: insert '_Nullable' if the pointer may be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                   ^
                                    _Nullable
/usr/local/include/stdlib.h:166:34: note: insert '_Nonnull' if the pointer should never be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                   ^
                                    _Nonnull
/usr/local/include/stdlib.h:166:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                    ^
/usr/local/include/stdlib.h:166:35: note: insert '_Nullable' if the pointer may be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                    ^
                                     _Nullable
/usr/local/include/stdlib.h:166:35: note: insert '_Nonnull' if the pointer should never be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                    ^
                                     _Nonnull
/usr/local/include/stdlib.h:167:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     strtol(const char *__str, char **__endptr, int __base);
                           ^
/usr/local/include/stdlib.h:167:25: note: insert '_Nullable' if the pointer may be null
long     strtol(const char *__str, char **__endptr, int __base);
                           ^
                             _Nullable 
/usr/local/include/stdlib.h:167:25: note: insert '_Nonnull' if the pointer should never be null
long     strtol(const char *__str, char **__endptr, int __base);
                           ^
                             _Nonnull 
/usr/local/include/stdlib.h:167:38: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     strtol(const char *__str, char **__endptr, int __base);
                                        ^
/usr/local/include/stdlib.h:167:38: note: insert '_Nullable' if the pointer may be null
long     strtol(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nullable
/usr/local/include/stdlib.h:167:38: note: insert '_Nonnull' if the pointer should never be null
long     strtol(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nonnull
/usr/local/include/stdlib.h:167:39: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     strtol(const char *__str, char **__endptr, int __base);
                                         ^
/usr/local/include/stdlib.h:167:39: note: insert '_Nullable' if the pointer may be null
long     strtol(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nullable 
/usr/local/include/stdlib.h:167:39: note: insert '_Nonnull' if the pointer should never be null
long     strtol(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nonnull 
/usr/local/include/stdlib.h:169:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtold(const char *, char **);
                            ^
/usr/local/include/stdlib.h:169:22: note: insert '_Nullable' if the pointer may be null
         strtold(const char *, char **);
                            ^
                             _Nullable
/usr/local/include/stdlib.h:169:22: note: insert '_Nonnull' if the pointer should never be null
         strtold(const char *, char **);
                            ^
                             _Nonnull
/usr/local/include/stdlib.h:169:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtold(const char *, char **);
                                    ^
/usr/local/include/stdlib.h:169:30: note: insert '_Nullable' if the pointer may be null
         strtold(const char *, char **);
                                    ^
                                     _Nullable
/usr/local/include/stdlib.h:169:30: note: insert '_Nonnull' if the pointer should never be null
         strtold(const char *, char **);
                                    ^
                                     _Nonnull
/usr/local/include/stdlib.h:169:31: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtold(const char *, char **);
                                     ^
/usr/local/include/stdlib.h:169:31: note: insert '_Nullable' if the pointer may be null
         strtold(const char *, char **);
                                     ^
                                      _Nullable
/usr/local/include/stdlib.h:169:31: note: insert '_Nonnull' if the pointer should never be null
         strtold(const char *, char **);
                                     ^
                                      _Nonnull
/usr/local/include/stdlib.h:172:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoll(const char *__str, char **__endptr, int __base);
                            ^
/usr/local/include/stdlib.h:172:22: note: insert '_Nullable' if the pointer may be null
         strtoll(const char *__str, char **__endptr, int __base);
                            ^
                              _Nullable 
/usr/local/include/stdlib.h:172:22: note: insert '_Nonnull' if the pointer should never be null
         strtoll(const char *__str, char **__endptr, int __base);
                            ^
                              _Nonnull 
/usr/local/include/stdlib.h:172:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoll(const char *__str, char **__endptr, int __base);
                                         ^
/usr/local/include/stdlib.h:172:35: note: insert '_Nullable' if the pointer may be null
         strtoll(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nullable
/usr/local/include/stdlib.h:172:35: note: insert '_Nonnull' if the pointer should never be null
         strtoll(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nonnull
/usr/local/include/stdlib.h:172:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoll(const char *__str, char **__endptr, int __base);
                                          ^
/usr/local/include/stdlib.h:172:36: note: insert '_Nullable' if the pointer may be null
         strtoll(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nullable 
/usr/local/include/stdlib.h:172:36: note: insert '_Nonnull' if the pointer should never be null
         strtoll(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nonnull 
/usr/local/include/stdlib.h:175:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoul(const char *__str, char **__endptr, int __base);
                            ^
/usr/local/include/stdlib.h:175:22: note: insert '_Nullable' if the pointer may be null
         strtoul(const char *__str, char **__endptr, int __base);
                            ^
                              _Nullable 
/usr/local/include/stdlib.h:175:22: note: insert '_Nonnull' if the pointer should never be null
         strtoul(const char *__str, char **__endptr, int __base);
                            ^
                              _Nonnull 
/usr/local/include/stdlib.h:175:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoul(const char *__str, char **__endptr, int __base);
                                         ^
/usr/local/include/stdlib.h:175:35: note: insert '_Nullable' if the pointer may be null
         strtoul(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nullable
/usr/local/include/stdlib.h:175:35: note: insert '_Nonnull' if the pointer should never be null
         strtoul(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nonnull
/usr/local/include/stdlib.h:175:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoul(const char *__str, char **__endptr, int __base);
                                          ^
/usr/local/include/stdlib.h:175:36: note: insert '_Nullable' if the pointer may be null
         strtoul(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nullable 
/usr/local/include/stdlib.h:175:36: note: insert '_Nonnull' if the pointer should never be null
         strtoul(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nonnull 
/usr/local/include/stdlib.h:178:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoull(const char *__str, char **__endptr, int __base);
                             ^
/usr/local/include/stdlib.h:178:23: note: insert '_Nullable' if the pointer may be null
         strtoull(const char *__str, char **__endptr, int __base);
                             ^
                               _Nullable 
/usr/local/include/stdlib.h:178:23: note: insert '_Nonnull' if the pointer should never be null
         strtoull(const char *__str, char **__endptr, int __base);
                             ^
                               _Nonnull 
/usr/local/include/stdlib.h:178:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoull(const char *__str, char **__endptr, int __base);
                                          ^
/usr/local/include/stdlib.h:178:36: note: insert '_Nullable' if the pointer may be null
         strtoull(const char *__str, char **__endptr, int __base);
                                          ^
                                           _Nullable
/usr/local/include/stdlib.h:178:36: note: insert '_Nonnull' if the pointer should never be null
         strtoull(const char *__str, char **__endptr, int __base);
                                          ^
                                           _Nonnull
/usr/local/include/stdlib.h:178:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoull(const char *__str, char **__endptr, int __base);
                                           ^
/usr/local/include/stdlib.h:178:37: note: insert '_Nullable' if the pointer may be null
         strtoull(const char *__str, char **__endptr, int __base);
                                           ^
                                             _Nullable 
/usr/local/include/stdlib.h:178:37: note: insert '_Nonnull' if the pointer should never be null
         strtoull(const char *__str, char **__endptr, int __base);
                                           ^
                                             _Nonnull 
/usr/local/include/stdlib.h:190:24: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      system(const char *) __DARWIN_ALIAS_C(system);
                           ^
/usr/local/include/stdlib.h:190:24: note: insert '_Nullable' if the pointer may be null
int      system(const char *) __DARWIN_ALIAS_C(system);
                           ^
                            _Nullable
/usr/local/include/stdlib.h:190:24: note: insert '_Nonnull' if the pointer should never be null
int      system(const char *) __DARWIN_ALIAS_C(system);
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:194:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                       ^
/usr/local/include/stdlib.h:194:23: note: insert '_Nullable' if the pointer may be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                       ^
                         _Nullable
/usr/local/include/stdlib.h:194:23: note: insert '_Nonnull' if the pointer should never be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                       ^
                         _Nonnull
/usr/local/include/stdlib.h:194:51: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                                                   ^
/usr/local/include/stdlib.h:194:51: note: insert '_Nullable' if the pointer may be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                                                   ^
                                                     _Nullable
/usr/local/include/stdlib.h:194:51: note: insert '_Nonnull' if the pointer should never be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                                                   ^
                                                     _Nonnull
/usr/local/include/stdlib.h:195:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      wctomb(char *, wchar_t);
                     ^
/usr/local/include/stdlib.h:195:18: note: insert '_Nullable' if the pointer may be null
int      wctomb(char *, wchar_t);
                     ^
                      _Nullable
/usr/local/include/stdlib.h:195:18: note: insert '_Nonnull' if the pointer should never be null
int      wctomb(char *, wchar_t);
                     ^
                      _Nonnull
/usr/local/include/stdlib.h:199:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     a64l(const char *);
                         ^
/usr/local/include/stdlib.h:199:23: note: insert '_Nullable' if the pointer may be null
long     a64l(const char *);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:199:23: note: insert '_Nonnull' if the pointer should never be null
long     a64l(const char *);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:201:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
/usr/local/include/stdlib.h:201:29: note: insert '_Nullable' if the pointer may be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nullable 
/usr/local/include/stdlib.h:201:29: note: insert '_Nonnull' if the pointer should never be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nonnull 
/usr/local/include/stdlib.h:201:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
/usr/local/include/stdlib.h:201:46: note: insert '_Nullable' if the pointer may be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nullable 
/usr/local/include/stdlib.h:201:46: note: insert '_Nonnull' if the pointer should never be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nonnull 
/usr/local/include/stdlib.h:201:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
/usr/local/include/stdlib.h:201:6: note: insert '_Nullable' if the pointer may be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nullable 
/usr/local/include/stdlib.h:201:6: note: insert '_Nonnull' if the pointer should never be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nonnull 
/usr/local/include/stdlib.h:202:31: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
double   erand48(unsigned short[3]);
                               ^
/usr/local/include/stdlib.h:202:31: note: insert '_Nullable' if the array parameter may be null
double   erand48(unsigned short[3]);
                               ^
                                _Nullable 
/usr/local/include/stdlib.h:202:31: note: insert '_Nonnull' if the array parameter should never be null
double   erand48(unsigned short[3]);
                               ^
                                _Nonnull 
/usr/local/include/stdlib.h:203:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
/usr/local/include/stdlib.h:203:29: note: insert '_Nullable' if the pointer may be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nullable 
/usr/local/include/stdlib.h:203:29: note: insert '_Nonnull' if the pointer should never be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nonnull 
/usr/local/include/stdlib.h:203:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
/usr/local/include/stdlib.h:203:46: note: insert '_Nullable' if the pointer may be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nullable 
/usr/local/include/stdlib.h:203:46: note: insert '_Nonnull' if the pointer should never be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nonnull 
/usr/local/include/stdlib.h:203:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
/usr/local/include/stdlib.h:203:6: note: insert '_Nullable' if the pointer may be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nullable 
/usr/local/include/stdlib.h:203:6: note: insert '_Nonnull' if the pointer should never be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nonnull 
/usr/local/include/stdlib.h:204:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *gcvt(double, int, char *); /* LEGACY */
                                ^
/usr/local/include/stdlib.h:204:30: note: insert '_Nullable' if the pointer may be null
char    *gcvt(double, int, char *); /* LEGACY */
                                ^
                                 _Nullable
/usr/local/include/stdlib.h:204:30: note: insert '_Nonnull' if the pointer should never be null
char    *gcvt(double, int, char *); /* LEGACY */
                                ^
                                 _Nonnull
/usr/local/include/stdlib.h:204:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *gcvt(double, int, char *); /* LEGACY */
        ^
/usr/local/include/stdlib.h:204:6: note: insert '_Nullable' if the pointer may be null
char    *gcvt(double, int, char *); /* LEGACY */
        ^
          _Nullable 
/usr/local/include/stdlib.h:204:6: note: insert '_Nonnull' if the pointer should never be null
char    *gcvt(double, int, char *); /* LEGACY */
        ^
          _Nonnull 
/usr/local/include/stdlib.h:205:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                        ^
/usr/local/include/stdlib.h:205:21: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                        ^
                         _Nullable
/usr/local/include/stdlib.h:205:21: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                        ^
                         _Nonnull
/usr/local/include/stdlib.h:205:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                         ^
/usr/local/include/stdlib.h:205:22: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:205:22: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:205:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                 ^
/usr/local/include/stdlib.h:205:30: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                 ^
                                   _Nullable
/usr/local/include/stdlib.h:205:30: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                 ^
                                   _Nonnull
/usr/local/include/stdlib.h:205:38: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                         ^
/usr/local/include/stdlib.h:205:38: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                         ^
                                          _Nullable
/usr/local/include/stdlib.h:205:38: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                         ^
                                          _Nonnull
/usr/local/include/stdlib.h:205:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                                 ^
/usr/local/include/stdlib.h:205:46: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:205:46: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:205:47: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                                  ^
/usr/local/include/stdlib.h:205:47: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                                  ^
                                                   _Nullable
/usr/local/include/stdlib.h:205:47: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                                  ^
                                                   _Nonnull
/usr/local/include/stdlib.h:208:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
                                  ^
/usr/local/include/stdlib.h:208:32: note: insert '_Nullable' if the pointer may be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
                                  ^
                                   _Nullable
/usr/local/include/stdlib.h:208:32: note: insert '_Nonnull' if the pointer should never be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
                                  ^
                                   _Nonnull
/usr/local/include/stdlib.h:208:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
        ^
/usr/local/include/stdlib.h:208:6: note: insert '_Nullable' if the pointer may be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
        ^
          _Nullable 
/usr/local/include/stdlib.h:208:6: note: insert '_Nonnull' if the pointer should never be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
        ^
          _Nonnull 
/usr/local/include/stdlib.h:212:29: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
long     jrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
/usr/local/include/stdlib.h:212:29: note: insert '_Nullable' if the array parameter may be null
long     jrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nullable 
/usr/local/include/stdlib.h:212:29: note: insert '_Nonnull' if the array parameter should never be null
long     jrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nonnull 
/usr/local/include/stdlib.h:213:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *l64a(long);
        ^
/usr/local/include/stdlib.h:213:6: note: insert '_Nullable' if the pointer may be null
char    *l64a(long);
        ^
          _Nullable 
/usr/local/include/stdlib.h:213:6: note: insert '_Nonnull' if the pointer should never be null
char    *l64a(long);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:214:29: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
void     lcong48(unsigned short[7]);
                               ^
/usr/local/include/stdlib.h:214:29: note: insert '_Nullable' if the array parameter may be null
void     lcong48(unsigned short[7]);
                               ^
                                _Nullable 
/usr/local/include/stdlib.h:214:29: note: insert '_Nonnull' if the array parameter should never be null
void     lcong48(unsigned short[7]);
                               ^
                                _Nonnull 
/usr/local/include/stdlib.h:216:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *mktemp(char *);
                     ^
/usr/local/include/stdlib.h:216:19: note: insert '_Nullable' if the pointer may be null
char    *mktemp(char *);
                     ^
                      _Nullable
/usr/local/include/stdlib.h:216:19: note: insert '_Nonnull' if the pointer should never be null
char    *mktemp(char *);
                     ^
                      _Nonnull
/usr/local/include/stdlib.h:216:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *mktemp(char *);
        ^
/usr/local/include/stdlib.h:216:6: note: insert '_Nullable' if the pointer may be null
char    *mktemp(char *);
        ^
          _Nullable 
/usr/local/include/stdlib.h:216:6: note: insert '_Nonnull' if the pointer should never be null
char    *mktemp(char *);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:217:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mkstemp(char *);
                      ^
/usr/local/include/stdlib.h:217:19: note: insert '_Nullable' if the pointer may be null
int      mkstemp(char *);
                      ^
                       _Nullable
/usr/local/include/stdlib.h:217:19: note: insert '_Nonnull' if the pointer should never be null
int      mkstemp(char *);
                      ^
                       _Nonnull
/usr/local/include/stdlib.h:219:29: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
long     nrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
/usr/local/include/stdlib.h:219:29: note: insert '_Nullable' if the array parameter may be null
long     nrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nullable 
/usr/local/include/stdlib.h:219:29: note: insert '_Nonnull' if the array parameter should never be null
long     nrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nonnull 
/usr/local/include/stdlib.h:221:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ptsname(int);
        ^
/usr/local/include/stdlib.h:221:6: note: insert '_Nullable' if the pointer may be null
char    *ptsname(int);
        ^
          _Nullable 
/usr/local/include/stdlib.h:221:6: note: insert '_Nonnull' if the pointer should never be null
char    *ptsname(int);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:224:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int ptsname_r(int fildes, char *buffer, size_t buflen) __API_AVAILABLE(macos(10.13.4), ios(11.3), tvos(11.3), watchos(4.3));
                               ^
/usr/local/include/stdlib.h:224:32: note: insert '_Nullable' if the pointer may be null
int ptsname_r(int fildes, char *buffer, size_t buflen) __API_AVAILABLE(macos(10.13.4), ios(11.3), tvos(11.3), watchos(4.3));
                               ^
                                 _Nullable 
/usr/local/include/stdlib.h:224:32: note: insert '_Nonnull' if the pointer should never be null
int ptsname_r(int fildes, char *buffer, size_t buflen) __API_AVAILABLE(macos(10.13.4), ios(11.3), tvos(11.3), watchos(4.3));
                               ^
                                 _Nonnull 
/usr/local/include/stdlib.h:227:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      putenv(char *) __DARWIN_ALIAS(putenv);
                     ^
/usr/local/include/stdlib.h:227:18: note: insert '_Nullable' if the pointer may be null
int      putenv(char *) __DARWIN_ALIAS(putenv);
                     ^
                      _Nullable
/usr/local/include/stdlib.h:227:18: note: insert '_Nonnull' if the pointer should never be null
int      putenv(char *) __DARWIN_ALIAS(putenv);
                     ^
                      _Nonnull
/usr/local/include/stdlib.h:229:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      rand_r(unsigned *) __swift_unavailable("Use arc4random instead.");
                         ^
/usr/local/include/stdlib.h:229:22: note: insert '_Nullable' if the pointer may be null
int      rand_r(unsigned *) __swift_unavailable("Use arc4random instead.");
                         ^
                          _Nullable
/usr/local/include/stdlib.h:229:22: note: insert '_Nonnull' if the pointer should never be null
int      rand_r(unsigned *) __swift_unavailable("Use arc4random instead.");
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:231:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                             ^
/usr/local/include/stdlib.h:231:27: note: insert '_Nullable' if the pointer may be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                             ^
                               _Nullable
/usr/local/include/stdlib.h:231:27: note: insert '_Nonnull' if the pointer should never be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                             ^
                               _Nonnull
/usr/local/include/stdlib.h:231:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                                                ^
/usr/local/include/stdlib.h:231:46: note: insert '_Nullable' if the pointer may be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                                                ^
                                                  _Nullable
/usr/local/include/stdlib.h:231:46: note: insert '_Nonnull' if the pointer should never be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                                                ^
                                                  _Nonnull
/usr/local/include/stdlib.h:231:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
        ^
/usr/local/include/stdlib.h:231:6: note: insert '_Nullable' if the pointer may be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
        ^
          _Nullable 
/usr/local/include/stdlib.h:231:6: note: insert '_Nonnull' if the pointer should never be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:236:24: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
        *seed48(unsigned short[3]);
                              ^
/usr/local/include/stdlib.h:236:24: note: insert '_Nullable' if the array parameter may be null
        *seed48(unsigned short[3]);
                              ^
                               _Nullable 
/usr/local/include/stdlib.h:236:24: note: insert '_Nonnull' if the array parameter should never be null
        *seed48(unsigned short[3]);
                              ^
                               _Nonnull 
/usr/local/include/stdlib.h:236:2: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        *seed48(unsigned short[3]);
        ^
/usr/local/include/stdlib.h:236:2: note: insert '_Nullable' if the pointer may be null
        *seed48(unsigned short[3]);
        ^
          _Nullable 
/usr/local/include/stdlib.h:236:2: note: insert '_Nonnull' if the pointer should never be null
        *seed48(unsigned short[3]);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:237:24: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                           ^
/usr/local/include/stdlib.h:237:24: note: insert '_Nullable' if the pointer may be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                           ^
                             _Nullable
/usr/local/include/stdlib.h:237:24: note: insert '_Nonnull' if the pointer should never be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                           ^
                             _Nonnull
/usr/local/include/stdlib.h:237:45: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                                                ^
/usr/local/include/stdlib.h:237:45: note: insert '_Nullable' if the pointer may be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                                                ^
                                                  _Nullable
/usr/local/include/stdlib.h:237:45: note: insert '_Nonnull' if the pointer should never be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                                                ^
                                                  _Nonnull
/usr/local/include/stdlib.h:239:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     setkey(const char *) __DARWIN_ALIAS(setkey);
                           ^
/usr/local/include/stdlib.h:239:25: note: insert '_Nullable' if the pointer may be null
void     setkey(const char *) __DARWIN_ALIAS(setkey);
                           ^
                            _Nullable
/usr/local/include/stdlib.h:239:25: note: insert '_Nonnull' if the pointer should never be null
void     setkey(const char *) __DARWIN_ALIAS(setkey);
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:243:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *setstate(const char *);
                             ^
/usr/local/include/stdlib.h:243:27: note: insert '_Nullable' if the pointer may be null
char    *setstate(const char *);
                             ^
                              _Nullable
/usr/local/include/stdlib.h:243:27: note: insert '_Nonnull' if the pointer should never be null
char    *setstate(const char *);
                             ^
                              _Nonnull
/usr/local/include/stdlib.h:243:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *setstate(const char *);
        ^
/usr/local/include/stdlib.h:243:6: note: insert '_Nullable' if the pointer may be null
char    *setstate(const char *);
        ^
          _Nullable 
/usr/local/include/stdlib.h:243:6: note: insert '_Nonnull' if the pointer should never be null
char    *setstate(const char *);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:252:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      unsetenv(const char *) __DARWIN_ALIAS(unsetenv);
                             ^
/usr/local/include/stdlib.h:252:26: note: insert '_Nullable' if the pointer may be null
int      unsetenv(const char *) __DARWIN_ALIAS(unsetenv);
                             ^
                              _Nullable
/usr/local/include/stdlib.h:252:26: note: insert '_Nonnull' if the pointer should never be null
int      unsetenv(const char *) __DARWIN_ALIAS(unsetenv);
                             ^
                              _Nonnull
/usr/local/include/stdlib.h:265:42: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     arc4random_addrandom(unsigned char * /*dat*/, int /*datlen*/)
                                            ^
/usr/local/include/stdlib.h:265:42: note: insert '_Nullable' if the pointer may be null
void     arc4random_addrandom(unsigned char * /*dat*/, int /*datlen*/)
                                            ^
                                              _Nullable
/usr/local/include/stdlib.h:265:42: note: insert '_Nonnull' if the pointer should never be null
void     arc4random_addrandom(unsigned char * /*dat*/, int /*datlen*/)
                                            ^
                                              _Nonnull
/usr/local/include/stdlib.h:270:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     arc4random_buf(void * __buf, size_t __nbytes) __OSX_AVAILABLE_STARTING(__MAC_10_7, __IPHONE_4_3);
                             ^
/usr/local/include/stdlib.h:270:27: note: insert '_Nullable' if the pointer may be null
void     arc4random_buf(void * __buf, size_t __nbytes) __OSX_AVAILABLE_STARTING(__MAC_10_7, __IPHONE_4_3);
                             ^
                               _Nullable
/usr/local/include/stdlib.h:270:27: note: insert '_Nonnull' if the pointer should never be null
void     arc4random_buf(void * __buf, size_t __nbytes) __OSX_AVAILABLE_STARTING(__MAC_10_7, __IPHONE_4_3);
                             ^
                               _Nonnull
/usr/local/include/stdlib.h:276:28: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                              ^
/usr/local/include/stdlib.h:276:28: note: insert '_Nullable' if the pointer may be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                              ^
                                _Nullable 
/usr/local/include/stdlib.h:276:28: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                              ^
                                _Nonnull 
/usr/local/include/stdlib.h:276:47: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                                                 ^
/usr/local/include/stdlib.h:276:47: note: insert '_Nullable' if the pointer may be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                                                 ^
                                                   _Nullable 
/usr/local/include/stdlib.h:276:47: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                                                 ^
                                                   _Nonnull 
/usr/local/include/stdlib.h:277:59: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                 ^
/usr/local/include/stdlib.h:277:59: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                 ^
                                                                  _Nullable
/usr/local/include/stdlib.h:277:59: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                 ^
                                                                  _Nonnull
/usr/local/include/stdlib.h:277:73: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                               ^
/usr/local/include/stdlib.h:277:73: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                               ^
                                                                                _Nullable
/usr/local/include/stdlib.h:277:73: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                               ^
                                                                                _Nonnull
/usr/local/include/stdlib.h:276:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
        ^
/usr/local/include/stdlib.h:276:6: note: insert '_Nullable' if the pointer may be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
        ^
          _Nullable 
/usr/local/include/stdlib.h:276:6: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
        ^
          _Nonnull 
/usr/local/include/stdlib.h:281:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *cgetcap(char *, const char *, int);
                      ^
/usr/local/include/stdlib.h:281:20: note: insert '_Nullable' if the pointer may be null
char    *cgetcap(char *, const char *, int);
                      ^
                       _Nullable
/usr/local/include/stdlib.h:281:20: note: insert '_Nonnull' if the pointer should never be null
char    *cgetcap(char *, const char *, int);
                      ^
                       _Nonnull
/usr/local/include/stdlib.h:281:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *cgetcap(char *, const char *, int);
                                    ^
/usr/local/include/stdlib.h:281:34: note: insert '_Nullable' if the pointer may be null
char    *cgetcap(char *, const char *, int);
                                    ^
                                     _Nullable
/usr/local/include/stdlib.h:281:34: note: insert '_Nonnull' if the pointer should never be null
char    *cgetcap(char *, const char *, int);
                                    ^
                                     _Nonnull
/usr/local/include/stdlib.h:281:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *cgetcap(char *, const char *, int);
        ^
/usr/local/include/stdlib.h:281:6: note: insert '_Nullable' if the pointer may be null
char    *cgetcap(char *, const char *, int);
        ^
          _Nullable 
/usr/local/include/stdlib.h:281:6: note: insert '_Nonnull' if the pointer should never be null
char    *cgetcap(char *, const char *, int);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:283:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                      ^
/usr/local/include/stdlib.h:283:19: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                      ^
                       _Nullable
/usr/local/include/stdlib.h:283:19: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                      ^
                       _Nonnull
/usr/local/include/stdlib.h:283:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                       ^
/usr/local/include/stdlib.h:283:20: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                       ^
                        _Nullable
/usr/local/include/stdlib.h:283:20: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                       ^
                        _Nonnull
/usr/local/include/stdlib.h:283:28: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                               ^
/usr/local/include/stdlib.h:283:28: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                               ^
                                _Nullable
/usr/local/include/stdlib.h:283:28: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                               ^
                                _Nonnull
/usr/local/include/stdlib.h:283:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                                ^
/usr/local/include/stdlib.h:283:29: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                                ^
                                 _Nullable
/usr/local/include/stdlib.h:283:29: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                                ^
                                 _Nonnull
/usr/local/include/stdlib.h:283:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                                              ^
/usr/local/include/stdlib.h:283:43: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                                              ^
                                               _Nullable
/usr/local/include/stdlib.h:283:43: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                                              ^
                                               _Nonnull
/usr/local/include/stdlib.h:284:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                        ^
/usr/local/include/stdlib.h:284:21: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                        ^
                         _Nullable
/usr/local/include/stdlib.h:284:21: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                        ^
                         _Nonnull
/usr/local/include/stdlib.h:284:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                         ^
/usr/local/include/stdlib.h:284:22: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:284:22: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:284:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                                 ^
/usr/local/include/stdlib.h:284:30: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                                 ^
                                  _Nullable
/usr/local/include/stdlib.h:284:30: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                                 ^
                                  _Nonnull
/usr/local/include/stdlib.h:284:31: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                                  ^
/usr/local/include/stdlib.h:284:31: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                                  ^
                                   _Nullable
/usr/local/include/stdlib.h:284:31: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                                  ^
                                   _Nonnull
/usr/local/include/stdlib.h:285:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetmatch(const char *, const char *);
                              ^
/usr/local/include/stdlib.h:285:27: note: insert '_Nullable' if the pointer may be null
int      cgetmatch(const char *, const char *);
                              ^
                               _Nullable
/usr/local/include/stdlib.h:285:27: note: insert '_Nonnull' if the pointer should never be null
int      cgetmatch(const char *, const char *);
                              ^
                               _Nonnull
/usr/local/include/stdlib.h:285:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetmatch(const char *, const char *);
                                            ^
/usr/local/include/stdlib.h:285:41: note: insert '_Nullable' if the pointer may be null
int      cgetmatch(const char *, const char *);
                                            ^
                                             _Nullable
/usr/local/include/stdlib.h:285:41: note: insert '_Nonnull' if the pointer should never be null
int      cgetmatch(const char *, const char *);
                                            ^
                                             _Nonnull
/usr/local/include/stdlib.h:286:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                       ^
/usr/local/include/stdlib.h:286:20: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                       ^
                        _Nullable
/usr/local/include/stdlib.h:286:20: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                       ^
                        _Nonnull
/usr/local/include/stdlib.h:286:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                        ^
/usr/local/include/stdlib.h:286:21: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                        ^
                         _Nullable
/usr/local/include/stdlib.h:286:21: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                        ^
                         _Nonnull
/usr/local/include/stdlib.h:286:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                                ^
/usr/local/include/stdlib.h:286:29: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                                ^
                                 _Nullable
/usr/local/include/stdlib.h:286:29: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                                ^
                                 _Nonnull
/usr/local/include/stdlib.h:286:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                                 ^
/usr/local/include/stdlib.h:286:30: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                                 ^
                                  _Nullable
/usr/local/include/stdlib.h:286:30: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                                 ^
                                  _Nonnull
/usr/local/include/stdlib.h:287:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnum(char *, const char *, long *);
                      ^
/usr/local/include/stdlib.h:287:19: note: insert '_Nullable' if the pointer may be null
int      cgetnum(char *, const char *, long *);
                      ^
                       _Nullable
/usr/local/include/stdlib.h:287:19: note: insert '_Nonnull' if the pointer should never be null
int      cgetnum(char *, const char *, long *);
                      ^
                       _Nonnull
/usr/local/include/stdlib.h:287:33: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnum(char *, const char *, long *);
                                    ^
/usr/local/include/stdlib.h:287:33: note: insert '_Nullable' if the pointer may be null
int      cgetnum(char *, const char *, long *);
                                    ^
                                     _Nullable
/usr/local/include/stdlib.h:287:33: note: insert '_Nonnull' if the pointer should never be null
int      cgetnum(char *, const char *, long *);
                                    ^
                                     _Nonnull
/usr/local/include/stdlib.h:287:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnum(char *, const char *, long *);
                                            ^
/usr/local/include/stdlib.h:287:41: note: insert '_Nullable' if the pointer may be null
int      cgetnum(char *, const char *, long *);
                                            ^
                                             _Nullable
/usr/local/include/stdlib.h:287:41: note: insert '_Nonnull' if the pointer should never be null
int      cgetnum(char *, const char *, long *);
                                            ^
                                             _Nonnull
/usr/local/include/stdlib.h:288:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetset(const char *);
                            ^
/usr/local/include/stdlib.h:288:25: note: insert '_Nullable' if the pointer may be null
int      cgetset(const char *);
                            ^
                             _Nullable
/usr/local/include/stdlib.h:288:25: note: insert '_Nonnull' if the pointer should never be null
int      cgetset(const char *);
                            ^
                             _Nonnull
/usr/local/include/stdlib.h:289:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                      ^
/usr/local/include/stdlib.h:289:19: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                      ^
                       _Nullable
/usr/local/include/stdlib.h:289:19: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                      ^
                       _Nonnull
/usr/local/include/stdlib.h:289:33: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                                    ^
/usr/local/include/stdlib.h:289:33: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                                    ^
                                     _Nullable
/usr/local/include/stdlib.h:289:33: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                                    ^
                                     _Nonnull
/usr/local/include/stdlib.h:289:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                                            ^
/usr/local/include/stdlib.h:289:41: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                                            ^
                                             _Nullable
/usr/local/include/stdlib.h:289:41: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                                            ^
                                             _Nonnull
/usr/local/include/stdlib.h:289:42: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                                             ^
/usr/local/include/stdlib.h:289:42: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                                             ^
                                              _Nullable
/usr/local/include/stdlib.h:289:42: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                                             ^
                                              _Nonnull
/usr/local/include/stdlib.h:290:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                       ^
/usr/local/include/stdlib.h:290:20: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                       ^
                        _Nullable
/usr/local/include/stdlib.h:290:20: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                       ^
                        _Nonnull
/usr/local/include/stdlib.h:290:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                                     ^
/usr/local/include/stdlib.h:290:34: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                                     ^
                                      _Nullable
/usr/local/include/stdlib.h:290:34: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                                     ^
                                      _Nonnull
/usr/local/include/stdlib.h:290:42: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                                             ^
/usr/local/include/stdlib.h:290:42: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                                             ^
                                              _Nullable
/usr/local/include/stdlib.h:290:42: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                                             ^
                                              _Nonnull
/usr/local/include/stdlib.h:290:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                                              ^
/usr/local/include/stdlib.h:290:43: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                                              ^
                                               _Nullable
/usr/local/include/stdlib.h:290:43: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                                              ^
                                               _Nonnull
/usr/local/include/stdlib.h:293:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *devname(dev_t, mode_t);
        ^
/usr/local/include/stdlib.h:293:6: note: insert '_Nullable' if the pointer may be null
char    *devname(dev_t, mode_t);
        ^
          _Nullable 
/usr/local/include/stdlib.h:293:6: note: insert '_Nonnull' if the pointer should never be null
char    *devname(dev_t, mode_t);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:294:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *devname_r(dev_t, mode_t, char *buf, int len);
                                       ^
/usr/local/include/stdlib.h:294:37: note: insert '_Nullable' if the pointer may be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
                                       ^
                                         _Nullable 
/usr/local/include/stdlib.h:294:37: note: insert '_Nonnull' if the pointer should never be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
                                       ^
                                         _Nonnull 
/usr/local/include/stdlib.h:294:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *devname_r(dev_t, mode_t, char *buf, int len);
        ^
/usr/local/include/stdlib.h:294:6: note: insert '_Nullable' if the pointer may be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
        ^
          _Nullable 
/usr/local/include/stdlib.h:294:6: note: insert '_Nonnull' if the pointer should never be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:295:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getbsize(int *, long *);
                      ^
/usr/local/include/stdlib.h:295:20: note: insert '_Nullable' if the pointer may be null
char    *getbsize(int *, long *);
                      ^
                       _Nullable
/usr/local/include/stdlib.h:295:20: note: insert '_Nonnull' if the pointer should never be null
char    *getbsize(int *, long *);
                      ^
                       _Nonnull
/usr/local/include/stdlib.h:295:28: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getbsize(int *, long *);
                              ^
/usr/local/include/stdlib.h:295:28: note: insert '_Nullable' if the pointer may be null
char    *getbsize(int *, long *);
                              ^
                               _Nullable
/usr/local/include/stdlib.h:295:28: note: insert '_Nonnull' if the pointer should never be null
char    *getbsize(int *, long *);
                              ^
                               _Nonnull
/usr/local/include/stdlib.h:295:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getbsize(int *, long *);
        ^
/usr/local/include/stdlib.h:295:6: note: insert '_Nullable' if the pointer may be null
char    *getbsize(int *, long *);
        ^
          _Nullable 
/usr/local/include/stdlib.h:295:6: note: insert '_Nonnull' if the pointer should never be null
char    *getbsize(int *, long *);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:296:24: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
int      getloadavg(double [], int);
                           ^
/usr/local/include/stdlib.h:296:24: note: insert '_Nullable' if the array parameter may be null
int      getloadavg(double [], int);
                           ^
                            _Nullable
/usr/local/include/stdlib.h:296:24: note: insert '_Nonnull' if the array parameter should never be null
int      getloadavg(double [], int);
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:298:2: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        *getprogname(void);
        ^
/usr/local/include/stdlib.h:298:2: note: insert '_Nullable' if the pointer may be null
        *getprogname(void);
        ^
          _Nullable 
/usr/local/include/stdlib.h:298:2: note: insert '_Nonnull' if the pointer should never be null
        *getprogname(void);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:299:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     setprogname(const char *);
                                ^
/usr/local/include/stdlib.h:299:30: note: insert '_Nullable' if the pointer may be null
void     setprogname(const char *);
                                ^
                                 _Nullable
/usr/local/include/stdlib.h:299:30: note: insert '_Nonnull' if the pointer should never be null
void     setprogname(const char *);
                                ^
                                 _Nonnull
/usr/local/include/stdlib.h:309:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      heapsort(void *__base, size_t __nel, size_t __width,
                       ^
/usr/local/include/stdlib.h:309:20: note: insert '_Nullable' if the pointer may be null
int      heapsort(void *__base, size_t __nel, size_t __width,
                       ^
                         _Nullable 
/usr/local/include/stdlib.h:309:20: note: insert '_Nonnull' if the pointer should never be null
int      heapsort(void *__base, size_t __nel, size_t __width,
                       ^
                         _Nonnull 
/usr/local/include/stdlib.h:310:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
/usr/local/include/stdlib.h:310:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:310:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:310:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
/usr/local/include/stdlib.h:310:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:310:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:312:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      heapsort_b(void *__base, size_t __nel, size_t __width,
                         ^
/usr/local/include/stdlib.h:312:22: note: insert '_Nullable' if the pointer may be null
int      heapsort_b(void *__base, size_t __nel, size_t __width,
                         ^
                           _Nullable 
/usr/local/include/stdlib.h:312:22: note: insert '_Nonnull' if the pointer should never be null
int      heapsort_b(void *__base, size_t __nel, size_t __width,
                         ^
                           _Nonnull 
/usr/local/include/stdlib.h:313:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
/usr/local/include/stdlib.h:313:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:313:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:313:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
/usr/local/include/stdlib.h:313:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:313:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:316:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mergesort(void *__base, size_t __nel, size_t __width,
                        ^
/usr/local/include/stdlib.h:316:21: note: insert '_Nullable' if the pointer may be null
int      mergesort(void *__base, size_t __nel, size_t __width,
                        ^
                          _Nullable 
/usr/local/include/stdlib.h:316:21: note: insert '_Nonnull' if the pointer should never be null
int      mergesort(void *__base, size_t __nel, size_t __width,
                        ^
                          _Nonnull 
/usr/local/include/stdlib.h:317:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
/usr/local/include/stdlib.h:317:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:317:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:317:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
/usr/local/include/stdlib.h:317:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:317:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:319:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mergesort_b(void *__base, size_t __nel, size_t __width,
                          ^
/usr/local/include/stdlib.h:319:23: note: insert '_Nullable' if the pointer may be null
int      mergesort_b(void *__base, size_t __nel, size_t __width,
                          ^
                            _Nullable 
/usr/local/include/stdlib.h:319:23: note: insert '_Nonnull' if the pointer should never be null
int      mergesort_b(void *__base, size_t __nel, size_t __width,
                          ^
                            _Nonnull 
/usr/local/include/stdlib.h:320:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
/usr/local/include/stdlib.h:320:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:320:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:320:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
/usr/local/include/stdlib.h:320:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:320:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:323:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort(void *__base, size_t __nel, size_t __width,
                    ^
/usr/local/include/stdlib.h:323:18: note: insert '_Nullable' if the pointer may be null
void     psort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nullable 
/usr/local/include/stdlib.h:323:18: note: insert '_Nonnull' if the pointer should never be null
void     psort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nonnull 
/usr/local/include/stdlib.h:324:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *))
                                                 ^
/usr/local/include/stdlib.h:324:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *))
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:324:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *))
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:324:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *))
                                                               ^
/usr/local/include/stdlib.h:324:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *))
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:324:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *))
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:327:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort_b(void *__base, size_t __nel, size_t __width,
                      ^
/usr/local/include/stdlib.h:327:20: note: insert '_Nullable' if the pointer may be null
void     psort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nullable 
/usr/local/include/stdlib.h:327:20: note: insert '_Nonnull' if the pointer should never be null
void     psort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nonnull 
/usr/local/include/stdlib.h:328:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
/usr/local/include/stdlib.h:328:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:328:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:328:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
/usr/local/include/stdlib.h:328:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:328:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:331:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
/usr/local/include/stdlib.h:331:20: note: insert '_Nullable' if the pointer may be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nullable 
/usr/local/include/stdlib.h:331:20: note: insert '_Nonnull' if the pointer should never be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nonnull 
/usr/local/include/stdlib.h:331:64: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
/usr/local/include/stdlib.h:331:64: note: insert '_Nullable' if the pointer may be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nullable
/usr/local/include/stdlib.h:331:64: note: insert '_Nonnull' if the pointer should never be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nonnull
/usr/local/include/stdlib.h:332:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                           ^
/usr/local/include/stdlib.h:332:37: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                           ^
                                            _Nullable
/usr/local/include/stdlib.h:332:37: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                           ^
                                            _Nonnull
/usr/local/include/stdlib.h:332:51: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                                         ^
/usr/local/include/stdlib.h:332:51: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                                         ^
                                                          _Nullable
/usr/local/include/stdlib.h:332:51: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                                         ^
                                                          _Nonnull
/usr/local/include/stdlib.h:332:65: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                                                       ^
/usr/local/include/stdlib.h:332:65: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                                                       ^
                                                                        _Nullable
/usr/local/include/stdlib.h:332:65: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                                                       ^
                                                                        _Nonnull
/usr/local/include/stdlib.h:335:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort_b(void *__base, size_t __nel, size_t __width,
                      ^
/usr/local/include/stdlib.h:335:20: note: insert '_Nullable' if the pointer may be null
void     qsort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nullable 
/usr/local/include/stdlib.h:335:20: note: insert '_Nonnull' if the pointer should never be null
void     qsort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nonnull 
/usr/local/include/stdlib.h:336:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
/usr/local/include/stdlib.h:336:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:336:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:336:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
/usr/local/include/stdlib.h:336:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:336:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:339:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
/usr/local/include/stdlib.h:339:20: note: insert '_Nullable' if the pointer may be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nullable 
/usr/local/include/stdlib.h:339:20: note: insert '_Nonnull' if the pointer should never be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nonnull 
/usr/local/include/stdlib.h:339:64: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
/usr/local/include/stdlib.h:339:64: note: insert '_Nullable' if the pointer may be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nullable
/usr/local/include/stdlib.h:339:64: note: insert '_Nonnull' if the pointer should never be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nonnull
/usr/local/include/stdlib.h:340:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                           ^
/usr/local/include/stdlib.h:340:37: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                           ^
                                            _Nullable
/usr/local/include/stdlib.h:340:37: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                           ^
                                            _Nonnull
/usr/local/include/stdlib.h:340:51: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                         ^
/usr/local/include/stdlib.h:340:51: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                         ^
                                                          _Nullable
/usr/local/include/stdlib.h:340:51: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                         ^
                                                          _Nonnull
/usr/local/include/stdlib.h:340:65: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                                       ^
/usr/local/include/stdlib.h:340:65: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                                       ^
                                                                        _Nullable
/usr/local/include/stdlib.h:340:65: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                                       ^
                                                                        _Nonnull
/usr/local/include/stdlib.h:341:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                       ^
/usr/local/include/stdlib.h:341:36: note: insert '_Nullable' if the pointer may be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                       ^
                                        _Nullable
/usr/local/include/stdlib.h:341:36: note: insert '_Nonnull' if the pointer should never be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                       ^
                                        _Nonnull
/usr/local/include/stdlib.h:341:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
/usr/local/include/stdlib.h:341:37: note: insert '_Nullable' if the pointer may be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                          _Nullable 
/usr/local/include/stdlib.h:341:37: note: insert '_Nonnull' if the pointer should never be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                          _Nonnull 
/usr/local/include/stdlib.h:341:77: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                ^
/usr/local/include/stdlib.h:341:77: note: insert '_Nullable' if the pointer may be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                ^
                                                                                  _Nullable 
/usr/local/include/stdlib.h:341:77: note: insert '_Nonnull' if the pointer should never be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                ^
                                                                                  _Nonnull 
/usr/local/include/stdlib.h:343:24: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int     rpmatch(const char *)
                           ^
/usr/local/include/stdlib.h:343:24: note: insert '_Nullable' if the pointer may be null
int     rpmatch(const char *)
                           ^
                            _Nullable
/usr/local/include/stdlib.h:343:24: note: insert '_Nonnull' if the pointer should never be null
int     rpmatch(const char *)
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:345:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
/usr/local/include/stdlib.h:345:37: note: insert '_Nullable' if the pointer may be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                         _Nullable
/usr/local/include/stdlib.h:345:37: note: insert '_Nonnull' if the pointer should never be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                         _Nonnull
/usr/local/include/stdlib.h:345:38: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                         ^
/usr/local/include/stdlib.h:345:38: note: insert '_Nullable' if the pointer may be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                         ^
                                           _Nullable 
/usr/local/include/stdlib.h:345:38: note: insert '_Nonnull' if the pointer should never be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                         ^
                                           _Nonnull 
/usr/local/include/stdlib.h:345:78: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                 ^
/usr/local/include/stdlib.h:345:78: note: insert '_Nullable' if the pointer may be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                 ^
                                                                                   _Nullable 
/usr/local/include/stdlib.h:345:78: note: insert '_Nonnull' if the pointer should never be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                 ^
                                                                                   _Nonnull 
/usr/local/include/stdlib.h:349:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
                       ^
/usr/local/include/stdlib.h:349:21: note: insert '_Nullable' if the pointer may be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
                       ^
                         _Nullable 
/usr/local/include/stdlib.h:349:21: note: insert '_Nonnull' if the pointer should never be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
                       ^
                         _Nonnull 
/usr/local/include/stdlib.h:349:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
        ^
/usr/local/include/stdlib.h:349:6: note: insert '_Nullable' if the pointer may be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
        ^
          _Nullable 
/usr/local/include/stdlib.h:349:6: note: insert '_Nonnull' if the pointer should never be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:351:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                            ^
/usr/local/include/stdlib.h:351:22: note: insert '_Nullable' if the pointer may be null
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                            ^
                              _Nullable 
/usr/local/include/stdlib.h:351:22: note: insert '_Nonnull' if the pointer should never be null
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                            ^
                              _Nonnull 
/usr/local/include/stdlib.h:351:84: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                                                                                          ^
/usr/local/include/stdlib.h:351:84: note: insert '_Nullable' if the pointer may be null
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                                                                                          ^
                                                                                           _Nullable
/usr/local/include/stdlib.h:351:84: note: insert '_Nonnull' if the pointer should never be null
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                                                                                          ^
                                                                                           _Nonnull
/usr/local/include/stdlib.h:351:85: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                                                                                           ^
/usr/local/include/stdlib.h:351:85: note: insert '_Nullable' if the pointer may be null
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                                                                                           ^
                                                                                             _Nullable 
/usr/local/include/stdlib.h:351:85: note: insert '_Nonnull' if the pointer should never be null
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                                                                                           ^
                                                                                             _Nonnull 
/usr/local/include/stdlib.h:355:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoq(const char *__str, char **__endptr, int __base);
                           ^
/usr/local/include/stdlib.h:355:21: note: insert '_Nullable' if the pointer may be null
         strtoq(const char *__str, char **__endptr, int __base);
                           ^
                             _Nullable 
/usr/local/include/stdlib.h:355:21: note: insert '_Nonnull' if the pointer should never be null
         strtoq(const char *__str, char **__endptr, int __base);
                           ^
                             _Nonnull 
/usr/local/include/stdlib.h:355:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoq(const char *__str, char **__endptr, int __base);
                                        ^
/usr/local/include/stdlib.h:355:34: note: insert '_Nullable' if the pointer may be null
         strtoq(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nullable
/usr/local/include/stdlib.h:355:34: note: insert '_Nonnull' if the pointer should never be null
         strtoq(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nonnull
/usr/local/include/stdlib.h:355:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoq(const char *__str, char **__endptr, int __base);
                                         ^
/usr/local/include/stdlib.h:355:35: note: insert '_Nullable' if the pointer may be null
         strtoq(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nullable 
/usr/local/include/stdlib.h:355:35: note: insert '_Nonnull' if the pointer should never be null
         strtoq(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nonnull 
/usr/local/include/stdlib.h:357:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtouq(const char *__str, char **__endptr, int __base);
                            ^
/usr/local/include/stdlib.h:357:22: note: insert '_Nullable' if the pointer may be null
         strtouq(const char *__str, char **__endptr, int __base);
                            ^
                              _Nullable 
/usr/local/include/stdlib.h:357:22: note: insert '_Nonnull' if the pointer should never be null
         strtouq(const char *__str, char **__endptr, int __base);
                            ^
                              _Nonnull 
/usr/local/include/stdlib.h:357:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtouq(const char *__str, char **__endptr, int __base);
                                         ^
/usr/local/include/stdlib.h:357:35: note: insert '_Nullable' if the pointer may be null
         strtouq(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nullable
/usr/local/include/stdlib.h:357:35: note: insert '_Nonnull' if the pointer should never be null
         strtouq(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nonnull
/usr/local/include/stdlib.h:357:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtouq(const char *__str, char **__endptr, int __base);
                                          ^
/usr/local/include/stdlib.h:357:36: note: insert '_Nullable' if the pointer may be null
         strtouq(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nullable 
/usr/local/include/stdlib.h:357:36: note: insert '_Nonnull' if the pointer should never be null
         strtouq(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nonnull 
/usr/local/include/stdlib.h:359:13: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
extern char *suboptarg;         /* getsubopt(3) external variable */
            ^
/usr/local/include/stdlib.h:359:13: note: insert '_Nullable' if the pointer may be null
extern char *suboptarg;         /* getsubopt(3) external variable */
            ^
              _Nullable 
/usr/local/include/stdlib.h:359:13: note: insert '_Nonnull' if the pointer should never be null
extern char *suboptarg;         /* getsubopt(3) external variable */
            ^
              _Nonnull 
193 warnings generated.
checked program was:
/* begin */
 1: #include "ruby.h"
 2: 
 3: #include <mysql.h>
 4: 
 5: /*top*/
 6: int s = (char *)&((MYSQL*)0)->net.vio - (char *)0;
 7: int main(int argc, char **argv)
 8: {
 9:   return !!argv[argc];
10: }
/* end */

--------------------

have_struct_member: checking for MYSQL.net.pvio in mysql.h... -------------------- no

"gcc -I/Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/x86_64-darwin19 -I/Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/backward -I/Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0 -I. -I/usr/local/opt/mysql-client/include/mysql  -I/usr/local/opt/libyaml/include -I/usr/local/opt/libksba/include -I/usr/local/opt/readline/include -I/usr/local/opt/zlib/include -I/usr/local/opt/openssl@1.1/include -D_XOPEN_SOURCE -D_DARWIN_C_SOURCE -D_DARWIN_UNLIMITED_SELECT -D_REENTRANT   -O3 -ggdb3 -Wall -Wextra -Wdeprecated-declarations -Wdivision-by-zero -Wimplicit-function-declaration -Wimplicit-int -Wpointer-arith -Wshorten-64-to-32 -Wwrite-strings -Wmissing-noreturn -Wno-constant-logical-operand -Wno-long-long -Wno-missing-field-initializers -Wno-overlength-strings -Wno-parentheses-equality -Wno-self-assign -Wno-tautological-compare -Wno-unused-parameter -Wno-unused-value -Wunused-variable -Wextra-tokens  -fno-common -pipe -DFULL_SSL_MODE_SUPPORT   -c conftest.c"
In file included from conftest.c:1:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby.h:33:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/ruby.h:29:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/defines.h:126:
In file included from /usr/local/include/stdio.h:64:
/usr/local/include/_stdio.h:93:16: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        unsigned char   *_base;
                        ^
/usr/local/include/_stdio.h:93:16: note: insert '_Nullable' if the pointer may be null
        unsigned char   *_base;
                        ^
                          _Nullable 
/usr/local/include/_stdio.h:93:16: note: insert '_Nonnull' if the pointer should never be null
        unsigned char   *_base;
                        ^
                          _Nonnull 
/usr/local/include/_stdio.h:138:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
/usr/local/include/_stdio.h:138:32: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
                                           _Nullable
/usr/local/include/_stdio.h:138:32: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
                                           _Nonnull
/usr/local/include/_stdio.h:138:40: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
/usr/local/include/_stdio.h:138:40: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
                                                   _Nullable
/usr/local/include/_stdio.h:138:40: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
                                                   _Nonnull
/usr/local/include/_stdio.h:139:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
/usr/local/include/_stdio.h:139:35: note: insert '_Nullable' if the pointer may be null
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
                                           _Nullable
/usr/local/include/_stdio.h:139:35: note: insert '_Nonnull' if the pointer should never be null
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
                                           _Nonnull
/usr/local/include/_stdio.h:140:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
/usr/local/include/_stdio.h:140:32: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
                                           _Nullable
/usr/local/include/_stdio.h:140:32: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
                                           _Nonnull
/usr/local/include/_stdio.h:140:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
/usr/local/include/_stdio.h:140:46: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
                                                         _Nullable
/usr/local/include/_stdio.h:140:46: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
                                                         _Nonnull
/usr/local/include/_stdio.h:144:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
/usr/local/include/_stdio.h:144:18: note: insert '_Nullable' if the pointer may be null
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
                          _Nullable 
/usr/local/include/_stdio.h:144:18: note: insert '_Nonnull' if the pointer should never be null
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
                          _Nonnull 
In file included from conftest.c:1:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby.h:33:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/ruby.h:29:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/defines.h:126:
/usr/local/include/stdio.h:67:13: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
extern FILE *__stdinp;
            ^
/usr/local/include/stdio.h:67:13: note: insert '_Nullable' if the pointer may be null
extern FILE *__stdinp;
            ^
              _Nullable 
/usr/local/include/stdio.h:67:13: note: insert '_Nonnull' if the pointer should never be null
extern FILE *__stdinp;
            ^
              _Nonnull 
/usr/local/include/stdio.h:386:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 int (* _Nullable)(void *, const char *, int),
                                        ^
/usr/local/include/stdio.h:386:41: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *, const char *, int),
                                        ^
                                         _Nullable
/usr/local/include/stdio.h:386:41: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *, const char *, int),
                                        ^
                                         _Nonnull
/usr/local/include/stdio.h:386:55: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
/usr/local/include/stdio.h:386:55: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
                                                       _Nullable
/usr/local/include/stdio.h:386:55: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
                                                       _Nonnull
/usr/local/include/stdio.h:387:44: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
/usr/local/include/stdio.h:387:44: note: insert '_Nullable' if the pointer may be null
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
                                            _Nullable
/usr/local/include/stdio.h:387:44: note: insert '_Nonnull' if the pointer should never be null
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
                                            _Nonnull
/usr/local/include/stdio.h:388:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 int (* _Nullable)(void *));
                                        ^
/usr/local/include/stdio.h:388:41: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *));
                                        ^
                                         _Nullable
/usr/local/include/stdio.h:388:41: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *));
                                        ^
                                         _Nonnull
/usr/local/include/stdio.h:384:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
FILE    *funopen(const void *,
        ^
/usr/local/include/stdio.h:384:6: note: insert '_Nullable' if the pointer may be null
FILE    *funopen(const void *,
        ^
          _Nullable 
/usr/local/include/stdio.h:384:6: note: insert '_Nonnull' if the pointer should never be null
FILE    *funopen(const void *,
        ^
          _Nonnull 
In file included from conftest.c:1:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby.h:33:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/ruby.h:29:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/defines.h:134:
/usr/local/include/stdlib.h:134:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   atof(const char *);
                         ^
/usr/local/include/stdlib.h:134:25: note: insert '_Nullable' if the pointer may be null
double   atof(const char *);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:134:25: note: insert '_Nonnull' if the pointer should never be null
double   atof(const char *);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:135:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      atoi(const char *);
                         ^
/usr/local/include/stdlib.h:135:22: note: insert '_Nullable' if the pointer may be null
int      atoi(const char *);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:135:22: note: insert '_Nonnull' if the pointer should never be null
int      atoi(const char *);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:136:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     atol(const char *);
                         ^
/usr/local/include/stdlib.h:136:23: note: insert '_Nullable' if the pointer may be null
long     atol(const char *);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:136:23: note: insert '_Nonnull' if the pointer should never be null
long     atol(const char *);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:139:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         atoll(const char *);
                          ^
/usr/local/include/stdlib.h:139:20: note: insert '_Nullable' if the pointer may be null
         atoll(const char *);
                          ^
                           _Nullable
/usr/local/include/stdlib.h:139:20: note: insert '_Nonnull' if the pointer should never be null
         atoll(const char *);
                          ^
                           _Nonnull
/usr/local/include/stdlib.h:141:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                            ^
/usr/local/include/stdlib.h:141:26: note: insert '_Nullable' if the pointer may be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                            ^
                              _Nullable 
/usr/local/include/stdlib.h:141:26: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                            ^
                              _Nonnull 
/usr/local/include/stdlib.h:141:45: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                                               ^
/usr/local/include/stdlib.h:141:45: note: insert '_Nullable' if the pointer may be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                                               ^
                                                 _Nullable 
/usr/local/include/stdlib.h:141:45: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                                               ^
                                                 _Nonnull 
/usr/local/include/stdlib.h:142:59: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                 ^
/usr/local/include/stdlib.h:142:59: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                 ^
                                                                  _Nullable
/usr/local/include/stdlib.h:142:59: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                 ^
                                                                  _Nonnull
/usr/local/include/stdlib.h:142:73: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                               ^
/usr/local/include/stdlib.h:142:73: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                               ^
                                                                                _Nullable
/usr/local/include/stdlib.h:142:73: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                               ^
                                                                                _Nonnull
/usr/local/include/stdlib.h:141:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch(const void *__key, const void *__base, size_t __nel,
        ^
/usr/local/include/stdlib.h:141:6: note: insert '_Nullable' if the pointer may be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
        ^
          _Nullable 
/usr/local/include/stdlib.h:141:6: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
        ^
          _Nonnull 
/usr/local/include/stdlib.h:147:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getenv(const char *);
                           ^
/usr/local/include/stdlib.h:147:25: note: insert '_Nullable' if the pointer may be null
char    *getenv(const char *);
                           ^
                            _Nullable
/usr/local/include/stdlib.h:147:25: note: insert '_Nonnull' if the pointer should never be null
char    *getenv(const char *);
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:147:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getenv(const char *);
        ^
/usr/local/include/stdlib.h:147:6: note: insert '_Nullable' if the pointer may be null
char    *getenv(const char *);
        ^
          _Nullable 
/usr/local/include/stdlib.h:147:6: note: insert '_Nonnull' if the pointer should never be null
char    *getenv(const char *);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:156:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mblen(const char *__s, size_t __n);
                          ^
/usr/local/include/stdlib.h:156:23: note: insert '_Nullable' if the pointer may be null
int      mblen(const char *__s, size_t __n);
                          ^
                            _Nullable 
/usr/local/include/stdlib.h:156:23: note: insert '_Nonnull' if the pointer should never be null
int      mblen(const char *__s, size_t __n);
                          ^
                            _Nonnull 
/usr/local/include/stdlib.h:157:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                          ^
/usr/local/include/stdlib.h:157:26: note: insert '_Nullable' if the pointer may be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                          ^
                            _Nullable
/usr/local/include/stdlib.h:157:26: note: insert '_Nonnull' if the pointer should never be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                          ^
                            _Nonnull
/usr/local/include/stdlib.h:157:52: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                                                    ^
/usr/local/include/stdlib.h:157:52: note: insert '_Nullable' if the pointer may be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                                                    ^
                                                      _Nullable
/usr/local/include/stdlib.h:157:52: note: insert '_Nonnull' if the pointer should never be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                                                    ^
                                                      _Nonnull
/usr/local/include/stdlib.h:158:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                        ^
/usr/local/include/stdlib.h:158:21: note: insert '_Nullable' if the pointer may be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                        ^
                          _Nullable
/usr/local/include/stdlib.h:158:21: note: insert '_Nonnull' if the pointer should never be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                        ^
                          _Nonnull
/usr/local/include/stdlib.h:158:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                                                 ^
/usr/local/include/stdlib.h:158:46: note: insert '_Nullable' if the pointer may be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                                                 ^
                                                   _Nullable
/usr/local/include/stdlib.h:158:46: note: insert '_Nonnull' if the pointer should never be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                                                 ^
                                                   _Nonnull
/usr/local/include/stdlib.h:160:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort(void *__base, size_t __nel, size_t __width,
                    ^
/usr/local/include/stdlib.h:160:18: note: insert '_Nullable' if the pointer may be null
void     qsort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nullable 
/usr/local/include/stdlib.h:160:18: note: insert '_Nonnull' if the pointer should never be null
void     qsort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nonnull 
/usr/local/include/stdlib.h:161:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
/usr/local/include/stdlib.h:161:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:161:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:161:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
/usr/local/include/stdlib.h:161:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:161:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:165:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                           ^
/usr/local/include/stdlib.h:165:27: note: insert '_Nullable' if the pointer may be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                           ^
                            _Nullable
/usr/local/include/stdlib.h:165:27: note: insert '_Nonnull' if the pointer should never be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:165:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                   ^
/usr/local/include/stdlib.h:165:35: note: insert '_Nullable' if the pointer may be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                   ^
                                    _Nullable
/usr/local/include/stdlib.h:165:35: note: insert '_Nonnull' if the pointer should never be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                   ^
                                    _Nonnull
/usr/local/include/stdlib.h:165:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                    ^
/usr/local/include/stdlib.h:165:36: note: insert '_Nullable' if the pointer may be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                    ^
                                     _Nullable
/usr/local/include/stdlib.h:165:36: note: insert '_Nonnull' if the pointer should never be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                    ^
                                     _Nonnull
/usr/local/include/stdlib.h:166:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                           ^
/usr/local/include/stdlib.h:166:26: note: insert '_Nullable' if the pointer may be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                           ^
                            _Nullable
/usr/local/include/stdlib.h:166:26: note: insert '_Nonnull' if the pointer should never be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:166:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                   ^
/usr/local/include/stdlib.h:166:34: note: insert '_Nullable' if the pointer may be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                   ^
                                    _Nullable
/usr/local/include/stdlib.h:166:34: note: insert '_Nonnull' if the pointer should never be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                   ^
                                    _Nonnull
/usr/local/include/stdlib.h:166:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                    ^
/usr/local/include/stdlib.h:166:35: note: insert '_Nullable' if the pointer may be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                    ^
                                     _Nullable
/usr/local/include/stdlib.h:166:35: note: insert '_Nonnull' if the pointer should never be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                    ^
                                     _Nonnull
/usr/local/include/stdlib.h:167:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     strtol(const char *__str, char **__endptr, int __base);
                           ^
/usr/local/include/stdlib.h:167:25: note: insert '_Nullable' if the pointer may be null
long     strtol(const char *__str, char **__endptr, int __base);
                           ^
                             _Nullable 
/usr/local/include/stdlib.h:167:25: note: insert '_Nonnull' if the pointer should never be null
long     strtol(const char *__str, char **__endptr, int __base);
                           ^
                             _Nonnull 
/usr/local/include/stdlib.h:167:38: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     strtol(const char *__str, char **__endptr, int __base);
                                        ^
/usr/local/include/stdlib.h:167:38: note: insert '_Nullable' if the pointer may be null
long     strtol(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nullable
/usr/local/include/stdlib.h:167:38: note: insert '_Nonnull' if the pointer should never be null
long     strtol(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nonnull
/usr/local/include/stdlib.h:167:39: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     strtol(const char *__str, char **__endptr, int __base);
                                         ^
/usr/local/include/stdlib.h:167:39: note: insert '_Nullable' if the pointer may be null
long     strtol(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nullable 
/usr/local/include/stdlib.h:167:39: note: insert '_Nonnull' if the pointer should never be null
long     strtol(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nonnull 
/usr/local/include/stdlib.h:169:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtold(const char *, char **);
                            ^
/usr/local/include/stdlib.h:169:22: note: insert '_Nullable' if the pointer may be null
         strtold(const char *, char **);
                            ^
                             _Nullable
/usr/local/include/stdlib.h:169:22: note: insert '_Nonnull' if the pointer should never be null
         strtold(const char *, char **);
                            ^
                             _Nonnull
/usr/local/include/stdlib.h:169:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtold(const char *, char **);
                                    ^
/usr/local/include/stdlib.h:169:30: note: insert '_Nullable' if the pointer may be null
         strtold(const char *, char **);
                                    ^
                                     _Nullable
/usr/local/include/stdlib.h:169:30: note: insert '_Nonnull' if the pointer should never be null
         strtold(const char *, char **);
                                    ^
                                     _Nonnull
/usr/local/include/stdlib.h:169:31: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtold(const char *, char **);
                                     ^
/usr/local/include/stdlib.h:169:31: note: insert '_Nullable' if the pointer may be null
         strtold(const char *, char **);
                                     ^
                                      _Nullable
/usr/local/include/stdlib.h:169:31: note: insert '_Nonnull' if the pointer should never be null
         strtold(const char *, char **);
                                     ^
                                      _Nonnull
/usr/local/include/stdlib.h:172:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoll(const char *__str, char **__endptr, int __base);
                            ^
/usr/local/include/stdlib.h:172:22: note: insert '_Nullable' if the pointer may be null
         strtoll(const char *__str, char **__endptr, int __base);
                            ^
                              _Nullable 
/usr/local/include/stdlib.h:172:22: note: insert '_Nonnull' if the pointer should never be null
         strtoll(const char *__str, char **__endptr, int __base);
                            ^
                              _Nonnull 
/usr/local/include/stdlib.h:172:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoll(const char *__str, char **__endptr, int __base);
                                         ^
/usr/local/include/stdlib.h:172:35: note: insert '_Nullable' if the pointer may be null
         strtoll(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nullable
/usr/local/include/stdlib.h:172:35: note: insert '_Nonnull' if the pointer should never be null
         strtoll(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nonnull
/usr/local/include/stdlib.h:172:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoll(const char *__str, char **__endptr, int __base);
                                          ^
/usr/local/include/stdlib.h:172:36: note: insert '_Nullable' if the pointer may be null
         strtoll(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nullable 
/usr/local/include/stdlib.h:172:36: note: insert '_Nonnull' if the pointer should never be null
         strtoll(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nonnull 
/usr/local/include/stdlib.h:175:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoul(const char *__str, char **__endptr, int __base);
                            ^
/usr/local/include/stdlib.h:175:22: note: insert '_Nullable' if the pointer may be null
         strtoul(const char *__str, char **__endptr, int __base);
                            ^
                              _Nullable 
/usr/local/include/stdlib.h:175:22: note: insert '_Nonnull' if the pointer should never be null
         strtoul(const char *__str, char **__endptr, int __base);
                            ^
                              _Nonnull 
/usr/local/include/stdlib.h:175:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoul(const char *__str, char **__endptr, int __base);
                                         ^
/usr/local/include/stdlib.h:175:35: note: insert '_Nullable' if the pointer may be null
         strtoul(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nullable
/usr/local/include/stdlib.h:175:35: note: insert '_Nonnull' if the pointer should never be null
         strtoul(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nonnull
/usr/local/include/stdlib.h:175:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoul(const char *__str, char **__endptr, int __base);
                                          ^
/usr/local/include/stdlib.h:175:36: note: insert '_Nullable' if the pointer may be null
         strtoul(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nullable 
/usr/local/include/stdlib.h:175:36: note: insert '_Nonnull' if the pointer should never be null
         strtoul(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nonnull 
/usr/local/include/stdlib.h:178:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoull(const char *__str, char **__endptr, int __base);
                             ^
/usr/local/include/stdlib.h:178:23: note: insert '_Nullable' if the pointer may be null
         strtoull(const char *__str, char **__endptr, int __base);
                             ^
                               _Nullable 
/usr/local/include/stdlib.h:178:23: note: insert '_Nonnull' if the pointer should never be null
         strtoull(const char *__str, char **__endptr, int __base);
                             ^
                               _Nonnull 
/usr/local/include/stdlib.h:178:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoull(const char *__str, char **__endptr, int __base);
                                          ^
/usr/local/include/stdlib.h:178:36: note: insert '_Nullable' if the pointer may be null
         strtoull(const char *__str, char **__endptr, int __base);
                                          ^
                                           _Nullable
/usr/local/include/stdlib.h:178:36: note: insert '_Nonnull' if the pointer should never be null
         strtoull(const char *__str, char **__endptr, int __base);
                                          ^
                                           _Nonnull
/usr/local/include/stdlib.h:178:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoull(const char *__str, char **__endptr, int __base);
                                           ^
/usr/local/include/stdlib.h:178:37: note: insert '_Nullable' if the pointer may be null
         strtoull(const char *__str, char **__endptr, int __base);
                                           ^
                                             _Nullable 
/usr/local/include/stdlib.h:178:37: note: insert '_Nonnull' if the pointer should never be null
         strtoull(const char *__str, char **__endptr, int __base);
                                           ^
                                             _Nonnull 
/usr/local/include/stdlib.h:190:24: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      system(const char *) __DARWIN_ALIAS_C(system);
                           ^
/usr/local/include/stdlib.h:190:24: note: insert '_Nullable' if the pointer may be null
int      system(const char *) __DARWIN_ALIAS_C(system);
                           ^
                            _Nullable
/usr/local/include/stdlib.h:190:24: note: insert '_Nonnull' if the pointer should never be null
int      system(const char *) __DARWIN_ALIAS_C(system);
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:194:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                       ^
/usr/local/include/stdlib.h:194:23: note: insert '_Nullable' if the pointer may be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                       ^
                         _Nullable
/usr/local/include/stdlib.h:194:23: note: insert '_Nonnull' if the pointer should never be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                       ^
                         _Nonnull
/usr/local/include/stdlib.h:194:51: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                                                   ^
/usr/local/include/stdlib.h:194:51: note: insert '_Nullable' if the pointer may be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                                                   ^
                                                     _Nullable
/usr/local/include/stdlib.h:194:51: note: insert '_Nonnull' if the pointer should never be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                                                   ^
                                                     _Nonnull
/usr/local/include/stdlib.h:195:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      wctomb(char *, wchar_t);
                     ^
/usr/local/include/stdlib.h:195:18: note: insert '_Nullable' if the pointer may be null
int      wctomb(char *, wchar_t);
                     ^
                      _Nullable
/usr/local/include/stdlib.h:195:18: note: insert '_Nonnull' if the pointer should never be null
int      wctomb(char *, wchar_t);
                     ^
                      _Nonnull
/usr/local/include/stdlib.h:199:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     a64l(const char *);
                         ^
/usr/local/include/stdlib.h:199:23: note: insert '_Nullable' if the pointer may be null
long     a64l(const char *);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:199:23: note: insert '_Nonnull' if the pointer should never be null
long     a64l(const char *);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:201:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
/usr/local/include/stdlib.h:201:29: note: insert '_Nullable' if the pointer may be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nullable 
/usr/local/include/stdlib.h:201:29: note: insert '_Nonnull' if the pointer should never be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nonnull 
/usr/local/include/stdlib.h:201:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
/usr/local/include/stdlib.h:201:46: note: insert '_Nullable' if the pointer may be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nullable 
/usr/local/include/stdlib.h:201:46: note: insert '_Nonnull' if the pointer should never be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nonnull 
/usr/local/include/stdlib.h:201:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
/usr/local/include/stdlib.h:201:6: note: insert '_Nullable' if the pointer may be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nullable 
/usr/local/include/stdlib.h:201:6: note: insert '_Nonnull' if the pointer should never be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nonnull 
/usr/local/include/stdlib.h:202:31: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
double   erand48(unsigned short[3]);
                               ^
/usr/local/include/stdlib.h:202:31: note: insert '_Nullable' if the array parameter may be null
double   erand48(unsigned short[3]);
                               ^
                                _Nullable 
/usr/local/include/stdlib.h:202:31: note: insert '_Nonnull' if the array parameter should never be null
double   erand48(unsigned short[3]);
                               ^
                                _Nonnull 
/usr/local/include/stdlib.h:203:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
/usr/local/include/stdlib.h:203:29: note: insert '_Nullable' if the pointer may be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nullable 
/usr/local/include/stdlib.h:203:29: note: insert '_Nonnull' if the pointer should never be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nonnull 
/usr/local/include/stdlib.h:203:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
/usr/local/include/stdlib.h:203:46: note: insert '_Nullable' if the pointer may be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nullable 
/usr/local/include/stdlib.h:203:46: note: insert '_Nonnull' if the pointer should never be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nonnull 
/usr/local/include/stdlib.h:203:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
/usr/local/include/stdlib.h:203:6: note: insert '_Nullable' if the pointer may be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nullable 
/usr/local/include/stdlib.h:203:6: note: insert '_Nonnull' if the pointer should never be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nonnull 
/usr/local/include/stdlib.h:204:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *gcvt(double, int, char *); /* LEGACY */
                                ^
/usr/local/include/stdlib.h:204:30: note: insert '_Nullable' if the pointer may be null
char    *gcvt(double, int, char *); /* LEGACY */
                                ^
                                 _Nullable
/usr/local/include/stdlib.h:204:30: note: insert '_Nonnull' if the pointer should never be null
char    *gcvt(double, int, char *); /* LEGACY */
                                ^
                                 _Nonnull
/usr/local/include/stdlib.h:204:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *gcvt(double, int, char *); /* LEGACY */
        ^
/usr/local/include/stdlib.h:204:6: note: insert '_Nullable' if the pointer may be null
char    *gcvt(double, int, char *); /* LEGACY */
        ^
          _Nullable 
/usr/local/include/stdlib.h:204:6: note: insert '_Nonnull' if the pointer should never be null
char    *gcvt(double, int, char *); /* LEGACY */
        ^
          _Nonnull 
/usr/local/include/stdlib.h:205:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                        ^
/usr/local/include/stdlib.h:205:21: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                        ^
                         _Nullable
/usr/local/include/stdlib.h:205:21: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                        ^
                         _Nonnull
/usr/local/include/stdlib.h:205:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                         ^
/usr/local/include/stdlib.h:205:22: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:205:22: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:205:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                 ^
/usr/local/include/stdlib.h:205:30: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                 ^
                                   _Nullable
/usr/local/include/stdlib.h:205:30: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                 ^
                                   _Nonnull
/usr/local/include/stdlib.h:205:38: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                         ^
/usr/local/include/stdlib.h:205:38: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                         ^
                                          _Nullable
/usr/local/include/stdlib.h:205:38: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                         ^
                                          _Nonnull
/usr/local/include/stdlib.h:205:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                                 ^
/usr/local/include/stdlib.h:205:46: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:205:46: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:205:47: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                                  ^
/usr/local/include/stdlib.h:205:47: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                                  ^
                                                   _Nullable
/usr/local/include/stdlib.h:205:47: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                                  ^
                                                   _Nonnull
/usr/local/include/stdlib.h:208:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
                                  ^
/usr/local/include/stdlib.h:208:32: note: insert '_Nullable' if the pointer may be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
                                  ^
                                   _Nullable
/usr/local/include/stdlib.h:208:32: note: insert '_Nonnull' if the pointer should never be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
                                  ^
                                   _Nonnull
/usr/local/include/stdlib.h:208:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
        ^
/usr/local/include/stdlib.h:208:6: note: insert '_Nullable' if the pointer may be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
        ^
          _Nullable 
/usr/local/include/stdlib.h:208:6: note: insert '_Nonnull' if the pointer should never be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
        ^
          _Nonnull 
/usr/local/include/stdlib.h:212:29: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
long     jrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
/usr/local/include/stdlib.h:212:29: note: insert '_Nullable' if the array parameter may be null
long     jrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nullable 
/usr/local/include/stdlib.h:212:29: note: insert '_Nonnull' if the array parameter should never be null
long     jrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nonnull 
/usr/local/include/stdlib.h:213:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *l64a(long);
        ^
/usr/local/include/stdlib.h:213:6: note: insert '_Nullable' if the pointer may be null
char    *l64a(long);
        ^
          _Nullable 
/usr/local/include/stdlib.h:213:6: note: insert '_Nonnull' if the pointer should never be null
char    *l64a(long);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:214:29: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
void     lcong48(unsigned short[7]);
                               ^
/usr/local/include/stdlib.h:214:29: note: insert '_Nullable' if the array parameter may be null
void     lcong48(unsigned short[7]);
                               ^
                                _Nullable 
/usr/local/include/stdlib.h:214:29: note: insert '_Nonnull' if the array parameter should never be null
void     lcong48(unsigned short[7]);
                               ^
                                _Nonnull 
/usr/local/include/stdlib.h:216:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *mktemp(char *);
                     ^
/usr/local/include/stdlib.h:216:19: note: insert '_Nullable' if the pointer may be null
char    *mktemp(char *);
                     ^
                      _Nullable
/usr/local/include/stdlib.h:216:19: note: insert '_Nonnull' if the pointer should never be null
char    *mktemp(char *);
                     ^
                      _Nonnull
/usr/local/include/stdlib.h:216:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *mktemp(char *);
        ^
/usr/local/include/stdlib.h:216:6: note: insert '_Nullable' if the pointer may be null
char    *mktemp(char *);
        ^
          _Nullable 
/usr/local/include/stdlib.h:216:6: note: insert '_Nonnull' if the pointer should never be null
char    *mktemp(char *);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:217:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mkstemp(char *);
                      ^
/usr/local/include/stdlib.h:217:19: note: insert '_Nullable' if the pointer may be null
int      mkstemp(char *);
                      ^
                       _Nullable
/usr/local/include/stdlib.h:217:19: note: insert '_Nonnull' if the pointer should never be null
int      mkstemp(char *);
                      ^
                       _Nonnull
/usr/local/include/stdlib.h:219:29: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
long     nrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
/usr/local/include/stdlib.h:219:29: note: insert '_Nullable' if the array parameter may be null
long     nrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nullable 
/usr/local/include/stdlib.h:219:29: note: insert '_Nonnull' if the array parameter should never be null
long     nrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nonnull 
/usr/local/include/stdlib.h:221:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ptsname(int);
        ^
/usr/local/include/stdlib.h:221:6: note: insert '_Nullable' if the pointer may be null
char    *ptsname(int);
        ^
          _Nullable 
/usr/local/include/stdlib.h:221:6: note: insert '_Nonnull' if the pointer should never be null
char    *ptsname(int);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:224:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int ptsname_r(int fildes, char *buffer, size_t buflen) __API_AVAILABLE(macos(10.13.4), ios(11.3), tvos(11.3), watchos(4.3));
                               ^
/usr/local/include/stdlib.h:224:32: note: insert '_Nullable' if the pointer may be null
int ptsname_r(int fildes, char *buffer, size_t buflen) __API_AVAILABLE(macos(10.13.4), ios(11.3), tvos(11.3), watchos(4.3));
                               ^
                                 _Nullable 
/usr/local/include/stdlib.h:224:32: note: insert '_Nonnull' if the pointer should never be null
int ptsname_r(int fildes, char *buffer, size_t buflen) __API_AVAILABLE(macos(10.13.4), ios(11.3), tvos(11.3), watchos(4.3));
                               ^
                                 _Nonnull 
/usr/local/include/stdlib.h:227:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      putenv(char *) __DARWIN_ALIAS(putenv);
                     ^
/usr/local/include/stdlib.h:227:18: note: insert '_Nullable' if the pointer may be null
int      putenv(char *) __DARWIN_ALIAS(putenv);
                     ^
                      _Nullable
/usr/local/include/stdlib.h:227:18: note: insert '_Nonnull' if the pointer should never be null
int      putenv(char *) __DARWIN_ALIAS(putenv);
                     ^
                      _Nonnull
/usr/local/include/stdlib.h:229:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      rand_r(unsigned *) __swift_unavailable("Use arc4random instead.");
                         ^
/usr/local/include/stdlib.h:229:22: note: insert '_Nullable' if the pointer may be null
int      rand_r(unsigned *) __swift_unavailable("Use arc4random instead.");
                         ^
                          _Nullable
/usr/local/include/stdlib.h:229:22: note: insert '_Nonnull' if the pointer should never be null
int      rand_r(unsigned *) __swift_unavailable("Use arc4random instead.");
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:231:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                             ^
/usr/local/include/stdlib.h:231:27: note: insert '_Nullable' if the pointer may be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                             ^
                               _Nullable
/usr/local/include/stdlib.h:231:27: note: insert '_Nonnull' if the pointer should never be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                             ^
                               _Nonnull
/usr/local/include/stdlib.h:231:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                                                ^
/usr/local/include/stdlib.h:231:46: note: insert '_Nullable' if the pointer may be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                                                ^
                                                  _Nullable
/usr/local/include/stdlib.h:231:46: note: insert '_Nonnull' if the pointer should never be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                                                ^
                                                  _Nonnull
/usr/local/include/stdlib.h:231:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
        ^
/usr/local/include/stdlib.h:231:6: note: insert '_Nullable' if the pointer may be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
        ^
          _Nullable 
/usr/local/include/stdlib.h:231:6: note: insert '_Nonnull' if the pointer should never be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:236:24: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
        *seed48(unsigned short[3]);
                              ^
/usr/local/include/stdlib.h:236:24: note: insert '_Nullable' if the array parameter may be null
        *seed48(unsigned short[3]);
                              ^
                               _Nullable 
/usr/local/include/stdlib.h:236:24: note: insert '_Nonnull' if the array parameter should never be null
        *seed48(unsigned short[3]);
                              ^
                               _Nonnull 
/usr/local/include/stdlib.h:236:2: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        *seed48(unsigned short[3]);
        ^
/usr/local/include/stdlib.h:236:2: note: insert '_Nullable' if the pointer may be null
        *seed48(unsigned short[3]);
        ^
          _Nullable 
/usr/local/include/stdlib.h:236:2: note: insert '_Nonnull' if the pointer should never be null
        *seed48(unsigned short[3]);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:237:24: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                           ^
/usr/local/include/stdlib.h:237:24: note: insert '_Nullable' if the pointer may be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                           ^
                             _Nullable
/usr/local/include/stdlib.h:237:24: note: insert '_Nonnull' if the pointer should never be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                           ^
                             _Nonnull
/usr/local/include/stdlib.h:237:45: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                                                ^
/usr/local/include/stdlib.h:237:45: note: insert '_Nullable' if the pointer may be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                                                ^
                                                  _Nullable
/usr/local/include/stdlib.h:237:45: note: insert '_Nonnull' if the pointer should never be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                                                ^
                                                  _Nonnull
/usr/local/include/stdlib.h:239:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     setkey(const char *) __DARWIN_ALIAS(setkey);
                           ^
/usr/local/include/stdlib.h:239:25: note: insert '_Nullable' if the pointer may be null
void     setkey(const char *) __DARWIN_ALIAS(setkey);
                           ^
                            _Nullable
/usr/local/include/stdlib.h:239:25: note: insert '_Nonnull' if the pointer should never be null
void     setkey(const char *) __DARWIN_ALIAS(setkey);
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:243:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *setstate(const char *);
                             ^
/usr/local/include/stdlib.h:243:27: note: insert '_Nullable' if the pointer may be null
char    *setstate(const char *);
                             ^
                              _Nullable
/usr/local/include/stdlib.h:243:27: note: insert '_Nonnull' if the pointer should never be null
char    *setstate(const char *);
                             ^
                              _Nonnull
/usr/local/include/stdlib.h:243:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *setstate(const char *);
        ^
/usr/local/include/stdlib.h:243:6: note: insert '_Nullable' if the pointer may be null
char    *setstate(const char *);
        ^
          _Nullable 
/usr/local/include/stdlib.h:243:6: note: insert '_Nonnull' if the pointer should never be null
char    *setstate(const char *);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:252:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      unsetenv(const char *) __DARWIN_ALIAS(unsetenv);
                             ^
/usr/local/include/stdlib.h:252:26: note: insert '_Nullable' if the pointer may be null
int      unsetenv(const char *) __DARWIN_ALIAS(unsetenv);
                             ^
                              _Nullable
/usr/local/include/stdlib.h:252:26: note: insert '_Nonnull' if the pointer should never be null
int      unsetenv(const char *) __DARWIN_ALIAS(unsetenv);
                             ^
                              _Nonnull
/usr/local/include/stdlib.h:265:42: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     arc4random_addrandom(unsigned char * /*dat*/, int /*datlen*/)
                                            ^
/usr/local/include/stdlib.h:265:42: note: insert '_Nullable' if the pointer may be null
void     arc4random_addrandom(unsigned char * /*dat*/, int /*datlen*/)
                                            ^
                                              _Nullable
/usr/local/include/stdlib.h:265:42: note: insert '_Nonnull' if the pointer should never be null
void     arc4random_addrandom(unsigned char * /*dat*/, int /*datlen*/)
                                            ^
                                              _Nonnull
/usr/local/include/stdlib.h:270:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     arc4random_buf(void * __buf, size_t __nbytes) __OSX_AVAILABLE_STARTING(__MAC_10_7, __IPHONE_4_3);
                             ^
/usr/local/include/stdlib.h:270:27: note: insert '_Nullable' if the pointer may be null
void     arc4random_buf(void * __buf, size_t __nbytes) __OSX_AVAILABLE_STARTING(__MAC_10_7, __IPHONE_4_3);
                             ^
                               _Nullable
/usr/local/include/stdlib.h:270:27: note: insert '_Nonnull' if the pointer should never be null
void     arc4random_buf(void * __buf, size_t __nbytes) __OSX_AVAILABLE_STARTING(__MAC_10_7, __IPHONE_4_3);
                             ^
                               _Nonnull
/usr/local/include/stdlib.h:276:28: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                              ^
/usr/local/include/stdlib.h:276:28: note: insert '_Nullable' if the pointer may be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                              ^
                                _Nullable 
/usr/local/include/stdlib.h:276:28: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                              ^
                                _Nonnull 
/usr/local/include/stdlib.h:276:47: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                                                 ^
/usr/local/include/stdlib.h:276:47: note: insert '_Nullable' if the pointer may be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                                                 ^
                                                   _Nullable 
/usr/local/include/stdlib.h:276:47: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                                                 ^
                                                   _Nonnull 
/usr/local/include/stdlib.h:277:59: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                 ^
/usr/local/include/stdlib.h:277:59: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                 ^
                                                                  _Nullable
/usr/local/include/stdlib.h:277:59: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                 ^
                                                                  _Nonnull
/usr/local/include/stdlib.h:277:73: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                               ^
/usr/local/include/stdlib.h:277:73: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                               ^
                                                                                _Nullable
/usr/local/include/stdlib.h:277:73: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                               ^
                                                                                _Nonnull
/usr/local/include/stdlib.h:276:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
        ^
/usr/local/include/stdlib.h:276:6: note: insert '_Nullable' if the pointer may be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
        ^
          _Nullable 
/usr/local/include/stdlib.h:276:6: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
        ^
          _Nonnull 
/usr/local/include/stdlib.h:281:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *cgetcap(char *, const char *, int);
                      ^
/usr/local/include/stdlib.h:281:20: note: insert '_Nullable' if the pointer may be null
char    *cgetcap(char *, const char *, int);
                      ^
                       _Nullable
/usr/local/include/stdlib.h:281:20: note: insert '_Nonnull' if the pointer should never be null
char    *cgetcap(char *, const char *, int);
                      ^
                       _Nonnull
/usr/local/include/stdlib.h:281:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *cgetcap(char *, const char *, int);
                                    ^
/usr/local/include/stdlib.h:281:34: note: insert '_Nullable' if the pointer may be null
char    *cgetcap(char *, const char *, int);
                                    ^
                                     _Nullable
/usr/local/include/stdlib.h:281:34: note: insert '_Nonnull' if the pointer should never be null
char    *cgetcap(char *, const char *, int);
                                    ^
                                     _Nonnull
/usr/local/include/stdlib.h:281:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *cgetcap(char *, const char *, int);
        ^
/usr/local/include/stdlib.h:281:6: note: insert '_Nullable' if the pointer may be null
char    *cgetcap(char *, const char *, int);
        ^
          _Nullable 
/usr/local/include/stdlib.h:281:6: note: insert '_Nonnull' if the pointer should never be null
char    *cgetcap(char *, const char *, int);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:283:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                      ^
/usr/local/include/stdlib.h:283:19: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                      ^
                       _Nullable
/usr/local/include/stdlib.h:283:19: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                      ^
                       _Nonnull
/usr/local/include/stdlib.h:283:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                       ^
/usr/local/include/stdlib.h:283:20: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                       ^
                        _Nullable
/usr/local/include/stdlib.h:283:20: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                       ^
                        _Nonnull
/usr/local/include/stdlib.h:283:28: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                               ^
/usr/local/include/stdlib.h:283:28: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                               ^
                                _Nullable
/usr/local/include/stdlib.h:283:28: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                               ^
                                _Nonnull
/usr/local/include/stdlib.h:283:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                                ^
/usr/local/include/stdlib.h:283:29: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                                ^
                                 _Nullable
/usr/local/include/stdlib.h:283:29: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                                ^
                                 _Nonnull
/usr/local/include/stdlib.h:283:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                                              ^
/usr/local/include/stdlib.h:283:43: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                                              ^
                                               _Nullable
/usr/local/include/stdlib.h:283:43: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                                              ^
                                               _Nonnull
/usr/local/include/stdlib.h:284:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                        ^
/usr/local/include/stdlib.h:284:21: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                        ^
                         _Nullable
/usr/local/include/stdlib.h:284:21: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                        ^
                         _Nonnull
/usr/local/include/stdlib.h:284:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                         ^
/usr/local/include/stdlib.h:284:22: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:284:22: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:284:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                                 ^
/usr/local/include/stdlib.h:284:30: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                                 ^
                                  _Nullable
/usr/local/include/stdlib.h:284:30: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                                 ^
                                  _Nonnull
/usr/local/include/stdlib.h:284:31: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                                  ^
/usr/local/include/stdlib.h:284:31: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                                  ^
                                   _Nullable
/usr/local/include/stdlib.h:284:31: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                                  ^
                                   _Nonnull
/usr/local/include/stdlib.h:285:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetmatch(const char *, const char *);
                              ^
/usr/local/include/stdlib.h:285:27: note: insert '_Nullable' if the pointer may be null
int      cgetmatch(const char *, const char *);
                              ^
                               _Nullable
/usr/local/include/stdlib.h:285:27: note: insert '_Nonnull' if the pointer should never be null
int      cgetmatch(const char *, const char *);
                              ^
                               _Nonnull
/usr/local/include/stdlib.h:285:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetmatch(const char *, const char *);
                                            ^
/usr/local/include/stdlib.h:285:41: note: insert '_Nullable' if the pointer may be null
int      cgetmatch(const char *, const char *);
                                            ^
                                             _Nullable
/usr/local/include/stdlib.h:285:41: note: insert '_Nonnull' if the pointer should never be null
int      cgetmatch(const char *, const char *);
                                            ^
                                             _Nonnull
/usr/local/include/stdlib.h:286:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                       ^
/usr/local/include/stdlib.h:286:20: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                       ^
                        _Nullable
/usr/local/include/stdlib.h:286:20: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                       ^
                        _Nonnull
/usr/local/include/stdlib.h:286:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                        ^
/usr/local/include/stdlib.h:286:21: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                        ^
                         _Nullable
/usr/local/include/stdlib.h:286:21: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                        ^
                         _Nonnull
/usr/local/include/stdlib.h:286:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                                ^
/usr/local/include/stdlib.h:286:29: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                                ^
                                 _Nullable
/usr/local/include/stdlib.h:286:29: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                                ^
                                 _Nonnull
/usr/local/include/stdlib.h:286:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                                 ^
/usr/local/include/stdlib.h:286:30: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                                 ^
                                  _Nullable
/usr/local/include/stdlib.h:286:30: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                                 ^
                                  _Nonnull
/usr/local/include/stdlib.h:287:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnum(char *, const char *, long *);
                      ^
/usr/local/include/stdlib.h:287:19: note: insert '_Nullable' if the pointer may be null
int      cgetnum(char *, const char *, long *);
                      ^
                       _Nullable
/usr/local/include/stdlib.h:287:19: note: insert '_Nonnull' if the pointer should never be null
int      cgetnum(char *, const char *, long *);
                      ^
                       _Nonnull
/usr/local/include/stdlib.h:287:33: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnum(char *, const char *, long *);
                                    ^
/usr/local/include/stdlib.h:287:33: note: insert '_Nullable' if the pointer may be null
int      cgetnum(char *, const char *, long *);
                                    ^
                                     _Nullable
/usr/local/include/stdlib.h:287:33: note: insert '_Nonnull' if the pointer should never be null
int      cgetnum(char *, const char *, long *);
                                    ^
                                     _Nonnull
/usr/local/include/stdlib.h:287:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnum(char *, const char *, long *);
                                            ^
/usr/local/include/stdlib.h:287:41: note: insert '_Nullable' if the pointer may be null
int      cgetnum(char *, const char *, long *);
                                            ^
                                             _Nullable
/usr/local/include/stdlib.h:287:41: note: insert '_Nonnull' if the pointer should never be null
int      cgetnum(char *, const char *, long *);
                                            ^
                                             _Nonnull
/usr/local/include/stdlib.h:288:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetset(const char *);
                            ^
/usr/local/include/stdlib.h:288:25: note: insert '_Nullable' if the pointer may be null
int      cgetset(const char *);
                            ^
                             _Nullable
/usr/local/include/stdlib.h:288:25: note: insert '_Nonnull' if the pointer should never be null
int      cgetset(const char *);
                            ^
                             _Nonnull
/usr/local/include/stdlib.h:289:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                      ^
/usr/local/include/stdlib.h:289:19: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                      ^
                       _Nullable
/usr/local/include/stdlib.h:289:19: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                      ^
                       _Nonnull
/usr/local/include/stdlib.h:289:33: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                                    ^
/usr/local/include/stdlib.h:289:33: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                                    ^
                                     _Nullable
/usr/local/include/stdlib.h:289:33: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                                    ^
                                     _Nonnull
/usr/local/include/stdlib.h:289:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                                            ^
/usr/local/include/stdlib.h:289:41: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                                            ^
                                             _Nullable
/usr/local/include/stdlib.h:289:41: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                                            ^
                                             _Nonnull
/usr/local/include/stdlib.h:289:42: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                                             ^
/usr/local/include/stdlib.h:289:42: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                                             ^
                                              _Nullable
/usr/local/include/stdlib.h:289:42: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                                             ^
                                              _Nonnull
/usr/local/include/stdlib.h:290:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                       ^
/usr/local/include/stdlib.h:290:20: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                       ^
                        _Nullable
/usr/local/include/stdlib.h:290:20: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                       ^
                        _Nonnull
/usr/local/include/stdlib.h:290:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                                     ^
/usr/local/include/stdlib.h:290:34: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                                     ^
                                      _Nullable
/usr/local/include/stdlib.h:290:34: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                                     ^
                                      _Nonnull
/usr/local/include/stdlib.h:290:42: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                                             ^
/usr/local/include/stdlib.h:290:42: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                                             ^
                                              _Nullable
/usr/local/include/stdlib.h:290:42: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                                             ^
                                              _Nonnull
/usr/local/include/stdlib.h:290:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                                              ^
/usr/local/include/stdlib.h:290:43: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                                              ^
                                               _Nullable
/usr/local/include/stdlib.h:290:43: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                                              ^
                                               _Nonnull
/usr/local/include/stdlib.h:293:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *devname(dev_t, mode_t);
        ^
/usr/local/include/stdlib.h:293:6: note: insert '_Nullable' if the pointer may be null
char    *devname(dev_t, mode_t);
        ^
          _Nullable 
/usr/local/include/stdlib.h:293:6: note: insert '_Nonnull' if the pointer should never be null
char    *devname(dev_t, mode_t);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:294:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *devname_r(dev_t, mode_t, char *buf, int len);
                                       ^
/usr/local/include/stdlib.h:294:37: note: insert '_Nullable' if the pointer may be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
                                       ^
                                         _Nullable 
/usr/local/include/stdlib.h:294:37: note: insert '_Nonnull' if the pointer should never be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
                                       ^
                                         _Nonnull 
/usr/local/include/stdlib.h:294:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *devname_r(dev_t, mode_t, char *buf, int len);
        ^
/usr/local/include/stdlib.h:294:6: note: insert '_Nullable' if the pointer may be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
        ^
          _Nullable 
/usr/local/include/stdlib.h:294:6: note: insert '_Nonnull' if the pointer should never be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:295:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getbsize(int *, long *);
                      ^
/usr/local/include/stdlib.h:295:20: note: insert '_Nullable' if the pointer may be null
char    *getbsize(int *, long *);
                      ^
                       _Nullable
/usr/local/include/stdlib.h:295:20: note: insert '_Nonnull' if the pointer should never be null
char    *getbsize(int *, long *);
                      ^
                       _Nonnull
/usr/local/include/stdlib.h:295:28: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getbsize(int *, long *);
                              ^
/usr/local/include/stdlib.h:295:28: note: insert '_Nullable' if the pointer may be null
char    *getbsize(int *, long *);
                              ^
                               _Nullable
/usr/local/include/stdlib.h:295:28: note: insert '_Nonnull' if the pointer should never be null
char    *getbsize(int *, long *);
                              ^
                               _Nonnull
/usr/local/include/stdlib.h:295:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getbsize(int *, long *);
        ^
/usr/local/include/stdlib.h:295:6: note: insert '_Nullable' if the pointer may be null
char    *getbsize(int *, long *);
        ^
          _Nullable 
/usr/local/include/stdlib.h:295:6: note: insert '_Nonnull' if the pointer should never be null
char    *getbsize(int *, long *);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:296:24: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
int      getloadavg(double [], int);
                           ^
/usr/local/include/stdlib.h:296:24: note: insert '_Nullable' if the array parameter may be null
int      getloadavg(double [], int);
                           ^
                            _Nullable
/usr/local/include/stdlib.h:296:24: note: insert '_Nonnull' if the array parameter should never be null
int      getloadavg(double [], int);
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:298:2: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        *getprogname(void);
        ^
/usr/local/include/stdlib.h:298:2: note: insert '_Nullable' if the pointer may be null
        *getprogname(void);
        ^
          _Nullable 
/usr/local/include/stdlib.h:298:2: note: insert '_Nonnull' if the pointer should never be null
        *getprogname(void);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:299:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     setprogname(const char *);
                                ^
/usr/local/include/stdlib.h:299:30: note: insert '_Nullable' if the pointer may be null
void     setprogname(const char *);
                                ^
                                 _Nullable
/usr/local/include/stdlib.h:299:30: note: insert '_Nonnull' if the pointer should never be null
void     setprogname(const char *);
                                ^
                                 _Nonnull
/usr/local/include/stdlib.h:309:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      heapsort(void *__base, size_t __nel, size_t __width,
                       ^
/usr/local/include/stdlib.h:309:20: note: insert '_Nullable' if the pointer may be null
int      heapsort(void *__base, size_t __nel, size_t __width,
                       ^
                         _Nullable 
/usr/local/include/stdlib.h:309:20: note: insert '_Nonnull' if the pointer should never be null
int      heapsort(void *__base, size_t __nel, size_t __width,
                       ^
                         _Nonnull 
/usr/local/include/stdlib.h:310:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
/usr/local/include/stdlib.h:310:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:310:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:310:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
/usr/local/include/stdlib.h:310:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:310:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:312:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      heapsort_b(void *__base, size_t __nel, size_t __width,
                         ^
/usr/local/include/stdlib.h:312:22: note: insert '_Nullable' if the pointer may be null
int      heapsort_b(void *__base, size_t __nel, size_t __width,
                         ^
                           _Nullable 
/usr/local/include/stdlib.h:312:22: note: insert '_Nonnull' if the pointer should never be null
int      heapsort_b(void *__base, size_t __nel, size_t __width,
                         ^
                           _Nonnull 
/usr/local/include/stdlib.h:313:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
/usr/local/include/stdlib.h:313:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:313:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:313:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
/usr/local/include/stdlib.h:313:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:313:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:316:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mergesort(void *__base, size_t __nel, size_t __width,
                        ^
/usr/local/include/stdlib.h:316:21: note: insert '_Nullable' if the pointer may be null
int      mergesort(void *__base, size_t __nel, size_t __width,
                        ^
                          _Nullable 
/usr/local/include/stdlib.h:316:21: note: insert '_Nonnull' if the pointer should never be null
int      mergesort(void *__base, size_t __nel, size_t __width,
                        ^
                          _Nonnull 
/usr/local/include/stdlib.h:317:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
/usr/local/include/stdlib.h:317:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:317:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:317:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
/usr/local/include/stdlib.h:317:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:317:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:319:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mergesort_b(void *__base, size_t __nel, size_t __width,
                          ^
/usr/local/include/stdlib.h:319:23: note: insert '_Nullable' if the pointer may be null
int      mergesort_b(void *__base, size_t __nel, size_t __width,
                          ^
                            _Nullable 
/usr/local/include/stdlib.h:319:23: note: insert '_Nonnull' if the pointer should never be null
int      mergesort_b(void *__base, size_t __nel, size_t __width,
                          ^
                            _Nonnull 
/usr/local/include/stdlib.h:320:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
/usr/local/include/stdlib.h:320:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:320:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:320:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
/usr/local/include/stdlib.h:320:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:320:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:323:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort(void *__base, size_t __nel, size_t __width,
                    ^
/usr/local/include/stdlib.h:323:18: note: insert '_Nullable' if the pointer may be null
void     psort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nullable 
/usr/local/include/stdlib.h:323:18: note: insert '_Nonnull' if the pointer should never be null
void     psort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nonnull 
/usr/local/include/stdlib.h:324:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *))
                                                 ^
/usr/local/include/stdlib.h:324:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *))
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:324:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *))
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:324:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *))
                                                               ^
/usr/local/include/stdlib.h:324:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *))
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:324:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *))
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:327:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort_b(void *__base, size_t __nel, size_t __width,
                      ^
/usr/local/include/stdlib.h:327:20: note: insert '_Nullable' if the pointer may be null
void     psort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nullable 
/usr/local/include/stdlib.h:327:20: note: insert '_Nonnull' if the pointer should never be null
void     psort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nonnull 
/usr/local/include/stdlib.h:328:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
/usr/local/include/stdlib.h:328:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:328:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:328:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
/usr/local/include/stdlib.h:328:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:328:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:331:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
/usr/local/include/stdlib.h:331:20: note: insert '_Nullable' if the pointer may be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nullable 
/usr/local/include/stdlib.h:331:20: note: insert '_Nonnull' if the pointer should never be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nonnull 
/usr/local/include/stdlib.h:331:64: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
/usr/local/include/stdlib.h:331:64: note: insert '_Nullable' if the pointer may be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nullable
/usr/local/include/stdlib.h:331:64: note: insert '_Nonnull' if the pointer should never be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nonnull
/usr/local/include/stdlib.h:332:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                           ^
/usr/local/include/stdlib.h:332:37: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                           ^
                                            _Nullable
/usr/local/include/stdlib.h:332:37: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                           ^
                                            _Nonnull
/usr/local/include/stdlib.h:332:51: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                                         ^
/usr/local/include/stdlib.h:332:51: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                                         ^
                                                          _Nullable
/usr/local/include/stdlib.h:332:51: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                                         ^
                                                          _Nonnull
/usr/local/include/stdlib.h:332:65: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                                                       ^
/usr/local/include/stdlib.h:332:65: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                                                       ^
                                                                        _Nullable
/usr/local/include/stdlib.h:332:65: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                                                       ^
                                                                        _Nonnull
/usr/local/include/stdlib.h:335:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort_b(void *__base, size_t __nel, size_t __width,
                      ^
/usr/local/include/stdlib.h:335:20: note: insert '_Nullable' if the pointer may be null
void     qsort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nullable 
/usr/local/include/stdlib.h:335:20: note: insert '_Nonnull' if the pointer should never be null
void     qsort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nonnull 
/usr/local/include/stdlib.h:336:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
/usr/local/include/stdlib.h:336:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:336:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:336:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
/usr/local/include/stdlib.h:336:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:336:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:339:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
/usr/local/include/stdlib.h:339:20: note: insert '_Nullable' if the pointer may be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nullable 
/usr/local/include/stdlib.h:339:20: note: insert '_Nonnull' if the pointer should never be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nonnull 
/usr/local/include/stdlib.h:339:64: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
/usr/local/include/stdlib.h:339:64: note: insert '_Nullable' if the pointer may be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nullable
/usr/local/include/stdlib.h:339:64: note: insert '_Nonnull' if the pointer should never be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nonnull
/usr/local/include/stdlib.h:340:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                           ^
/usr/local/include/stdlib.h:340:37: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                           ^
                                            _Nullable
/usr/local/include/stdlib.h:340:37: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                           ^
                                            _Nonnull
/usr/local/include/stdlib.h:340:51: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                         ^
/usr/local/include/stdlib.h:340:51: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                         ^
                                                          _Nullable
/usr/local/include/stdlib.h:340:51: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                         ^
                                                          _Nonnull
/usr/local/include/stdlib.h:340:65: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                                       ^
/usr/local/include/stdlib.h:340:65: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                                       ^
                                                                        _Nullable
/usr/local/include/stdlib.h:340:65: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                                       ^
                                                                        _Nonnull
/usr/local/include/stdlib.h:341:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                       ^
/usr/local/include/stdlib.h:341:36: note: insert '_Nullable' if the pointer may be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                       ^
                                        _Nullable
/usr/local/include/stdlib.h:341:36: note: insert '_Nonnull' if the pointer should never be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                       ^
                                        _Nonnull
/usr/local/include/stdlib.h:341:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
/usr/local/include/stdlib.h:341:37: note: insert '_Nullable' if the pointer may be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                          _Nullable 
/usr/local/include/stdlib.h:341:37: note: insert '_Nonnull' if the pointer should never be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                          _Nonnull 
/usr/local/include/stdlib.h:341:77: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                ^
/usr/local/include/stdlib.h:341:77: note: insert '_Nullable' if the pointer may be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                ^
                                                                                  _Nullable 
/usr/local/include/stdlib.h:341:77: note: insert '_Nonnull' if the pointer should never be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                ^
                                                                                  _Nonnull 
/usr/local/include/stdlib.h:343:24: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int     rpmatch(const char *)
                           ^
/usr/local/include/stdlib.h:343:24: note: insert '_Nullable' if the pointer may be null
int     rpmatch(const char *)
                           ^
                            _Nullable
/usr/local/include/stdlib.h:343:24: note: insert '_Nonnull' if the pointer should never be null
int     rpmatch(const char *)
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:345:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
/usr/local/include/stdlib.h:345:37: note: insert '_Nullable' if the pointer may be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                         _Nullable
/usr/local/include/stdlib.h:345:37: note: insert '_Nonnull' if the pointer should never be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                         _Nonnull
/usr/local/include/stdlib.h:345:38: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                         ^
/usr/local/include/stdlib.h:345:38: note: insert '_Nullable' if the pointer may be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                         ^
                                           _Nullable 
/usr/local/include/stdlib.h:345:38: note: insert '_Nonnull' if the pointer should never be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                         ^
                                           _Nonnull 
/usr/local/include/stdlib.h:345:78: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                 ^
/usr/local/include/stdlib.h:345:78: note: insert '_Nullable' if the pointer may be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                 ^
                                                                                   _Nullable 
/usr/local/include/stdlib.h:345:78: note: insert '_Nonnull' if the pointer should never be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                 ^
                                                                                   _Nonnull 
/usr/local/include/stdlib.h:349:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
                       ^
/usr/local/include/stdlib.h:349:21: note: insert '_Nullable' if the pointer may be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
                       ^
                         _Nullable 
/usr/local/include/stdlib.h:349:21: note: insert '_Nonnull' if the pointer should never be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
                       ^
                         _Nonnull 
/usr/local/include/stdlib.h:349:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
        ^
/usr/local/include/stdlib.h:349:6: note: insert '_Nullable' if the pointer may be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
        ^
          _Nullable 
/usr/local/include/stdlib.h:349:6: note: insert '_Nonnull' if the pointer should never be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:351:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                            ^
/usr/local/include/stdlib.h:351:22: note: insert '_Nullable' if the pointer may be null
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                            ^
                              _Nullable 
/usr/local/include/stdlib.h:351:22: note: insert '_Nonnull' if the pointer should never be null
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                            ^
                              _Nonnull 
/usr/local/include/stdlib.h:351:84: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                                                                                          ^
/usr/local/include/stdlib.h:351:84: note: insert '_Nullable' if the pointer may be null
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                                                                                          ^
                                                                                           _Nullable
/usr/local/include/stdlib.h:351:84: note: insert '_Nonnull' if the pointer should never be null
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                                                                                          ^
                                                                                           _Nonnull
/usr/local/include/stdlib.h:351:85: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                                                                                           ^
/usr/local/include/stdlib.h:351:85: note: insert '_Nullable' if the pointer may be null
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                                                                                           ^
                                                                                             _Nullable 
/usr/local/include/stdlib.h:351:85: note: insert '_Nonnull' if the pointer should never be null
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                                                                                           ^
                                                                                             _Nonnull 
/usr/local/include/stdlib.h:355:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoq(const char *__str, char **__endptr, int __base);
                           ^
/usr/local/include/stdlib.h:355:21: note: insert '_Nullable' if the pointer may be null
         strtoq(const char *__str, char **__endptr, int __base);
                           ^
                             _Nullable 
/usr/local/include/stdlib.h:355:21: note: insert '_Nonnull' if the pointer should never be null
         strtoq(const char *__str, char **__endptr, int __base);
                           ^
                             _Nonnull 
/usr/local/include/stdlib.h:355:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoq(const char *__str, char **__endptr, int __base);
                                        ^
/usr/local/include/stdlib.h:355:34: note: insert '_Nullable' if the pointer may be null
         strtoq(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nullable
/usr/local/include/stdlib.h:355:34: note: insert '_Nonnull' if the pointer should never be null
         strtoq(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nonnull
/usr/local/include/stdlib.h:355:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoq(const char *__str, char **__endptr, int __base);
                                         ^
/usr/local/include/stdlib.h:355:35: note: insert '_Nullable' if the pointer may be null
         strtoq(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nullable 
/usr/local/include/stdlib.h:355:35: note: insert '_Nonnull' if the pointer should never be null
         strtoq(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nonnull 
/usr/local/include/stdlib.h:357:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtouq(const char *__str, char **__endptr, int __base);
                            ^
/usr/local/include/stdlib.h:357:22: note: insert '_Nullable' if the pointer may be null
         strtouq(const char *__str, char **__endptr, int __base);
                            ^
                              _Nullable 
/usr/local/include/stdlib.h:357:22: note: insert '_Nonnull' if the pointer should never be null
         strtouq(const char *__str, char **__endptr, int __base);
                            ^
                              _Nonnull 
/usr/local/include/stdlib.h:357:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtouq(const char *__str, char **__endptr, int __base);
                                         ^
/usr/local/include/stdlib.h:357:35: note: insert '_Nullable' if the pointer may be null
         strtouq(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nullable
/usr/local/include/stdlib.h:357:35: note: insert '_Nonnull' if the pointer should never be null
         strtouq(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nonnull
/usr/local/include/stdlib.h:357:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtouq(const char *__str, char **__endptr, int __base);
                                          ^
/usr/local/include/stdlib.h:357:36: note: insert '_Nullable' if the pointer may be null
         strtouq(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nullable 
/usr/local/include/stdlib.h:357:36: note: insert '_Nonnull' if the pointer should never be null
         strtouq(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nonnull 
/usr/local/include/stdlib.h:359:13: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
extern char *suboptarg;         /* getsubopt(3) external variable */
            ^
/usr/local/include/stdlib.h:359:13: note: insert '_Nullable' if the pointer may be null
extern char *suboptarg;         /* getsubopt(3) external variable */
            ^
              _Nullable 
/usr/local/include/stdlib.h:359:13: note: insert '_Nonnull' if the pointer should never be null
extern char *suboptarg;         /* getsubopt(3) external variable */
            ^
              _Nonnull 
conftest.c:6:35: error: no member named 'pvio' in 'struct NET'; did you mean 'vio'?
int s = (char *)&((MYSQL*)0)->net.pvio - (char *)0;
                                  ^~~~
                                  vio
/usr/local/opt/mysql-client/include/mysql/mysql_com.h:852:13: note: 'vio' declared here
  MYSQL_VIO vio;
            ^
193 warnings and 1 error generated.
checked program was:
/* begin */
 1: #include "ruby.h"
 2: 
 3: #include <mysql.h>
 4: 
 5: /*top*/
 6: int s = (char *)&((MYSQL*)0)->net.pvio - (char *)0;
 7: int main(int argc, char **argv)
 8: {
 9:   return !!argv[argc];
10: }
/* end */

--------------------

have_const: checking for MYSQL_ENABLE_CLEARTEXT_PLUGIN in mysql.h... -------------------- yes

"gcc -I/Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/x86_64-darwin19 -I/Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/backward -I/Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0 -I. -I/usr/local/opt/mysql-client/include/mysql  -I/usr/local/opt/libyaml/include -I/usr/local/opt/libksba/include -I/usr/local/opt/readline/include -I/usr/local/opt/zlib/include -I/usr/local/opt/openssl@1.1/include -D_XOPEN_SOURCE -D_DARWIN_C_SOURCE -D_DARWIN_UNLIMITED_SELECT -D_REENTRANT   -O3 -ggdb3 -Wall -Wextra -Wdeprecated-declarations -Wdivision-by-zero -Wimplicit-function-declaration -Wimplicit-int -Wpointer-arith -Wshorten-64-to-32 -Wwrite-strings -Wmissing-noreturn -Wno-constant-logical-operand -Wno-long-long -Wno-missing-field-initializers -Wno-overlength-strings -Wno-parentheses-equality -Wno-self-assign -Wno-tautological-compare -Wno-unused-parameter -Wno-unused-value -Wunused-variable -Wextra-tokens  -fno-common -pipe -DFULL_SSL_MODE_SUPPORT   -c conftest.c"
In file included from conftest.c:1:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby.h:33:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/ruby.h:29:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/defines.h:126:
In file included from /usr/local/include/stdio.h:64:
/usr/local/include/_stdio.h:93:16: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        unsigned char   *_base;
                        ^
/usr/local/include/_stdio.h:93:16: note: insert '_Nullable' if the pointer may be null
        unsigned char   *_base;
                        ^
                          _Nullable 
/usr/local/include/_stdio.h:93:16: note: insert '_Nonnull' if the pointer should never be null
        unsigned char   *_base;
                        ^
                          _Nonnull 
/usr/local/include/_stdio.h:138:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
/usr/local/include/_stdio.h:138:32: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
                                           _Nullable
/usr/local/include/_stdio.h:138:32: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
                                           _Nonnull
/usr/local/include/_stdio.h:138:40: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
/usr/local/include/_stdio.h:138:40: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
                                                   _Nullable
/usr/local/include/_stdio.h:138:40: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
                                                   _Nonnull
/usr/local/include/_stdio.h:139:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
/usr/local/include/_stdio.h:139:35: note: insert '_Nullable' if the pointer may be null
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
                                           _Nullable
/usr/local/include/_stdio.h:139:35: note: insert '_Nonnull' if the pointer should never be null
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
                                           _Nonnull
/usr/local/include/_stdio.h:140:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
/usr/local/include/_stdio.h:140:32: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
                                           _Nullable
/usr/local/include/_stdio.h:140:32: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
                                           _Nonnull
/usr/local/include/_stdio.h:140:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
/usr/local/include/_stdio.h:140:46: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
                                                         _Nullable
/usr/local/include/_stdio.h:140:46: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
                                                         _Nonnull
/usr/local/include/_stdio.h:144:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
/usr/local/include/_stdio.h:144:18: note: insert '_Nullable' if the pointer may be null
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
                          _Nullable 
/usr/local/include/_stdio.h:144:18: note: insert '_Nonnull' if the pointer should never be null
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
                          _Nonnull 
In file included from conftest.c:1:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby.h:33:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/ruby.h:29:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/defines.h:126:
/usr/local/include/stdio.h:67:13: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
extern FILE *__stdinp;
            ^
/usr/local/include/stdio.h:67:13: note: insert '_Nullable' if the pointer may be null
extern FILE *__stdinp;
            ^
              _Nullable 
/usr/local/include/stdio.h:67:13: note: insert '_Nonnull' if the pointer should never be null
extern FILE *__stdinp;
            ^
              _Nonnull 
/usr/local/include/stdio.h:386:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 int (* _Nullable)(void *, const char *, int),
                                        ^
/usr/local/include/stdio.h:386:41: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *, const char *, int),
                                        ^
                                         _Nullable
/usr/local/include/stdio.h:386:41: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *, const char *, int),
                                        ^
                                         _Nonnull
/usr/local/include/stdio.h:386:55: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
/usr/local/include/stdio.h:386:55: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
                                                       _Nullable
/usr/local/include/stdio.h:386:55: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
                                                       _Nonnull
/usr/local/include/stdio.h:387:44: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
/usr/local/include/stdio.h:387:44: note: insert '_Nullable' if the pointer may be null
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
                                            _Nullable
/usr/local/include/stdio.h:387:44: note: insert '_Nonnull' if the pointer should never be null
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
                                            _Nonnull
/usr/local/include/stdio.h:388:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 int (* _Nullable)(void *));
                                        ^
/usr/local/include/stdio.h:388:41: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *));
                                        ^
                                         _Nullable
/usr/local/include/stdio.h:388:41: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *));
                                        ^
                                         _Nonnull
/usr/local/include/stdio.h:384:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
FILE    *funopen(const void *,
        ^
/usr/local/include/stdio.h:384:6: note: insert '_Nullable' if the pointer may be null
FILE    *funopen(const void *,
        ^
          _Nullable 
/usr/local/include/stdio.h:384:6: note: insert '_Nonnull' if the pointer should never be null
FILE    *funopen(const void *,
        ^
          _Nonnull 
In file included from conftest.c:1:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby.h:33:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/ruby.h:29:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/defines.h:134:
/usr/local/include/stdlib.h:134:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   atof(const char *);
                         ^
/usr/local/include/stdlib.h:134:25: note: insert '_Nullable' if the pointer may be null
double   atof(const char *);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:134:25: note: insert '_Nonnull' if the pointer should never be null
double   atof(const char *);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:135:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      atoi(const char *);
                         ^
/usr/local/include/stdlib.h:135:22: note: insert '_Nullable' if the pointer may be null
int      atoi(const char *);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:135:22: note: insert '_Nonnull' if the pointer should never be null
int      atoi(const char *);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:136:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     atol(const char *);
                         ^
/usr/local/include/stdlib.h:136:23: note: insert '_Nullable' if the pointer may be null
long     atol(const char *);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:136:23: note: insert '_Nonnull' if the pointer should never be null
long     atol(const char *);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:139:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         atoll(const char *);
                          ^
/usr/local/include/stdlib.h:139:20: note: insert '_Nullable' if the pointer may be null
         atoll(const char *);
                          ^
                           _Nullable
/usr/local/include/stdlib.h:139:20: note: insert '_Nonnull' if the pointer should never be null
         atoll(const char *);
                          ^
                           _Nonnull
/usr/local/include/stdlib.h:141:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                            ^
/usr/local/include/stdlib.h:141:26: note: insert '_Nullable' if the pointer may be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                            ^
                              _Nullable 
/usr/local/include/stdlib.h:141:26: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                            ^
                              _Nonnull 
/usr/local/include/stdlib.h:141:45: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                                               ^
/usr/local/include/stdlib.h:141:45: note: insert '_Nullable' if the pointer may be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                                               ^
                                                 _Nullable 
/usr/local/include/stdlib.h:141:45: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                                               ^
                                                 _Nonnull 
/usr/local/include/stdlib.h:142:59: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                 ^
/usr/local/include/stdlib.h:142:59: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                 ^
                                                                  _Nullable
/usr/local/include/stdlib.h:142:59: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                 ^
                                                                  _Nonnull
/usr/local/include/stdlib.h:142:73: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                               ^
/usr/local/include/stdlib.h:142:73: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                               ^
                                                                                _Nullable
/usr/local/include/stdlib.h:142:73: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                               ^
                                                                                _Nonnull
/usr/local/include/stdlib.h:141:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch(const void *__key, const void *__base, size_t __nel,
        ^
/usr/local/include/stdlib.h:141:6: note: insert '_Nullable' if the pointer may be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
        ^
          _Nullable 
/usr/local/include/stdlib.h:141:6: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
        ^
          _Nonnull 
/usr/local/include/stdlib.h:147:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getenv(const char *);
                           ^
/usr/local/include/stdlib.h:147:25: note: insert '_Nullable' if the pointer may be null
char    *getenv(const char *);
                           ^
                            _Nullable
/usr/local/include/stdlib.h:147:25: note: insert '_Nonnull' if the pointer should never be null
char    *getenv(const char *);
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:147:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getenv(const char *);
        ^
/usr/local/include/stdlib.h:147:6: note: insert '_Nullable' if the pointer may be null
char    *getenv(const char *);
        ^
          _Nullable 
/usr/local/include/stdlib.h:147:6: note: insert '_Nonnull' if the pointer should never be null
char    *getenv(const char *);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:156:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mblen(const char *__s, size_t __n);
                          ^
/usr/local/include/stdlib.h:156:23: note: insert '_Nullable' if the pointer may be null
int      mblen(const char *__s, size_t __n);
                          ^
                            _Nullable 
/usr/local/include/stdlib.h:156:23: note: insert '_Nonnull' if the pointer should never be null
int      mblen(const char *__s, size_t __n);
                          ^
                            _Nonnull 
/usr/local/include/stdlib.h:157:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                          ^
/usr/local/include/stdlib.h:157:26: note: insert '_Nullable' if the pointer may be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                          ^
                            _Nullable
/usr/local/include/stdlib.h:157:26: note: insert '_Nonnull' if the pointer should never be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                          ^
                            _Nonnull
/usr/local/include/stdlib.h:157:52: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                                                    ^
/usr/local/include/stdlib.h:157:52: note: insert '_Nullable' if the pointer may be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                                                    ^
                                                      _Nullable
/usr/local/include/stdlib.h:157:52: note: insert '_Nonnull' if the pointer should never be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                                                    ^
                                                      _Nonnull
/usr/local/include/stdlib.h:158:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                        ^
/usr/local/include/stdlib.h:158:21: note: insert '_Nullable' if the pointer may be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                        ^
                          _Nullable
/usr/local/include/stdlib.h:158:21: note: insert '_Nonnull' if the pointer should never be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                        ^
                          _Nonnull
/usr/local/include/stdlib.h:158:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                                                 ^
/usr/local/include/stdlib.h:158:46: note: insert '_Nullable' if the pointer may be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                                                 ^
                                                   _Nullable
/usr/local/include/stdlib.h:158:46: note: insert '_Nonnull' if the pointer should never be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                                                 ^
                                                   _Nonnull
/usr/local/include/stdlib.h:160:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort(void *__base, size_t __nel, size_t __width,
                    ^
/usr/local/include/stdlib.h:160:18: note: insert '_Nullable' if the pointer may be null
void     qsort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nullable 
/usr/local/include/stdlib.h:160:18: note: insert '_Nonnull' if the pointer should never be null
void     qsort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nonnull 
/usr/local/include/stdlib.h:161:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
/usr/local/include/stdlib.h:161:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:161:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:161:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
/usr/local/include/stdlib.h:161:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:161:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:165:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                           ^
/usr/local/include/stdlib.h:165:27: note: insert '_Nullable' if the pointer may be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                           ^
                            _Nullable
/usr/local/include/stdlib.h:165:27: note: insert '_Nonnull' if the pointer should never be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:165:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                   ^
/usr/local/include/stdlib.h:165:35: note: insert '_Nullable' if the pointer may be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                   ^
                                    _Nullable
/usr/local/include/stdlib.h:165:35: note: insert '_Nonnull' if the pointer should never be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                   ^
                                    _Nonnull
/usr/local/include/stdlib.h:165:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                    ^
/usr/local/include/stdlib.h:165:36: note: insert '_Nullable' if the pointer may be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                    ^
                                     _Nullable
/usr/local/include/stdlib.h:165:36: note: insert '_Nonnull' if the pointer should never be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                    ^
                                     _Nonnull
/usr/local/include/stdlib.h:166:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                           ^
/usr/local/include/stdlib.h:166:26: note: insert '_Nullable' if the pointer may be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                           ^
                            _Nullable
/usr/local/include/stdlib.h:166:26: note: insert '_Nonnull' if the pointer should never be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:166:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                   ^
/usr/local/include/stdlib.h:166:34: note: insert '_Nullable' if the pointer may be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                   ^
                                    _Nullable
/usr/local/include/stdlib.h:166:34: note: insert '_Nonnull' if the pointer should never be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                   ^
                                    _Nonnull
/usr/local/include/stdlib.h:166:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                    ^
/usr/local/include/stdlib.h:166:35: note: insert '_Nullable' if the pointer may be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                    ^
                                     _Nullable
/usr/local/include/stdlib.h:166:35: note: insert '_Nonnull' if the pointer should never be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                    ^
                                     _Nonnull
/usr/local/include/stdlib.h:167:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     strtol(const char *__str, char **__endptr, int __base);
                           ^
/usr/local/include/stdlib.h:167:25: note: insert '_Nullable' if the pointer may be null
long     strtol(const char *__str, char **__endptr, int __base);
                           ^
                             _Nullable 
/usr/local/include/stdlib.h:167:25: note: insert '_Nonnull' if the pointer should never be null
long     strtol(const char *__str, char **__endptr, int __base);
                           ^
                             _Nonnull 
/usr/local/include/stdlib.h:167:38: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     strtol(const char *__str, char **__endptr, int __base);
                                        ^
/usr/local/include/stdlib.h:167:38: note: insert '_Nullable' if the pointer may be null
long     strtol(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nullable
/usr/local/include/stdlib.h:167:38: note: insert '_Nonnull' if the pointer should never be null
long     strtol(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nonnull
/usr/local/include/stdlib.h:167:39: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     strtol(const char *__str, char **__endptr, int __base);
                                         ^
/usr/local/include/stdlib.h:167:39: note: insert '_Nullable' if the pointer may be null
long     strtol(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nullable 
/usr/local/include/stdlib.h:167:39: note: insert '_Nonnull' if the pointer should never be null
long     strtol(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nonnull 
/usr/local/include/stdlib.h:169:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtold(const char *, char **);
                            ^
/usr/local/include/stdlib.h:169:22: note: insert '_Nullable' if the pointer may be null
         strtold(const char *, char **);
                            ^
                             _Nullable
/usr/local/include/stdlib.h:169:22: note: insert '_Nonnull' if the pointer should never be null
         strtold(const char *, char **);
                            ^
                             _Nonnull
/usr/local/include/stdlib.h:169:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtold(const char *, char **);
                                    ^
/usr/local/include/stdlib.h:169:30: note: insert '_Nullable' if the pointer may be null
         strtold(const char *, char **);
                                    ^
                                     _Nullable
/usr/local/include/stdlib.h:169:30: note: insert '_Nonnull' if the pointer should never be null
         strtold(const char *, char **);
                                    ^
                                     _Nonnull
/usr/local/include/stdlib.h:169:31: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtold(const char *, char **);
                                     ^
/usr/local/include/stdlib.h:169:31: note: insert '_Nullable' if the pointer may be null
         strtold(const char *, char **);
                                     ^
                                      _Nullable
/usr/local/include/stdlib.h:169:31: note: insert '_Nonnull' if the pointer should never be null
         strtold(const char *, char **);
                                     ^
                                      _Nonnull
/usr/local/include/stdlib.h:172:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoll(const char *__str, char **__endptr, int __base);
                            ^
/usr/local/include/stdlib.h:172:22: note: insert '_Nullable' if the pointer may be null
         strtoll(const char *__str, char **__endptr, int __base);
                            ^
                              _Nullable 
/usr/local/include/stdlib.h:172:22: note: insert '_Nonnull' if the pointer should never be null
         strtoll(const char *__str, char **__endptr, int __base);
                            ^
                              _Nonnull 
/usr/local/include/stdlib.h:172:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoll(const char *__str, char **__endptr, int __base);
                                         ^
/usr/local/include/stdlib.h:172:35: note: insert '_Nullable' if the pointer may be null
         strtoll(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nullable
/usr/local/include/stdlib.h:172:35: note: insert '_Nonnull' if the pointer should never be null
         strtoll(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nonnull
/usr/local/include/stdlib.h:172:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoll(const char *__str, char **__endptr, int __base);
                                          ^
/usr/local/include/stdlib.h:172:36: note: insert '_Nullable' if the pointer may be null
         strtoll(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nullable 
/usr/local/include/stdlib.h:172:36: note: insert '_Nonnull' if the pointer should never be null
         strtoll(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nonnull 
/usr/local/include/stdlib.h:175:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoul(const char *__str, char **__endptr, int __base);
                            ^
/usr/local/include/stdlib.h:175:22: note: insert '_Nullable' if the pointer may be null
         strtoul(const char *__str, char **__endptr, int __base);
                            ^
                              _Nullable 
/usr/local/include/stdlib.h:175:22: note: insert '_Nonnull' if the pointer should never be null
         strtoul(const char *__str, char **__endptr, int __base);
                            ^
                              _Nonnull 
/usr/local/include/stdlib.h:175:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoul(const char *__str, char **__endptr, int __base);
                                         ^
/usr/local/include/stdlib.h:175:35: note: insert '_Nullable' if the pointer may be null
         strtoul(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nullable
/usr/local/include/stdlib.h:175:35: note: insert '_Nonnull' if the pointer should never be null
         strtoul(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nonnull
/usr/local/include/stdlib.h:175:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoul(const char *__str, char **__endptr, int __base);
                                          ^
/usr/local/include/stdlib.h:175:36: note: insert '_Nullable' if the pointer may be null
         strtoul(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nullable 
/usr/local/include/stdlib.h:175:36: note: insert '_Nonnull' if the pointer should never be null
         strtoul(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nonnull 
/usr/local/include/stdlib.h:178:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoull(const char *__str, char **__endptr, int __base);
                             ^
/usr/local/include/stdlib.h:178:23: note: insert '_Nullable' if the pointer may be null
         strtoull(const char *__str, char **__endptr, int __base);
                             ^
                               _Nullable 
/usr/local/include/stdlib.h:178:23: note: insert '_Nonnull' if the pointer should never be null
         strtoull(const char *__str, char **__endptr, int __base);
                             ^
                               _Nonnull 
/usr/local/include/stdlib.h:178:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoull(const char *__str, char **__endptr, int __base);
                                          ^
/usr/local/include/stdlib.h:178:36: note: insert '_Nullable' if the pointer may be null
         strtoull(const char *__str, char **__endptr, int __base);
                                          ^
                                           _Nullable
/usr/local/include/stdlib.h:178:36: note: insert '_Nonnull' if the pointer should never be null
         strtoull(const char *__str, char **__endptr, int __base);
                                          ^
                                           _Nonnull
/usr/local/include/stdlib.h:178:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoull(const char *__str, char **__endptr, int __base);
                                           ^
/usr/local/include/stdlib.h:178:37: note: insert '_Nullable' if the pointer may be null
         strtoull(const char *__str, char **__endptr, int __base);
                                           ^
                                             _Nullable 
/usr/local/include/stdlib.h:178:37: note: insert '_Nonnull' if the pointer should never be null
         strtoull(const char *__str, char **__endptr, int __base);
                                           ^
                                             _Nonnull 
/usr/local/include/stdlib.h:190:24: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      system(const char *) __DARWIN_ALIAS_C(system);
                           ^
/usr/local/include/stdlib.h:190:24: note: insert '_Nullable' if the pointer may be null
int      system(const char *) __DARWIN_ALIAS_C(system);
                           ^
                            _Nullable
/usr/local/include/stdlib.h:190:24: note: insert '_Nonnull' if the pointer should never be null
int      system(const char *) __DARWIN_ALIAS_C(system);
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:194:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                       ^
/usr/local/include/stdlib.h:194:23: note: insert '_Nullable' if the pointer may be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                       ^
                         _Nullable
/usr/local/include/stdlib.h:194:23: note: insert '_Nonnull' if the pointer should never be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                       ^
                         _Nonnull
/usr/local/include/stdlib.h:194:51: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                                                   ^
/usr/local/include/stdlib.h:194:51: note: insert '_Nullable' if the pointer may be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                                                   ^
                                                     _Nullable
/usr/local/include/stdlib.h:194:51: note: insert '_Nonnull' if the pointer should never be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                                                   ^
                                                     _Nonnull
/usr/local/include/stdlib.h:195:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      wctomb(char *, wchar_t);
                     ^
/usr/local/include/stdlib.h:195:18: note: insert '_Nullable' if the pointer may be null
int      wctomb(char *, wchar_t);
                     ^
                      _Nullable
/usr/local/include/stdlib.h:195:18: note: insert '_Nonnull' if the pointer should never be null
int      wctomb(char *, wchar_t);
                     ^
                      _Nonnull
/usr/local/include/stdlib.h:199:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     a64l(const char *);
                         ^
/usr/local/include/stdlib.h:199:23: note: insert '_Nullable' if the pointer may be null
long     a64l(const char *);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:199:23: note: insert '_Nonnull' if the pointer should never be null
long     a64l(const char *);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:201:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
/usr/local/include/stdlib.h:201:29: note: insert '_Nullable' if the pointer may be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nullable 
/usr/local/include/stdlib.h:201:29: note: insert '_Nonnull' if the pointer should never be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nonnull 
/usr/local/include/stdlib.h:201:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
/usr/local/include/stdlib.h:201:46: note: insert '_Nullable' if the pointer may be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nullable 
/usr/local/include/stdlib.h:201:46: note: insert '_Nonnull' if the pointer should never be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nonnull 
/usr/local/include/stdlib.h:201:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
/usr/local/include/stdlib.h:201:6: note: insert '_Nullable' if the pointer may be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nullable 
/usr/local/include/stdlib.h:201:6: note: insert '_Nonnull' if the pointer should never be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nonnull 
/usr/local/include/stdlib.h:202:31: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
double   erand48(unsigned short[3]);
                               ^
/usr/local/include/stdlib.h:202:31: note: insert '_Nullable' if the array parameter may be null
double   erand48(unsigned short[3]);
                               ^
                                _Nullable 
/usr/local/include/stdlib.h:202:31: note: insert '_Nonnull' if the array parameter should never be null
double   erand48(unsigned short[3]);
                               ^
                                _Nonnull 
/usr/local/include/stdlib.h:203:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
/usr/local/include/stdlib.h:203:29: note: insert '_Nullable' if the pointer may be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nullable 
/usr/local/include/stdlib.h:203:29: note: insert '_Nonnull' if the pointer should never be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nonnull 
/usr/local/include/stdlib.h:203:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
/usr/local/include/stdlib.h:203:46: note: insert '_Nullable' if the pointer may be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nullable 
/usr/local/include/stdlib.h:203:46: note: insert '_Nonnull' if the pointer should never be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nonnull 
/usr/local/include/stdlib.h:203:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
/usr/local/include/stdlib.h:203:6: note: insert '_Nullable' if the pointer may be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nullable 
/usr/local/include/stdlib.h:203:6: note: insert '_Nonnull' if the pointer should never be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nonnull 
/usr/local/include/stdlib.h:204:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *gcvt(double, int, char *); /* LEGACY */
                                ^
/usr/local/include/stdlib.h:204:30: note: insert '_Nullable' if the pointer may be null
char    *gcvt(double, int, char *); /* LEGACY */
                                ^
                                 _Nullable
/usr/local/include/stdlib.h:204:30: note: insert '_Nonnull' if the pointer should never be null
char    *gcvt(double, int, char *); /* LEGACY */
                                ^
                                 _Nonnull
/usr/local/include/stdlib.h:204:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *gcvt(double, int, char *); /* LEGACY */
        ^
/usr/local/include/stdlib.h:204:6: note: insert '_Nullable' if the pointer may be null
char    *gcvt(double, int, char *); /* LEGACY */
        ^
          _Nullable 
/usr/local/include/stdlib.h:204:6: note: insert '_Nonnull' if the pointer should never be null
char    *gcvt(double, int, char *); /* LEGACY */
        ^
          _Nonnull 
/usr/local/include/stdlib.h:205:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                        ^
/usr/local/include/stdlib.h:205:21: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                        ^
                         _Nullable
/usr/local/include/stdlib.h:205:21: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                        ^
                         _Nonnull
/usr/local/include/stdlib.h:205:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                         ^
/usr/local/include/stdlib.h:205:22: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:205:22: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:205:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                 ^
/usr/local/include/stdlib.h:205:30: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                 ^
                                   _Nullable
/usr/local/include/stdlib.h:205:30: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                 ^
                                   _Nonnull
/usr/local/include/stdlib.h:205:38: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                         ^
/usr/local/include/stdlib.h:205:38: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                         ^
                                          _Nullable
/usr/local/include/stdlib.h:205:38: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                         ^
                                          _Nonnull
/usr/local/include/stdlib.h:205:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                                 ^
/usr/local/include/stdlib.h:205:46: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:205:46: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:205:47: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                                  ^
/usr/local/include/stdlib.h:205:47: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                                  ^
                                                   _Nullable
/usr/local/include/stdlib.h:205:47: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                                  ^
                                                   _Nonnull
/usr/local/include/stdlib.h:208:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
                                  ^
/usr/local/include/stdlib.h:208:32: note: insert '_Nullable' if the pointer may be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
                                  ^
                                   _Nullable
/usr/local/include/stdlib.h:208:32: note: insert '_Nonnull' if the pointer should never be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
                                  ^
                                   _Nonnull
/usr/local/include/stdlib.h:208:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
        ^
/usr/local/include/stdlib.h:208:6: note: insert '_Nullable' if the pointer may be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
        ^
          _Nullable 
/usr/local/include/stdlib.h:208:6: note: insert '_Nonnull' if the pointer should never be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
        ^
          _Nonnull 
/usr/local/include/stdlib.h:212:29: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
long     jrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
/usr/local/include/stdlib.h:212:29: note: insert '_Nullable' if the array parameter may be null
long     jrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nullable 
/usr/local/include/stdlib.h:212:29: note: insert '_Nonnull' if the array parameter should never be null
long     jrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nonnull 
/usr/local/include/stdlib.h:213:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *l64a(long);
        ^
/usr/local/include/stdlib.h:213:6: note: insert '_Nullable' if the pointer may be null
char    *l64a(long);
        ^
          _Nullable 
/usr/local/include/stdlib.h:213:6: note: insert '_Nonnull' if the pointer should never be null
char    *l64a(long);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:214:29: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
void     lcong48(unsigned short[7]);
                               ^
/usr/local/include/stdlib.h:214:29: note: insert '_Nullable' if the array parameter may be null
void     lcong48(unsigned short[7]);
                               ^
                                _Nullable 
/usr/local/include/stdlib.h:214:29: note: insert '_Nonnull' if the array parameter should never be null
void     lcong48(unsigned short[7]);
                               ^
                                _Nonnull 
/usr/local/include/stdlib.h:216:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *mktemp(char *);
                     ^
/usr/local/include/stdlib.h:216:19: note: insert '_Nullable' if the pointer may be null
char    *mktemp(char *);
                     ^
                      _Nullable
/usr/local/include/stdlib.h:216:19: note: insert '_Nonnull' if the pointer should never be null
char    *mktemp(char *);
                     ^
                      _Nonnull
/usr/local/include/stdlib.h:216:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *mktemp(char *);
        ^
/usr/local/include/stdlib.h:216:6: note: insert '_Nullable' if the pointer may be null
char    *mktemp(char *);
        ^
          _Nullable 
/usr/local/include/stdlib.h:216:6: note: insert '_Nonnull' if the pointer should never be null
char    *mktemp(char *);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:217:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mkstemp(char *);
                      ^
/usr/local/include/stdlib.h:217:19: note: insert '_Nullable' if the pointer may be null
int      mkstemp(char *);
                      ^
                       _Nullable
/usr/local/include/stdlib.h:217:19: note: insert '_Nonnull' if the pointer should never be null
int      mkstemp(char *);
                      ^
                       _Nonnull
/usr/local/include/stdlib.h:219:29: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
long     nrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
/usr/local/include/stdlib.h:219:29: note: insert '_Nullable' if the array parameter may be null
long     nrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nullable 
/usr/local/include/stdlib.h:219:29: note: insert '_Nonnull' if the array parameter should never be null
long     nrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nonnull 
/usr/local/include/stdlib.h:221:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ptsname(int);
        ^
/usr/local/include/stdlib.h:221:6: note: insert '_Nullable' if the pointer may be null
char    *ptsname(int);
        ^
          _Nullable 
/usr/local/include/stdlib.h:221:6: note: insert '_Nonnull' if the pointer should never be null
char    *ptsname(int);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:224:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int ptsname_r(int fildes, char *buffer, size_t buflen) __API_AVAILABLE(macos(10.13.4), ios(11.3), tvos(11.3), watchos(4.3));
                               ^
/usr/local/include/stdlib.h:224:32: note: insert '_Nullable' if the pointer may be null
int ptsname_r(int fildes, char *buffer, size_t buflen) __API_AVAILABLE(macos(10.13.4), ios(11.3), tvos(11.3), watchos(4.3));
                               ^
                                 _Nullable 
/usr/local/include/stdlib.h:224:32: note: insert '_Nonnull' if the pointer should never be null
int ptsname_r(int fildes, char *buffer, size_t buflen) __API_AVAILABLE(macos(10.13.4), ios(11.3), tvos(11.3), watchos(4.3));
                               ^
                                 _Nonnull 
/usr/local/include/stdlib.h:227:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      putenv(char *) __DARWIN_ALIAS(putenv);
                     ^
/usr/local/include/stdlib.h:227:18: note: insert '_Nullable' if the pointer may be null
int      putenv(char *) __DARWIN_ALIAS(putenv);
                     ^
                      _Nullable
/usr/local/include/stdlib.h:227:18: note: insert '_Nonnull' if the pointer should never be null
int      putenv(char *) __DARWIN_ALIAS(putenv);
                     ^
                      _Nonnull
/usr/local/include/stdlib.h:229:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      rand_r(unsigned *) __swift_unavailable("Use arc4random instead.");
                         ^
/usr/local/include/stdlib.h:229:22: note: insert '_Nullable' if the pointer may be null
int      rand_r(unsigned *) __swift_unavailable("Use arc4random instead.");
                         ^
                          _Nullable
/usr/local/include/stdlib.h:229:22: note: insert '_Nonnull' if the pointer should never be null
int      rand_r(unsigned *) __swift_unavailable("Use arc4random instead.");
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:231:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                             ^
/usr/local/include/stdlib.h:231:27: note: insert '_Nullable' if the pointer may be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                             ^
                               _Nullable
/usr/local/include/stdlib.h:231:27: note: insert '_Nonnull' if the pointer should never be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                             ^
                               _Nonnull
/usr/local/include/stdlib.h:231:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                                                ^
/usr/local/include/stdlib.h:231:46: note: insert '_Nullable' if the pointer may be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                                                ^
                                                  _Nullable
/usr/local/include/stdlib.h:231:46: note: insert '_Nonnull' if the pointer should never be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                                                ^
                                                  _Nonnull
/usr/local/include/stdlib.h:231:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
        ^
/usr/local/include/stdlib.h:231:6: note: insert '_Nullable' if the pointer may be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
        ^
          _Nullable 
/usr/local/include/stdlib.h:231:6: note: insert '_Nonnull' if the pointer should never be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:236:24: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
        *seed48(unsigned short[3]);
                              ^
/usr/local/include/stdlib.h:236:24: note: insert '_Nullable' if the array parameter may be null
        *seed48(unsigned short[3]);
                              ^
                               _Nullable 
/usr/local/include/stdlib.h:236:24: note: insert '_Nonnull' if the array parameter should never be null
        *seed48(unsigned short[3]);
                              ^
                               _Nonnull 
/usr/local/include/stdlib.h:236:2: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        *seed48(unsigned short[3]);
        ^
/usr/local/include/stdlib.h:236:2: note: insert '_Nullable' if the pointer may be null
        *seed48(unsigned short[3]);
        ^
          _Nullable 
/usr/local/include/stdlib.h:236:2: note: insert '_Nonnull' if the pointer should never be null
        *seed48(unsigned short[3]);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:237:24: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                           ^
/usr/local/include/stdlib.h:237:24: note: insert '_Nullable' if the pointer may be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                           ^
                             _Nullable
/usr/local/include/stdlib.h:237:24: note: insert '_Nonnull' if the pointer should never be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                           ^
                             _Nonnull
/usr/local/include/stdlib.h:237:45: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                                                ^
/usr/local/include/stdlib.h:237:45: note: insert '_Nullable' if the pointer may be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                                                ^
                                                  _Nullable
/usr/local/include/stdlib.h:237:45: note: insert '_Nonnull' if the pointer should never be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                                                ^
                                                  _Nonnull
/usr/local/include/stdlib.h:239:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     setkey(const char *) __DARWIN_ALIAS(setkey);
                           ^
/usr/local/include/stdlib.h:239:25: note: insert '_Nullable' if the pointer may be null
void     setkey(const char *) __DARWIN_ALIAS(setkey);
                           ^
                            _Nullable
/usr/local/include/stdlib.h:239:25: note: insert '_Nonnull' if the pointer should never be null
void     setkey(const char *) __DARWIN_ALIAS(setkey);
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:243:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *setstate(const char *);
                             ^
/usr/local/include/stdlib.h:243:27: note: insert '_Nullable' if the pointer may be null
char    *setstate(const char *);
                             ^
                              _Nullable
/usr/local/include/stdlib.h:243:27: note: insert '_Nonnull' if the pointer should never be null
char    *setstate(const char *);
                             ^
                              _Nonnull
/usr/local/include/stdlib.h:243:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *setstate(const char *);
        ^
/usr/local/include/stdlib.h:243:6: note: insert '_Nullable' if the pointer may be null
char    *setstate(const char *);
        ^
          _Nullable 
/usr/local/include/stdlib.h:243:6: note: insert '_Nonnull' if the pointer should never be null
char    *setstate(const char *);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:252:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      unsetenv(const char *) __DARWIN_ALIAS(unsetenv);
                             ^
/usr/local/include/stdlib.h:252:26: note: insert '_Nullable' if the pointer may be null
int      unsetenv(const char *) __DARWIN_ALIAS(unsetenv);
                             ^
                              _Nullable
/usr/local/include/stdlib.h:252:26: note: insert '_Nonnull' if the pointer should never be null
int      unsetenv(const char *) __DARWIN_ALIAS(unsetenv);
                             ^
                              _Nonnull
/usr/local/include/stdlib.h:265:42: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     arc4random_addrandom(unsigned char * /*dat*/, int /*datlen*/)
                                            ^
/usr/local/include/stdlib.h:265:42: note: insert '_Nullable' if the pointer may be null
void     arc4random_addrandom(unsigned char * /*dat*/, int /*datlen*/)
                                            ^
                                              _Nullable
/usr/local/include/stdlib.h:265:42: note: insert '_Nonnull' if the pointer should never be null
void     arc4random_addrandom(unsigned char * /*dat*/, int /*datlen*/)
                                            ^
                                              _Nonnull
/usr/local/include/stdlib.h:270:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     arc4random_buf(void * __buf, size_t __nbytes) __OSX_AVAILABLE_STARTING(__MAC_10_7, __IPHONE_4_3);
                             ^
/usr/local/include/stdlib.h:270:27: note: insert '_Nullable' if the pointer may be null
void     arc4random_buf(void * __buf, size_t __nbytes) __OSX_AVAILABLE_STARTING(__MAC_10_7, __IPHONE_4_3);
                             ^
                               _Nullable
/usr/local/include/stdlib.h:270:27: note: insert '_Nonnull' if the pointer should never be null
void     arc4random_buf(void * __buf, size_t __nbytes) __OSX_AVAILABLE_STARTING(__MAC_10_7, __IPHONE_4_3);
                             ^
                               _Nonnull
/usr/local/include/stdlib.h:276:28: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                              ^
/usr/local/include/stdlib.h:276:28: note: insert '_Nullable' if the pointer may be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                              ^
                                _Nullable 
/usr/local/include/stdlib.h:276:28: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                              ^
                                _Nonnull 
/usr/local/include/stdlib.h:276:47: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                                                 ^
/usr/local/include/stdlib.h:276:47: note: insert '_Nullable' if the pointer may be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                                                 ^
                                                   _Nullable 
/usr/local/include/stdlib.h:276:47: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                                                 ^
                                                   _Nonnull 
/usr/local/include/stdlib.h:277:59: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                 ^
/usr/local/include/stdlib.h:277:59: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                 ^
                                                                  _Nullable
/usr/local/include/stdlib.h:277:59: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                 ^
                                                                  _Nonnull
/usr/local/include/stdlib.h:277:73: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                               ^
/usr/local/include/stdlib.h:277:73: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                               ^
                                                                                _Nullable
/usr/local/include/stdlib.h:277:73: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                               ^
                                                                                _Nonnull
/usr/local/include/stdlib.h:276:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
        ^
/usr/local/include/stdlib.h:276:6: note: insert '_Nullable' if the pointer may be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
        ^
          _Nullable 
/usr/local/include/stdlib.h:276:6: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
        ^
          _Nonnull 
/usr/local/include/stdlib.h:281:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *cgetcap(char *, const char *, int);
                      ^
/usr/local/include/stdlib.h:281:20: note: insert '_Nullable' if the pointer may be null
char    *cgetcap(char *, const char *, int);
                      ^
                       _Nullable
/usr/local/include/stdlib.h:281:20: note: insert '_Nonnull' if the pointer should never be null
char    *cgetcap(char *, const char *, int);
                      ^
                       _Nonnull
/usr/local/include/stdlib.h:281:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *cgetcap(char *, const char *, int);
                                    ^
/usr/local/include/stdlib.h:281:34: note: insert '_Nullable' if the pointer may be null
char    *cgetcap(char *, const char *, int);
                                    ^
                                     _Nullable
/usr/local/include/stdlib.h:281:34: note: insert '_Nonnull' if the pointer should never be null
char    *cgetcap(char *, const char *, int);
                                    ^
                                     _Nonnull
/usr/local/include/stdlib.h:281:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *cgetcap(char *, const char *, int);
        ^
/usr/local/include/stdlib.h:281:6: note: insert '_Nullable' if the pointer may be null
char    *cgetcap(char *, const char *, int);
        ^
          _Nullable 
/usr/local/include/stdlib.h:281:6: note: insert '_Nonnull' if the pointer should never be null
char    *cgetcap(char *, const char *, int);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:283:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                      ^
/usr/local/include/stdlib.h:283:19: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                      ^
                       _Nullable
/usr/local/include/stdlib.h:283:19: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                      ^
                       _Nonnull
/usr/local/include/stdlib.h:283:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                       ^
/usr/local/include/stdlib.h:283:20: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                       ^
                        _Nullable
/usr/local/include/stdlib.h:283:20: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                       ^
                        _Nonnull
/usr/local/include/stdlib.h:283:28: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                               ^
/usr/local/include/stdlib.h:283:28: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                               ^
                                _Nullable
/usr/local/include/stdlib.h:283:28: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                               ^
                                _Nonnull
/usr/local/include/stdlib.h:283:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                                ^
/usr/local/include/stdlib.h:283:29: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                                ^
                                 _Nullable
/usr/local/include/stdlib.h:283:29: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                                ^
                                 _Nonnull
/usr/local/include/stdlib.h:283:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                                              ^
/usr/local/include/stdlib.h:283:43: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                                              ^
                                               _Nullable
/usr/local/include/stdlib.h:283:43: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                                              ^
                                               _Nonnull
/usr/local/include/stdlib.h:284:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                        ^
/usr/local/include/stdlib.h:284:21: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                        ^
                         _Nullable
/usr/local/include/stdlib.h:284:21: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                        ^
                         _Nonnull
/usr/local/include/stdlib.h:284:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                         ^
/usr/local/include/stdlib.h:284:22: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:284:22: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:284:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                                 ^
/usr/local/include/stdlib.h:284:30: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                                 ^
                                  _Nullable
/usr/local/include/stdlib.h:284:30: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                                 ^
                                  _Nonnull
/usr/local/include/stdlib.h:284:31: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                                  ^
/usr/local/include/stdlib.h:284:31: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                                  ^
                                   _Nullable
/usr/local/include/stdlib.h:284:31: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                                  ^
                                   _Nonnull
/usr/local/include/stdlib.h:285:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetmatch(const char *, const char *);
                              ^
/usr/local/include/stdlib.h:285:27: note: insert '_Nullable' if the pointer may be null
int      cgetmatch(const char *, const char *);
                              ^
                               _Nullable
/usr/local/include/stdlib.h:285:27: note: insert '_Nonnull' if the pointer should never be null
int      cgetmatch(const char *, const char *);
                              ^
                               _Nonnull
/usr/local/include/stdlib.h:285:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetmatch(const char *, const char *);
                                            ^
/usr/local/include/stdlib.h:285:41: note: insert '_Nullable' if the pointer may be null
int      cgetmatch(const char *, const char *);
                                            ^
                                             _Nullable
/usr/local/include/stdlib.h:285:41: note: insert '_Nonnull' if the pointer should never be null
int      cgetmatch(const char *, const char *);
                                            ^
                                             _Nonnull
/usr/local/include/stdlib.h:286:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                       ^
/usr/local/include/stdlib.h:286:20: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                       ^
                        _Nullable
/usr/local/include/stdlib.h:286:20: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                       ^
                        _Nonnull
/usr/local/include/stdlib.h:286:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                        ^
/usr/local/include/stdlib.h:286:21: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                        ^
                         _Nullable
/usr/local/include/stdlib.h:286:21: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                        ^
                         _Nonnull
/usr/local/include/stdlib.h:286:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                                ^
/usr/local/include/stdlib.h:286:29: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                                ^
                                 _Nullable
/usr/local/include/stdlib.h:286:29: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                                ^
                                 _Nonnull
/usr/local/include/stdlib.h:286:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                                 ^
/usr/local/include/stdlib.h:286:30: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                                 ^
                                  _Nullable
/usr/local/include/stdlib.h:286:30: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                                 ^
                                  _Nonnull
/usr/local/include/stdlib.h:287:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnum(char *, const char *, long *);
                      ^
/usr/local/include/stdlib.h:287:19: note: insert '_Nullable' if the pointer may be null
int      cgetnum(char *, const char *, long *);
                      ^
                       _Nullable
/usr/local/include/stdlib.h:287:19: note: insert '_Nonnull' if the pointer should never be null
int      cgetnum(char *, const char *, long *);
                      ^
                       _Nonnull
/usr/local/include/stdlib.h:287:33: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnum(char *, const char *, long *);
                                    ^
/usr/local/include/stdlib.h:287:33: note: insert '_Nullable' if the pointer may be null
int      cgetnum(char *, const char *, long *);
                                    ^
                                     _Nullable
/usr/local/include/stdlib.h:287:33: note: insert '_Nonnull' if the pointer should never be null
int      cgetnum(char *, const char *, long *);
                                    ^
                                     _Nonnull
/usr/local/include/stdlib.h:287:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnum(char *, const char *, long *);
                                            ^
/usr/local/include/stdlib.h:287:41: note: insert '_Nullable' if the pointer may be null
int      cgetnum(char *, const char *, long *);
                                            ^
                                             _Nullable
/usr/local/include/stdlib.h:287:41: note: insert '_Nonnull' if the pointer should never be null
int      cgetnum(char *, const char *, long *);
                                            ^
                                             _Nonnull
/usr/local/include/stdlib.h:288:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetset(const char *);
                            ^
/usr/local/include/stdlib.h:288:25: note: insert '_Nullable' if the pointer may be null
int      cgetset(const char *);
                            ^
                             _Nullable
/usr/local/include/stdlib.h:288:25: note: insert '_Nonnull' if the pointer should never be null
int      cgetset(const char *);
                            ^
                             _Nonnull
/usr/local/include/stdlib.h:289:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                      ^
/usr/local/include/stdlib.h:289:19: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                      ^
                       _Nullable
/usr/local/include/stdlib.h:289:19: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                      ^
                       _Nonnull
/usr/local/include/stdlib.h:289:33: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                                    ^
/usr/local/include/stdlib.h:289:33: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                                    ^
                                     _Nullable
/usr/local/include/stdlib.h:289:33: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                                    ^
                                     _Nonnull
/usr/local/include/stdlib.h:289:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                                            ^
/usr/local/include/stdlib.h:289:41: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                                            ^
                                             _Nullable
/usr/local/include/stdlib.h:289:41: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                                            ^
                                             _Nonnull
/usr/local/include/stdlib.h:289:42: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                                             ^
/usr/local/include/stdlib.h:289:42: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                                             ^
                                              _Nullable
/usr/local/include/stdlib.h:289:42: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                                             ^
                                              _Nonnull
/usr/local/include/stdlib.h:290:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                       ^
/usr/local/include/stdlib.h:290:20: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                       ^
                        _Nullable
/usr/local/include/stdlib.h:290:20: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                       ^
                        _Nonnull
/usr/local/include/stdlib.h:290:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                                     ^
/usr/local/include/stdlib.h:290:34: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                                     ^
                                      _Nullable
/usr/local/include/stdlib.h:290:34: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                                     ^
                                      _Nonnull
/usr/local/include/stdlib.h:290:42: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                                             ^
/usr/local/include/stdlib.h:290:42: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                                             ^
                                              _Nullable
/usr/local/include/stdlib.h:290:42: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                                             ^
                                              _Nonnull
/usr/local/include/stdlib.h:290:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                                              ^
/usr/local/include/stdlib.h:290:43: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                                              ^
                                               _Nullable
/usr/local/include/stdlib.h:290:43: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                                              ^
                                               _Nonnull
/usr/local/include/stdlib.h:293:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *devname(dev_t, mode_t);
        ^
/usr/local/include/stdlib.h:293:6: note: insert '_Nullable' if the pointer may be null
char    *devname(dev_t, mode_t);
        ^
          _Nullable 
/usr/local/include/stdlib.h:293:6: note: insert '_Nonnull' if the pointer should never be null
char    *devname(dev_t, mode_t);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:294:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *devname_r(dev_t, mode_t, char *buf, int len);
                                       ^
/usr/local/include/stdlib.h:294:37: note: insert '_Nullable' if the pointer may be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
                                       ^
                                         _Nullable 
/usr/local/include/stdlib.h:294:37: note: insert '_Nonnull' if the pointer should never be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
                                       ^
                                         _Nonnull 
/usr/local/include/stdlib.h:294:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *devname_r(dev_t, mode_t, char *buf, int len);
        ^
/usr/local/include/stdlib.h:294:6: note: insert '_Nullable' if the pointer may be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
        ^
          _Nullable 
/usr/local/include/stdlib.h:294:6: note: insert '_Nonnull' if the pointer should never be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:295:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getbsize(int *, long *);
                      ^
/usr/local/include/stdlib.h:295:20: note: insert '_Nullable' if the pointer may be null
char    *getbsize(int *, long *);
                      ^
                       _Nullable
/usr/local/include/stdlib.h:295:20: note: insert '_Nonnull' if the pointer should never be null
char    *getbsize(int *, long *);
                      ^
                       _Nonnull
/usr/local/include/stdlib.h:295:28: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getbsize(int *, long *);
                              ^
/usr/local/include/stdlib.h:295:28: note: insert '_Nullable' if the pointer may be null
char    *getbsize(int *, long *);
                              ^
                               _Nullable
/usr/local/include/stdlib.h:295:28: note: insert '_Nonnull' if the pointer should never be null
char    *getbsize(int *, long *);
                              ^
                               _Nonnull
/usr/local/include/stdlib.h:295:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getbsize(int *, long *);
        ^
/usr/local/include/stdlib.h:295:6: note: insert '_Nullable' if the pointer may be null
char    *getbsize(int *, long *);
        ^
          _Nullable 
/usr/local/include/stdlib.h:295:6: note: insert '_Nonnull' if the pointer should never be null
char    *getbsize(int *, long *);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:296:24: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
int      getloadavg(double [], int);
                           ^
/usr/local/include/stdlib.h:296:24: note: insert '_Nullable' if the array parameter may be null
int      getloadavg(double [], int);
                           ^
                            _Nullable
/usr/local/include/stdlib.h:296:24: note: insert '_Nonnull' if the array parameter should never be null
int      getloadavg(double [], int);
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:298:2: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        *getprogname(void);
        ^
/usr/local/include/stdlib.h:298:2: note: insert '_Nullable' if the pointer may be null
        *getprogname(void);
        ^
          _Nullable 
/usr/local/include/stdlib.h:298:2: note: insert '_Nonnull' if the pointer should never be null
        *getprogname(void);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:299:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     setprogname(const char *);
                                ^
/usr/local/include/stdlib.h:299:30: note: insert '_Nullable' if the pointer may be null
void     setprogname(const char *);
                                ^
                                 _Nullable
/usr/local/include/stdlib.h:299:30: note: insert '_Nonnull' if the pointer should never be null
void     setprogname(const char *);
                                ^
                                 _Nonnull
/usr/local/include/stdlib.h:309:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      heapsort(void *__base, size_t __nel, size_t __width,
                       ^
/usr/local/include/stdlib.h:309:20: note: insert '_Nullable' if the pointer may be null
int      heapsort(void *__base, size_t __nel, size_t __width,
                       ^
                         _Nullable 
/usr/local/include/stdlib.h:309:20: note: insert '_Nonnull' if the pointer should never be null
int      heapsort(void *__base, size_t __nel, size_t __width,
                       ^
                         _Nonnull 
/usr/local/include/stdlib.h:310:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
/usr/local/include/stdlib.h:310:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:310:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:310:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
/usr/local/include/stdlib.h:310:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:310:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:312:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      heapsort_b(void *__base, size_t __nel, size_t __width,
                         ^
/usr/local/include/stdlib.h:312:22: note: insert '_Nullable' if the pointer may be null
int      heapsort_b(void *__base, size_t __nel, size_t __width,
                         ^
                           _Nullable 
/usr/local/include/stdlib.h:312:22: note: insert '_Nonnull' if the pointer should never be null
int      heapsort_b(void *__base, size_t __nel, size_t __width,
                         ^
                           _Nonnull 
/usr/local/include/stdlib.h:313:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
/usr/local/include/stdlib.h:313:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:313:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:313:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
/usr/local/include/stdlib.h:313:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:313:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:316:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mergesort(void *__base, size_t __nel, size_t __width,
                        ^
/usr/local/include/stdlib.h:316:21: note: insert '_Nullable' if the pointer may be null
int      mergesort(void *__base, size_t __nel, size_t __width,
                        ^
                          _Nullable 
/usr/local/include/stdlib.h:316:21: note: insert '_Nonnull' if the pointer should never be null
int      mergesort(void *__base, size_t __nel, size_t __width,
                        ^
                          _Nonnull 
/usr/local/include/stdlib.h:317:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
/usr/local/include/stdlib.h:317:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:317:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:317:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
/usr/local/include/stdlib.h:317:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:317:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:319:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mergesort_b(void *__base, size_t __nel, size_t __width,
                          ^
/usr/local/include/stdlib.h:319:23: note: insert '_Nullable' if the pointer may be null
int      mergesort_b(void *__base, size_t __nel, size_t __width,
                          ^
                            _Nullable 
/usr/local/include/stdlib.h:319:23: note: insert '_Nonnull' if the pointer should never be null
int      mergesort_b(void *__base, size_t __nel, size_t __width,
                          ^
                            _Nonnull 
/usr/local/include/stdlib.h:320:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
/usr/local/include/stdlib.h:320:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:320:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:320:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
/usr/local/include/stdlib.h:320:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:320:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:323:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort(void *__base, size_t __nel, size_t __width,
                    ^
/usr/local/include/stdlib.h:323:18: note: insert '_Nullable' if the pointer may be null
void     psort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nullable 
/usr/local/include/stdlib.h:323:18: note: insert '_Nonnull' if the pointer should never be null
void     psort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nonnull 
/usr/local/include/stdlib.h:324:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *))
                                                 ^
/usr/local/include/stdlib.h:324:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *))
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:324:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *))
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:324:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *))
                                                               ^
/usr/local/include/stdlib.h:324:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *))
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:324:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *))
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:327:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort_b(void *__base, size_t __nel, size_t __width,
                      ^
/usr/local/include/stdlib.h:327:20: note: insert '_Nullable' if the pointer may be null
void     psort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nullable 
/usr/local/include/stdlib.h:327:20: note: insert '_Nonnull' if the pointer should never be null
void     psort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nonnull 
/usr/local/include/stdlib.h:328:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
/usr/local/include/stdlib.h:328:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:328:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:328:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
/usr/local/include/stdlib.h:328:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:328:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:331:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
/usr/local/include/stdlib.h:331:20: note: insert '_Nullable' if the pointer may be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nullable 
/usr/local/include/stdlib.h:331:20: note: insert '_Nonnull' if the pointer should never be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nonnull 
/usr/local/include/stdlib.h:331:64: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
/usr/local/include/stdlib.h:331:64: note: insert '_Nullable' if the pointer may be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nullable
/usr/local/include/stdlib.h:331:64: note: insert '_Nonnull' if the pointer should never be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nonnull
/usr/local/include/stdlib.h:332:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                           ^
/usr/local/include/stdlib.h:332:37: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                           ^
                                            _Nullable
/usr/local/include/stdlib.h:332:37: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                           ^
                                            _Nonnull
/usr/local/include/stdlib.h:332:51: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                                         ^
/usr/local/include/stdlib.h:332:51: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                                         ^
                                                          _Nullable
/usr/local/include/stdlib.h:332:51: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                                         ^
                                                          _Nonnull
/usr/local/include/stdlib.h:332:65: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                                                       ^
/usr/local/include/stdlib.h:332:65: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                                                       ^
                                                                        _Nullable
/usr/local/include/stdlib.h:332:65: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                                                       ^
                                                                        _Nonnull
/usr/local/include/stdlib.h:335:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort_b(void *__base, size_t __nel, size_t __width,
                      ^
/usr/local/include/stdlib.h:335:20: note: insert '_Nullable' if the pointer may be null
void     qsort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nullable 
/usr/local/include/stdlib.h:335:20: note: insert '_Nonnull' if the pointer should never be null
void     qsort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nonnull 
/usr/local/include/stdlib.h:336:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
/usr/local/include/stdlib.h:336:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:336:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:336:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
/usr/local/include/stdlib.h:336:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:336:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:339:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
/usr/local/include/stdlib.h:339:20: note: insert '_Nullable' if the pointer may be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nullable 
/usr/local/include/stdlib.h:339:20: note: insert '_Nonnull' if the pointer should never be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nonnull 
/usr/local/include/stdlib.h:339:64: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
/usr/local/include/stdlib.h:339:64: note: insert '_Nullable' if the pointer may be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nullable
/usr/local/include/stdlib.h:339:64: note: insert '_Nonnull' if the pointer should never be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nonnull
/usr/local/include/stdlib.h:340:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                           ^
/usr/local/include/stdlib.h:340:37: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                           ^
                                            _Nullable
/usr/local/include/stdlib.h:340:37: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                           ^
                                            _Nonnull
/usr/local/include/stdlib.h:340:51: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                         ^
/usr/local/include/stdlib.h:340:51: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                         ^
                                                          _Nullable
/usr/local/include/stdlib.h:340:51: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                         ^
                                                          _Nonnull
/usr/local/include/stdlib.h:340:65: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                                       ^
/usr/local/include/stdlib.h:340:65: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                                       ^
                                                                        _Nullable
/usr/local/include/stdlib.h:340:65: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                                       ^
                                                                        _Nonnull
/usr/local/include/stdlib.h:341:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                       ^
/usr/local/include/stdlib.h:341:36: note: insert '_Nullable' if the pointer may be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                       ^
                                        _Nullable
/usr/local/include/stdlib.h:341:36: note: insert '_Nonnull' if the pointer should never be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                       ^
                                        _Nonnull
/usr/local/include/stdlib.h:341:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
/usr/local/include/stdlib.h:341:37: note: insert '_Nullable' if the pointer may be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                          _Nullable 
/usr/local/include/stdlib.h:341:37: note: insert '_Nonnull' if the pointer should never be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                          _Nonnull 
/usr/local/include/stdlib.h:341:77: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                ^
/usr/local/include/stdlib.h:341:77: note: insert '_Nullable' if the pointer may be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                ^
                                                                                  _Nullable 
/usr/local/include/stdlib.h:341:77: note: insert '_Nonnull' if the pointer should never be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                ^
                                                                                  _Nonnull 
/usr/local/include/stdlib.h:343:24: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int     rpmatch(const char *)
                           ^
/usr/local/include/stdlib.h:343:24: note: insert '_Nullable' if the pointer may be null
int     rpmatch(const char *)
                           ^
                            _Nullable
/usr/local/include/stdlib.h:343:24: note: insert '_Nonnull' if the pointer should never be null
int     rpmatch(const char *)
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:345:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
/usr/local/include/stdlib.h:345:37: note: insert '_Nullable' if the pointer may be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                         _Nullable
/usr/local/include/stdlib.h:345:37: note: insert '_Nonnull' if the pointer should never be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                         _Nonnull
/usr/local/include/stdlib.h:345:38: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                         ^
/usr/local/include/stdlib.h:345:38: note: insert '_Nullable' if the pointer may be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                         ^
                                           _Nullable 
/usr/local/include/stdlib.h:345:38: note: insert '_Nonnull' if the pointer should never be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                         ^
                                           _Nonnull 
/usr/local/include/stdlib.h:345:78: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                 ^
/usr/local/include/stdlib.h:345:78: note: insert '_Nullable' if the pointer may be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                 ^
                                                                                   _Nullable 
/usr/local/include/stdlib.h:345:78: note: insert '_Nonnull' if the pointer should never be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                 ^
                                                                                   _Nonnull 
/usr/local/include/stdlib.h:349:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
                       ^
/usr/local/include/stdlib.h:349:21: note: insert '_Nullable' if the pointer may be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
                       ^
                         _Nullable 
/usr/local/include/stdlib.h:349:21: note: insert '_Nonnull' if the pointer should never be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
                       ^
                         _Nonnull 
/usr/local/include/stdlib.h:349:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
        ^
/usr/local/include/stdlib.h:349:6: note: insert '_Nullable' if the pointer may be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
        ^
          _Nullable 
/usr/local/include/stdlib.h:349:6: note: insert '_Nonnull' if the pointer should never be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:351:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                            ^
/usr/local/include/stdlib.h:351:22: note: insert '_Nullable' if the pointer may be null
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                            ^
                              _Nullable 
/usr/local/include/stdlib.h:351:22: note: insert '_Nonnull' if the pointer should never be null
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                            ^
                              _Nonnull 
/usr/local/include/stdlib.h:351:84: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                                                                                          ^
/usr/local/include/stdlib.h:351:84: note: insert '_Nullable' if the pointer may be null
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                                                                                          ^
                                                                                           _Nullable
/usr/local/include/stdlib.h:351:84: note: insert '_Nonnull' if the pointer should never be null
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                                                                                          ^
                                                                                           _Nonnull
/usr/local/include/stdlib.h:351:85: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                                                                                           ^
/usr/local/include/stdlib.h:351:85: note: insert '_Nullable' if the pointer may be null
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                                                                                           ^
                                                                                             _Nullable 
/usr/local/include/stdlib.h:351:85: note: insert '_Nonnull' if the pointer should never be null
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                                                                                           ^
                                                                                             _Nonnull 
/usr/local/include/stdlib.h:355:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoq(const char *__str, char **__endptr, int __base);
                           ^
/usr/local/include/stdlib.h:355:21: note: insert '_Nullable' if the pointer may be null
         strtoq(const char *__str, char **__endptr, int __base);
                           ^
                             _Nullable 
/usr/local/include/stdlib.h:355:21: note: insert '_Nonnull' if the pointer should never be null
         strtoq(const char *__str, char **__endptr, int __base);
                           ^
                             _Nonnull 
/usr/local/include/stdlib.h:355:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoq(const char *__str, char **__endptr, int __base);
                                        ^
/usr/local/include/stdlib.h:355:34: note: insert '_Nullable' if the pointer may be null
         strtoq(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nullable
/usr/local/include/stdlib.h:355:34: note: insert '_Nonnull' if the pointer should never be null
         strtoq(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nonnull
/usr/local/include/stdlib.h:355:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoq(const char *__str, char **__endptr, int __base);
                                         ^
/usr/local/include/stdlib.h:355:35: note: insert '_Nullable' if the pointer may be null
         strtoq(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nullable 
/usr/local/include/stdlib.h:355:35: note: insert '_Nonnull' if the pointer should never be null
         strtoq(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nonnull 
/usr/local/include/stdlib.h:357:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtouq(const char *__str, char **__endptr, int __base);
                            ^
/usr/local/include/stdlib.h:357:22: note: insert '_Nullable' if the pointer may be null
         strtouq(const char *__str, char **__endptr, int __base);
                            ^
                              _Nullable 
/usr/local/include/stdlib.h:357:22: note: insert '_Nonnull' if the pointer should never be null
         strtouq(const char *__str, char **__endptr, int __base);
                            ^
                              _Nonnull 
/usr/local/include/stdlib.h:357:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtouq(const char *__str, char **__endptr, int __base);
                                         ^
/usr/local/include/stdlib.h:357:35: note: insert '_Nullable' if the pointer may be null
         strtouq(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nullable
/usr/local/include/stdlib.h:357:35: note: insert '_Nonnull' if the pointer should never be null
         strtouq(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nonnull
/usr/local/include/stdlib.h:357:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtouq(const char *__str, char **__endptr, int __base);
                                          ^
/usr/local/include/stdlib.h:357:36: note: insert '_Nullable' if the pointer may be null
         strtouq(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nullable 
/usr/local/include/stdlib.h:357:36: note: insert '_Nonnull' if the pointer should never be null
         strtouq(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nonnull 
/usr/local/include/stdlib.h:359:13: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
extern char *suboptarg;         /* getsubopt(3) external variable */
            ^
/usr/local/include/stdlib.h:359:13: note: insert '_Nullable' if the pointer may be null
extern char *suboptarg;         /* getsubopt(3) external variable */
            ^
              _Nullable 
/usr/local/include/stdlib.h:359:13: note: insert '_Nonnull' if the pointer should never be null
extern char *suboptarg;         /* getsubopt(3) external variable */
            ^
              _Nonnull 
193 warnings generated.
checked program was:
/* begin */
1: #include "ruby.h"
2: 
3: #include <mysql.h>
4: 
5: /*top*/
6: typedef int conftest_type;
7: conftest_type conftestval = (int)MYSQL_ENABLE_CLEARTEXT_PLUGIN;
/* end */

--------------------

have_const: checking for SERVER_QUERY_NO_GOOD_INDEX_USED in mysql.h... -------------------- yes

"gcc -I/Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/x86_64-darwin19 -I/Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/backward -I/Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0 -I. -I/usr/local/opt/mysql-client/include/mysql  -I/usr/local/opt/libyaml/include -I/usr/local/opt/libksba/include -I/usr/local/opt/readline/include -I/usr/local/opt/zlib/include -I/usr/local/opt/openssl@1.1/include -D_XOPEN_SOURCE -D_DARWIN_C_SOURCE -D_DARWIN_UNLIMITED_SELECT -D_REENTRANT   -O3 -ggdb3 -Wall -Wextra -Wdeprecated-declarations -Wdivision-by-zero -Wimplicit-function-declaration -Wimplicit-int -Wpointer-arith -Wshorten-64-to-32 -Wwrite-strings -Wmissing-noreturn -Wno-constant-logical-operand -Wno-long-long -Wno-missing-field-initializers -Wno-overlength-strings -Wno-parentheses-equality -Wno-self-assign -Wno-tautological-compare -Wno-unused-parameter -Wno-unused-value -Wunused-variable -Wextra-tokens  -fno-common -pipe -DFULL_SSL_MODE_SUPPORT   -c conftest.c"
In file included from conftest.c:1:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby.h:33:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/ruby.h:29:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/defines.h:126:
In file included from /usr/local/include/stdio.h:64:
/usr/local/include/_stdio.h:93:16: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        unsigned char   *_base;
                        ^
/usr/local/include/_stdio.h:93:16: note: insert '_Nullable' if the pointer may be null
        unsigned char   *_base;
                        ^
                          _Nullable 
/usr/local/include/_stdio.h:93:16: note: insert '_Nonnull' if the pointer should never be null
        unsigned char   *_base;
                        ^
                          _Nonnull 
/usr/local/include/_stdio.h:138:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
/usr/local/include/_stdio.h:138:32: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
                                           _Nullable
/usr/local/include/_stdio.h:138:32: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
                                           _Nonnull
/usr/local/include/_stdio.h:138:40: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
/usr/local/include/_stdio.h:138:40: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
                                                   _Nullable
/usr/local/include/_stdio.h:138:40: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
                                                   _Nonnull
/usr/local/include/_stdio.h:139:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
/usr/local/include/_stdio.h:139:35: note: insert '_Nullable' if the pointer may be null
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
                                           _Nullable
/usr/local/include/_stdio.h:139:35: note: insert '_Nonnull' if the pointer should never be null
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
                                           _Nonnull
/usr/local/include/_stdio.h:140:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
/usr/local/include/_stdio.h:140:32: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
                                           _Nullable
/usr/local/include/_stdio.h:140:32: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
                                           _Nonnull
/usr/local/include/_stdio.h:140:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
/usr/local/include/_stdio.h:140:46: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
                                                         _Nullable
/usr/local/include/_stdio.h:140:46: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
                                                         _Nonnull
/usr/local/include/_stdio.h:144:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
/usr/local/include/_stdio.h:144:18: note: insert '_Nullable' if the pointer may be null
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
                          _Nullable 
/usr/local/include/_stdio.h:144:18: note: insert '_Nonnull' if the pointer should never be null
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
                          _Nonnull 
In file included from conftest.c:1:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby.h:33:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/ruby.h:29:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/defines.h:126:
/usr/local/include/stdio.h:67:13: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
extern FILE *__stdinp;
            ^
/usr/local/include/stdio.h:67:13: note: insert '_Nullable' if the pointer may be null
extern FILE *__stdinp;
            ^
              _Nullable 
/usr/local/include/stdio.h:67:13: note: insert '_Nonnull' if the pointer should never be null
extern FILE *__stdinp;
            ^
              _Nonnull 
/usr/local/include/stdio.h:386:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 int (* _Nullable)(void *, const char *, int),
                                        ^
/usr/local/include/stdio.h:386:41: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *, const char *, int),
                                        ^
                                         _Nullable
/usr/local/include/stdio.h:386:41: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *, const char *, int),
                                        ^
                                         _Nonnull
/usr/local/include/stdio.h:386:55: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
/usr/local/include/stdio.h:386:55: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
                                                       _Nullable
/usr/local/include/stdio.h:386:55: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
                                                       _Nonnull
/usr/local/include/stdio.h:387:44: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
/usr/local/include/stdio.h:387:44: note: insert '_Nullable' if the pointer may be null
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
                                            _Nullable
/usr/local/include/stdio.h:387:44: note: insert '_Nonnull' if the pointer should never be null
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
                                            _Nonnull
/usr/local/include/stdio.h:388:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 int (* _Nullable)(void *));
                                        ^
/usr/local/include/stdio.h:388:41: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *));
                                        ^
                                         _Nullable
/usr/local/include/stdio.h:388:41: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *));
                                        ^
                                         _Nonnull
/usr/local/include/stdio.h:384:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
FILE    *funopen(const void *,
        ^
/usr/local/include/stdio.h:384:6: note: insert '_Nullable' if the pointer may be null
FILE    *funopen(const void *,
        ^
          _Nullable 
/usr/local/include/stdio.h:384:6: note: insert '_Nonnull' if the pointer should never be null
FILE    *funopen(const void *,
        ^
          _Nonnull 
In file included from conftest.c:1:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby.h:33:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/ruby.h:29:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/defines.h:134:
/usr/local/include/stdlib.h:134:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   atof(const char *);
                         ^
/usr/local/include/stdlib.h:134:25: note: insert '_Nullable' if the pointer may be null
double   atof(const char *);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:134:25: note: insert '_Nonnull' if the pointer should never be null
double   atof(const char *);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:135:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      atoi(const char *);
                         ^
/usr/local/include/stdlib.h:135:22: note: insert '_Nullable' if the pointer may be null
int      atoi(const char *);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:135:22: note: insert '_Nonnull' if the pointer should never be null
int      atoi(const char *);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:136:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     atol(const char *);
                         ^
/usr/local/include/stdlib.h:136:23: note: insert '_Nullable' if the pointer may be null
long     atol(const char *);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:136:23: note: insert '_Nonnull' if the pointer should never be null
long     atol(const char *);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:139:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         atoll(const char *);
                          ^
/usr/local/include/stdlib.h:139:20: note: insert '_Nullable' if the pointer may be null
         atoll(const char *);
                          ^
                           _Nullable
/usr/local/include/stdlib.h:139:20: note: insert '_Nonnull' if the pointer should never be null
         atoll(const char *);
                          ^
                           _Nonnull
/usr/local/include/stdlib.h:141:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                            ^
/usr/local/include/stdlib.h:141:26: note: insert '_Nullable' if the pointer may be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                            ^
                              _Nullable 
/usr/local/include/stdlib.h:141:26: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                            ^
                              _Nonnull 
/usr/local/include/stdlib.h:141:45: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                                               ^
/usr/local/include/stdlib.h:141:45: note: insert '_Nullable' if the pointer may be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                                               ^
                                                 _Nullable 
/usr/local/include/stdlib.h:141:45: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                                               ^
                                                 _Nonnull 
/usr/local/include/stdlib.h:142:59: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                 ^
/usr/local/include/stdlib.h:142:59: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                 ^
                                                                  _Nullable
/usr/local/include/stdlib.h:142:59: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                 ^
                                                                  _Nonnull
/usr/local/include/stdlib.h:142:73: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                               ^
/usr/local/include/stdlib.h:142:73: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                               ^
                                                                                _Nullable
/usr/local/include/stdlib.h:142:73: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                               ^
                                                                                _Nonnull
/usr/local/include/stdlib.h:141:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch(const void *__key, const void *__base, size_t __nel,
        ^
/usr/local/include/stdlib.h:141:6: note: insert '_Nullable' if the pointer may be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
        ^
          _Nullable 
/usr/local/include/stdlib.h:141:6: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
        ^
          _Nonnull 
/usr/local/include/stdlib.h:147:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getenv(const char *);
                           ^
/usr/local/include/stdlib.h:147:25: note: insert '_Nullable' if the pointer may be null
char    *getenv(const char *);
                           ^
                            _Nullable
/usr/local/include/stdlib.h:147:25: note: insert '_Nonnull' if the pointer should never be null
char    *getenv(const char *);
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:147:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getenv(const char *);
        ^
/usr/local/include/stdlib.h:147:6: note: insert '_Nullable' if the pointer may be null
char    *getenv(const char *);
        ^
          _Nullable 
/usr/local/include/stdlib.h:147:6: note: insert '_Nonnull' if the pointer should never be null
char    *getenv(const char *);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:156:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mblen(const char *__s, size_t __n);
                          ^
/usr/local/include/stdlib.h:156:23: note: insert '_Nullable' if the pointer may be null
int      mblen(const char *__s, size_t __n);
                          ^
                            _Nullable 
/usr/local/include/stdlib.h:156:23: note: insert '_Nonnull' if the pointer should never be null
int      mblen(const char *__s, size_t __n);
                          ^
                            _Nonnull 
/usr/local/include/stdlib.h:157:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                          ^
/usr/local/include/stdlib.h:157:26: note: insert '_Nullable' if the pointer may be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                          ^
                            _Nullable
/usr/local/include/stdlib.h:157:26: note: insert '_Nonnull' if the pointer should never be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                          ^
                            _Nonnull
/usr/local/include/stdlib.h:157:52: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                                                    ^
/usr/local/include/stdlib.h:157:52: note: insert '_Nullable' if the pointer may be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                                                    ^
                                                      _Nullable
/usr/local/include/stdlib.h:157:52: note: insert '_Nonnull' if the pointer should never be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                                                    ^
                                                      _Nonnull
/usr/local/include/stdlib.h:158:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                        ^
/usr/local/include/stdlib.h:158:21: note: insert '_Nullable' if the pointer may be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                        ^
                          _Nullable
/usr/local/include/stdlib.h:158:21: note: insert '_Nonnull' if the pointer should never be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                        ^
                          _Nonnull
/usr/local/include/stdlib.h:158:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                                                 ^
/usr/local/include/stdlib.h:158:46: note: insert '_Nullable' if the pointer may be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                                                 ^
                                                   _Nullable
/usr/local/include/stdlib.h:158:46: note: insert '_Nonnull' if the pointer should never be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                                                 ^
                                                   _Nonnull
/usr/local/include/stdlib.h:160:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort(void *__base, size_t __nel, size_t __width,
                    ^
/usr/local/include/stdlib.h:160:18: note: insert '_Nullable' if the pointer may be null
void     qsort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nullable 
/usr/local/include/stdlib.h:160:18: note: insert '_Nonnull' if the pointer should never be null
void     qsort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nonnull 
/usr/local/include/stdlib.h:161:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
/usr/local/include/stdlib.h:161:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:161:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:161:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
/usr/local/include/stdlib.h:161:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:161:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:165:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                           ^
/usr/local/include/stdlib.h:165:27: note: insert '_Nullable' if the pointer may be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                           ^
                            _Nullable
/usr/local/include/stdlib.h:165:27: note: insert '_Nonnull' if the pointer should never be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:165:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                   ^
/usr/local/include/stdlib.h:165:35: note: insert '_Nullable' if the pointer may be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                   ^
                                    _Nullable
/usr/local/include/stdlib.h:165:35: note: insert '_Nonnull' if the pointer should never be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                   ^
                                    _Nonnull
/usr/local/include/stdlib.h:165:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                    ^
/usr/local/include/stdlib.h:165:36: note: insert '_Nullable' if the pointer may be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                    ^
                                     _Nullable
/usr/local/include/stdlib.h:165:36: note: insert '_Nonnull' if the pointer should never be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                    ^
                                     _Nonnull
/usr/local/include/stdlib.h:166:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                           ^
/usr/local/include/stdlib.h:166:26: note: insert '_Nullable' if the pointer may be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                           ^
                            _Nullable
/usr/local/include/stdlib.h:166:26: note: insert '_Nonnull' if the pointer should never be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:166:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                   ^
/usr/local/include/stdlib.h:166:34: note: insert '_Nullable' if the pointer may be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                   ^
                                    _Nullable
/usr/local/include/stdlib.h:166:34: note: insert '_Nonnull' if the pointer should never be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                   ^
                                    _Nonnull
/usr/local/include/stdlib.h:166:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                    ^
/usr/local/include/stdlib.h:166:35: note: insert '_Nullable' if the pointer may be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                    ^
                                     _Nullable
/usr/local/include/stdlib.h:166:35: note: insert '_Nonnull' if the pointer should never be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                    ^
                                     _Nonnull
/usr/local/include/stdlib.h:167:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     strtol(const char *__str, char **__endptr, int __base);
                           ^
/usr/local/include/stdlib.h:167:25: note: insert '_Nullable' if the pointer may be null
long     strtol(const char *__str, char **__endptr, int __base);
                           ^
                             _Nullable 
/usr/local/include/stdlib.h:167:25: note: insert '_Nonnull' if the pointer should never be null
long     strtol(const char *__str, char **__endptr, int __base);
                           ^
                             _Nonnull 
/usr/local/include/stdlib.h:167:38: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     strtol(const char *__str, char **__endptr, int __base);
                                        ^
/usr/local/include/stdlib.h:167:38: note: insert '_Nullable' if the pointer may be null
long     strtol(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nullable
/usr/local/include/stdlib.h:167:38: note: insert '_Nonnull' if the pointer should never be null
long     strtol(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nonnull
/usr/local/include/stdlib.h:167:39: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     strtol(const char *__str, char **__endptr, int __base);
                                         ^
/usr/local/include/stdlib.h:167:39: note: insert '_Nullable' if the pointer may be null
long     strtol(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nullable 
/usr/local/include/stdlib.h:167:39: note: insert '_Nonnull' if the pointer should never be null
long     strtol(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nonnull 
/usr/local/include/stdlib.h:169:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtold(const char *, char **);
                            ^
/usr/local/include/stdlib.h:169:22: note: insert '_Nullable' if the pointer may be null
         strtold(const char *, char **);
                            ^
                             _Nullable
/usr/local/include/stdlib.h:169:22: note: insert '_Nonnull' if the pointer should never be null
         strtold(const char *, char **);
                            ^
                             _Nonnull
/usr/local/include/stdlib.h:169:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtold(const char *, char **);
                                    ^
/usr/local/include/stdlib.h:169:30: note: insert '_Nullable' if the pointer may be null
         strtold(const char *, char **);
                                    ^
                                     _Nullable
/usr/local/include/stdlib.h:169:30: note: insert '_Nonnull' if the pointer should never be null
         strtold(const char *, char **);
                                    ^
                                     _Nonnull
/usr/local/include/stdlib.h:169:31: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtold(const char *, char **);
                                     ^
/usr/local/include/stdlib.h:169:31: note: insert '_Nullable' if the pointer may be null
         strtold(const char *, char **);
                                     ^
                                      _Nullable
/usr/local/include/stdlib.h:169:31: note: insert '_Nonnull' if the pointer should never be null
         strtold(const char *, char **);
                                     ^
                                      _Nonnull
/usr/local/include/stdlib.h:172:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoll(const char *__str, char **__endptr, int __base);
                            ^
/usr/local/include/stdlib.h:172:22: note: insert '_Nullable' if the pointer may be null
         strtoll(const char *__str, char **__endptr, int __base);
                            ^
                              _Nullable 
/usr/local/include/stdlib.h:172:22: note: insert '_Nonnull' if the pointer should never be null
         strtoll(const char *__str, char **__endptr, int __base);
                            ^
                              _Nonnull 
/usr/local/include/stdlib.h:172:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoll(const char *__str, char **__endptr, int __base);
                                         ^
/usr/local/include/stdlib.h:172:35: note: insert '_Nullable' if the pointer may be null
         strtoll(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nullable
/usr/local/include/stdlib.h:172:35: note: insert '_Nonnull' if the pointer should never be null
         strtoll(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nonnull
/usr/local/include/stdlib.h:172:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoll(const char *__str, char **__endptr, int __base);
                                          ^
/usr/local/include/stdlib.h:172:36: note: insert '_Nullable' if the pointer may be null
         strtoll(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nullable 
/usr/local/include/stdlib.h:172:36: note: insert '_Nonnull' if the pointer should never be null
         strtoll(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nonnull 
/usr/local/include/stdlib.h:175:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoul(const char *__str, char **__endptr, int __base);
                            ^
/usr/local/include/stdlib.h:175:22: note: insert '_Nullable' if the pointer may be null
         strtoul(const char *__str, char **__endptr, int __base);
                            ^
                              _Nullable 
/usr/local/include/stdlib.h:175:22: note: insert '_Nonnull' if the pointer should never be null
         strtoul(const char *__str, char **__endptr, int __base);
                            ^
                              _Nonnull 
/usr/local/include/stdlib.h:175:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoul(const char *__str, char **__endptr, int __base);
                                         ^
/usr/local/include/stdlib.h:175:35: note: insert '_Nullable' if the pointer may be null
         strtoul(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nullable
/usr/local/include/stdlib.h:175:35: note: insert '_Nonnull' if the pointer should never be null
         strtoul(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nonnull
/usr/local/include/stdlib.h:175:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoul(const char *__str, char **__endptr, int __base);
                                          ^
/usr/local/include/stdlib.h:175:36: note: insert '_Nullable' if the pointer may be null
         strtoul(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nullable 
/usr/local/include/stdlib.h:175:36: note: insert '_Nonnull' if the pointer should never be null
         strtoul(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nonnull 
/usr/local/include/stdlib.h:178:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoull(const char *__str, char **__endptr, int __base);
                             ^
/usr/local/include/stdlib.h:178:23: note: insert '_Nullable' if the pointer may be null
         strtoull(const char *__str, char **__endptr, int __base);
                             ^
                               _Nullable 
/usr/local/include/stdlib.h:178:23: note: insert '_Nonnull' if the pointer should never be null
         strtoull(const char *__str, char **__endptr, int __base);
                             ^
                               _Nonnull 
/usr/local/include/stdlib.h:178:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoull(const char *__str, char **__endptr, int __base);
                                          ^
/usr/local/include/stdlib.h:178:36: note: insert '_Nullable' if the pointer may be null
         strtoull(const char *__str, char **__endptr, int __base);
                                          ^
                                           _Nullable
/usr/local/include/stdlib.h:178:36: note: insert '_Nonnull' if the pointer should never be null
         strtoull(const char *__str, char **__endptr, int __base);
                                          ^
                                           _Nonnull
/usr/local/include/stdlib.h:178:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoull(const char *__str, char **__endptr, int __base);
                                           ^
/usr/local/include/stdlib.h:178:37: note: insert '_Nullable' if the pointer may be null
         strtoull(const char *__str, char **__endptr, int __base);
                                           ^
                                             _Nullable 
/usr/local/include/stdlib.h:178:37: note: insert '_Nonnull' if the pointer should never be null
         strtoull(const char *__str, char **__endptr, int __base);
                                           ^
                                             _Nonnull 
/usr/local/include/stdlib.h:190:24: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      system(const char *) __DARWIN_ALIAS_C(system);
                           ^
/usr/local/include/stdlib.h:190:24: note: insert '_Nullable' if the pointer may be null
int      system(const char *) __DARWIN_ALIAS_C(system);
                           ^
                            _Nullable
/usr/local/include/stdlib.h:190:24: note: insert '_Nonnull' if the pointer should never be null
int      system(const char *) __DARWIN_ALIAS_C(system);
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:194:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                       ^
/usr/local/include/stdlib.h:194:23: note: insert '_Nullable' if the pointer may be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                       ^
                         _Nullable
/usr/local/include/stdlib.h:194:23: note: insert '_Nonnull' if the pointer should never be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                       ^
                         _Nonnull
/usr/local/include/stdlib.h:194:51: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                                                   ^
/usr/local/include/stdlib.h:194:51: note: insert '_Nullable' if the pointer may be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                                                   ^
                                                     _Nullable
/usr/local/include/stdlib.h:194:51: note: insert '_Nonnull' if the pointer should never be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                                                   ^
                                                     _Nonnull
/usr/local/include/stdlib.h:195:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      wctomb(char *, wchar_t);
                     ^
/usr/local/include/stdlib.h:195:18: note: insert '_Nullable' if the pointer may be null
int      wctomb(char *, wchar_t);
                     ^
                      _Nullable
/usr/local/include/stdlib.h:195:18: note: insert '_Nonnull' if the pointer should never be null
int      wctomb(char *, wchar_t);
                     ^
                      _Nonnull
/usr/local/include/stdlib.h:199:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     a64l(const char *);
                         ^
/usr/local/include/stdlib.h:199:23: note: insert '_Nullable' if the pointer may be null
long     a64l(const char *);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:199:23: note: insert '_Nonnull' if the pointer should never be null
long     a64l(const char *);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:201:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
/usr/local/include/stdlib.h:201:29: note: insert '_Nullable' if the pointer may be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nullable 
/usr/local/include/stdlib.h:201:29: note: insert '_Nonnull' if the pointer should never be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nonnull 
/usr/local/include/stdlib.h:201:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
/usr/local/include/stdlib.h:201:46: note: insert '_Nullable' if the pointer may be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nullable 
/usr/local/include/stdlib.h:201:46: note: insert '_Nonnull' if the pointer should never be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nonnull 
/usr/local/include/stdlib.h:201:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
/usr/local/include/stdlib.h:201:6: note: insert '_Nullable' if the pointer may be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nullable 
/usr/local/include/stdlib.h:201:6: note: insert '_Nonnull' if the pointer should never be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nonnull 
/usr/local/include/stdlib.h:202:31: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
double   erand48(unsigned short[3]);
                               ^
/usr/local/include/stdlib.h:202:31: note: insert '_Nullable' if the array parameter may be null
double   erand48(unsigned short[3]);
                               ^
                                _Nullable 
/usr/local/include/stdlib.h:202:31: note: insert '_Nonnull' if the array parameter should never be null
double   erand48(unsigned short[3]);
                               ^
                                _Nonnull 
/usr/local/include/stdlib.h:203:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
/usr/local/include/stdlib.h:203:29: note: insert '_Nullable' if the pointer may be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nullable 
/usr/local/include/stdlib.h:203:29: note: insert '_Nonnull' if the pointer should never be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nonnull 
/usr/local/include/stdlib.h:203:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
/usr/local/include/stdlib.h:203:46: note: insert '_Nullable' if the pointer may be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nullable 
/usr/local/include/stdlib.h:203:46: note: insert '_Nonnull' if the pointer should never be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nonnull 
/usr/local/include/stdlib.h:203:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
/usr/local/include/stdlib.h:203:6: note: insert '_Nullable' if the pointer may be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nullable 
/usr/local/include/stdlib.h:203:6: note: insert '_Nonnull' if the pointer should never be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nonnull 
/usr/local/include/stdlib.h:204:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *gcvt(double, int, char *); /* LEGACY */
                                ^
/usr/local/include/stdlib.h:204:30: note: insert '_Nullable' if the pointer may be null
char    *gcvt(double, int, char *); /* LEGACY */
                                ^
                                 _Nullable
/usr/local/include/stdlib.h:204:30: note: insert '_Nonnull' if the pointer should never be null
char    *gcvt(double, int, char *); /* LEGACY */
                                ^
                                 _Nonnull
/usr/local/include/stdlib.h:204:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *gcvt(double, int, char *); /* LEGACY */
        ^
/usr/local/include/stdlib.h:204:6: note: insert '_Nullable' if the pointer may be null
char    *gcvt(double, int, char *); /* LEGACY */
        ^
          _Nullable 
/usr/local/include/stdlib.h:204:6: note: insert '_Nonnull' if the pointer should never be null
char    *gcvt(double, int, char *); /* LEGACY */
        ^
          _Nonnull 
/usr/local/include/stdlib.h:205:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                        ^
/usr/local/include/stdlib.h:205:21: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                        ^
                         _Nullable
/usr/local/include/stdlib.h:205:21: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                        ^
                         _Nonnull
/usr/local/include/stdlib.h:205:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                         ^
/usr/local/include/stdlib.h:205:22: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:205:22: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:205:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                 ^
/usr/local/include/stdlib.h:205:30: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                 ^
                                   _Nullable
/usr/local/include/stdlib.h:205:30: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                 ^
                                   _Nonnull
/usr/local/include/stdlib.h:205:38: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                         ^
/usr/local/include/stdlib.h:205:38: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                         ^
                                          _Nullable
/usr/local/include/stdlib.h:205:38: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                         ^
                                          _Nonnull
/usr/local/include/stdlib.h:205:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                                 ^
/usr/local/include/stdlib.h:205:46: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:205:46: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:205:47: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                                  ^
/usr/local/include/stdlib.h:205:47: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                                  ^
                                                   _Nullable
/usr/local/include/stdlib.h:205:47: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                                  ^
                                                   _Nonnull
/usr/local/include/stdlib.h:208:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
                                  ^
/usr/local/include/stdlib.h:208:32: note: insert '_Nullable' if the pointer may be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
                                  ^
                                   _Nullable
/usr/local/include/stdlib.h:208:32: note: insert '_Nonnull' if the pointer should never be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
                                  ^
                                   _Nonnull
/usr/local/include/stdlib.h:208:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
        ^
/usr/local/include/stdlib.h:208:6: note: insert '_Nullable' if the pointer may be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
        ^
          _Nullable 
/usr/local/include/stdlib.h:208:6: note: insert '_Nonnull' if the pointer should never be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
        ^
          _Nonnull 
/usr/local/include/stdlib.h:212:29: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
long     jrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
/usr/local/include/stdlib.h:212:29: note: insert '_Nullable' if the array parameter may be null
long     jrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nullable 
/usr/local/include/stdlib.h:212:29: note: insert '_Nonnull' if the array parameter should never be null
long     jrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nonnull 
/usr/local/include/stdlib.h:213:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *l64a(long);
        ^
/usr/local/include/stdlib.h:213:6: note: insert '_Nullable' if the pointer may be null
char    *l64a(long);
        ^
          _Nullable 
/usr/local/include/stdlib.h:213:6: note: insert '_Nonnull' if the pointer should never be null
char    *l64a(long);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:214:29: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
void     lcong48(unsigned short[7]);
                               ^
/usr/local/include/stdlib.h:214:29: note: insert '_Nullable' if the array parameter may be null
void     lcong48(unsigned short[7]);
                               ^
                                _Nullable 
/usr/local/include/stdlib.h:214:29: note: insert '_Nonnull' if the array parameter should never be null
void     lcong48(unsigned short[7]);
                               ^
                                _Nonnull 
/usr/local/include/stdlib.h:216:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *mktemp(char *);
                     ^
/usr/local/include/stdlib.h:216:19: note: insert '_Nullable' if the pointer may be null
char    *mktemp(char *);
                     ^
                      _Nullable
/usr/local/include/stdlib.h:216:19: note: insert '_Nonnull' if the pointer should never be null
char    *mktemp(char *);
                     ^
                      _Nonnull
/usr/local/include/stdlib.h:216:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *mktemp(char *);
        ^
/usr/local/include/stdlib.h:216:6: note: insert '_Nullable' if the pointer may be null
char    *mktemp(char *);
        ^
          _Nullable 
/usr/local/include/stdlib.h:216:6: note: insert '_Nonnull' if the pointer should never be null
char    *mktemp(char *);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:217:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mkstemp(char *);
                      ^
/usr/local/include/stdlib.h:217:19: note: insert '_Nullable' if the pointer may be null
int      mkstemp(char *);
                      ^
                       _Nullable
/usr/local/include/stdlib.h:217:19: note: insert '_Nonnull' if the pointer should never be null
int      mkstemp(char *);
                      ^
                       _Nonnull
/usr/local/include/stdlib.h:219:29: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
long     nrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
/usr/local/include/stdlib.h:219:29: note: insert '_Nullable' if the array parameter may be null
long     nrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nullable 
/usr/local/include/stdlib.h:219:29: note: insert '_Nonnull' if the array parameter should never be null
long     nrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nonnull 
/usr/local/include/stdlib.h:221:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ptsname(int);
        ^
/usr/local/include/stdlib.h:221:6: note: insert '_Nullable' if the pointer may be null
char    *ptsname(int);
        ^
          _Nullable 
/usr/local/include/stdlib.h:221:6: note: insert '_Nonnull' if the pointer should never be null
char    *ptsname(int);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:224:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int ptsname_r(int fildes, char *buffer, size_t buflen) __API_AVAILABLE(macos(10.13.4), ios(11.3), tvos(11.3), watchos(4.3));
                               ^
/usr/local/include/stdlib.h:224:32: note: insert '_Nullable' if the pointer may be null
int ptsname_r(int fildes, char *buffer, size_t buflen) __API_AVAILABLE(macos(10.13.4), ios(11.3), tvos(11.3), watchos(4.3));
                               ^
                                 _Nullable 
/usr/local/include/stdlib.h:224:32: note: insert '_Nonnull' if the pointer should never be null
int ptsname_r(int fildes, char *buffer, size_t buflen) __API_AVAILABLE(macos(10.13.4), ios(11.3), tvos(11.3), watchos(4.3));
                               ^
                                 _Nonnull 
/usr/local/include/stdlib.h:227:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      putenv(char *) __DARWIN_ALIAS(putenv);
                     ^
/usr/local/include/stdlib.h:227:18: note: insert '_Nullable' if the pointer may be null
int      putenv(char *) __DARWIN_ALIAS(putenv);
                     ^
                      _Nullable
/usr/local/include/stdlib.h:227:18: note: insert '_Nonnull' if the pointer should never be null
int      putenv(char *) __DARWIN_ALIAS(putenv);
                     ^
                      _Nonnull
/usr/local/include/stdlib.h:229:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      rand_r(unsigned *) __swift_unavailable("Use arc4random instead.");
                         ^
/usr/local/include/stdlib.h:229:22: note: insert '_Nullable' if the pointer may be null
int      rand_r(unsigned *) __swift_unavailable("Use arc4random instead.");
                         ^
                          _Nullable
/usr/local/include/stdlib.h:229:22: note: insert '_Nonnull' if the pointer should never be null
int      rand_r(unsigned *) __swift_unavailable("Use arc4random instead.");
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:231:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                             ^
/usr/local/include/stdlib.h:231:27: note: insert '_Nullable' if the pointer may be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                             ^
                               _Nullable
/usr/local/include/stdlib.h:231:27: note: insert '_Nonnull' if the pointer should never be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                             ^
                               _Nonnull
/usr/local/include/stdlib.h:231:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                                                ^
/usr/local/include/stdlib.h:231:46: note: insert '_Nullable' if the pointer may be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                                                ^
                                                  _Nullable
/usr/local/include/stdlib.h:231:46: note: insert '_Nonnull' if the pointer should never be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                                                ^
                                                  _Nonnull
/usr/local/include/stdlib.h:231:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
        ^
/usr/local/include/stdlib.h:231:6: note: insert '_Nullable' if the pointer may be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
        ^
          _Nullable 
/usr/local/include/stdlib.h:231:6: note: insert '_Nonnull' if the pointer should never be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:236:24: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
        *seed48(unsigned short[3]);
                              ^
/usr/local/include/stdlib.h:236:24: note: insert '_Nullable' if the array parameter may be null
        *seed48(unsigned short[3]);
                              ^
                               _Nullable 
/usr/local/include/stdlib.h:236:24: note: insert '_Nonnull' if the array parameter should never be null
        *seed48(unsigned short[3]);
                              ^
                               _Nonnull 
/usr/local/include/stdlib.h:236:2: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        *seed48(unsigned short[3]);
        ^
/usr/local/include/stdlib.h:236:2: note: insert '_Nullable' if the pointer may be null
        *seed48(unsigned short[3]);
        ^
          _Nullable 
/usr/local/include/stdlib.h:236:2: note: insert '_Nonnull' if the pointer should never be null
        *seed48(unsigned short[3]);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:237:24: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                           ^
/usr/local/include/stdlib.h:237:24: note: insert '_Nullable' if the pointer may be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                           ^
                             _Nullable
/usr/local/include/stdlib.h:237:24: note: insert '_Nonnull' if the pointer should never be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                           ^
                             _Nonnull
/usr/local/include/stdlib.h:237:45: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                                                ^
/usr/local/include/stdlib.h:237:45: note: insert '_Nullable' if the pointer may be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                                                ^
                                                  _Nullable
/usr/local/include/stdlib.h:237:45: note: insert '_Nonnull' if the pointer should never be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                                                ^
                                                  _Nonnull
/usr/local/include/stdlib.h:239:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     setkey(const char *) __DARWIN_ALIAS(setkey);
                           ^
/usr/local/include/stdlib.h:239:25: note: insert '_Nullable' if the pointer may be null
void     setkey(const char *) __DARWIN_ALIAS(setkey);
                           ^
                            _Nullable
/usr/local/include/stdlib.h:239:25: note: insert '_Nonnull' if the pointer should never be null
void     setkey(const char *) __DARWIN_ALIAS(setkey);
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:243:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *setstate(const char *);
                             ^
/usr/local/include/stdlib.h:243:27: note: insert '_Nullable' if the pointer may be null
char    *setstate(const char *);
                             ^
                              _Nullable
/usr/local/include/stdlib.h:243:27: note: insert '_Nonnull' if the pointer should never be null
char    *setstate(const char *);
                             ^
                              _Nonnull
/usr/local/include/stdlib.h:243:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *setstate(const char *);
        ^
/usr/local/include/stdlib.h:243:6: note: insert '_Nullable' if the pointer may be null
char    *setstate(const char *);
        ^
          _Nullable 
/usr/local/include/stdlib.h:243:6: note: insert '_Nonnull' if the pointer should never be null
char    *setstate(const char *);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:252:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      unsetenv(const char *) __DARWIN_ALIAS(unsetenv);
                             ^
/usr/local/include/stdlib.h:252:26: note: insert '_Nullable' if the pointer may be null
int      unsetenv(const char *) __DARWIN_ALIAS(unsetenv);
                             ^
                              _Nullable
/usr/local/include/stdlib.h:252:26: note: insert '_Nonnull' if the pointer should never be null
int      unsetenv(const char *) __DARWIN_ALIAS(unsetenv);
                             ^
                              _Nonnull
/usr/local/include/stdlib.h:265:42: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     arc4random_addrandom(unsigned char * /*dat*/, int /*datlen*/)
                                            ^
/usr/local/include/stdlib.h:265:42: note: insert '_Nullable' if the pointer may be null
void     arc4random_addrandom(unsigned char * /*dat*/, int /*datlen*/)
                                            ^
                                              _Nullable
/usr/local/include/stdlib.h:265:42: note: insert '_Nonnull' if the pointer should never be null
void     arc4random_addrandom(unsigned char * /*dat*/, int /*datlen*/)
                                            ^
                                              _Nonnull
/usr/local/include/stdlib.h:270:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     arc4random_buf(void * __buf, size_t __nbytes) __OSX_AVAILABLE_STARTING(__MAC_10_7, __IPHONE_4_3);
                             ^
/usr/local/include/stdlib.h:270:27: note: insert '_Nullable' if the pointer may be null
void     arc4random_buf(void * __buf, size_t __nbytes) __OSX_AVAILABLE_STARTING(__MAC_10_7, __IPHONE_4_3);
                             ^
                               _Nullable
/usr/local/include/stdlib.h:270:27: note: insert '_Nonnull' if the pointer should never be null
void     arc4random_buf(void * __buf, size_t __nbytes) __OSX_AVAILABLE_STARTING(__MAC_10_7, __IPHONE_4_3);
                             ^
                               _Nonnull
/usr/local/include/stdlib.h:276:28: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                              ^
/usr/local/include/stdlib.h:276:28: note: insert '_Nullable' if the pointer may be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                              ^
                                _Nullable 
/usr/local/include/stdlib.h:276:28: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                              ^
                                _Nonnull 
/usr/local/include/stdlib.h:276:47: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                                                 ^
/usr/local/include/stdlib.h:276:47: note: insert '_Nullable' if the pointer may be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                                                 ^
                                                   _Nullable 
/usr/local/include/stdlib.h:276:47: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                                                 ^
                                                   _Nonnull 
/usr/local/include/stdlib.h:277:59: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                 ^
/usr/local/include/stdlib.h:277:59: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                 ^
                                                                  _Nullable
/usr/local/include/stdlib.h:277:59: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                 ^
                                                                  _Nonnull
/usr/local/include/stdlib.h:277:73: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                               ^
/usr/local/include/stdlib.h:277:73: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                               ^
                                                                                _Nullable
/usr/local/include/stdlib.h:277:73: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                               ^
                                                                                _Nonnull
/usr/local/include/stdlib.h:276:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
        ^
/usr/local/include/stdlib.h:276:6: note: insert '_Nullable' if the pointer may be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
        ^
          _Nullable 
/usr/local/include/stdlib.h:276:6: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
        ^
          _Nonnull 
/usr/local/include/stdlib.h:281:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *cgetcap(char *, const char *, int);
                      ^
/usr/local/include/stdlib.h:281:20: note: insert '_Nullable' if the pointer may be null
char    *cgetcap(char *, const char *, int);
                      ^
                       _Nullable
/usr/local/include/stdlib.h:281:20: note: insert '_Nonnull' if the pointer should never be null
char    *cgetcap(char *, const char *, int);
                      ^
                       _Nonnull
/usr/local/include/stdlib.h:281:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *cgetcap(char *, const char *, int);
                                    ^
/usr/local/include/stdlib.h:281:34: note: insert '_Nullable' if the pointer may be null
char    *cgetcap(char *, const char *, int);
                                    ^
                                     _Nullable
/usr/local/include/stdlib.h:281:34: note: insert '_Nonnull' if the pointer should never be null
char    *cgetcap(char *, const char *, int);
                                    ^
                                     _Nonnull
/usr/local/include/stdlib.h:281:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *cgetcap(char *, const char *, int);
        ^
/usr/local/include/stdlib.h:281:6: note: insert '_Nullable' if the pointer may be null
char    *cgetcap(char *, const char *, int);
        ^
          _Nullable 
/usr/local/include/stdlib.h:281:6: note: insert '_Nonnull' if the pointer should never be null
char    *cgetcap(char *, const char *, int);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:283:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                      ^
/usr/local/include/stdlib.h:283:19: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                      ^
                       _Nullable
/usr/local/include/stdlib.h:283:19: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                      ^
                       _Nonnull
/usr/local/include/stdlib.h:283:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                       ^
/usr/local/include/stdlib.h:283:20: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                       ^
                        _Nullable
/usr/local/include/stdlib.h:283:20: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                       ^
                        _Nonnull
/usr/local/include/stdlib.h:283:28: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                               ^
/usr/local/include/stdlib.h:283:28: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                               ^
                                _Nullable
/usr/local/include/stdlib.h:283:28: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                               ^
                                _Nonnull
/usr/local/include/stdlib.h:283:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                                ^
/usr/local/include/stdlib.h:283:29: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                                ^
                                 _Nullable
/usr/local/include/stdlib.h:283:29: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                                ^
                                 _Nonnull
/usr/local/include/stdlib.h:283:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                                              ^
/usr/local/include/stdlib.h:283:43: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                                              ^
                                               _Nullable
/usr/local/include/stdlib.h:283:43: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                                              ^
                                               _Nonnull
/usr/local/include/stdlib.h:284:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                        ^
/usr/local/include/stdlib.h:284:21: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                        ^
                         _Nullable
/usr/local/include/stdlib.h:284:21: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                        ^
                         _Nonnull
/usr/local/include/stdlib.h:284:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                         ^
/usr/local/include/stdlib.h:284:22: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:284:22: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:284:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                                 ^
/usr/local/include/stdlib.h:284:30: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                                 ^
                                  _Nullable
/usr/local/include/stdlib.h:284:30: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                                 ^
                                  _Nonnull
/usr/local/include/stdlib.h:284:31: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                                  ^
/usr/local/include/stdlib.h:284:31: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                                  ^
                                   _Nullable
/usr/local/include/stdlib.h:284:31: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                                  ^
                                   _Nonnull
/usr/local/include/stdlib.h:285:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetmatch(const char *, const char *);
                              ^
/usr/local/include/stdlib.h:285:27: note: insert '_Nullable' if the pointer may be null
int      cgetmatch(const char *, const char *);
                              ^
                               _Nullable
/usr/local/include/stdlib.h:285:27: note: insert '_Nonnull' if the pointer should never be null
int      cgetmatch(const char *, const char *);
                              ^
                               _Nonnull
/usr/local/include/stdlib.h:285:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetmatch(const char *, const char *);
                                            ^
/usr/local/include/stdlib.h:285:41: note: insert '_Nullable' if the pointer may be null
int      cgetmatch(const char *, const char *);
                                            ^
                                             _Nullable
/usr/local/include/stdlib.h:285:41: note: insert '_Nonnull' if the pointer should never be null
int      cgetmatch(const char *, const char *);
                                            ^
                                             _Nonnull
/usr/local/include/stdlib.h:286:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                       ^
/usr/local/include/stdlib.h:286:20: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                       ^
                        _Nullable
/usr/local/include/stdlib.h:286:20: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                       ^
                        _Nonnull
/usr/local/include/stdlib.h:286:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                        ^
/usr/local/include/stdlib.h:286:21: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                        ^
                         _Nullable
/usr/local/include/stdlib.h:286:21: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                        ^
                         _Nonnull
/usr/local/include/stdlib.h:286:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                                ^
/usr/local/include/stdlib.h:286:29: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                                ^
                                 _Nullable
/usr/local/include/stdlib.h:286:29: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                                ^
                                 _Nonnull
/usr/local/include/stdlib.h:286:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                                 ^
/usr/local/include/stdlib.h:286:30: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                                 ^
                                  _Nullable
/usr/local/include/stdlib.h:286:30: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                                 ^
                                  _Nonnull
/usr/local/include/stdlib.h:287:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnum(char *, const char *, long *);
                      ^
/usr/local/include/stdlib.h:287:19: note: insert '_Nullable' if the pointer may be null
int      cgetnum(char *, const char *, long *);
                      ^
                       _Nullable
/usr/local/include/stdlib.h:287:19: note: insert '_Nonnull' if the pointer should never be null
int      cgetnum(char *, const char *, long *);
                      ^
                       _Nonnull
/usr/local/include/stdlib.h:287:33: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnum(char *, const char *, long *);
                                    ^
/usr/local/include/stdlib.h:287:33: note: insert '_Nullable' if the pointer may be null
int      cgetnum(char *, const char *, long *);
                                    ^
                                     _Nullable
/usr/local/include/stdlib.h:287:33: note: insert '_Nonnull' if the pointer should never be null
int      cgetnum(char *, const char *, long *);
                                    ^
                                     _Nonnull
/usr/local/include/stdlib.h:287:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnum(char *, const char *, long *);
                                            ^
/usr/local/include/stdlib.h:287:41: note: insert '_Nullable' if the pointer may be null
int      cgetnum(char *, const char *, long *);
                                            ^
                                             _Nullable
/usr/local/include/stdlib.h:287:41: note: insert '_Nonnull' if the pointer should never be null
int      cgetnum(char *, const char *, long *);
                                            ^
                                             _Nonnull
/usr/local/include/stdlib.h:288:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetset(const char *);
                            ^
/usr/local/include/stdlib.h:288:25: note: insert '_Nullable' if the pointer may be null
int      cgetset(const char *);
                            ^
                             _Nullable
/usr/local/include/stdlib.h:288:25: note: insert '_Nonnull' if the pointer should never be null
int      cgetset(const char *);
                            ^
                             _Nonnull
/usr/local/include/stdlib.h:289:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                      ^
/usr/local/include/stdlib.h:289:19: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                      ^
                       _Nullable
/usr/local/include/stdlib.h:289:19: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                      ^
                       _Nonnull
/usr/local/include/stdlib.h:289:33: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                                    ^
/usr/local/include/stdlib.h:289:33: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                                    ^
                                     _Nullable
/usr/local/include/stdlib.h:289:33: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                                    ^
                                     _Nonnull
/usr/local/include/stdlib.h:289:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                                            ^
/usr/local/include/stdlib.h:289:41: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                                            ^
                                             _Nullable
/usr/local/include/stdlib.h:289:41: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                                            ^
                                             _Nonnull
/usr/local/include/stdlib.h:289:42: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                                             ^
/usr/local/include/stdlib.h:289:42: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                                             ^
                                              _Nullable
/usr/local/include/stdlib.h:289:42: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                                             ^
                                              _Nonnull
/usr/local/include/stdlib.h:290:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                       ^
/usr/local/include/stdlib.h:290:20: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                       ^
                        _Nullable
/usr/local/include/stdlib.h:290:20: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                       ^
                        _Nonnull
/usr/local/include/stdlib.h:290:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                                     ^
/usr/local/include/stdlib.h:290:34: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                                     ^
                                      _Nullable
/usr/local/include/stdlib.h:290:34: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                                     ^
                                      _Nonnull
/usr/local/include/stdlib.h:290:42: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                                             ^
/usr/local/include/stdlib.h:290:42: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                                             ^
                                              _Nullable
/usr/local/include/stdlib.h:290:42: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                                             ^
                                              _Nonnull
/usr/local/include/stdlib.h:290:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                                              ^
/usr/local/include/stdlib.h:290:43: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                                              ^
                                               _Nullable
/usr/local/include/stdlib.h:290:43: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                                              ^
                                               _Nonnull
/usr/local/include/stdlib.h:293:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *devname(dev_t, mode_t);
        ^
/usr/local/include/stdlib.h:293:6: note: insert '_Nullable' if the pointer may be null
char    *devname(dev_t, mode_t);
        ^
          _Nullable 
/usr/local/include/stdlib.h:293:6: note: insert '_Nonnull' if the pointer should never be null
char    *devname(dev_t, mode_t);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:294:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *devname_r(dev_t, mode_t, char *buf, int len);
                                       ^
/usr/local/include/stdlib.h:294:37: note: insert '_Nullable' if the pointer may be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
                                       ^
                                         _Nullable 
/usr/local/include/stdlib.h:294:37: note: insert '_Nonnull' if the pointer should never be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
                                       ^
                                         _Nonnull 
/usr/local/include/stdlib.h:294:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *devname_r(dev_t, mode_t, char *buf, int len);
        ^
/usr/local/include/stdlib.h:294:6: note: insert '_Nullable' if the pointer may be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
        ^
          _Nullable 
/usr/local/include/stdlib.h:294:6: note: insert '_Nonnull' if the pointer should never be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:295:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getbsize(int *, long *);
                      ^
/usr/local/include/stdlib.h:295:20: note: insert '_Nullable' if the pointer may be null
char    *getbsize(int *, long *);
                      ^
                       _Nullable
/usr/local/include/stdlib.h:295:20: note: insert '_Nonnull' if the pointer should never be null
char    *getbsize(int *, long *);
                      ^
                       _Nonnull
/usr/local/include/stdlib.h:295:28: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getbsize(int *, long *);
                              ^
/usr/local/include/stdlib.h:295:28: note: insert '_Nullable' if the pointer may be null
char    *getbsize(int *, long *);
                              ^
                               _Nullable
/usr/local/include/stdlib.h:295:28: note: insert '_Nonnull' if the pointer should never be null
char    *getbsize(int *, long *);
                              ^
                               _Nonnull
/usr/local/include/stdlib.h:295:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getbsize(int *, long *);
        ^
/usr/local/include/stdlib.h:295:6: note: insert '_Nullable' if the pointer may be null
char    *getbsize(int *, long *);
        ^
          _Nullable 
/usr/local/include/stdlib.h:295:6: note: insert '_Nonnull' if the pointer should never be null
char    *getbsize(int *, long *);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:296:24: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
int      getloadavg(double [], int);
                           ^
/usr/local/include/stdlib.h:296:24: note: insert '_Nullable' if the array parameter may be null
int      getloadavg(double [], int);
                           ^
                            _Nullable
/usr/local/include/stdlib.h:296:24: note: insert '_Nonnull' if the array parameter should never be null
int      getloadavg(double [], int);
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:298:2: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        *getprogname(void);
        ^
/usr/local/include/stdlib.h:298:2: note: insert '_Nullable' if the pointer may be null
        *getprogname(void);
        ^
          _Nullable 
/usr/local/include/stdlib.h:298:2: note: insert '_Nonnull' if the pointer should never be null
        *getprogname(void);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:299:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     setprogname(const char *);
                                ^
/usr/local/include/stdlib.h:299:30: note: insert '_Nullable' if the pointer may be null
void     setprogname(const char *);
                                ^
                                 _Nullable
/usr/local/include/stdlib.h:299:30: note: insert '_Nonnull' if the pointer should never be null
void     setprogname(const char *);
                                ^
                                 _Nonnull
/usr/local/include/stdlib.h:309:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      heapsort(void *__base, size_t __nel, size_t __width,
                       ^
/usr/local/include/stdlib.h:309:20: note: insert '_Nullable' if the pointer may be null
int      heapsort(void *__base, size_t __nel, size_t __width,
                       ^
                         _Nullable 
/usr/local/include/stdlib.h:309:20: note: insert '_Nonnull' if the pointer should never be null
int      heapsort(void *__base, size_t __nel, size_t __width,
                       ^
                         _Nonnull 
/usr/local/include/stdlib.h:310:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
/usr/local/include/stdlib.h:310:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:310:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:310:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
/usr/local/include/stdlib.h:310:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:310:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:312:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      heapsort_b(void *__base, size_t __nel, size_t __width,
                         ^
/usr/local/include/stdlib.h:312:22: note: insert '_Nullable' if the pointer may be null
int      heapsort_b(void *__base, size_t __nel, size_t __width,
                         ^
                           _Nullable 
/usr/local/include/stdlib.h:312:22: note: insert '_Nonnull' if the pointer should never be null
int      heapsort_b(void *__base, size_t __nel, size_t __width,
                         ^
                           _Nonnull 
/usr/local/include/stdlib.h:313:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
/usr/local/include/stdlib.h:313:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:313:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:313:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
/usr/local/include/stdlib.h:313:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:313:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:316:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mergesort(void *__base, size_t __nel, size_t __width,
                        ^
/usr/local/include/stdlib.h:316:21: note: insert '_Nullable' if the pointer may be null
int      mergesort(void *__base, size_t __nel, size_t __width,
                        ^
                          _Nullable 
/usr/local/include/stdlib.h:316:21: note: insert '_Nonnull' if the pointer should never be null
int      mergesort(void *__base, size_t __nel, size_t __width,
                        ^
                          _Nonnull 
/usr/local/include/stdlib.h:317:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
/usr/local/include/stdlib.h:317:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:317:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:317:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
/usr/local/include/stdlib.h:317:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:317:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:319:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mergesort_b(void *__base, size_t __nel, size_t __width,
                          ^
/usr/local/include/stdlib.h:319:23: note: insert '_Nullable' if the pointer may be null
int      mergesort_b(void *__base, size_t __nel, size_t __width,
                          ^
                            _Nullable 
/usr/local/include/stdlib.h:319:23: note: insert '_Nonnull' if the pointer should never be null
int      mergesort_b(void *__base, size_t __nel, size_t __width,
                          ^
                            _Nonnull 
/usr/local/include/stdlib.h:320:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
/usr/local/include/stdlib.h:320:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:320:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:320:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
/usr/local/include/stdlib.h:320:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:320:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:323:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort(void *__base, size_t __nel, size_t __width,
                    ^
/usr/local/include/stdlib.h:323:18: note: insert '_Nullable' if the pointer may be null
void     psort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nullable 
/usr/local/include/stdlib.h:323:18: note: insert '_Nonnull' if the pointer should never be null
void     psort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nonnull 
/usr/local/include/stdlib.h:324:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *))
                                                 ^
/usr/local/include/stdlib.h:324:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *))
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:324:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *))
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:324:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *))
                                                               ^
/usr/local/include/stdlib.h:324:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *))
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:324:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *))
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:327:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort_b(void *__base, size_t __nel, size_t __width,
                      ^
/usr/local/include/stdlib.h:327:20: note: insert '_Nullable' if the pointer may be null
void     psort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nullable 
/usr/local/include/stdlib.h:327:20: note: insert '_Nonnull' if the pointer should never be null
void     psort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nonnull 
/usr/local/include/stdlib.h:328:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
/usr/local/include/stdlib.h:328:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:328:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:328:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
/usr/local/include/stdlib.h:328:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:328:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:331:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
/usr/local/include/stdlib.h:331:20: note: insert '_Nullable' if the pointer may be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nullable 
/usr/local/include/stdlib.h:331:20: note: insert '_Nonnull' if the pointer should never be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nonnull 
/usr/local/include/stdlib.h:331:64: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
/usr/local/include/stdlib.h:331:64: note: insert '_Nullable' if the pointer may be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nullable
/usr/local/include/stdlib.h:331:64: note: insert '_Nonnull' if the pointer should never be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nonnull
/usr/local/include/stdlib.h:332:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                           ^
/usr/local/include/stdlib.h:332:37: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                           ^
                                            _Nullable
/usr/local/include/stdlib.h:332:37: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                           ^
                                            _Nonnull
/usr/local/include/stdlib.h:332:51: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                                         ^
/usr/local/include/stdlib.h:332:51: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                                         ^
                                                          _Nullable
/usr/local/include/stdlib.h:332:51: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                                         ^
                                                          _Nonnull
/usr/local/include/stdlib.h:332:65: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                                                       ^
/usr/local/include/stdlib.h:332:65: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                                                       ^
                                                                        _Nullable
/usr/local/include/stdlib.h:332:65: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                                                       ^
                                                                        _Nonnull
/usr/local/include/stdlib.h:335:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort_b(void *__base, size_t __nel, size_t __width,
                      ^
/usr/local/include/stdlib.h:335:20: note: insert '_Nullable' if the pointer may be null
void     qsort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nullable 
/usr/local/include/stdlib.h:335:20: note: insert '_Nonnull' if the pointer should never be null
void     qsort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nonnull 
/usr/local/include/stdlib.h:336:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
/usr/local/include/stdlib.h:336:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:336:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:336:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
/usr/local/include/stdlib.h:336:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:336:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:339:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
/usr/local/include/stdlib.h:339:20: note: insert '_Nullable' if the pointer may be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nullable 
/usr/local/include/stdlib.h:339:20: note: insert '_Nonnull' if the pointer should never be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nonnull 
/usr/local/include/stdlib.h:339:64: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
/usr/local/include/stdlib.h:339:64: note: insert '_Nullable' if the pointer may be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nullable
/usr/local/include/stdlib.h:339:64: note: insert '_Nonnull' if the pointer should never be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nonnull
/usr/local/include/stdlib.h:340:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                           ^
/usr/local/include/stdlib.h:340:37: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                           ^
                                            _Nullable
/usr/local/include/stdlib.h:340:37: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                           ^
                                            _Nonnull
/usr/local/include/stdlib.h:340:51: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                         ^
/usr/local/include/stdlib.h:340:51: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                         ^
                                                          _Nullable
/usr/local/include/stdlib.h:340:51: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                         ^
                                                          _Nonnull
/usr/local/include/stdlib.h:340:65: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                                       ^
/usr/local/include/stdlib.h:340:65: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                                       ^
                                                                        _Nullable
/usr/local/include/stdlib.h:340:65: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                                       ^
                                                                        _Nonnull
/usr/local/include/stdlib.h:341:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                       ^
/usr/local/include/stdlib.h:341:36: note: insert '_Nullable' if the pointer may be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                       ^
                                        _Nullable
/usr/local/include/stdlib.h:341:36: note: insert '_Nonnull' if the pointer should never be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                       ^
                                        _Nonnull
/usr/local/include/stdlib.h:341:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
/usr/local/include/stdlib.h:341:37: note: insert '_Nullable' if the pointer may be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                          _Nullable 
/usr/local/include/stdlib.h:341:37: note: insert '_Nonnull' if the pointer should never be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                          _Nonnull 
/usr/local/include/stdlib.h:341:77: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                ^
/usr/local/include/stdlib.h:341:77: note: insert '_Nullable' if the pointer may be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                ^
                                                                                  _Nullable 
/usr/local/include/stdlib.h:341:77: note: insert '_Nonnull' if the pointer should never be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                ^
                                                                                  _Nonnull 
/usr/local/include/stdlib.h:343:24: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int     rpmatch(const char *)
                           ^
/usr/local/include/stdlib.h:343:24: note: insert '_Nullable' if the pointer may be null
int     rpmatch(const char *)
                           ^
                            _Nullable
/usr/local/include/stdlib.h:343:24: note: insert '_Nonnull' if the pointer should never be null
int     rpmatch(const char *)
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:345:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
/usr/local/include/stdlib.h:345:37: note: insert '_Nullable' if the pointer may be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                         _Nullable
/usr/local/include/stdlib.h:345:37: note: insert '_Nonnull' if the pointer should never be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                         _Nonnull
/usr/local/include/stdlib.h:345:38: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                         ^
/usr/local/include/stdlib.h:345:38: note: insert '_Nullable' if the pointer may be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                         ^
                                           _Nullable 
/usr/local/include/stdlib.h:345:38: note: insert '_Nonnull' if the pointer should never be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                         ^
                                           _Nonnull 
/usr/local/include/stdlib.h:345:78: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                 ^
/usr/local/include/stdlib.h:345:78: note: insert '_Nullable' if the pointer may be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                 ^
                                                                                   _Nullable 
/usr/local/include/stdlib.h:345:78: note: insert '_Nonnull' if the pointer should never be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                 ^
                                                                                   _Nonnull 
/usr/local/include/stdlib.h:349:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
                       ^
/usr/local/include/stdlib.h:349:21: note: insert '_Nullable' if the pointer may be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
                       ^
                         _Nullable 
/usr/local/include/stdlib.h:349:21: note: insert '_Nonnull' if the pointer should never be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
                       ^
                         _Nonnull 
/usr/local/include/stdlib.h:349:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
        ^
/usr/local/include/stdlib.h:349:6: note: insert '_Nullable' if the pointer may be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
        ^
          _Nullable 
/usr/local/include/stdlib.h:349:6: note: insert '_Nonnull' if the pointer should never be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:351:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                            ^
/usr/local/include/stdlib.h:351:22: note: insert '_Nullable' if the pointer may be null
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                            ^
                              _Nullable 
/usr/local/include/stdlib.h:351:22: note: insert '_Nonnull' if the pointer should never be null
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                            ^
                              _Nonnull 
/usr/local/include/stdlib.h:351:84: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                                                                                          ^
/usr/local/include/stdlib.h:351:84: note: insert '_Nullable' if the pointer may be null
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                                                                                          ^
                                                                                           _Nullable
/usr/local/include/stdlib.h:351:84: note: insert '_Nonnull' if the pointer should never be null
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                                                                                          ^
                                                                                           _Nonnull
/usr/local/include/stdlib.h:351:85: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                                                                                           ^
/usr/local/include/stdlib.h:351:85: note: insert '_Nullable' if the pointer may be null
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                                                                                           ^
                                                                                             _Nullable 
/usr/local/include/stdlib.h:351:85: note: insert '_Nonnull' if the pointer should never be null
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                                                                                           ^
                                                                                             _Nonnull 
/usr/local/include/stdlib.h:355:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoq(const char *__str, char **__endptr, int __base);
                           ^
/usr/local/include/stdlib.h:355:21: note: insert '_Nullable' if the pointer may be null
         strtoq(const char *__str, char **__endptr, int __base);
                           ^
                             _Nullable 
/usr/local/include/stdlib.h:355:21: note: insert '_Nonnull' if the pointer should never be null
         strtoq(const char *__str, char **__endptr, int __base);
                           ^
                             _Nonnull 
/usr/local/include/stdlib.h:355:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoq(const char *__str, char **__endptr, int __base);
                                        ^
/usr/local/include/stdlib.h:355:34: note: insert '_Nullable' if the pointer may be null
         strtoq(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nullable
/usr/local/include/stdlib.h:355:34: note: insert '_Nonnull' if the pointer should never be null
         strtoq(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nonnull
/usr/local/include/stdlib.h:355:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoq(const char *__str, char **__endptr, int __base);
                                         ^
/usr/local/include/stdlib.h:355:35: note: insert '_Nullable' if the pointer may be null
         strtoq(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nullable 
/usr/local/include/stdlib.h:355:35: note: insert '_Nonnull' if the pointer should never be null
         strtoq(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nonnull 
/usr/local/include/stdlib.h:357:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtouq(const char *__str, char **__endptr, int __base);
                            ^
/usr/local/include/stdlib.h:357:22: note: insert '_Nullable' if the pointer may be null
         strtouq(const char *__str, char **__endptr, int __base);
                            ^
                              _Nullable 
/usr/local/include/stdlib.h:357:22: note: insert '_Nonnull' if the pointer should never be null
         strtouq(const char *__str, char **__endptr, int __base);
                            ^
                              _Nonnull 
/usr/local/include/stdlib.h:357:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtouq(const char *__str, char **__endptr, int __base);
                                         ^
/usr/local/include/stdlib.h:357:35: note: insert '_Nullable' if the pointer may be null
         strtouq(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nullable
/usr/local/include/stdlib.h:357:35: note: insert '_Nonnull' if the pointer should never be null
         strtouq(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nonnull
/usr/local/include/stdlib.h:357:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtouq(const char *__str, char **__endptr, int __base);
                                          ^
/usr/local/include/stdlib.h:357:36: note: insert '_Nullable' if the pointer may be null
         strtouq(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nullable 
/usr/local/include/stdlib.h:357:36: note: insert '_Nonnull' if the pointer should never be null
         strtouq(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nonnull 
/usr/local/include/stdlib.h:359:13: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
extern char *suboptarg;         /* getsubopt(3) external variable */
            ^
/usr/local/include/stdlib.h:359:13: note: insert '_Nullable' if the pointer may be null
extern char *suboptarg;         /* getsubopt(3) external variable */
            ^
              _Nullable 
/usr/local/include/stdlib.h:359:13: note: insert '_Nonnull' if the pointer should never be null
extern char *suboptarg;         /* getsubopt(3) external variable */
            ^
              _Nonnull 
193 warnings generated.
checked program was:
/* begin */
1: #include "ruby.h"
2: 
3: #include <mysql.h>
4: 
5: /*top*/
6: typedef int conftest_type;
7: conftest_type conftestval = (int)SERVER_QUERY_NO_GOOD_INDEX_USED;
/* end */

--------------------

have_const: checking for SERVER_QUERY_NO_INDEX_USED in mysql.h... -------------------- yes

"gcc -I/Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/x86_64-darwin19 -I/Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/backward -I/Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0 -I. -I/usr/local/opt/mysql-client/include/mysql  -I/usr/local/opt/libyaml/include -I/usr/local/opt/libksba/include -I/usr/local/opt/readline/include -I/usr/local/opt/zlib/include -I/usr/local/opt/openssl@1.1/include -D_XOPEN_SOURCE -D_DARWIN_C_SOURCE -D_DARWIN_UNLIMITED_SELECT -D_REENTRANT   -O3 -ggdb3 -Wall -Wextra -Wdeprecated-declarations -Wdivision-by-zero -Wimplicit-function-declaration -Wimplicit-int -Wpointer-arith -Wshorten-64-to-32 -Wwrite-strings -Wmissing-noreturn -Wno-constant-logical-operand -Wno-long-long -Wno-missing-field-initializers -Wno-overlength-strings -Wno-parentheses-equality -Wno-self-assign -Wno-tautological-compare -Wno-unused-parameter -Wno-unused-value -Wunused-variable -Wextra-tokens  -fno-common -pipe -DFULL_SSL_MODE_SUPPORT   -c conftest.c"
In file included from conftest.c:1:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby.h:33:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/ruby.h:29:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/defines.h:126:
In file included from /usr/local/include/stdio.h:64:
/usr/local/include/_stdio.h:93:16: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        unsigned char   *_base;
                        ^
/usr/local/include/_stdio.h:93:16: note: insert '_Nullable' if the pointer may be null
        unsigned char   *_base;
                        ^
                          _Nullable 
/usr/local/include/_stdio.h:93:16: note: insert '_Nonnull' if the pointer should never be null
        unsigned char   *_base;
                        ^
                          _Nonnull 
/usr/local/include/_stdio.h:138:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
/usr/local/include/_stdio.h:138:32: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
                                           _Nullable
/usr/local/include/_stdio.h:138:32: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
                                           _Nonnull
/usr/local/include/_stdio.h:138:40: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
/usr/local/include/_stdio.h:138:40: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
                                                   _Nullable
/usr/local/include/_stdio.h:138:40: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
                                                   _Nonnull
/usr/local/include/_stdio.h:139:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
/usr/local/include/_stdio.h:139:35: note: insert '_Nullable' if the pointer may be null
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
                                           _Nullable
/usr/local/include/_stdio.h:139:35: note: insert '_Nonnull' if the pointer should never be null
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
                                           _Nonnull
/usr/local/include/_stdio.h:140:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
/usr/local/include/_stdio.h:140:32: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
                                           _Nullable
/usr/local/include/_stdio.h:140:32: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
                                           _Nonnull
/usr/local/include/_stdio.h:140:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
/usr/local/include/_stdio.h:140:46: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
                                                         _Nullable
/usr/local/include/_stdio.h:140:46: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
                                                         _Nonnull
/usr/local/include/_stdio.h:144:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
/usr/local/include/_stdio.h:144:18: note: insert '_Nullable' if the pointer may be null
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
                          _Nullable 
/usr/local/include/_stdio.h:144:18: note: insert '_Nonnull' if the pointer should never be null
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
                          _Nonnull 
In file included from conftest.c:1:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby.h:33:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/ruby.h:29:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/defines.h:126:
/usr/local/include/stdio.h:67:13: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
extern FILE *__stdinp;
            ^
/usr/local/include/stdio.h:67:13: note: insert '_Nullable' if the pointer may be null
extern FILE *__stdinp;
            ^
              _Nullable 
/usr/local/include/stdio.h:67:13: note: insert '_Nonnull' if the pointer should never be null
extern FILE *__stdinp;
            ^
              _Nonnull 
/usr/local/include/stdio.h:386:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 int (* _Nullable)(void *, const char *, int),
                                        ^
/usr/local/include/stdio.h:386:41: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *, const char *, int),
                                        ^
                                         _Nullable
/usr/local/include/stdio.h:386:41: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *, const char *, int),
                                        ^
                                         _Nonnull
/usr/local/include/stdio.h:386:55: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
/usr/local/include/stdio.h:386:55: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
                                                       _Nullable
/usr/local/include/stdio.h:386:55: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
                                                       _Nonnull
/usr/local/include/stdio.h:387:44: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
/usr/local/include/stdio.h:387:44: note: insert '_Nullable' if the pointer may be null
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
                                            _Nullable
/usr/local/include/stdio.h:387:44: note: insert '_Nonnull' if the pointer should never be null
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
                                            _Nonnull
/usr/local/include/stdio.h:388:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 int (* _Nullable)(void *));
                                        ^
/usr/local/include/stdio.h:388:41: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *));
                                        ^
                                         _Nullable
/usr/local/include/stdio.h:388:41: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *));
                                        ^
                                         _Nonnull
/usr/local/include/stdio.h:384:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
FILE    *funopen(const void *,
        ^
/usr/local/include/stdio.h:384:6: note: insert '_Nullable' if the pointer may be null
FILE    *funopen(const void *,
        ^
          _Nullable 
/usr/local/include/stdio.h:384:6: note: insert '_Nonnull' if the pointer should never be null
FILE    *funopen(const void *,
        ^
          _Nonnull 
In file included from conftest.c:1:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby.h:33:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/ruby.h:29:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/defines.h:134:
/usr/local/include/stdlib.h:134:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   atof(const char *);
                         ^
/usr/local/include/stdlib.h:134:25: note: insert '_Nullable' if the pointer may be null
double   atof(const char *);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:134:25: note: insert '_Nonnull' if the pointer should never be null
double   atof(const char *);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:135:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      atoi(const char *);
                         ^
/usr/local/include/stdlib.h:135:22: note: insert '_Nullable' if the pointer may be null
int      atoi(const char *);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:135:22: note: insert '_Nonnull' if the pointer should never be null
int      atoi(const char *);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:136:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     atol(const char *);
                         ^
/usr/local/include/stdlib.h:136:23: note: insert '_Nullable' if the pointer may be null
long     atol(const char *);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:136:23: note: insert '_Nonnull' if the pointer should never be null
long     atol(const char *);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:139:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         atoll(const char *);
                          ^
/usr/local/include/stdlib.h:139:20: note: insert '_Nullable' if the pointer may be null
         atoll(const char *);
                          ^
                           _Nullable
/usr/local/include/stdlib.h:139:20: note: insert '_Nonnull' if the pointer should never be null
         atoll(const char *);
                          ^
                           _Nonnull
/usr/local/include/stdlib.h:141:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                            ^
/usr/local/include/stdlib.h:141:26: note: insert '_Nullable' if the pointer may be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                            ^
                              _Nullable 
/usr/local/include/stdlib.h:141:26: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                            ^
                              _Nonnull 
/usr/local/include/stdlib.h:141:45: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                                               ^
/usr/local/include/stdlib.h:141:45: note: insert '_Nullable' if the pointer may be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                                               ^
                                                 _Nullable 
/usr/local/include/stdlib.h:141:45: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                                               ^
                                                 _Nonnull 
/usr/local/include/stdlib.h:142:59: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                 ^
/usr/local/include/stdlib.h:142:59: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                 ^
                                                                  _Nullable
/usr/local/include/stdlib.h:142:59: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                 ^
                                                                  _Nonnull
/usr/local/include/stdlib.h:142:73: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                               ^
/usr/local/include/stdlib.h:142:73: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                               ^
                                                                                _Nullable
/usr/local/include/stdlib.h:142:73: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                               ^
                                                                                _Nonnull
/usr/local/include/stdlib.h:141:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch(const void *__key, const void *__base, size_t __nel,
        ^
/usr/local/include/stdlib.h:141:6: note: insert '_Nullable' if the pointer may be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
        ^
          _Nullable 
/usr/local/include/stdlib.h:141:6: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
        ^
          _Nonnull 
/usr/local/include/stdlib.h:147:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getenv(const char *);
                           ^
/usr/local/include/stdlib.h:147:25: note: insert '_Nullable' if the pointer may be null
char    *getenv(const char *);
                           ^
                            _Nullable
/usr/local/include/stdlib.h:147:25: note: insert '_Nonnull' if the pointer should never be null
char    *getenv(const char *);
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:147:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getenv(const char *);
        ^
/usr/local/include/stdlib.h:147:6: note: insert '_Nullable' if the pointer may be null
char    *getenv(const char *);
        ^
          _Nullable 
/usr/local/include/stdlib.h:147:6: note: insert '_Nonnull' if the pointer should never be null
char    *getenv(const char *);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:156:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mblen(const char *__s, size_t __n);
                          ^
/usr/local/include/stdlib.h:156:23: note: insert '_Nullable' if the pointer may be null
int      mblen(const char *__s, size_t __n);
                          ^
                            _Nullable 
/usr/local/include/stdlib.h:156:23: note: insert '_Nonnull' if the pointer should never be null
int      mblen(const char *__s, size_t __n);
                          ^
                            _Nonnull 
/usr/local/include/stdlib.h:157:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                          ^
/usr/local/include/stdlib.h:157:26: note: insert '_Nullable' if the pointer may be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                          ^
                            _Nullable
/usr/local/include/stdlib.h:157:26: note: insert '_Nonnull' if the pointer should never be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                          ^
                            _Nonnull
/usr/local/include/stdlib.h:157:52: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                                                    ^
/usr/local/include/stdlib.h:157:52: note: insert '_Nullable' if the pointer may be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                                                    ^
                                                      _Nullable
/usr/local/include/stdlib.h:157:52: note: insert '_Nonnull' if the pointer should never be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                                                    ^
                                                      _Nonnull
/usr/local/include/stdlib.h:158:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                        ^
/usr/local/include/stdlib.h:158:21: note: insert '_Nullable' if the pointer may be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                        ^
                          _Nullable
/usr/local/include/stdlib.h:158:21: note: insert '_Nonnull' if the pointer should never be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                        ^
                          _Nonnull
/usr/local/include/stdlib.h:158:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                                                 ^
/usr/local/include/stdlib.h:158:46: note: insert '_Nullable' if the pointer may be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                                                 ^
                                                   _Nullable
/usr/local/include/stdlib.h:158:46: note: insert '_Nonnull' if the pointer should never be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                                                 ^
                                                   _Nonnull
/usr/local/include/stdlib.h:160:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort(void *__base, size_t __nel, size_t __width,
                    ^
/usr/local/include/stdlib.h:160:18: note: insert '_Nullable' if the pointer may be null
void     qsort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nullable 
/usr/local/include/stdlib.h:160:18: note: insert '_Nonnull' if the pointer should never be null
void     qsort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nonnull 
/usr/local/include/stdlib.h:161:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
/usr/local/include/stdlib.h:161:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:161:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:161:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
/usr/local/include/stdlib.h:161:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:161:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:165:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                           ^
/usr/local/include/stdlib.h:165:27: note: insert '_Nullable' if the pointer may be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                           ^
                            _Nullable
/usr/local/include/stdlib.h:165:27: note: insert '_Nonnull' if the pointer should never be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:165:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                   ^
/usr/local/include/stdlib.h:165:35: note: insert '_Nullable' if the pointer may be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                   ^
                                    _Nullable
/usr/local/include/stdlib.h:165:35: note: insert '_Nonnull' if the pointer should never be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                   ^
                                    _Nonnull
/usr/local/include/stdlib.h:165:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                    ^
/usr/local/include/stdlib.h:165:36: note: insert '_Nullable' if the pointer may be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                    ^
                                     _Nullable
/usr/local/include/stdlib.h:165:36: note: insert '_Nonnull' if the pointer should never be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                    ^
                                     _Nonnull
/usr/local/include/stdlib.h:166:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                           ^
/usr/local/include/stdlib.h:166:26: note: insert '_Nullable' if the pointer may be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                           ^
                            _Nullable
/usr/local/include/stdlib.h:166:26: note: insert '_Nonnull' if the pointer should never be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:166:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                   ^
/usr/local/include/stdlib.h:166:34: note: insert '_Nullable' if the pointer may be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                   ^
                                    _Nullable
/usr/local/include/stdlib.h:166:34: note: insert '_Nonnull' if the pointer should never be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                   ^
                                    _Nonnull
/usr/local/include/stdlib.h:166:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                    ^
/usr/local/include/stdlib.h:166:35: note: insert '_Nullable' if the pointer may be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                    ^
                                     _Nullable
/usr/local/include/stdlib.h:166:35: note: insert '_Nonnull' if the pointer should never be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                    ^
                                     _Nonnull
/usr/local/include/stdlib.h:167:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     strtol(const char *__str, char **__endptr, int __base);
                           ^
/usr/local/include/stdlib.h:167:25: note: insert '_Nullable' if the pointer may be null
long     strtol(const char *__str, char **__endptr, int __base);
                           ^
                             _Nullable 
/usr/local/include/stdlib.h:167:25: note: insert '_Nonnull' if the pointer should never be null
long     strtol(const char *__str, char **__endptr, int __base);
                           ^
                             _Nonnull 
/usr/local/include/stdlib.h:167:38: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     strtol(const char *__str, char **__endptr, int __base);
                                        ^
/usr/local/include/stdlib.h:167:38: note: insert '_Nullable' if the pointer may be null
long     strtol(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nullable
/usr/local/include/stdlib.h:167:38: note: insert '_Nonnull' if the pointer should never be null
long     strtol(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nonnull
/usr/local/include/stdlib.h:167:39: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     strtol(const char *__str, char **__endptr, int __base);
                                         ^
/usr/local/include/stdlib.h:167:39: note: insert '_Nullable' if the pointer may be null
long     strtol(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nullable 
/usr/local/include/stdlib.h:167:39: note: insert '_Nonnull' if the pointer should never be null
long     strtol(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nonnull 
/usr/local/include/stdlib.h:169:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtold(const char *, char **);
                            ^
/usr/local/include/stdlib.h:169:22: note: insert '_Nullable' if the pointer may be null
         strtold(const char *, char **);
                            ^
                             _Nullable
/usr/local/include/stdlib.h:169:22: note: insert '_Nonnull' if the pointer should never be null
         strtold(const char *, char **);
                            ^
                             _Nonnull
/usr/local/include/stdlib.h:169:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtold(const char *, char **);
                                    ^
/usr/local/include/stdlib.h:169:30: note: insert '_Nullable' if the pointer may be null
         strtold(const char *, char **);
                                    ^
                                     _Nullable
/usr/local/include/stdlib.h:169:30: note: insert '_Nonnull' if the pointer should never be null
         strtold(const char *, char **);
                                    ^
                                     _Nonnull
/usr/local/include/stdlib.h:169:31: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtold(const char *, char **);
                                     ^
/usr/local/include/stdlib.h:169:31: note: insert '_Nullable' if the pointer may be null
         strtold(const char *, char **);
                                     ^
                                      _Nullable
/usr/local/include/stdlib.h:169:31: note: insert '_Nonnull' if the pointer should never be null
         strtold(const char *, char **);
                                     ^
                                      _Nonnull
/usr/local/include/stdlib.h:172:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoll(const char *__str, char **__endptr, int __base);
                            ^
/usr/local/include/stdlib.h:172:22: note: insert '_Nullable' if the pointer may be null
         strtoll(const char *__str, char **__endptr, int __base);
                            ^
                              _Nullable 
/usr/local/include/stdlib.h:172:22: note: insert '_Nonnull' if the pointer should never be null
         strtoll(const char *__str, char **__endptr, int __base);
                            ^
                              _Nonnull 
/usr/local/include/stdlib.h:172:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoll(const char *__str, char **__endptr, int __base);
                                         ^
/usr/local/include/stdlib.h:172:35: note: insert '_Nullable' if the pointer may be null
         strtoll(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nullable
/usr/local/include/stdlib.h:172:35: note: insert '_Nonnull' if the pointer should never be null
         strtoll(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nonnull
/usr/local/include/stdlib.h:172:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoll(const char *__str, char **__endptr, int __base);
                                          ^
/usr/local/include/stdlib.h:172:36: note: insert '_Nullable' if the pointer may be null
         strtoll(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nullable 
/usr/local/include/stdlib.h:172:36: note: insert '_Nonnull' if the pointer should never be null
         strtoll(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nonnull 
/usr/local/include/stdlib.h:175:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoul(const char *__str, char **__endptr, int __base);
                            ^
/usr/local/include/stdlib.h:175:22: note: insert '_Nullable' if the pointer may be null
         strtoul(const char *__str, char **__endptr, int __base);
                            ^
                              _Nullable 
/usr/local/include/stdlib.h:175:22: note: insert '_Nonnull' if the pointer should never be null
         strtoul(const char *__str, char **__endptr, int __base);
                            ^
                              _Nonnull 
/usr/local/include/stdlib.h:175:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoul(const char *__str, char **__endptr, int __base);
                                         ^
/usr/local/include/stdlib.h:175:35: note: insert '_Nullable' if the pointer may be null
         strtoul(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nullable
/usr/local/include/stdlib.h:175:35: note: insert '_Nonnull' if the pointer should never be null
         strtoul(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nonnull
/usr/local/include/stdlib.h:175:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoul(const char *__str, char **__endptr, int __base);
                                          ^
/usr/local/include/stdlib.h:175:36: note: insert '_Nullable' if the pointer may be null
         strtoul(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nullable 
/usr/local/include/stdlib.h:175:36: note: insert '_Nonnull' if the pointer should never be null
         strtoul(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nonnull 
/usr/local/include/stdlib.h:178:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoull(const char *__str, char **__endptr, int __base);
                             ^
/usr/local/include/stdlib.h:178:23: note: insert '_Nullable' if the pointer may be null
         strtoull(const char *__str, char **__endptr, int __base);
                             ^
                               _Nullable 
/usr/local/include/stdlib.h:178:23: note: insert '_Nonnull' if the pointer should never be null
         strtoull(const char *__str, char **__endptr, int __base);
                             ^
                               _Nonnull 
/usr/local/include/stdlib.h:178:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoull(const char *__str, char **__endptr, int __base);
                                          ^
/usr/local/include/stdlib.h:178:36: note: insert '_Nullable' if the pointer may be null
         strtoull(const char *__str, char **__endptr, int __base);
                                          ^
                                           _Nullable
/usr/local/include/stdlib.h:178:36: note: insert '_Nonnull' if the pointer should never be null
         strtoull(const char *__str, char **__endptr, int __base);
                                          ^
                                           _Nonnull
/usr/local/include/stdlib.h:178:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoull(const char *__str, char **__endptr, int __base);
                                           ^
/usr/local/include/stdlib.h:178:37: note: insert '_Nullable' if the pointer may be null
         strtoull(const char *__str, char **__endptr, int __base);
                                           ^
                                             _Nullable 
/usr/local/include/stdlib.h:178:37: note: insert '_Nonnull' if the pointer should never be null
         strtoull(const char *__str, char **__endptr, int __base);
                                           ^
                                             _Nonnull 
/usr/local/include/stdlib.h:190:24: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      system(const char *) __DARWIN_ALIAS_C(system);
                           ^
/usr/local/include/stdlib.h:190:24: note: insert '_Nullable' if the pointer may be null
int      system(const char *) __DARWIN_ALIAS_C(system);
                           ^
                            _Nullable
/usr/local/include/stdlib.h:190:24: note: insert '_Nonnull' if the pointer should never be null
int      system(const char *) __DARWIN_ALIAS_C(system);
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:194:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                       ^
/usr/local/include/stdlib.h:194:23: note: insert '_Nullable' if the pointer may be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                       ^
                         _Nullable
/usr/local/include/stdlib.h:194:23: note: insert '_Nonnull' if the pointer should never be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                       ^
                         _Nonnull
/usr/local/include/stdlib.h:194:51: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                                                   ^
/usr/local/include/stdlib.h:194:51: note: insert '_Nullable' if the pointer may be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                                                   ^
                                                     _Nullable
/usr/local/include/stdlib.h:194:51: note: insert '_Nonnull' if the pointer should never be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                                                   ^
                                                     _Nonnull
/usr/local/include/stdlib.h:195:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      wctomb(char *, wchar_t);
                     ^
/usr/local/include/stdlib.h:195:18: note: insert '_Nullable' if the pointer may be null
int      wctomb(char *, wchar_t);
                     ^
                      _Nullable
/usr/local/include/stdlib.h:195:18: note: insert '_Nonnull' if the pointer should never be null
int      wctomb(char *, wchar_t);
                     ^
                      _Nonnull
/usr/local/include/stdlib.h:199:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     a64l(const char *);
                         ^
/usr/local/include/stdlib.h:199:23: note: insert '_Nullable' if the pointer may be null
long     a64l(const char *);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:199:23: note: insert '_Nonnull' if the pointer should never be null
long     a64l(const char *);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:201:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
/usr/local/include/stdlib.h:201:29: note: insert '_Nullable' if the pointer may be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nullable 
/usr/local/include/stdlib.h:201:29: note: insert '_Nonnull' if the pointer should never be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nonnull 
/usr/local/include/stdlib.h:201:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
/usr/local/include/stdlib.h:201:46: note: insert '_Nullable' if the pointer may be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nullable 
/usr/local/include/stdlib.h:201:46: note: insert '_Nonnull' if the pointer should never be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nonnull 
/usr/local/include/stdlib.h:201:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
/usr/local/include/stdlib.h:201:6: note: insert '_Nullable' if the pointer may be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nullable 
/usr/local/include/stdlib.h:201:6: note: insert '_Nonnull' if the pointer should never be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nonnull 
/usr/local/include/stdlib.h:202:31: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
double   erand48(unsigned short[3]);
                               ^
/usr/local/include/stdlib.h:202:31: note: insert '_Nullable' if the array parameter may be null
double   erand48(unsigned short[3]);
                               ^
                                _Nullable 
/usr/local/include/stdlib.h:202:31: note: insert '_Nonnull' if the array parameter should never be null
double   erand48(unsigned short[3]);
                               ^
                                _Nonnull 
/usr/local/include/stdlib.h:203:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
/usr/local/include/stdlib.h:203:29: note: insert '_Nullable' if the pointer may be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nullable 
/usr/local/include/stdlib.h:203:29: note: insert '_Nonnull' if the pointer should never be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nonnull 
/usr/local/include/stdlib.h:203:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
/usr/local/include/stdlib.h:203:46: note: insert '_Nullable' if the pointer may be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nullable 
/usr/local/include/stdlib.h:203:46: note: insert '_Nonnull' if the pointer should never be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nonnull 
/usr/local/include/stdlib.h:203:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
/usr/local/include/stdlib.h:203:6: note: insert '_Nullable' if the pointer may be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nullable 
/usr/local/include/stdlib.h:203:6: note: insert '_Nonnull' if the pointer should never be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nonnull 
/usr/local/include/stdlib.h:204:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *gcvt(double, int, char *); /* LEGACY */
                                ^
/usr/local/include/stdlib.h:204:30: note: insert '_Nullable' if the pointer may be null
char    *gcvt(double, int, char *); /* LEGACY */
                                ^
                                 _Nullable
/usr/local/include/stdlib.h:204:30: note: insert '_Nonnull' if the pointer should never be null
char    *gcvt(double, int, char *); /* LEGACY */
                                ^
                                 _Nonnull
/usr/local/include/stdlib.h:204:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *gcvt(double, int, char *); /* LEGACY */
        ^
/usr/local/include/stdlib.h:204:6: note: insert '_Nullable' if the pointer may be null
char    *gcvt(double, int, char *); /* LEGACY */
        ^
          _Nullable 
/usr/local/include/stdlib.h:204:6: note: insert '_Nonnull' if the pointer should never be null
char    *gcvt(double, int, char *); /* LEGACY */
        ^
          _Nonnull 
/usr/local/include/stdlib.h:205:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                        ^
/usr/local/include/stdlib.h:205:21: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                        ^
                         _Nullable
/usr/local/include/stdlib.h:205:21: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                        ^
                         _Nonnull
/usr/local/include/stdlib.h:205:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                         ^
/usr/local/include/stdlib.h:205:22: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:205:22: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:205:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                 ^
/usr/local/include/stdlib.h:205:30: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                 ^
                                   _Nullable
/usr/local/include/stdlib.h:205:30: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                 ^
                                   _Nonnull
/usr/local/include/stdlib.h:205:38: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                         ^
/usr/local/include/stdlib.h:205:38: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                         ^
                                          _Nullable
/usr/local/include/stdlib.h:205:38: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                         ^
                                          _Nonnull
/usr/local/include/stdlib.h:205:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                                 ^
/usr/local/include/stdlib.h:205:46: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:205:46: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:205:47: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                                  ^
/usr/local/include/stdlib.h:205:47: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                                  ^
                                                   _Nullable
/usr/local/include/stdlib.h:205:47: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                                  ^
                                                   _Nonnull
/usr/local/include/stdlib.h:208:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
                                  ^
/usr/local/include/stdlib.h:208:32: note: insert '_Nullable' if the pointer may be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
                                  ^
                                   _Nullable
/usr/local/include/stdlib.h:208:32: note: insert '_Nonnull' if the pointer should never be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
                                  ^
                                   _Nonnull
/usr/local/include/stdlib.h:208:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
        ^
/usr/local/include/stdlib.h:208:6: note: insert '_Nullable' if the pointer may be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
        ^
          _Nullable 
/usr/local/include/stdlib.h:208:6: note: insert '_Nonnull' if the pointer should never be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
        ^
          _Nonnull 
/usr/local/include/stdlib.h:212:29: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
long     jrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
/usr/local/include/stdlib.h:212:29: note: insert '_Nullable' if the array parameter may be null
long     jrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nullable 
/usr/local/include/stdlib.h:212:29: note: insert '_Nonnull' if the array parameter should never be null
long     jrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nonnull 
/usr/local/include/stdlib.h:213:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *l64a(long);
        ^
/usr/local/include/stdlib.h:213:6: note: insert '_Nullable' if the pointer may be null
char    *l64a(long);
        ^
          _Nullable 
/usr/local/include/stdlib.h:213:6: note: insert '_Nonnull' if the pointer should never be null
char    *l64a(long);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:214:29: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
void     lcong48(unsigned short[7]);
                               ^
/usr/local/include/stdlib.h:214:29: note: insert '_Nullable' if the array parameter may be null
void     lcong48(unsigned short[7]);
                               ^
                                _Nullable 
/usr/local/include/stdlib.h:214:29: note: insert '_Nonnull' if the array parameter should never be null
void     lcong48(unsigned short[7]);
                               ^
                                _Nonnull 
/usr/local/include/stdlib.h:216:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *mktemp(char *);
                     ^
/usr/local/include/stdlib.h:216:19: note: insert '_Nullable' if the pointer may be null
char    *mktemp(char *);
                     ^
                      _Nullable
/usr/local/include/stdlib.h:216:19: note: insert '_Nonnull' if the pointer should never be null
char    *mktemp(char *);
                     ^
                      _Nonnull
/usr/local/include/stdlib.h:216:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *mktemp(char *);
        ^
/usr/local/include/stdlib.h:216:6: note: insert '_Nullable' if the pointer may be null
char    *mktemp(char *);
        ^
          _Nullable 
/usr/local/include/stdlib.h:216:6: note: insert '_Nonnull' if the pointer should never be null
char    *mktemp(char *);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:217:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mkstemp(char *);
                      ^
/usr/local/include/stdlib.h:217:19: note: insert '_Nullable' if the pointer may be null
int      mkstemp(char *);
                      ^
                       _Nullable
/usr/local/include/stdlib.h:217:19: note: insert '_Nonnull' if the pointer should never be null
int      mkstemp(char *);
                      ^
                       _Nonnull
/usr/local/include/stdlib.h:219:29: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
long     nrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
/usr/local/include/stdlib.h:219:29: note: insert '_Nullable' if the array parameter may be null
long     nrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nullable 
/usr/local/include/stdlib.h:219:29: note: insert '_Nonnull' if the array parameter should never be null
long     nrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nonnull 
/usr/local/include/stdlib.h:221:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ptsname(int);
        ^
/usr/local/include/stdlib.h:221:6: note: insert '_Nullable' if the pointer may be null
char    *ptsname(int);
        ^
          _Nullable 
/usr/local/include/stdlib.h:221:6: note: insert '_Nonnull' if the pointer should never be null
char    *ptsname(int);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:224:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int ptsname_r(int fildes, char *buffer, size_t buflen) __API_AVAILABLE(macos(10.13.4), ios(11.3), tvos(11.3), watchos(4.3));
                               ^
/usr/local/include/stdlib.h:224:32: note: insert '_Nullable' if the pointer may be null
int ptsname_r(int fildes, char *buffer, size_t buflen) __API_AVAILABLE(macos(10.13.4), ios(11.3), tvos(11.3), watchos(4.3));
                               ^
                                 _Nullable 
/usr/local/include/stdlib.h:224:32: note: insert '_Nonnull' if the pointer should never be null
int ptsname_r(int fildes, char *buffer, size_t buflen) __API_AVAILABLE(macos(10.13.4), ios(11.3), tvos(11.3), watchos(4.3));
                               ^
                                 _Nonnull 
/usr/local/include/stdlib.h:227:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      putenv(char *) __DARWIN_ALIAS(putenv);
                     ^
/usr/local/include/stdlib.h:227:18: note: insert '_Nullable' if the pointer may be null
int      putenv(char *) __DARWIN_ALIAS(putenv);
                     ^
                      _Nullable
/usr/local/include/stdlib.h:227:18: note: insert '_Nonnull' if the pointer should never be null
int      putenv(char *) __DARWIN_ALIAS(putenv);
                     ^
                      _Nonnull
/usr/local/include/stdlib.h:229:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      rand_r(unsigned *) __swift_unavailable("Use arc4random instead.");
                         ^
/usr/local/include/stdlib.h:229:22: note: insert '_Nullable' if the pointer may be null
int      rand_r(unsigned *) __swift_unavailable("Use arc4random instead.");
                         ^
                          _Nullable
/usr/local/include/stdlib.h:229:22: note: insert '_Nonnull' if the pointer should never be null
int      rand_r(unsigned *) __swift_unavailable("Use arc4random instead.");
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:231:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                             ^
/usr/local/include/stdlib.h:231:27: note: insert '_Nullable' if the pointer may be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                             ^
                               _Nullable
/usr/local/include/stdlib.h:231:27: note: insert '_Nonnull' if the pointer should never be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                             ^
                               _Nonnull
/usr/local/include/stdlib.h:231:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                                                ^
/usr/local/include/stdlib.h:231:46: note: insert '_Nullable' if the pointer may be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                                                ^
                                                  _Nullable
/usr/local/include/stdlib.h:231:46: note: insert '_Nonnull' if the pointer should never be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                                                ^
                                                  _Nonnull
/usr/local/include/stdlib.h:231:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
        ^
/usr/local/include/stdlib.h:231:6: note: insert '_Nullable' if the pointer may be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
        ^
          _Nullable 
/usr/local/include/stdlib.h:231:6: note: insert '_Nonnull' if the pointer should never be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:236:24: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
        *seed48(unsigned short[3]);
                              ^
/usr/local/include/stdlib.h:236:24: note: insert '_Nullable' if the array parameter may be null
        *seed48(unsigned short[3]);
                              ^
                               _Nullable 
/usr/local/include/stdlib.h:236:24: note: insert '_Nonnull' if the array parameter should never be null
        *seed48(unsigned short[3]);
                              ^
                               _Nonnull 
/usr/local/include/stdlib.h:236:2: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        *seed48(unsigned short[3]);
        ^
/usr/local/include/stdlib.h:236:2: note: insert '_Nullable' if the pointer may be null
        *seed48(unsigned short[3]);
        ^
          _Nullable 
/usr/local/include/stdlib.h:236:2: note: insert '_Nonnull' if the pointer should never be null
        *seed48(unsigned short[3]);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:237:24: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                           ^
/usr/local/include/stdlib.h:237:24: note: insert '_Nullable' if the pointer may be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                           ^
                             _Nullable
/usr/local/include/stdlib.h:237:24: note: insert '_Nonnull' if the pointer should never be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                           ^
                             _Nonnull
/usr/local/include/stdlib.h:237:45: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                                                ^
/usr/local/include/stdlib.h:237:45: note: insert '_Nullable' if the pointer may be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                                                ^
                                                  _Nullable
/usr/local/include/stdlib.h:237:45: note: insert '_Nonnull' if the pointer should never be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                                                ^
                                                  _Nonnull
/usr/local/include/stdlib.h:239:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     setkey(const char *) __DARWIN_ALIAS(setkey);
                           ^
/usr/local/include/stdlib.h:239:25: note: insert '_Nullable' if the pointer may be null
void     setkey(const char *) __DARWIN_ALIAS(setkey);
                           ^
                            _Nullable
/usr/local/include/stdlib.h:239:25: note: insert '_Nonnull' if the pointer should never be null
void     setkey(const char *) __DARWIN_ALIAS(setkey);
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:243:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *setstate(const char *);
                             ^
/usr/local/include/stdlib.h:243:27: note: insert '_Nullable' if the pointer may be null
char    *setstate(const char *);
                             ^
                              _Nullable
/usr/local/include/stdlib.h:243:27: note: insert '_Nonnull' if the pointer should never be null
char    *setstate(const char *);
                             ^
                              _Nonnull
/usr/local/include/stdlib.h:243:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *setstate(const char *);
        ^
/usr/local/include/stdlib.h:243:6: note: insert '_Nullable' if the pointer may be null
char    *setstate(const char *);
        ^
          _Nullable 
/usr/local/include/stdlib.h:243:6: note: insert '_Nonnull' if the pointer should never be null
char    *setstate(const char *);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:252:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      unsetenv(const char *) __DARWIN_ALIAS(unsetenv);
                             ^
/usr/local/include/stdlib.h:252:26: note: insert '_Nullable' if the pointer may be null
int      unsetenv(const char *) __DARWIN_ALIAS(unsetenv);
                             ^
                              _Nullable
/usr/local/include/stdlib.h:252:26: note: insert '_Nonnull' if the pointer should never be null
int      unsetenv(const char *) __DARWIN_ALIAS(unsetenv);
                             ^
                              _Nonnull
/usr/local/include/stdlib.h:265:42: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     arc4random_addrandom(unsigned char * /*dat*/, int /*datlen*/)
                                            ^
/usr/local/include/stdlib.h:265:42: note: insert '_Nullable' if the pointer may be null
void     arc4random_addrandom(unsigned char * /*dat*/, int /*datlen*/)
                                            ^
                                              _Nullable
/usr/local/include/stdlib.h:265:42: note: insert '_Nonnull' if the pointer should never be null
void     arc4random_addrandom(unsigned char * /*dat*/, int /*datlen*/)
                                            ^
                                              _Nonnull
/usr/local/include/stdlib.h:270:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     arc4random_buf(void * __buf, size_t __nbytes) __OSX_AVAILABLE_STARTING(__MAC_10_7, __IPHONE_4_3);
                             ^
/usr/local/include/stdlib.h:270:27: note: insert '_Nullable' if the pointer may be null
void     arc4random_buf(void * __buf, size_t __nbytes) __OSX_AVAILABLE_STARTING(__MAC_10_7, __IPHONE_4_3);
                             ^
                               _Nullable
/usr/local/include/stdlib.h:270:27: note: insert '_Nonnull' if the pointer should never be null
void     arc4random_buf(void * __buf, size_t __nbytes) __OSX_AVAILABLE_STARTING(__MAC_10_7, __IPHONE_4_3);
                             ^
                               _Nonnull
/usr/local/include/stdlib.h:276:28: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                              ^
/usr/local/include/stdlib.h:276:28: note: insert '_Nullable' if the pointer may be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                              ^
                                _Nullable 
/usr/local/include/stdlib.h:276:28: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                              ^
                                _Nonnull 
/usr/local/include/stdlib.h:276:47: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                                                 ^
/usr/local/include/stdlib.h:276:47: note: insert '_Nullable' if the pointer may be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                                                 ^
                                                   _Nullable 
/usr/local/include/stdlib.h:276:47: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                                                 ^
                                                   _Nonnull 
/usr/local/include/stdlib.h:277:59: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                 ^
/usr/local/include/stdlib.h:277:59: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                 ^
                                                                  _Nullable
/usr/local/include/stdlib.h:277:59: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                 ^
                                                                  _Nonnull
/usr/local/include/stdlib.h:277:73: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                               ^
/usr/local/include/stdlib.h:277:73: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                               ^
                                                                                _Nullable
/usr/local/include/stdlib.h:277:73: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                               ^
                                                                                _Nonnull
/usr/local/include/stdlib.h:276:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
        ^
/usr/local/include/stdlib.h:276:6: note: insert '_Nullable' if the pointer may be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
        ^
          _Nullable 
/usr/local/include/stdlib.h:276:6: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
        ^
          _Nonnull 
/usr/local/include/stdlib.h:281:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *cgetcap(char *, const char *, int);
                      ^
/usr/local/include/stdlib.h:281:20: note: insert '_Nullable' if the pointer may be null
char    *cgetcap(char *, const char *, int);
                      ^
                       _Nullable
/usr/local/include/stdlib.h:281:20: note: insert '_Nonnull' if the pointer should never be null
char    *cgetcap(char *, const char *, int);
                      ^
                       _Nonnull
/usr/local/include/stdlib.h:281:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *cgetcap(char *, const char *, int);
                                    ^
/usr/local/include/stdlib.h:281:34: note: insert '_Nullable' if the pointer may be null
char    *cgetcap(char *, const char *, int);
                                    ^
                                     _Nullable
/usr/local/include/stdlib.h:281:34: note: insert '_Nonnull' if the pointer should never be null
char    *cgetcap(char *, const char *, int);
                                    ^
                                     _Nonnull
/usr/local/include/stdlib.h:281:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *cgetcap(char *, const char *, int);
        ^
/usr/local/include/stdlib.h:281:6: note: insert '_Nullable' if the pointer may be null
char    *cgetcap(char *, const char *, int);
        ^
          _Nullable 
/usr/local/include/stdlib.h:281:6: note: insert '_Nonnull' if the pointer should never be null
char    *cgetcap(char *, const char *, int);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:283:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                      ^
/usr/local/include/stdlib.h:283:19: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                      ^
                       _Nullable
/usr/local/include/stdlib.h:283:19: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                      ^
                       _Nonnull
/usr/local/include/stdlib.h:283:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                       ^
/usr/local/include/stdlib.h:283:20: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                       ^
                        _Nullable
/usr/local/include/stdlib.h:283:20: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                       ^
                        _Nonnull
/usr/local/include/stdlib.h:283:28: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                               ^
/usr/local/include/stdlib.h:283:28: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                               ^
                                _Nullable
/usr/local/include/stdlib.h:283:28: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                               ^
                                _Nonnull
/usr/local/include/stdlib.h:283:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                                ^
/usr/local/include/stdlib.h:283:29: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                                ^
                                 _Nullable
/usr/local/include/stdlib.h:283:29: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                                ^
                                 _Nonnull
/usr/local/include/stdlib.h:283:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                                              ^
/usr/local/include/stdlib.h:283:43: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                                              ^
                                               _Nullable
/usr/local/include/stdlib.h:283:43: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                                              ^
                                               _Nonnull
/usr/local/include/stdlib.h:284:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                        ^
/usr/local/include/stdlib.h:284:21: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                        ^
                         _Nullable
/usr/local/include/stdlib.h:284:21: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                        ^
                         _Nonnull
/usr/local/include/stdlib.h:284:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                         ^
/usr/local/include/stdlib.h:284:22: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:284:22: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:284:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                                 ^
/usr/local/include/stdlib.h:284:30: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                                 ^
                                  _Nullable
/usr/local/include/stdlib.h:284:30: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                                 ^
                                  _Nonnull
/usr/local/include/stdlib.h:284:31: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                                  ^
/usr/local/include/stdlib.h:284:31: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                                  ^
                                   _Nullable
/usr/local/include/stdlib.h:284:31: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                                  ^
                                   _Nonnull
/usr/local/include/stdlib.h:285:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetmatch(const char *, const char *);
                              ^
/usr/local/include/stdlib.h:285:27: note: insert '_Nullable' if the pointer may be null
int      cgetmatch(const char *, const char *);
                              ^
                               _Nullable
/usr/local/include/stdlib.h:285:27: note: insert '_Nonnull' if the pointer should never be null
int      cgetmatch(const char *, const char *);
                              ^
                               _Nonnull
/usr/local/include/stdlib.h:285:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetmatch(const char *, const char *);
                                            ^
/usr/local/include/stdlib.h:285:41: note: insert '_Nullable' if the pointer may be null
int      cgetmatch(const char *, const char *);
                                            ^
                                             _Nullable
/usr/local/include/stdlib.h:285:41: note: insert '_Nonnull' if the pointer should never be null
int      cgetmatch(const char *, const char *);
                                            ^
                                             _Nonnull
/usr/local/include/stdlib.h:286:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                       ^
/usr/local/include/stdlib.h:286:20: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                       ^
                        _Nullable
/usr/local/include/stdlib.h:286:20: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                       ^
                        _Nonnull
/usr/local/include/stdlib.h:286:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                        ^
/usr/local/include/stdlib.h:286:21: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                        ^
                         _Nullable
/usr/local/include/stdlib.h:286:21: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                        ^
                         _Nonnull
/usr/local/include/stdlib.h:286:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                                ^
/usr/local/include/stdlib.h:286:29: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                                ^
                                 _Nullable
/usr/local/include/stdlib.h:286:29: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                                ^
                                 _Nonnull
/usr/local/include/stdlib.h:286:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                                 ^
/usr/local/include/stdlib.h:286:30: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                                 ^
                                  _Nullable
/usr/local/include/stdlib.h:286:30: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                                 ^
                                  _Nonnull
/usr/local/include/stdlib.h:287:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnum(char *, const char *, long *);
                      ^
/usr/local/include/stdlib.h:287:19: note: insert '_Nullable' if the pointer may be null
int      cgetnum(char *, const char *, long *);
                      ^
                       _Nullable
/usr/local/include/stdlib.h:287:19: note: insert '_Nonnull' if the pointer should never be null
int      cgetnum(char *, const char *, long *);
                      ^
                       _Nonnull
/usr/local/include/stdlib.h:287:33: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnum(char *, const char *, long *);
                                    ^
/usr/local/include/stdlib.h:287:33: note: insert '_Nullable' if the pointer may be null
int      cgetnum(char *, const char *, long *);
                                    ^
                                     _Nullable
/usr/local/include/stdlib.h:287:33: note: insert '_Nonnull' if the pointer should never be null
int      cgetnum(char *, const char *, long *);
                                    ^
                                     _Nonnull
/usr/local/include/stdlib.h:287:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnum(char *, const char *, long *);
                                            ^
/usr/local/include/stdlib.h:287:41: note: insert '_Nullable' if the pointer may be null
int      cgetnum(char *, const char *, long *);
                                            ^
                                             _Nullable
/usr/local/include/stdlib.h:287:41: note: insert '_Nonnull' if the pointer should never be null
int      cgetnum(char *, const char *, long *);
                                            ^
                                             _Nonnull
/usr/local/include/stdlib.h:288:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetset(const char *);
                            ^
/usr/local/include/stdlib.h:288:25: note: insert '_Nullable' if the pointer may be null
int      cgetset(const char *);
                            ^
                             _Nullable
/usr/local/include/stdlib.h:288:25: note: insert '_Nonnull' if the pointer should never be null
int      cgetset(const char *);
                            ^
                             _Nonnull
/usr/local/include/stdlib.h:289:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                      ^
/usr/local/include/stdlib.h:289:19: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                      ^
                       _Nullable
/usr/local/include/stdlib.h:289:19: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                      ^
                       _Nonnull
/usr/local/include/stdlib.h:289:33: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                                    ^
/usr/local/include/stdlib.h:289:33: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                                    ^
                                     _Nullable
/usr/local/include/stdlib.h:289:33: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                                    ^
                                     _Nonnull
/usr/local/include/stdlib.h:289:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                                            ^
/usr/local/include/stdlib.h:289:41: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                                            ^
                                             _Nullable
/usr/local/include/stdlib.h:289:41: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                                            ^
                                             _Nonnull
/usr/local/include/stdlib.h:289:42: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                                             ^
/usr/local/include/stdlib.h:289:42: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                                             ^
                                              _Nullable
/usr/local/include/stdlib.h:289:42: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                                             ^
                                              _Nonnull
/usr/local/include/stdlib.h:290:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                       ^
/usr/local/include/stdlib.h:290:20: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                       ^
                        _Nullable
/usr/local/include/stdlib.h:290:20: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                       ^
                        _Nonnull
/usr/local/include/stdlib.h:290:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                                     ^
/usr/local/include/stdlib.h:290:34: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                                     ^
                                      _Nullable
/usr/local/include/stdlib.h:290:34: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                                     ^
                                      _Nonnull
/usr/local/include/stdlib.h:290:42: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                                             ^
/usr/local/include/stdlib.h:290:42: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                                             ^
                                              _Nullable
/usr/local/include/stdlib.h:290:42: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                                             ^
                                              _Nonnull
/usr/local/include/stdlib.h:290:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                                              ^
/usr/local/include/stdlib.h:290:43: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                                              ^
                                               _Nullable
/usr/local/include/stdlib.h:290:43: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                                              ^
                                               _Nonnull
/usr/local/include/stdlib.h:293:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *devname(dev_t, mode_t);
        ^
/usr/local/include/stdlib.h:293:6: note: insert '_Nullable' if the pointer may be null
char    *devname(dev_t, mode_t);
        ^
          _Nullable 
/usr/local/include/stdlib.h:293:6: note: insert '_Nonnull' if the pointer should never be null
char    *devname(dev_t, mode_t);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:294:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *devname_r(dev_t, mode_t, char *buf, int len);
                                       ^
/usr/local/include/stdlib.h:294:37: note: insert '_Nullable' if the pointer may be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
                                       ^
                                         _Nullable 
/usr/local/include/stdlib.h:294:37: note: insert '_Nonnull' if the pointer should never be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
                                       ^
                                         _Nonnull 
/usr/local/include/stdlib.h:294:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *devname_r(dev_t, mode_t, char *buf, int len);
        ^
/usr/local/include/stdlib.h:294:6: note: insert '_Nullable' if the pointer may be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
        ^
          _Nullable 
/usr/local/include/stdlib.h:294:6: note: insert '_Nonnull' if the pointer should never be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:295:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getbsize(int *, long *);
                      ^
/usr/local/include/stdlib.h:295:20: note: insert '_Nullable' if the pointer may be null
char    *getbsize(int *, long *);
                      ^
                       _Nullable
/usr/local/include/stdlib.h:295:20: note: insert '_Nonnull' if the pointer should never be null
char    *getbsize(int *, long *);
                      ^
                       _Nonnull
/usr/local/include/stdlib.h:295:28: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getbsize(int *, long *);
                              ^
/usr/local/include/stdlib.h:295:28: note: insert '_Nullable' if the pointer may be null
char    *getbsize(int *, long *);
                              ^
                               _Nullable
/usr/local/include/stdlib.h:295:28: note: insert '_Nonnull' if the pointer should never be null
char    *getbsize(int *, long *);
                              ^
                               _Nonnull
/usr/local/include/stdlib.h:295:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getbsize(int *, long *);
        ^
/usr/local/include/stdlib.h:295:6: note: insert '_Nullable' if the pointer may be null
char    *getbsize(int *, long *);
        ^
          _Nullable 
/usr/local/include/stdlib.h:295:6: note: insert '_Nonnull' if the pointer should never be null
char    *getbsize(int *, long *);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:296:24: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
int      getloadavg(double [], int);
                           ^
/usr/local/include/stdlib.h:296:24: note: insert '_Nullable' if the array parameter may be null
int      getloadavg(double [], int);
                           ^
                            _Nullable
/usr/local/include/stdlib.h:296:24: note: insert '_Nonnull' if the array parameter should never be null
int      getloadavg(double [], int);
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:298:2: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        *getprogname(void);
        ^
/usr/local/include/stdlib.h:298:2: note: insert '_Nullable' if the pointer may be null
        *getprogname(void);
        ^
          _Nullable 
/usr/local/include/stdlib.h:298:2: note: insert '_Nonnull' if the pointer should never be null
        *getprogname(void);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:299:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     setprogname(const char *);
                                ^
/usr/local/include/stdlib.h:299:30: note: insert '_Nullable' if the pointer may be null
void     setprogname(const char *);
                                ^
                                 _Nullable
/usr/local/include/stdlib.h:299:30: note: insert '_Nonnull' if the pointer should never be null
void     setprogname(const char *);
                                ^
                                 _Nonnull
/usr/local/include/stdlib.h:309:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      heapsort(void *__base, size_t __nel, size_t __width,
                       ^
/usr/local/include/stdlib.h:309:20: note: insert '_Nullable' if the pointer may be null
int      heapsort(void *__base, size_t __nel, size_t __width,
                       ^
                         _Nullable 
/usr/local/include/stdlib.h:309:20: note: insert '_Nonnull' if the pointer should never be null
int      heapsort(void *__base, size_t __nel, size_t __width,
                       ^
                         _Nonnull 
/usr/local/include/stdlib.h:310:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
/usr/local/include/stdlib.h:310:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:310:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:310:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
/usr/local/include/stdlib.h:310:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:310:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:312:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      heapsort_b(void *__base, size_t __nel, size_t __width,
                         ^
/usr/local/include/stdlib.h:312:22: note: insert '_Nullable' if the pointer may be null
int      heapsort_b(void *__base, size_t __nel, size_t __width,
                         ^
                           _Nullable 
/usr/local/include/stdlib.h:312:22: note: insert '_Nonnull' if the pointer should never be null
int      heapsort_b(void *__base, size_t __nel, size_t __width,
                         ^
                           _Nonnull 
/usr/local/include/stdlib.h:313:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
/usr/local/include/stdlib.h:313:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:313:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:313:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
/usr/local/include/stdlib.h:313:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:313:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:316:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mergesort(void *__base, size_t __nel, size_t __width,
                        ^
/usr/local/include/stdlib.h:316:21: note: insert '_Nullable' if the pointer may be null
int      mergesort(void *__base, size_t __nel, size_t __width,
                        ^
                          _Nullable 
/usr/local/include/stdlib.h:316:21: note: insert '_Nonnull' if the pointer should never be null
int      mergesort(void *__base, size_t __nel, size_t __width,
                        ^
                          _Nonnull 
/usr/local/include/stdlib.h:317:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
/usr/local/include/stdlib.h:317:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:317:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:317:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
/usr/local/include/stdlib.h:317:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:317:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:319:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mergesort_b(void *__base, size_t __nel, size_t __width,
                          ^
/usr/local/include/stdlib.h:319:23: note: insert '_Nullable' if the pointer may be null
int      mergesort_b(void *__base, size_t __nel, size_t __width,
                          ^
                            _Nullable 
/usr/local/include/stdlib.h:319:23: note: insert '_Nonnull' if the pointer should never be null
int      mergesort_b(void *__base, size_t __nel, size_t __width,
                          ^
                            _Nonnull 
/usr/local/include/stdlib.h:320:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
/usr/local/include/stdlib.h:320:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:320:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:320:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
/usr/local/include/stdlib.h:320:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:320:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:323:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort(void *__base, size_t __nel, size_t __width,
                    ^
/usr/local/include/stdlib.h:323:18: note: insert '_Nullable' if the pointer may be null
void     psort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nullable 
/usr/local/include/stdlib.h:323:18: note: insert '_Nonnull' if the pointer should never be null
void     psort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nonnull 
/usr/local/include/stdlib.h:324:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *))
                                                 ^
/usr/local/include/stdlib.h:324:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *))
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:324:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *))
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:324:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *))
                                                               ^
/usr/local/include/stdlib.h:324:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *))
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:324:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *))
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:327:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort_b(void *__base, size_t __nel, size_t __width,
                      ^
/usr/local/include/stdlib.h:327:20: note: insert '_Nullable' if the pointer may be null
void     psort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nullable 
/usr/local/include/stdlib.h:327:20: note: insert '_Nonnull' if the pointer should never be null
void     psort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nonnull 
/usr/local/include/stdlib.h:328:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
/usr/local/include/stdlib.h:328:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:328:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:328:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
/usr/local/include/stdlib.h:328:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:328:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:331:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
/usr/local/include/stdlib.h:331:20: note: insert '_Nullable' if the pointer may be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nullable 
/usr/local/include/stdlib.h:331:20: note: insert '_Nonnull' if the pointer should never be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nonnull 
/usr/local/include/stdlib.h:331:64: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
/usr/local/include/stdlib.h:331:64: note: insert '_Nullable' if the pointer may be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nullable
/usr/local/include/stdlib.h:331:64: note: insert '_Nonnull' if the pointer should never be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nonnull
/usr/local/include/stdlib.h:332:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                           ^
/usr/local/include/stdlib.h:332:37: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                           ^
                                            _Nullable
/usr/local/include/stdlib.h:332:37: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                           ^
                                            _Nonnull
/usr/local/include/stdlib.h:332:51: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                                         ^
/usr/local/include/stdlib.h:332:51: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                                         ^
                                                          _Nullable
/usr/local/include/stdlib.h:332:51: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                                         ^
                                                          _Nonnull
/usr/local/include/stdlib.h:332:65: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                                                       ^
/usr/local/include/stdlib.h:332:65: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                                                       ^
                                                                        _Nullable
/usr/local/include/stdlib.h:332:65: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                                                       ^
                                                                        _Nonnull
/usr/local/include/stdlib.h:335:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort_b(void *__base, size_t __nel, size_t __width,
                      ^
/usr/local/include/stdlib.h:335:20: note: insert '_Nullable' if the pointer may be null
void     qsort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nullable 
/usr/local/include/stdlib.h:335:20: note: insert '_Nonnull' if the pointer should never be null
void     qsort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nonnull 
/usr/local/include/stdlib.h:336:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
/usr/local/include/stdlib.h:336:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:336:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:336:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
/usr/local/include/stdlib.h:336:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:336:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:339:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
/usr/local/include/stdlib.h:339:20: note: insert '_Nullable' if the pointer may be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nullable 
/usr/local/include/stdlib.h:339:20: note: insert '_Nonnull' if the pointer should never be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nonnull 
/usr/local/include/stdlib.h:339:64: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
/usr/local/include/stdlib.h:339:64: note: insert '_Nullable' if the pointer may be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nullable
/usr/local/include/stdlib.h:339:64: note: insert '_Nonnull' if the pointer should never be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nonnull
/usr/local/include/stdlib.h:340:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                           ^
/usr/local/include/stdlib.h:340:37: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                           ^
                                            _Nullable
/usr/local/include/stdlib.h:340:37: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                           ^
                                            _Nonnull
/usr/local/include/stdlib.h:340:51: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                         ^
/usr/local/include/stdlib.h:340:51: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                         ^
                                                          _Nullable
/usr/local/include/stdlib.h:340:51: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                         ^
                                                          _Nonnull
/usr/local/include/stdlib.h:340:65: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                                       ^
/usr/local/include/stdlib.h:340:65: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                                       ^
                                                                        _Nullable
/usr/local/include/stdlib.h:340:65: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                                       ^
                                                                        _Nonnull
/usr/local/include/stdlib.h:341:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                       ^
/usr/local/include/stdlib.h:341:36: note: insert '_Nullable' if the pointer may be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                       ^
                                        _Nullable
/usr/local/include/stdlib.h:341:36: note: insert '_Nonnull' if the pointer should never be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                       ^
                                        _Nonnull
/usr/local/include/stdlib.h:341:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
/usr/local/include/stdlib.h:341:37: note: insert '_Nullable' if the pointer may be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                          _Nullable 
/usr/local/include/stdlib.h:341:37: note: insert '_Nonnull' if the pointer should never be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                          _Nonnull 
/usr/local/include/stdlib.h:341:77: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                ^
/usr/local/include/stdlib.h:341:77: note: insert '_Nullable' if the pointer may be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                ^
                                                                                  _Nullable 
/usr/local/include/stdlib.h:341:77: note: insert '_Nonnull' if the pointer should never be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                ^
                                                                                  _Nonnull 
/usr/local/include/stdlib.h:343:24: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int     rpmatch(const char *)
                           ^
/usr/local/include/stdlib.h:343:24: note: insert '_Nullable' if the pointer may be null
int     rpmatch(const char *)
                           ^
                            _Nullable
/usr/local/include/stdlib.h:343:24: note: insert '_Nonnull' if the pointer should never be null
int     rpmatch(const char *)
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:345:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
/usr/local/include/stdlib.h:345:37: note: insert '_Nullable' if the pointer may be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                         _Nullable
/usr/local/include/stdlib.h:345:37: note: insert '_Nonnull' if the pointer should never be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                         _Nonnull
/usr/local/include/stdlib.h:345:38: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                         ^
/usr/local/include/stdlib.h:345:38: note: insert '_Nullable' if the pointer may be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                         ^
                                           _Nullable 
/usr/local/include/stdlib.h:345:38: note: insert '_Nonnull' if the pointer should never be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                         ^
                                           _Nonnull 
/usr/local/include/stdlib.h:345:78: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                 ^
/usr/local/include/stdlib.h:345:78: note: insert '_Nullable' if the pointer may be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                 ^
                                                                                   _Nullable 
/usr/local/include/stdlib.h:345:78: note: insert '_Nonnull' if the pointer should never be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                 ^
                                                                                   _Nonnull 
/usr/local/include/stdlib.h:349:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
                       ^
/usr/local/include/stdlib.h:349:21: note: insert '_Nullable' if the pointer may be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
                       ^
                         _Nullable 
/usr/local/include/stdlib.h:349:21: note: insert '_Nonnull' if the pointer should never be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
                       ^
                         _Nonnull 
/usr/local/include/stdlib.h:349:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
        ^
/usr/local/include/stdlib.h:349:6: note: insert '_Nullable' if the pointer may be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
        ^
          _Nullable 
/usr/local/include/stdlib.h:349:6: note: insert '_Nonnull' if the pointer should never be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:351:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                            ^
/usr/local/include/stdlib.h:351:22: note: insert '_Nullable' if the pointer may be null
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                            ^
                              _Nullable 
/usr/local/include/stdlib.h:351:22: note: insert '_Nonnull' if the pointer should never be null
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                            ^
                              _Nonnull 
/usr/local/include/stdlib.h:351:84: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                                                                                          ^
/usr/local/include/stdlib.h:351:84: note: insert '_Nullable' if the pointer may be null
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                                                                                          ^
                                                                                           _Nullable
/usr/local/include/stdlib.h:351:84: note: insert '_Nonnull' if the pointer should never be null
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                                                                                          ^
                                                                                           _Nonnull
/usr/local/include/stdlib.h:351:85: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                                                                                           ^
/usr/local/include/stdlib.h:351:85: note: insert '_Nullable' if the pointer may be null
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                                                                                           ^
                                                                                             _Nullable 
/usr/local/include/stdlib.h:351:85: note: insert '_Nonnull' if the pointer should never be null
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                                                                                           ^
                                                                                             _Nonnull 
/usr/local/include/stdlib.h:355:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoq(const char *__str, char **__endptr, int __base);
                           ^
/usr/local/include/stdlib.h:355:21: note: insert '_Nullable' if the pointer may be null
         strtoq(const char *__str, char **__endptr, int __base);
                           ^
                             _Nullable 
/usr/local/include/stdlib.h:355:21: note: insert '_Nonnull' if the pointer should never be null
         strtoq(const char *__str, char **__endptr, int __base);
                           ^
                             _Nonnull 
/usr/local/include/stdlib.h:355:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoq(const char *__str, char **__endptr, int __base);
                                        ^
/usr/local/include/stdlib.h:355:34: note: insert '_Nullable' if the pointer may be null
         strtoq(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nullable
/usr/local/include/stdlib.h:355:34: note: insert '_Nonnull' if the pointer should never be null
         strtoq(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nonnull
/usr/local/include/stdlib.h:355:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoq(const char *__str, char **__endptr, int __base);
                                         ^
/usr/local/include/stdlib.h:355:35: note: insert '_Nullable' if the pointer may be null
         strtoq(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nullable 
/usr/local/include/stdlib.h:355:35: note: insert '_Nonnull' if the pointer should never be null
         strtoq(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nonnull 
/usr/local/include/stdlib.h:357:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtouq(const char *__str, char **__endptr, int __base);
                            ^
/usr/local/include/stdlib.h:357:22: note: insert '_Nullable' if the pointer may be null
         strtouq(const char *__str, char **__endptr, int __base);
                            ^
                              _Nullable 
/usr/local/include/stdlib.h:357:22: note: insert '_Nonnull' if the pointer should never be null
         strtouq(const char *__str, char **__endptr, int __base);
                            ^
                              _Nonnull 
/usr/local/include/stdlib.h:357:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtouq(const char *__str, char **__endptr, int __base);
                                         ^
/usr/local/include/stdlib.h:357:35: note: insert '_Nullable' if the pointer may be null
         strtouq(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nullable
/usr/local/include/stdlib.h:357:35: note: insert '_Nonnull' if the pointer should never be null
         strtouq(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nonnull
/usr/local/include/stdlib.h:357:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtouq(const char *__str, char **__endptr, int __base);
                                          ^
/usr/local/include/stdlib.h:357:36: note: insert '_Nullable' if the pointer may be null
         strtouq(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nullable 
/usr/local/include/stdlib.h:357:36: note: insert '_Nonnull' if the pointer should never be null
         strtouq(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nonnull 
/usr/local/include/stdlib.h:359:13: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
extern char *suboptarg;         /* getsubopt(3) external variable */
            ^
/usr/local/include/stdlib.h:359:13: note: insert '_Nullable' if the pointer may be null
extern char *suboptarg;         /* getsubopt(3) external variable */
            ^
              _Nullable 
/usr/local/include/stdlib.h:359:13: note: insert '_Nonnull' if the pointer should never be null
extern char *suboptarg;         /* getsubopt(3) external variable */
            ^
              _Nonnull 
193 warnings generated.
checked program was:
/* begin */
1: #include "ruby.h"
2: 
3: #include <mysql.h>
4: 
5: /*top*/
6: typedef int conftest_type;
7: conftest_type conftestval = (int)SERVER_QUERY_NO_INDEX_USED;
/* end */

--------------------

have_const: checking for SERVER_QUERY_WAS_SLOW in mysql.h... -------------------- yes

"gcc -I/Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/x86_64-darwin19 -I/Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/backward -I/Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0 -I. -I/usr/local/opt/mysql-client/include/mysql  -I/usr/local/opt/libyaml/include -I/usr/local/opt/libksba/include -I/usr/local/opt/readline/include -I/usr/local/opt/zlib/include -I/usr/local/opt/openssl@1.1/include -D_XOPEN_SOURCE -D_DARWIN_C_SOURCE -D_DARWIN_UNLIMITED_SELECT -D_REENTRANT   -O3 -ggdb3 -Wall -Wextra -Wdeprecated-declarations -Wdivision-by-zero -Wimplicit-function-declaration -Wimplicit-int -Wpointer-arith -Wshorten-64-to-32 -Wwrite-strings -Wmissing-noreturn -Wno-constant-logical-operand -Wno-long-long -Wno-missing-field-initializers -Wno-overlength-strings -Wno-parentheses-equality -Wno-self-assign -Wno-tautological-compare -Wno-unused-parameter -Wno-unused-value -Wunused-variable -Wextra-tokens  -fno-common -pipe -DFULL_SSL_MODE_SUPPORT   -c conftest.c"
In file included from conftest.c:1:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby.h:33:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/ruby.h:29:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/defines.h:126:
In file included from /usr/local/include/stdio.h:64:
/usr/local/include/_stdio.h:93:16: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        unsigned char   *_base;
                        ^
/usr/local/include/_stdio.h:93:16: note: insert '_Nullable' if the pointer may be null
        unsigned char   *_base;
                        ^
                          _Nullable 
/usr/local/include/_stdio.h:93:16: note: insert '_Nonnull' if the pointer should never be null
        unsigned char   *_base;
                        ^
                          _Nonnull 
/usr/local/include/_stdio.h:138:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
/usr/local/include/_stdio.h:138:32: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
                                           _Nullable
/usr/local/include/_stdio.h:138:32: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
                                           _Nonnull
/usr/local/include/_stdio.h:138:40: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
/usr/local/include/_stdio.h:138:40: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
                                                   _Nullable
/usr/local/include/_stdio.h:138:40: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
                                                   _Nonnull
/usr/local/include/_stdio.h:139:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
/usr/local/include/_stdio.h:139:35: note: insert '_Nullable' if the pointer may be null
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
                                           _Nullable
/usr/local/include/_stdio.h:139:35: note: insert '_Nonnull' if the pointer should never be null
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
                                           _Nonnull
/usr/local/include/_stdio.h:140:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
/usr/local/include/_stdio.h:140:32: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
                                           _Nullable
/usr/local/include/_stdio.h:140:32: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
                                           _Nonnull
/usr/local/include/_stdio.h:140:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
/usr/local/include/_stdio.h:140:46: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
                                                         _Nullable
/usr/local/include/_stdio.h:140:46: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
                                                         _Nonnull
/usr/local/include/_stdio.h:144:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
/usr/local/include/_stdio.h:144:18: note: insert '_Nullable' if the pointer may be null
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
                          _Nullable 
/usr/local/include/_stdio.h:144:18: note: insert '_Nonnull' if the pointer should never be null
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
                          _Nonnull 
In file included from conftest.c:1:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby.h:33:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/ruby.h:29:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/defines.h:126:
/usr/local/include/stdio.h:67:13: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
extern FILE *__stdinp;
            ^
/usr/local/include/stdio.h:67:13: note: insert '_Nullable' if the pointer may be null
extern FILE *__stdinp;
            ^
              _Nullable 
/usr/local/include/stdio.h:67:13: note: insert '_Nonnull' if the pointer should never be null
extern FILE *__stdinp;
            ^
              _Nonnull 
/usr/local/include/stdio.h:386:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 int (* _Nullable)(void *, const char *, int),
                                        ^
/usr/local/include/stdio.h:386:41: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *, const char *, int),
                                        ^
                                         _Nullable
/usr/local/include/stdio.h:386:41: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *, const char *, int),
                                        ^
                                         _Nonnull
/usr/local/include/stdio.h:386:55: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
/usr/local/include/stdio.h:386:55: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
                                                       _Nullable
/usr/local/include/stdio.h:386:55: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
                                                       _Nonnull
/usr/local/include/stdio.h:387:44: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
/usr/local/include/stdio.h:387:44: note: insert '_Nullable' if the pointer may be null
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
                                            _Nullable
/usr/local/include/stdio.h:387:44: note: insert '_Nonnull' if the pointer should never be null
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
                                            _Nonnull
/usr/local/include/stdio.h:388:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 int (* _Nullable)(void *));
                                        ^
/usr/local/include/stdio.h:388:41: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *));
                                        ^
                                         _Nullable
/usr/local/include/stdio.h:388:41: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *));
                                        ^
                                         _Nonnull
/usr/local/include/stdio.h:384:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
FILE    *funopen(const void *,
        ^
/usr/local/include/stdio.h:384:6: note: insert '_Nullable' if the pointer may be null
FILE    *funopen(const void *,
        ^
          _Nullable 
/usr/local/include/stdio.h:384:6: note: insert '_Nonnull' if the pointer should never be null
FILE    *funopen(const void *,
        ^
          _Nonnull 
In file included from conftest.c:1:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby.h:33:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/ruby.h:29:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/defines.h:134:
/usr/local/include/stdlib.h:134:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   atof(const char *);
                         ^
/usr/local/include/stdlib.h:134:25: note: insert '_Nullable' if the pointer may be null
double   atof(const char *);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:134:25: note: insert '_Nonnull' if the pointer should never be null
double   atof(const char *);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:135:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      atoi(const char *);
                         ^
/usr/local/include/stdlib.h:135:22: note: insert '_Nullable' if the pointer may be null
int      atoi(const char *);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:135:22: note: insert '_Nonnull' if the pointer should never be null
int      atoi(const char *);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:136:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     atol(const char *);
                         ^
/usr/local/include/stdlib.h:136:23: note: insert '_Nullable' if the pointer may be null
long     atol(const char *);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:136:23: note: insert '_Nonnull' if the pointer should never be null
long     atol(const char *);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:139:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         atoll(const char *);
                          ^
/usr/local/include/stdlib.h:139:20: note: insert '_Nullable' if the pointer may be null
         atoll(const char *);
                          ^
                           _Nullable
/usr/local/include/stdlib.h:139:20: note: insert '_Nonnull' if the pointer should never be null
         atoll(const char *);
                          ^
                           _Nonnull
/usr/local/include/stdlib.h:141:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                            ^
/usr/local/include/stdlib.h:141:26: note: insert '_Nullable' if the pointer may be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                            ^
                              _Nullable 
/usr/local/include/stdlib.h:141:26: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                            ^
                              _Nonnull 
/usr/local/include/stdlib.h:141:45: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                                               ^
/usr/local/include/stdlib.h:141:45: note: insert '_Nullable' if the pointer may be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                                               ^
                                                 _Nullable 
/usr/local/include/stdlib.h:141:45: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                                               ^
                                                 _Nonnull 
/usr/local/include/stdlib.h:142:59: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                 ^
/usr/local/include/stdlib.h:142:59: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                 ^
                                                                  _Nullable
/usr/local/include/stdlib.h:142:59: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                 ^
                                                                  _Nonnull
/usr/local/include/stdlib.h:142:73: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                               ^
/usr/local/include/stdlib.h:142:73: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                               ^
                                                                                _Nullable
/usr/local/include/stdlib.h:142:73: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                               ^
                                                                                _Nonnull
/usr/local/include/stdlib.h:141:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch(const void *__key, const void *__base, size_t __nel,
        ^
/usr/local/include/stdlib.h:141:6: note: insert '_Nullable' if the pointer may be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
        ^
          _Nullable 
/usr/local/include/stdlib.h:141:6: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
        ^
          _Nonnull 
/usr/local/include/stdlib.h:147:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getenv(const char *);
                           ^
/usr/local/include/stdlib.h:147:25: note: insert '_Nullable' if the pointer may be null
char    *getenv(const char *);
                           ^
                            _Nullable
/usr/local/include/stdlib.h:147:25: note: insert '_Nonnull' if the pointer should never be null
char    *getenv(const char *);
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:147:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getenv(const char *);
        ^
/usr/local/include/stdlib.h:147:6: note: insert '_Nullable' if the pointer may be null
char    *getenv(const char *);
        ^
          _Nullable 
/usr/local/include/stdlib.h:147:6: note: insert '_Nonnull' if the pointer should never be null
char    *getenv(const char *);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:156:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mblen(const char *__s, size_t __n);
                          ^
/usr/local/include/stdlib.h:156:23: note: insert '_Nullable' if the pointer may be null
int      mblen(const char *__s, size_t __n);
                          ^
                            _Nullable 
/usr/local/include/stdlib.h:156:23: note: insert '_Nonnull' if the pointer should never be null
int      mblen(const char *__s, size_t __n);
                          ^
                            _Nonnull 
/usr/local/include/stdlib.h:157:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                          ^
/usr/local/include/stdlib.h:157:26: note: insert '_Nullable' if the pointer may be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                          ^
                            _Nullable
/usr/local/include/stdlib.h:157:26: note: insert '_Nonnull' if the pointer should never be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                          ^
                            _Nonnull
/usr/local/include/stdlib.h:157:52: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                                                    ^
/usr/local/include/stdlib.h:157:52: note: insert '_Nullable' if the pointer may be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                                                    ^
                                                      _Nullable
/usr/local/include/stdlib.h:157:52: note: insert '_Nonnull' if the pointer should never be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                                                    ^
                                                      _Nonnull
/usr/local/include/stdlib.h:158:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                        ^
/usr/local/include/stdlib.h:158:21: note: insert '_Nullable' if the pointer may be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                        ^
                          _Nullable
/usr/local/include/stdlib.h:158:21: note: insert '_Nonnull' if the pointer should never be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                        ^
                          _Nonnull
/usr/local/include/stdlib.h:158:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                                                 ^
/usr/local/include/stdlib.h:158:46: note: insert '_Nullable' if the pointer may be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                                                 ^
                                                   _Nullable
/usr/local/include/stdlib.h:158:46: note: insert '_Nonnull' if the pointer should never be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                                                 ^
                                                   _Nonnull
/usr/local/include/stdlib.h:160:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort(void *__base, size_t __nel, size_t __width,
                    ^
/usr/local/include/stdlib.h:160:18: note: insert '_Nullable' if the pointer may be null
void     qsort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nullable 
/usr/local/include/stdlib.h:160:18: note: insert '_Nonnull' if the pointer should never be null
void     qsort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nonnull 
/usr/local/include/stdlib.h:161:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
/usr/local/include/stdlib.h:161:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:161:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:161:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
/usr/local/include/stdlib.h:161:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:161:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:165:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                           ^
/usr/local/include/stdlib.h:165:27: note: insert '_Nullable' if the pointer may be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                           ^
                            _Nullable
/usr/local/include/stdlib.h:165:27: note: insert '_Nonnull' if the pointer should never be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:165:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                   ^
/usr/local/include/stdlib.h:165:35: note: insert '_Nullable' if the pointer may be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                   ^
                                    _Nullable
/usr/local/include/stdlib.h:165:35: note: insert '_Nonnull' if the pointer should never be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                   ^
                                    _Nonnull
/usr/local/include/stdlib.h:165:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                    ^
/usr/local/include/stdlib.h:165:36: note: insert '_Nullable' if the pointer may be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                    ^
                                     _Nullable
/usr/local/include/stdlib.h:165:36: note: insert '_Nonnull' if the pointer should never be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                    ^
                                     _Nonnull
/usr/local/include/stdlib.h:166:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                           ^
/usr/local/include/stdlib.h:166:26: note: insert '_Nullable' if the pointer may be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                           ^
                            _Nullable
/usr/local/include/stdlib.h:166:26: note: insert '_Nonnull' if the pointer should never be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:166:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                   ^
/usr/local/include/stdlib.h:166:34: note: insert '_Nullable' if the pointer may be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                   ^
                                    _Nullable
/usr/local/include/stdlib.h:166:34: note: insert '_Nonnull' if the pointer should never be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                   ^
                                    _Nonnull
/usr/local/include/stdlib.h:166:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                    ^
/usr/local/include/stdlib.h:166:35: note: insert '_Nullable' if the pointer may be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                    ^
                                     _Nullable
/usr/local/include/stdlib.h:166:35: note: insert '_Nonnull' if the pointer should never be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                    ^
                                     _Nonnull
/usr/local/include/stdlib.h:167:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     strtol(const char *__str, char **__endptr, int __base);
                           ^
/usr/local/include/stdlib.h:167:25: note: insert '_Nullable' if the pointer may be null
long     strtol(const char *__str, char **__endptr, int __base);
                           ^
                             _Nullable 
/usr/local/include/stdlib.h:167:25: note: insert '_Nonnull' if the pointer should never be null
long     strtol(const char *__str, char **__endptr, int __base);
                           ^
                             _Nonnull 
/usr/local/include/stdlib.h:167:38: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     strtol(const char *__str, char **__endptr, int __base);
                                        ^
/usr/local/include/stdlib.h:167:38: note: insert '_Nullable' if the pointer may be null
long     strtol(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nullable
/usr/local/include/stdlib.h:167:38: note: insert '_Nonnull' if the pointer should never be null
long     strtol(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nonnull
/usr/local/include/stdlib.h:167:39: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     strtol(const char *__str, char **__endptr, int __base);
                                         ^
/usr/local/include/stdlib.h:167:39: note: insert '_Nullable' if the pointer may be null
long     strtol(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nullable 
/usr/local/include/stdlib.h:167:39: note: insert '_Nonnull' if the pointer should never be null
long     strtol(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nonnull 
/usr/local/include/stdlib.h:169:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtold(const char *, char **);
                            ^
/usr/local/include/stdlib.h:169:22: note: insert '_Nullable' if the pointer may be null
         strtold(const char *, char **);
                            ^
                             _Nullable
/usr/local/include/stdlib.h:169:22: note: insert '_Nonnull' if the pointer should never be null
         strtold(const char *, char **);
                            ^
                             _Nonnull
/usr/local/include/stdlib.h:169:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtold(const char *, char **);
                                    ^
/usr/local/include/stdlib.h:169:30: note: insert '_Nullable' if the pointer may be null
         strtold(const char *, char **);
                                    ^
                                     _Nullable
/usr/local/include/stdlib.h:169:30: note: insert '_Nonnull' if the pointer should never be null
         strtold(const char *, char **);
                                    ^
                                     _Nonnull
/usr/local/include/stdlib.h:169:31: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtold(const char *, char **);
                                     ^
/usr/local/include/stdlib.h:169:31: note: insert '_Nullable' if the pointer may be null
         strtold(const char *, char **);
                                     ^
                                      _Nullable
/usr/local/include/stdlib.h:169:31: note: insert '_Nonnull' if the pointer should never be null
         strtold(const char *, char **);
                                     ^
                                      _Nonnull
/usr/local/include/stdlib.h:172:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoll(const char *__str, char **__endptr, int __base);
                            ^
/usr/local/include/stdlib.h:172:22: note: insert '_Nullable' if the pointer may be null
         strtoll(const char *__str, char **__endptr, int __base);
                            ^
                              _Nullable 
/usr/local/include/stdlib.h:172:22: note: insert '_Nonnull' if the pointer should never be null
         strtoll(const char *__str, char **__endptr, int __base);
                            ^
                              _Nonnull 
/usr/local/include/stdlib.h:172:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoll(const char *__str, char **__endptr, int __base);
                                         ^
/usr/local/include/stdlib.h:172:35: note: insert '_Nullable' if the pointer may be null
         strtoll(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nullable
/usr/local/include/stdlib.h:172:35: note: insert '_Nonnull' if the pointer should never be null
         strtoll(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nonnull
/usr/local/include/stdlib.h:172:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoll(const char *__str, char **__endptr, int __base);
                                          ^
/usr/local/include/stdlib.h:172:36: note: insert '_Nullable' if the pointer may be null
         strtoll(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nullable 
/usr/local/include/stdlib.h:172:36: note: insert '_Nonnull' if the pointer should never be null
         strtoll(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nonnull 
/usr/local/include/stdlib.h:175:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoul(const char *__str, char **__endptr, int __base);
                            ^
/usr/local/include/stdlib.h:175:22: note: insert '_Nullable' if the pointer may be null
         strtoul(const char *__str, char **__endptr, int __base);
                            ^
                              _Nullable 
/usr/local/include/stdlib.h:175:22: note: insert '_Nonnull' if the pointer should never be null
         strtoul(const char *__str, char **__endptr, int __base);
                            ^
                              _Nonnull 
/usr/local/include/stdlib.h:175:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoul(const char *__str, char **__endptr, int __base);
                                         ^
/usr/local/include/stdlib.h:175:35: note: insert '_Nullable' if the pointer may be null
         strtoul(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nullable
/usr/local/include/stdlib.h:175:35: note: insert '_Nonnull' if the pointer should never be null
         strtoul(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nonnull
/usr/local/include/stdlib.h:175:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoul(const char *__str, char **__endptr, int __base);
                                          ^
/usr/local/include/stdlib.h:175:36: note: insert '_Nullable' if the pointer may be null
         strtoul(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nullable 
/usr/local/include/stdlib.h:175:36: note: insert '_Nonnull' if the pointer should never be null
         strtoul(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nonnull 
/usr/local/include/stdlib.h:178:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoull(const char *__str, char **__endptr, int __base);
                             ^
/usr/local/include/stdlib.h:178:23: note: insert '_Nullable' if the pointer may be null
         strtoull(const char *__str, char **__endptr, int __base);
                             ^
                               _Nullable 
/usr/local/include/stdlib.h:178:23: note: insert '_Nonnull' if the pointer should never be null
         strtoull(const char *__str, char **__endptr, int __base);
                             ^
                               _Nonnull 
/usr/local/include/stdlib.h:178:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoull(const char *__str, char **__endptr, int __base);
                                          ^
/usr/local/include/stdlib.h:178:36: note: insert '_Nullable' if the pointer may be null
         strtoull(const char *__str, char **__endptr, int __base);
                                          ^
                                           _Nullable
/usr/local/include/stdlib.h:178:36: note: insert '_Nonnull' if the pointer should never be null
         strtoull(const char *__str, char **__endptr, int __base);
                                          ^
                                           _Nonnull
/usr/local/include/stdlib.h:178:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoull(const char *__str, char **__endptr, int __base);
                                           ^
/usr/local/include/stdlib.h:178:37: note: insert '_Nullable' if the pointer may be null
         strtoull(const char *__str, char **__endptr, int __base);
                                           ^
                                             _Nullable 
/usr/local/include/stdlib.h:178:37: note: insert '_Nonnull' if the pointer should never be null
         strtoull(const char *__str, char **__endptr, int __base);
                                           ^
                                             _Nonnull 
/usr/local/include/stdlib.h:190:24: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      system(const char *) __DARWIN_ALIAS_C(system);
                           ^
/usr/local/include/stdlib.h:190:24: note: insert '_Nullable' if the pointer may be null
int      system(const char *) __DARWIN_ALIAS_C(system);
                           ^
                            _Nullable
/usr/local/include/stdlib.h:190:24: note: insert '_Nonnull' if the pointer should never be null
int      system(const char *) __DARWIN_ALIAS_C(system);
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:194:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                       ^
/usr/local/include/stdlib.h:194:23: note: insert '_Nullable' if the pointer may be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                       ^
                         _Nullable
/usr/local/include/stdlib.h:194:23: note: insert '_Nonnull' if the pointer should never be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                       ^
                         _Nonnull
/usr/local/include/stdlib.h:194:51: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                                                   ^
/usr/local/include/stdlib.h:194:51: note: insert '_Nullable' if the pointer may be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                                                   ^
                                                     _Nullable
/usr/local/include/stdlib.h:194:51: note: insert '_Nonnull' if the pointer should never be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                                                   ^
                                                     _Nonnull
/usr/local/include/stdlib.h:195:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      wctomb(char *, wchar_t);
                     ^
/usr/local/include/stdlib.h:195:18: note: insert '_Nullable' if the pointer may be null
int      wctomb(char *, wchar_t);
                     ^
                      _Nullable
/usr/local/include/stdlib.h:195:18: note: insert '_Nonnull' if the pointer should never be null
int      wctomb(char *, wchar_t);
                     ^
                      _Nonnull
/usr/local/include/stdlib.h:199:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     a64l(const char *);
                         ^
/usr/local/include/stdlib.h:199:23: note: insert '_Nullable' if the pointer may be null
long     a64l(const char *);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:199:23: note: insert '_Nonnull' if the pointer should never be null
long     a64l(const char *);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:201:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
/usr/local/include/stdlib.h:201:29: note: insert '_Nullable' if the pointer may be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nullable 
/usr/local/include/stdlib.h:201:29: note: insert '_Nonnull' if the pointer should never be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nonnull 
/usr/local/include/stdlib.h:201:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
/usr/local/include/stdlib.h:201:46: note: insert '_Nullable' if the pointer may be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nullable 
/usr/local/include/stdlib.h:201:46: note: insert '_Nonnull' if the pointer should never be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nonnull 
/usr/local/include/stdlib.h:201:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
/usr/local/include/stdlib.h:201:6: note: insert '_Nullable' if the pointer may be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nullable 
/usr/local/include/stdlib.h:201:6: note: insert '_Nonnull' if the pointer should never be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nonnull 
/usr/local/include/stdlib.h:202:31: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
double   erand48(unsigned short[3]);
                               ^
/usr/local/include/stdlib.h:202:31: note: insert '_Nullable' if the array parameter may be null
double   erand48(unsigned short[3]);
                               ^
                                _Nullable 
/usr/local/include/stdlib.h:202:31: note: insert '_Nonnull' if the array parameter should never be null
double   erand48(unsigned short[3]);
                               ^
                                _Nonnull 
/usr/local/include/stdlib.h:203:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
/usr/local/include/stdlib.h:203:29: note: insert '_Nullable' if the pointer may be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nullable 
/usr/local/include/stdlib.h:203:29: note: insert '_Nonnull' if the pointer should never be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nonnull 
/usr/local/include/stdlib.h:203:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
/usr/local/include/stdlib.h:203:46: note: insert '_Nullable' if the pointer may be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nullable 
/usr/local/include/stdlib.h:203:46: note: insert '_Nonnull' if the pointer should never be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nonnull 
/usr/local/include/stdlib.h:203:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
/usr/local/include/stdlib.h:203:6: note: insert '_Nullable' if the pointer may be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nullable 
/usr/local/include/stdlib.h:203:6: note: insert '_Nonnull' if the pointer should never be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nonnull 
/usr/local/include/stdlib.h:204:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *gcvt(double, int, char *); /* LEGACY */
                                ^
/usr/local/include/stdlib.h:204:30: note: insert '_Nullable' if the pointer may be null
char    *gcvt(double, int, char *); /* LEGACY */
                                ^
                                 _Nullable
/usr/local/include/stdlib.h:204:30: note: insert '_Nonnull' if the pointer should never be null
char    *gcvt(double, int, char *); /* LEGACY */
                                ^
                                 _Nonnull
/usr/local/include/stdlib.h:204:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *gcvt(double, int, char *); /* LEGACY */
        ^
/usr/local/include/stdlib.h:204:6: note: insert '_Nullable' if the pointer may be null
char    *gcvt(double, int, char *); /* LEGACY */
        ^
          _Nullable 
/usr/local/include/stdlib.h:204:6: note: insert '_Nonnull' if the pointer should never be null
char    *gcvt(double, int, char *); /* LEGACY */
        ^
          _Nonnull 
/usr/local/include/stdlib.h:205:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                        ^
/usr/local/include/stdlib.h:205:21: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                        ^
                         _Nullable
/usr/local/include/stdlib.h:205:21: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                        ^
                         _Nonnull
/usr/local/include/stdlib.h:205:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                         ^
/usr/local/include/stdlib.h:205:22: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:205:22: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:205:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                 ^
/usr/local/include/stdlib.h:205:30: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                 ^
                                   _Nullable
/usr/local/include/stdlib.h:205:30: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                 ^
                                   _Nonnull
/usr/local/include/stdlib.h:205:38: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                         ^
/usr/local/include/stdlib.h:205:38: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                         ^
                                          _Nullable
/usr/local/include/stdlib.h:205:38: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                         ^
                                          _Nonnull
/usr/local/include/stdlib.h:205:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                                 ^
/usr/local/include/stdlib.h:205:46: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:205:46: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:205:47: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                                  ^
/usr/local/include/stdlib.h:205:47: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                                  ^
                                                   _Nullable
/usr/local/include/stdlib.h:205:47: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                                  ^
                                                   _Nonnull
/usr/local/include/stdlib.h:208:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
                                  ^
/usr/local/include/stdlib.h:208:32: note: insert '_Nullable' if the pointer may be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
                                  ^
                                   _Nullable
/usr/local/include/stdlib.h:208:32: note: insert '_Nonnull' if the pointer should never be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
                                  ^
                                   _Nonnull
/usr/local/include/stdlib.h:208:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
        ^
/usr/local/include/stdlib.h:208:6: note: insert '_Nullable' if the pointer may be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
        ^
          _Nullable 
/usr/local/include/stdlib.h:208:6: note: insert '_Nonnull' if the pointer should never be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
        ^
          _Nonnull 
/usr/local/include/stdlib.h:212:29: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
long     jrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
/usr/local/include/stdlib.h:212:29: note: insert '_Nullable' if the array parameter may be null
long     jrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nullable 
/usr/local/include/stdlib.h:212:29: note: insert '_Nonnull' if the array parameter should never be null
long     jrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nonnull 
/usr/local/include/stdlib.h:213:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *l64a(long);
        ^
/usr/local/include/stdlib.h:213:6: note: insert '_Nullable' if the pointer may be null
char    *l64a(long);
        ^
          _Nullable 
/usr/local/include/stdlib.h:213:6: note: insert '_Nonnull' if the pointer should never be null
char    *l64a(long);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:214:29: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
void     lcong48(unsigned short[7]);
                               ^
/usr/local/include/stdlib.h:214:29: note: insert '_Nullable' if the array parameter may be null
void     lcong48(unsigned short[7]);
                               ^
                                _Nullable 
/usr/local/include/stdlib.h:214:29: note: insert '_Nonnull' if the array parameter should never be null
void     lcong48(unsigned short[7]);
                               ^
                                _Nonnull 
/usr/local/include/stdlib.h:216:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *mktemp(char *);
                     ^
/usr/local/include/stdlib.h:216:19: note: insert '_Nullable' if the pointer may be null
char    *mktemp(char *);
                     ^
                      _Nullable
/usr/local/include/stdlib.h:216:19: note: insert '_Nonnull' if the pointer should never be null
char    *mktemp(char *);
                     ^
                      _Nonnull
/usr/local/include/stdlib.h:216:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *mktemp(char *);
        ^
/usr/local/include/stdlib.h:216:6: note: insert '_Nullable' if the pointer may be null
char    *mktemp(char *);
        ^
          _Nullable 
/usr/local/include/stdlib.h:216:6: note: insert '_Nonnull' if the pointer should never be null
char    *mktemp(char *);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:217:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mkstemp(char *);
                      ^
/usr/local/include/stdlib.h:217:19: note: insert '_Nullable' if the pointer may be null
int      mkstemp(char *);
                      ^
                       _Nullable
/usr/local/include/stdlib.h:217:19: note: insert '_Nonnull' if the pointer should never be null
int      mkstemp(char *);
                      ^
                       _Nonnull
/usr/local/include/stdlib.h:219:29: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
long     nrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
/usr/local/include/stdlib.h:219:29: note: insert '_Nullable' if the array parameter may be null
long     nrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nullable 
/usr/local/include/stdlib.h:219:29: note: insert '_Nonnull' if the array parameter should never be null
long     nrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nonnull 
/usr/local/include/stdlib.h:221:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ptsname(int);
        ^
/usr/local/include/stdlib.h:221:6: note: insert '_Nullable' if the pointer may be null
char    *ptsname(int);
        ^
          _Nullable 
/usr/local/include/stdlib.h:221:6: note: insert '_Nonnull' if the pointer should never be null
char    *ptsname(int);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:224:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int ptsname_r(int fildes, char *buffer, size_t buflen) __API_AVAILABLE(macos(10.13.4), ios(11.3), tvos(11.3), watchos(4.3));
                               ^
/usr/local/include/stdlib.h:224:32: note: insert '_Nullable' if the pointer may be null
int ptsname_r(int fildes, char *buffer, size_t buflen) __API_AVAILABLE(macos(10.13.4), ios(11.3), tvos(11.3), watchos(4.3));
                               ^
                                 _Nullable 
/usr/local/include/stdlib.h:224:32: note: insert '_Nonnull' if the pointer should never be null
int ptsname_r(int fildes, char *buffer, size_t buflen) __API_AVAILABLE(macos(10.13.4), ios(11.3), tvos(11.3), watchos(4.3));
                               ^
                                 _Nonnull 
/usr/local/include/stdlib.h:227:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      putenv(char *) __DARWIN_ALIAS(putenv);
                     ^
/usr/local/include/stdlib.h:227:18: note: insert '_Nullable' if the pointer may be null
int      putenv(char *) __DARWIN_ALIAS(putenv);
                     ^
                      _Nullable
/usr/local/include/stdlib.h:227:18: note: insert '_Nonnull' if the pointer should never be null
int      putenv(char *) __DARWIN_ALIAS(putenv);
                     ^
                      _Nonnull
/usr/local/include/stdlib.h:229:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      rand_r(unsigned *) __swift_unavailable("Use arc4random instead.");
                         ^
/usr/local/include/stdlib.h:229:22: note: insert '_Nullable' if the pointer may be null
int      rand_r(unsigned *) __swift_unavailable("Use arc4random instead.");
                         ^
                          _Nullable
/usr/local/include/stdlib.h:229:22: note: insert '_Nonnull' if the pointer should never be null
int      rand_r(unsigned *) __swift_unavailable("Use arc4random instead.");
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:231:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                             ^
/usr/local/include/stdlib.h:231:27: note: insert '_Nullable' if the pointer may be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                             ^
                               _Nullable
/usr/local/include/stdlib.h:231:27: note: insert '_Nonnull' if the pointer should never be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                             ^
                               _Nonnull
/usr/local/include/stdlib.h:231:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                                                ^
/usr/local/include/stdlib.h:231:46: note: insert '_Nullable' if the pointer may be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                                                ^
                                                  _Nullable
/usr/local/include/stdlib.h:231:46: note: insert '_Nonnull' if the pointer should never be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                                                ^
                                                  _Nonnull
/usr/local/include/stdlib.h:231:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
        ^
/usr/local/include/stdlib.h:231:6: note: insert '_Nullable' if the pointer may be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
        ^
          _Nullable 
/usr/local/include/stdlib.h:231:6: note: insert '_Nonnull' if the pointer should never be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:236:24: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
        *seed48(unsigned short[3]);
                              ^
/usr/local/include/stdlib.h:236:24: note: insert '_Nullable' if the array parameter may be null
        *seed48(unsigned short[3]);
                              ^
                               _Nullable 
/usr/local/include/stdlib.h:236:24: note: insert '_Nonnull' if the array parameter should never be null
        *seed48(unsigned short[3]);
                              ^
                               _Nonnull 
/usr/local/include/stdlib.h:236:2: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        *seed48(unsigned short[3]);
        ^
/usr/local/include/stdlib.h:236:2: note: insert '_Nullable' if the pointer may be null
        *seed48(unsigned short[3]);
        ^
          _Nullable 
/usr/local/include/stdlib.h:236:2: note: insert '_Nonnull' if the pointer should never be null
        *seed48(unsigned short[3]);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:237:24: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                           ^
/usr/local/include/stdlib.h:237:24: note: insert '_Nullable' if the pointer may be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                           ^
                             _Nullable
/usr/local/include/stdlib.h:237:24: note: insert '_Nonnull' if the pointer should never be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                           ^
                             _Nonnull
/usr/local/include/stdlib.h:237:45: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                                                ^
/usr/local/include/stdlib.h:237:45: note: insert '_Nullable' if the pointer may be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                                                ^
                                                  _Nullable
/usr/local/include/stdlib.h:237:45: note: insert '_Nonnull' if the pointer should never be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                                                ^
                                                  _Nonnull
/usr/local/include/stdlib.h:239:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     setkey(const char *) __DARWIN_ALIAS(setkey);
                           ^
/usr/local/include/stdlib.h:239:25: note: insert '_Nullable' if the pointer may be null
void     setkey(const char *) __DARWIN_ALIAS(setkey);
                           ^
                            _Nullable
/usr/local/include/stdlib.h:239:25: note: insert '_Nonnull' if the pointer should never be null
void     setkey(const char *) __DARWIN_ALIAS(setkey);
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:243:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *setstate(const char *);
                             ^
/usr/local/include/stdlib.h:243:27: note: insert '_Nullable' if the pointer may be null
char    *setstate(const char *);
                             ^
                              _Nullable
/usr/local/include/stdlib.h:243:27: note: insert '_Nonnull' if the pointer should never be null
char    *setstate(const char *);
                             ^
                              _Nonnull
/usr/local/include/stdlib.h:243:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *setstate(const char *);
        ^
/usr/local/include/stdlib.h:243:6: note: insert '_Nullable' if the pointer may be null
char    *setstate(const char *);
        ^
          _Nullable 
/usr/local/include/stdlib.h:243:6: note: insert '_Nonnull' if the pointer should never be null
char    *setstate(const char *);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:252:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      unsetenv(const char *) __DARWIN_ALIAS(unsetenv);
                             ^
/usr/local/include/stdlib.h:252:26: note: insert '_Nullable' if the pointer may be null
int      unsetenv(const char *) __DARWIN_ALIAS(unsetenv);
                             ^
                              _Nullable
/usr/local/include/stdlib.h:252:26: note: insert '_Nonnull' if the pointer should never be null
int      unsetenv(const char *) __DARWIN_ALIAS(unsetenv);
                             ^
                              _Nonnull
/usr/local/include/stdlib.h:265:42: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     arc4random_addrandom(unsigned char * /*dat*/, int /*datlen*/)
                                            ^
/usr/local/include/stdlib.h:265:42: note: insert '_Nullable' if the pointer may be null
void     arc4random_addrandom(unsigned char * /*dat*/, int /*datlen*/)
                                            ^
                                              _Nullable
/usr/local/include/stdlib.h:265:42: note: insert '_Nonnull' if the pointer should never be null
void     arc4random_addrandom(unsigned char * /*dat*/, int /*datlen*/)
                                            ^
                                              _Nonnull
/usr/local/include/stdlib.h:270:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     arc4random_buf(void * __buf, size_t __nbytes) __OSX_AVAILABLE_STARTING(__MAC_10_7, __IPHONE_4_3);
                             ^
/usr/local/include/stdlib.h:270:27: note: insert '_Nullable' if the pointer may be null
void     arc4random_buf(void * __buf, size_t __nbytes) __OSX_AVAILABLE_STARTING(__MAC_10_7, __IPHONE_4_3);
                             ^
                               _Nullable
/usr/local/include/stdlib.h:270:27: note: insert '_Nonnull' if the pointer should never be null
void     arc4random_buf(void * __buf, size_t __nbytes) __OSX_AVAILABLE_STARTING(__MAC_10_7, __IPHONE_4_3);
                             ^
                               _Nonnull
/usr/local/include/stdlib.h:276:28: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                              ^
/usr/local/include/stdlib.h:276:28: note: insert '_Nullable' if the pointer may be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                              ^
                                _Nullable 
/usr/local/include/stdlib.h:276:28: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                              ^
                                _Nonnull 
/usr/local/include/stdlib.h:276:47: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                                                 ^
/usr/local/include/stdlib.h:276:47: note: insert '_Nullable' if the pointer may be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                                                 ^
                                                   _Nullable 
/usr/local/include/stdlib.h:276:47: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                                                 ^
                                                   _Nonnull 
/usr/local/include/stdlib.h:277:59: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                 ^
/usr/local/include/stdlib.h:277:59: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                 ^
                                                                  _Nullable
/usr/local/include/stdlib.h:277:59: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                 ^
                                                                  _Nonnull
/usr/local/include/stdlib.h:277:73: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                               ^
/usr/local/include/stdlib.h:277:73: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                               ^
                                                                                _Nullable
/usr/local/include/stdlib.h:277:73: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                               ^
                                                                                _Nonnull
/usr/local/include/stdlib.h:276:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
        ^
/usr/local/include/stdlib.h:276:6: note: insert '_Nullable' if the pointer may be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
        ^
          _Nullable 
/usr/local/include/stdlib.h:276:6: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
        ^
          _Nonnull 
/usr/local/include/stdlib.h:281:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *cgetcap(char *, const char *, int);
                      ^
/usr/local/include/stdlib.h:281:20: note: insert '_Nullable' if the pointer may be null
char    *cgetcap(char *, const char *, int);
                      ^
                       _Nullable
/usr/local/include/stdlib.h:281:20: note: insert '_Nonnull' if the pointer should never be null
char    *cgetcap(char *, const char *, int);
                      ^
                       _Nonnull
/usr/local/include/stdlib.h:281:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *cgetcap(char *, const char *, int);
                                    ^
/usr/local/include/stdlib.h:281:34: note: insert '_Nullable' if the pointer may be null
char    *cgetcap(char *, const char *, int);
                                    ^
                                     _Nullable
/usr/local/include/stdlib.h:281:34: note: insert '_Nonnull' if the pointer should never be null
char    *cgetcap(char *, const char *, int);
                                    ^
                                     _Nonnull
/usr/local/include/stdlib.h:281:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *cgetcap(char *, const char *, int);
        ^
/usr/local/include/stdlib.h:281:6: note: insert '_Nullable' if the pointer may be null
char    *cgetcap(char *, const char *, int);
        ^
          _Nullable 
/usr/local/include/stdlib.h:281:6: note: insert '_Nonnull' if the pointer should never be null
char    *cgetcap(char *, const char *, int);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:283:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                      ^
/usr/local/include/stdlib.h:283:19: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                      ^
                       _Nullable
/usr/local/include/stdlib.h:283:19: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                      ^
                       _Nonnull
/usr/local/include/stdlib.h:283:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                       ^
/usr/local/include/stdlib.h:283:20: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                       ^
                        _Nullable
/usr/local/include/stdlib.h:283:20: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                       ^
                        _Nonnull
/usr/local/include/stdlib.h:283:28: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                               ^
/usr/local/include/stdlib.h:283:28: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                               ^
                                _Nullable
/usr/local/include/stdlib.h:283:28: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                               ^
                                _Nonnull
/usr/local/include/stdlib.h:283:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                                ^
/usr/local/include/stdlib.h:283:29: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                                ^
                                 _Nullable
/usr/local/include/stdlib.h:283:29: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                                ^
                                 _Nonnull
/usr/local/include/stdlib.h:283:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                                              ^
/usr/local/include/stdlib.h:283:43: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                                              ^
                                               _Nullable
/usr/local/include/stdlib.h:283:43: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                                              ^
                                               _Nonnull
/usr/local/include/stdlib.h:284:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                        ^
/usr/local/include/stdlib.h:284:21: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                        ^
                         _Nullable
/usr/local/include/stdlib.h:284:21: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                        ^
                         _Nonnull
/usr/local/include/stdlib.h:284:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                         ^
/usr/local/include/stdlib.h:284:22: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:284:22: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:284:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                                 ^
/usr/local/include/stdlib.h:284:30: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                                 ^
                                  _Nullable
/usr/local/include/stdlib.h:284:30: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                                 ^
                                  _Nonnull
/usr/local/include/stdlib.h:284:31: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                                  ^
/usr/local/include/stdlib.h:284:31: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                                  ^
                                   _Nullable
/usr/local/include/stdlib.h:284:31: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                                  ^
                                   _Nonnull
/usr/local/include/stdlib.h:285:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetmatch(const char *, const char *);
                              ^
/usr/local/include/stdlib.h:285:27: note: insert '_Nullable' if the pointer may be null
int      cgetmatch(const char *, const char *);
                              ^
                               _Nullable
/usr/local/include/stdlib.h:285:27: note: insert '_Nonnull' if the pointer should never be null
int      cgetmatch(const char *, const char *);
                              ^
                               _Nonnull
/usr/local/include/stdlib.h:285:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetmatch(const char *, const char *);
                                            ^
/usr/local/include/stdlib.h:285:41: note: insert '_Nullable' if the pointer may be null
int      cgetmatch(const char *, const char *);
                                            ^
                                             _Nullable
/usr/local/include/stdlib.h:285:41: note: insert '_Nonnull' if the pointer should never be null
int      cgetmatch(const char *, const char *);
                                            ^
                                             _Nonnull
/usr/local/include/stdlib.h:286:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                       ^
/usr/local/include/stdlib.h:286:20: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                       ^
                        _Nullable
/usr/local/include/stdlib.h:286:20: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                       ^
                        _Nonnull
/usr/local/include/stdlib.h:286:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                        ^
/usr/local/include/stdlib.h:286:21: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                        ^
                         _Nullable
/usr/local/include/stdlib.h:286:21: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                        ^
                         _Nonnull
/usr/local/include/stdlib.h:286:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                                ^
/usr/local/include/stdlib.h:286:29: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                                ^
                                 _Nullable
/usr/local/include/stdlib.h:286:29: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                                ^
                                 _Nonnull
/usr/local/include/stdlib.h:286:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                                 ^
/usr/local/include/stdlib.h:286:30: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                                 ^
                                  _Nullable
/usr/local/include/stdlib.h:286:30: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                                 ^
                                  _Nonnull
/usr/local/include/stdlib.h:287:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnum(char *, const char *, long *);
                      ^
/usr/local/include/stdlib.h:287:19: note: insert '_Nullable' if the pointer may be null
int      cgetnum(char *, const char *, long *);
                      ^
                       _Nullable
/usr/local/include/stdlib.h:287:19: note: insert '_Nonnull' if the pointer should never be null
int      cgetnum(char *, const char *, long *);
                      ^
                       _Nonnull
/usr/local/include/stdlib.h:287:33: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnum(char *, const char *, long *);
                                    ^
/usr/local/include/stdlib.h:287:33: note: insert '_Nullable' if the pointer may be null
int      cgetnum(char *, const char *, long *);
                                    ^
                                     _Nullable
/usr/local/include/stdlib.h:287:33: note: insert '_Nonnull' if the pointer should never be null
int      cgetnum(char *, const char *, long *);
                                    ^
                                     _Nonnull
/usr/local/include/stdlib.h:287:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnum(char *, const char *, long *);
                                            ^
/usr/local/include/stdlib.h:287:41: note: insert '_Nullable' if the pointer may be null
int      cgetnum(char *, const char *, long *);
                                            ^
                                             _Nullable
/usr/local/include/stdlib.h:287:41: note: insert '_Nonnull' if the pointer should never be null
int      cgetnum(char *, const char *, long *);
                                            ^
                                             _Nonnull
/usr/local/include/stdlib.h:288:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetset(const char *);
                            ^
/usr/local/include/stdlib.h:288:25: note: insert '_Nullable' if the pointer may be null
int      cgetset(const char *);
                            ^
                             _Nullable
/usr/local/include/stdlib.h:288:25: note: insert '_Nonnull' if the pointer should never be null
int      cgetset(const char *);
                            ^
                             _Nonnull
/usr/local/include/stdlib.h:289:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                      ^
/usr/local/include/stdlib.h:289:19: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                      ^
                       _Nullable
/usr/local/include/stdlib.h:289:19: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                      ^
                       _Nonnull
/usr/local/include/stdlib.h:289:33: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                                    ^
/usr/local/include/stdlib.h:289:33: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                                    ^
                                     _Nullable
/usr/local/include/stdlib.h:289:33: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                                    ^
                                     _Nonnull
/usr/local/include/stdlib.h:289:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                                            ^
/usr/local/include/stdlib.h:289:41: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                                            ^
                                             _Nullable
/usr/local/include/stdlib.h:289:41: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                                            ^
                                             _Nonnull
/usr/local/include/stdlib.h:289:42: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                                             ^
/usr/local/include/stdlib.h:289:42: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                                             ^
                                              _Nullable
/usr/local/include/stdlib.h:289:42: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                                             ^
                                              _Nonnull
/usr/local/include/stdlib.h:290:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                       ^
/usr/local/include/stdlib.h:290:20: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                       ^
                        _Nullable
/usr/local/include/stdlib.h:290:20: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                       ^
                        _Nonnull
/usr/local/include/stdlib.h:290:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                                     ^
/usr/local/include/stdlib.h:290:34: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                                     ^
                                      _Nullable
/usr/local/include/stdlib.h:290:34: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                                     ^
                                      _Nonnull
/usr/local/include/stdlib.h:290:42: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                                             ^
/usr/local/include/stdlib.h:290:42: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                                             ^
                                              _Nullable
/usr/local/include/stdlib.h:290:42: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                                             ^
                                              _Nonnull
/usr/local/include/stdlib.h:290:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                                              ^
/usr/local/include/stdlib.h:290:43: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                                              ^
                                               _Nullable
/usr/local/include/stdlib.h:290:43: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                                              ^
                                               _Nonnull
/usr/local/include/stdlib.h:293:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *devname(dev_t, mode_t);
        ^
/usr/local/include/stdlib.h:293:6: note: insert '_Nullable' if the pointer may be null
char    *devname(dev_t, mode_t);
        ^
          _Nullable 
/usr/local/include/stdlib.h:293:6: note: insert '_Nonnull' if the pointer should never be null
char    *devname(dev_t, mode_t);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:294:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *devname_r(dev_t, mode_t, char *buf, int len);
                                       ^
/usr/local/include/stdlib.h:294:37: note: insert '_Nullable' if the pointer may be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
                                       ^
                                         _Nullable 
/usr/local/include/stdlib.h:294:37: note: insert '_Nonnull' if the pointer should never be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
                                       ^
                                         _Nonnull 
/usr/local/include/stdlib.h:294:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *devname_r(dev_t, mode_t, char *buf, int len);
        ^
/usr/local/include/stdlib.h:294:6: note: insert '_Nullable' if the pointer may be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
        ^
          _Nullable 
/usr/local/include/stdlib.h:294:6: note: insert '_Nonnull' if the pointer should never be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:295:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getbsize(int *, long *);
                      ^
/usr/local/include/stdlib.h:295:20: note: insert '_Nullable' if the pointer may be null
char    *getbsize(int *, long *);
                      ^
                       _Nullable
/usr/local/include/stdlib.h:295:20: note: insert '_Nonnull' if the pointer should never be null
char    *getbsize(int *, long *);
                      ^
                       _Nonnull
/usr/local/include/stdlib.h:295:28: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getbsize(int *, long *);
                              ^
/usr/local/include/stdlib.h:295:28: note: insert '_Nullable' if the pointer may be null
char    *getbsize(int *, long *);
                              ^
                               _Nullable
/usr/local/include/stdlib.h:295:28: note: insert '_Nonnull' if the pointer should never be null
char    *getbsize(int *, long *);
                              ^
                               _Nonnull
/usr/local/include/stdlib.h:295:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getbsize(int *, long *);
        ^
/usr/local/include/stdlib.h:295:6: note: insert '_Nullable' if the pointer may be null
char    *getbsize(int *, long *);
        ^
          _Nullable 
/usr/local/include/stdlib.h:295:6: note: insert '_Nonnull' if the pointer should never be null
char    *getbsize(int *, long *);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:296:24: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
int      getloadavg(double [], int);
                           ^
/usr/local/include/stdlib.h:296:24: note: insert '_Nullable' if the array parameter may be null
int      getloadavg(double [], int);
                           ^
                            _Nullable
/usr/local/include/stdlib.h:296:24: note: insert '_Nonnull' if the array parameter should never be null
int      getloadavg(double [], int);
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:298:2: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        *getprogname(void);
        ^
/usr/local/include/stdlib.h:298:2: note: insert '_Nullable' if the pointer may be null
        *getprogname(void);
        ^
          _Nullable 
/usr/local/include/stdlib.h:298:2: note: insert '_Nonnull' if the pointer should never be null
        *getprogname(void);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:299:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     setprogname(const char *);
                                ^
/usr/local/include/stdlib.h:299:30: note: insert '_Nullable' if the pointer may be null
void     setprogname(const char *);
                                ^
                                 _Nullable
/usr/local/include/stdlib.h:299:30: note: insert '_Nonnull' if the pointer should never be null
void     setprogname(const char *);
                                ^
                                 _Nonnull
/usr/local/include/stdlib.h:309:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      heapsort(void *__base, size_t __nel, size_t __width,
                       ^
/usr/local/include/stdlib.h:309:20: note: insert '_Nullable' if the pointer may be null
int      heapsort(void *__base, size_t __nel, size_t __width,
                       ^
                         _Nullable 
/usr/local/include/stdlib.h:309:20: note: insert '_Nonnull' if the pointer should never be null
int      heapsort(void *__base, size_t __nel, size_t __width,
                       ^
                         _Nonnull 
/usr/local/include/stdlib.h:310:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
/usr/local/include/stdlib.h:310:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:310:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:310:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
/usr/local/include/stdlib.h:310:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:310:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:312:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      heapsort_b(void *__base, size_t __nel, size_t __width,
                         ^
/usr/local/include/stdlib.h:312:22: note: insert '_Nullable' if the pointer may be null
int      heapsort_b(void *__base, size_t __nel, size_t __width,
                         ^
                           _Nullable 
/usr/local/include/stdlib.h:312:22: note: insert '_Nonnull' if the pointer should never be null
int      heapsort_b(void *__base, size_t __nel, size_t __width,
                         ^
                           _Nonnull 
/usr/local/include/stdlib.h:313:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
/usr/local/include/stdlib.h:313:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:313:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:313:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
/usr/local/include/stdlib.h:313:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:313:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:316:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mergesort(void *__base, size_t __nel, size_t __width,
                        ^
/usr/local/include/stdlib.h:316:21: note: insert '_Nullable' if the pointer may be null
int      mergesort(void *__base, size_t __nel, size_t __width,
                        ^
                          _Nullable 
/usr/local/include/stdlib.h:316:21: note: insert '_Nonnull' if the pointer should never be null
int      mergesort(void *__base, size_t __nel, size_t __width,
                        ^
                          _Nonnull 
/usr/local/include/stdlib.h:317:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
/usr/local/include/stdlib.h:317:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:317:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:317:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
/usr/local/include/stdlib.h:317:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:317:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:319:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mergesort_b(void *__base, size_t __nel, size_t __width,
                          ^
/usr/local/include/stdlib.h:319:23: note: insert '_Nullable' if the pointer may be null
int      mergesort_b(void *__base, size_t __nel, size_t __width,
                          ^
                            _Nullable 
/usr/local/include/stdlib.h:319:23: note: insert '_Nonnull' if the pointer should never be null
int      mergesort_b(void *__base, size_t __nel, size_t __width,
                          ^
                            _Nonnull 
/usr/local/include/stdlib.h:320:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
/usr/local/include/stdlib.h:320:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:320:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:320:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
/usr/local/include/stdlib.h:320:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:320:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:323:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort(void *__base, size_t __nel, size_t __width,
                    ^
/usr/local/include/stdlib.h:323:18: note: insert '_Nullable' if the pointer may be null
void     psort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nullable 
/usr/local/include/stdlib.h:323:18: note: insert '_Nonnull' if the pointer should never be null
void     psort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nonnull 
/usr/local/include/stdlib.h:324:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *))
                                                 ^
/usr/local/include/stdlib.h:324:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *))
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:324:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *))
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:324:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *))
                                                               ^
/usr/local/include/stdlib.h:324:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *))
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:324:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *))
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:327:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort_b(void *__base, size_t __nel, size_t __width,
                      ^
/usr/local/include/stdlib.h:327:20: note: insert '_Nullable' if the pointer may be null
void     psort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nullable 
/usr/local/include/stdlib.h:327:20: note: insert '_Nonnull' if the pointer should never be null
void     psort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nonnull 
/usr/local/include/stdlib.h:328:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
/usr/local/include/stdlib.h:328:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:328:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:328:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
/usr/local/include/stdlib.h:328:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:328:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:331:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
/usr/local/include/stdlib.h:331:20: note: insert '_Nullable' if the pointer may be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nullable 
/usr/local/include/stdlib.h:331:20: note: insert '_Nonnull' if the pointer should never be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nonnull 
/usr/local/include/stdlib.h:331:64: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
/usr/local/include/stdlib.h:331:64: note: insert '_Nullable' if the pointer may be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nullable
/usr/local/include/stdlib.h:331:64: note: insert '_Nonnull' if the pointer should never be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nonnull
/usr/local/include/stdlib.h:332:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                           ^
/usr/local/include/stdlib.h:332:37: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                           ^
                                            _Nullable
/usr/local/include/stdlib.h:332:37: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                           ^
                                            _Nonnull
/usr/local/include/stdlib.h:332:51: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                                         ^
/usr/local/include/stdlib.h:332:51: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                                         ^
                                                          _Nullable
/usr/local/include/stdlib.h:332:51: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                                         ^
                                                          _Nonnull
/usr/local/include/stdlib.h:332:65: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                                                       ^
/usr/local/include/stdlib.h:332:65: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                                                       ^
                                                                        _Nullable
/usr/local/include/stdlib.h:332:65: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                                                       ^
                                                                        _Nonnull
/usr/local/include/stdlib.h:335:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort_b(void *__base, size_t __nel, size_t __width,
                      ^
/usr/local/include/stdlib.h:335:20: note: insert '_Nullable' if the pointer may be null
void     qsort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nullable 
/usr/local/include/stdlib.h:335:20: note: insert '_Nonnull' if the pointer should never be null
void     qsort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nonnull 
/usr/local/include/stdlib.h:336:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
/usr/local/include/stdlib.h:336:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:336:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:336:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
/usr/local/include/stdlib.h:336:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:336:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:339:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
/usr/local/include/stdlib.h:339:20: note: insert '_Nullable' if the pointer may be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nullable 
/usr/local/include/stdlib.h:339:20: note: insert '_Nonnull' if the pointer should never be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nonnull 
/usr/local/include/stdlib.h:339:64: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
/usr/local/include/stdlib.h:339:64: note: insert '_Nullable' if the pointer may be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nullable
/usr/local/include/stdlib.h:339:64: note: insert '_Nonnull' if the pointer should never be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nonnull
/usr/local/include/stdlib.h:340:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                           ^
/usr/local/include/stdlib.h:340:37: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                           ^
                                            _Nullable
/usr/local/include/stdlib.h:340:37: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                           ^
                                            _Nonnull
/usr/local/include/stdlib.h:340:51: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                         ^
/usr/local/include/stdlib.h:340:51: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                         ^
                                                          _Nullable
/usr/local/include/stdlib.h:340:51: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                         ^
                                                          _Nonnull
/usr/local/include/stdlib.h:340:65: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                                       ^
/usr/local/include/stdlib.h:340:65: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                                       ^
                                                                        _Nullable
/usr/local/include/stdlib.h:340:65: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                                       ^
                                                                        _Nonnull
/usr/local/include/stdlib.h:341:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                       ^
/usr/local/include/stdlib.h:341:36: note: insert '_Nullable' if the pointer may be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                       ^
                                        _Nullable
/usr/local/include/stdlib.h:341:36: note: insert '_Nonnull' if the pointer should never be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                       ^
                                        _Nonnull
/usr/local/include/stdlib.h:341:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
/usr/local/include/stdlib.h:341:37: note: insert '_Nullable' if the pointer may be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                          _Nullable 
/usr/local/include/stdlib.h:341:37: note: insert '_Nonnull' if the pointer should never be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                          _Nonnull 
/usr/local/include/stdlib.h:341:77: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                ^
/usr/local/include/stdlib.h:341:77: note: insert '_Nullable' if the pointer may be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                ^
                                                                                  _Nullable 
/usr/local/include/stdlib.h:341:77: note: insert '_Nonnull' if the pointer should never be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                ^
                                                                                  _Nonnull 
/usr/local/include/stdlib.h:343:24: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int     rpmatch(const char *)
                           ^
/usr/local/include/stdlib.h:343:24: note: insert '_Nullable' if the pointer may be null
int     rpmatch(const char *)
                           ^
                            _Nullable
/usr/local/include/stdlib.h:343:24: note: insert '_Nonnull' if the pointer should never be null
int     rpmatch(const char *)
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:345:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
/usr/local/include/stdlib.h:345:37: note: insert '_Nullable' if the pointer may be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                         _Nullable
/usr/local/include/stdlib.h:345:37: note: insert '_Nonnull' if the pointer should never be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                         _Nonnull
/usr/local/include/stdlib.h:345:38: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                         ^
/usr/local/include/stdlib.h:345:38: note: insert '_Nullable' if the pointer may be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                         ^
                                           _Nullable 
/usr/local/include/stdlib.h:345:38: note: insert '_Nonnull' if the pointer should never be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                         ^
                                           _Nonnull 
/usr/local/include/stdlib.h:345:78: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                 ^
/usr/local/include/stdlib.h:345:78: note: insert '_Nullable' if the pointer may be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                 ^
                                                                                   _Nullable 
/usr/local/include/stdlib.h:345:78: note: insert '_Nonnull' if the pointer should never be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                 ^
                                                                                   _Nonnull 
/usr/local/include/stdlib.h:349:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
                       ^
/usr/local/include/stdlib.h:349:21: note: insert '_Nullable' if the pointer may be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
                       ^
                         _Nullable 
/usr/local/include/stdlib.h:349:21: note: insert '_Nonnull' if the pointer should never be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
                       ^
                         _Nonnull 
/usr/local/include/stdlib.h:349:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
        ^
/usr/local/include/stdlib.h:349:6: note: insert '_Nullable' if the pointer may be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
        ^
          _Nullable 
/usr/local/include/stdlib.h:349:6: note: insert '_Nonnull' if the pointer should never be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:351:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                            ^
/usr/local/include/stdlib.h:351:22: note: insert '_Nullable' if the pointer may be null
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                            ^
                              _Nullable 
/usr/local/include/stdlib.h:351:22: note: insert '_Nonnull' if the pointer should never be null
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                            ^
                              _Nonnull 
/usr/local/include/stdlib.h:351:84: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                                                                                          ^
/usr/local/include/stdlib.h:351:84: note: insert '_Nullable' if the pointer may be null
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                                                                                          ^
                                                                                           _Nullable
/usr/local/include/stdlib.h:351:84: note: insert '_Nonnull' if the pointer should never be null
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                                                                                          ^
                                                                                           _Nonnull
/usr/local/include/stdlib.h:351:85: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                                                                                           ^
/usr/local/include/stdlib.h:351:85: note: insert '_Nullable' if the pointer may be null
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                                                                                           ^
                                                                                             _Nullable 
/usr/local/include/stdlib.h:351:85: note: insert '_Nonnull' if the pointer should never be null
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                                                                                           ^
                                                                                             _Nonnull 
/usr/local/include/stdlib.h:355:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoq(const char *__str, char **__endptr, int __base);
                           ^
/usr/local/include/stdlib.h:355:21: note: insert '_Nullable' if the pointer may be null
         strtoq(const char *__str, char **__endptr, int __base);
                           ^
                             _Nullable 
/usr/local/include/stdlib.h:355:21: note: insert '_Nonnull' if the pointer should never be null
         strtoq(const char *__str, char **__endptr, int __base);
                           ^
                             _Nonnull 
/usr/local/include/stdlib.h:355:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoq(const char *__str, char **__endptr, int __base);
                                        ^
/usr/local/include/stdlib.h:355:34: note: insert '_Nullable' if the pointer may be null
         strtoq(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nullable
/usr/local/include/stdlib.h:355:34: note: insert '_Nonnull' if the pointer should never be null
         strtoq(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nonnull
/usr/local/include/stdlib.h:355:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoq(const char *__str, char **__endptr, int __base);
                                         ^
/usr/local/include/stdlib.h:355:35: note: insert '_Nullable' if the pointer may be null
         strtoq(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nullable 
/usr/local/include/stdlib.h:355:35: note: insert '_Nonnull' if the pointer should never be null
         strtoq(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nonnull 
/usr/local/include/stdlib.h:357:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtouq(const char *__str, char **__endptr, int __base);
                            ^
/usr/local/include/stdlib.h:357:22: note: insert '_Nullable' if the pointer may be null
         strtouq(const char *__str, char **__endptr, int __base);
                            ^
                              _Nullable 
/usr/local/include/stdlib.h:357:22: note: insert '_Nonnull' if the pointer should never be null
         strtouq(const char *__str, char **__endptr, int __base);
                            ^
                              _Nonnull 
/usr/local/include/stdlib.h:357:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtouq(const char *__str, char **__endptr, int __base);
                                         ^
/usr/local/include/stdlib.h:357:35: note: insert '_Nullable' if the pointer may be null
         strtouq(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nullable
/usr/local/include/stdlib.h:357:35: note: insert '_Nonnull' if the pointer should never be null
         strtouq(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nonnull
/usr/local/include/stdlib.h:357:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtouq(const char *__str, char **__endptr, int __base);
                                          ^
/usr/local/include/stdlib.h:357:36: note: insert '_Nullable' if the pointer may be null
         strtouq(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nullable 
/usr/local/include/stdlib.h:357:36: note: insert '_Nonnull' if the pointer should never be null
         strtouq(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nonnull 
/usr/local/include/stdlib.h:359:13: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
extern char *suboptarg;         /* getsubopt(3) external variable */
            ^
/usr/local/include/stdlib.h:359:13: note: insert '_Nullable' if the pointer may be null
extern char *suboptarg;         /* getsubopt(3) external variable */
            ^
              _Nullable 
/usr/local/include/stdlib.h:359:13: note: insert '_Nonnull' if the pointer should never be null
extern char *suboptarg;         /* getsubopt(3) external variable */
            ^
              _Nonnull 
193 warnings generated.
checked program was:
/* begin */
1: #include "ruby.h"
2: 
3: #include <mysql.h>
4: 
5: /*top*/
6: typedef int conftest_type;
7: conftest_type conftestval = (int)SERVER_QUERY_WAS_SLOW;
/* end */

--------------------

have_const: checking for MYSQL_OPTION_MULTI_STATEMENTS_ON in mysql.h... -------------------- yes

"gcc -I/Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/x86_64-darwin19 -I/Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/backward -I/Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0 -I. -I/usr/local/opt/mysql-client/include/mysql  -I/usr/local/opt/libyaml/include -I/usr/local/opt/libksba/include -I/usr/local/opt/readline/include -I/usr/local/opt/zlib/include -I/usr/local/opt/openssl@1.1/include -D_XOPEN_SOURCE -D_DARWIN_C_SOURCE -D_DARWIN_UNLIMITED_SELECT -D_REENTRANT   -O3 -ggdb3 -Wall -Wextra -Wdeprecated-declarations -Wdivision-by-zero -Wimplicit-function-declaration -Wimplicit-int -Wpointer-arith -Wshorten-64-to-32 -Wwrite-strings -Wmissing-noreturn -Wno-constant-logical-operand -Wno-long-long -Wno-missing-field-initializers -Wno-overlength-strings -Wno-parentheses-equality -Wno-self-assign -Wno-tautological-compare -Wno-unused-parameter -Wno-unused-value -Wunused-variable -Wextra-tokens  -fno-common -pipe -DFULL_SSL_MODE_SUPPORT   -c conftest.c"
In file included from conftest.c:1:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby.h:33:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/ruby.h:29:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/defines.h:126:
In file included from /usr/local/include/stdio.h:64:
/usr/local/include/_stdio.h:93:16: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        unsigned char   *_base;
                        ^
/usr/local/include/_stdio.h:93:16: note: insert '_Nullable' if the pointer may be null
        unsigned char   *_base;
                        ^
                          _Nullable 
/usr/local/include/_stdio.h:93:16: note: insert '_Nonnull' if the pointer should never be null
        unsigned char   *_base;
                        ^
                          _Nonnull 
/usr/local/include/_stdio.h:138:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
/usr/local/include/_stdio.h:138:32: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
                                           _Nullable
/usr/local/include/_stdio.h:138:32: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
                                           _Nonnull
/usr/local/include/_stdio.h:138:40: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
/usr/local/include/_stdio.h:138:40: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
                                                   _Nullable
/usr/local/include/_stdio.h:138:40: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
                                                   _Nonnull
/usr/local/include/_stdio.h:139:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
/usr/local/include/_stdio.h:139:35: note: insert '_Nullable' if the pointer may be null
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
                                           _Nullable
/usr/local/include/_stdio.h:139:35: note: insert '_Nonnull' if the pointer should never be null
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
                                           _Nonnull
/usr/local/include/_stdio.h:140:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
/usr/local/include/_stdio.h:140:32: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
                                           _Nullable
/usr/local/include/_stdio.h:140:32: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
                                           _Nonnull
/usr/local/include/_stdio.h:140:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
/usr/local/include/_stdio.h:140:46: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
                                                         _Nullable
/usr/local/include/_stdio.h:140:46: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
                                                         _Nonnull
/usr/local/include/_stdio.h:144:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
/usr/local/include/_stdio.h:144:18: note: insert '_Nullable' if the pointer may be null
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
                          _Nullable 
/usr/local/include/_stdio.h:144:18: note: insert '_Nonnull' if the pointer should never be null
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
                          _Nonnull 
In file included from conftest.c:1:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby.h:33:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/ruby.h:29:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/defines.h:126:
/usr/local/include/stdio.h:67:13: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
extern FILE *__stdinp;
            ^
/usr/local/include/stdio.h:67:13: note: insert '_Nullable' if the pointer may be null
extern FILE *__stdinp;
            ^
              _Nullable 
/usr/local/include/stdio.h:67:13: note: insert '_Nonnull' if the pointer should never be null
extern FILE *__stdinp;
            ^
              _Nonnull 
/usr/local/include/stdio.h:386:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 int (* _Nullable)(void *, const char *, int),
                                        ^
/usr/local/include/stdio.h:386:41: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *, const char *, int),
                                        ^
                                         _Nullable
/usr/local/include/stdio.h:386:41: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *, const char *, int),
                                        ^
                                         _Nonnull
/usr/local/include/stdio.h:386:55: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
/usr/local/include/stdio.h:386:55: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
                                                       _Nullable
/usr/local/include/stdio.h:386:55: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
                                                       _Nonnull
/usr/local/include/stdio.h:387:44: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
/usr/local/include/stdio.h:387:44: note: insert '_Nullable' if the pointer may be null
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
                                            _Nullable
/usr/local/include/stdio.h:387:44: note: insert '_Nonnull' if the pointer should never be null
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
                                            _Nonnull
/usr/local/include/stdio.h:388:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 int (* _Nullable)(void *));
                                        ^
/usr/local/include/stdio.h:388:41: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *));
                                        ^
                                         _Nullable
/usr/local/include/stdio.h:388:41: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *));
                                        ^
                                         _Nonnull
/usr/local/include/stdio.h:384:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
FILE    *funopen(const void *,
        ^
/usr/local/include/stdio.h:384:6: note: insert '_Nullable' if the pointer may be null
FILE    *funopen(const void *,
        ^
          _Nullable 
/usr/local/include/stdio.h:384:6: note: insert '_Nonnull' if the pointer should never be null
FILE    *funopen(const void *,
        ^
          _Nonnull 
In file included from conftest.c:1:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby.h:33:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/ruby.h:29:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/defines.h:134:
/usr/local/include/stdlib.h:134:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   atof(const char *);
                         ^
/usr/local/include/stdlib.h:134:25: note: insert '_Nullable' if the pointer may be null
double   atof(const char *);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:134:25: note: insert '_Nonnull' if the pointer should never be null
double   atof(const char *);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:135:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      atoi(const char *);
                         ^
/usr/local/include/stdlib.h:135:22: note: insert '_Nullable' if the pointer may be null
int      atoi(const char *);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:135:22: note: insert '_Nonnull' if the pointer should never be null
int      atoi(const char *);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:136:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     atol(const char *);
                         ^
/usr/local/include/stdlib.h:136:23: note: insert '_Nullable' if the pointer may be null
long     atol(const char *);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:136:23: note: insert '_Nonnull' if the pointer should never be null
long     atol(const char *);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:139:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         atoll(const char *);
                          ^
/usr/local/include/stdlib.h:139:20: note: insert '_Nullable' if the pointer may be null
         atoll(const char *);
                          ^
                           _Nullable
/usr/local/include/stdlib.h:139:20: note: insert '_Nonnull' if the pointer should never be null
         atoll(const char *);
                          ^
                           _Nonnull
/usr/local/include/stdlib.h:141:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                            ^
/usr/local/include/stdlib.h:141:26: note: insert '_Nullable' if the pointer may be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                            ^
                              _Nullable 
/usr/local/include/stdlib.h:141:26: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                            ^
                              _Nonnull 
/usr/local/include/stdlib.h:141:45: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                                               ^
/usr/local/include/stdlib.h:141:45: note: insert '_Nullable' if the pointer may be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                                               ^
                                                 _Nullable 
/usr/local/include/stdlib.h:141:45: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                                               ^
                                                 _Nonnull 
/usr/local/include/stdlib.h:142:59: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                 ^
/usr/local/include/stdlib.h:142:59: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                 ^
                                                                  _Nullable
/usr/local/include/stdlib.h:142:59: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                 ^
                                                                  _Nonnull
/usr/local/include/stdlib.h:142:73: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                               ^
/usr/local/include/stdlib.h:142:73: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                               ^
                                                                                _Nullable
/usr/local/include/stdlib.h:142:73: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                               ^
                                                                                _Nonnull
/usr/local/include/stdlib.h:141:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch(const void *__key, const void *__base, size_t __nel,
        ^
/usr/local/include/stdlib.h:141:6: note: insert '_Nullable' if the pointer may be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
        ^
          _Nullable 
/usr/local/include/stdlib.h:141:6: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
        ^
          _Nonnull 
/usr/local/include/stdlib.h:147:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getenv(const char *);
                           ^
/usr/local/include/stdlib.h:147:25: note: insert '_Nullable' if the pointer may be null
char    *getenv(const char *);
                           ^
                            _Nullable
/usr/local/include/stdlib.h:147:25: note: insert '_Nonnull' if the pointer should never be null
char    *getenv(const char *);
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:147:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getenv(const char *);
        ^
/usr/local/include/stdlib.h:147:6: note: insert '_Nullable' if the pointer may be null
char    *getenv(const char *);
        ^
          _Nullable 
/usr/local/include/stdlib.h:147:6: note: insert '_Nonnull' if the pointer should never be null
char    *getenv(const char *);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:156:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mblen(const char *__s, size_t __n);
                          ^
/usr/local/include/stdlib.h:156:23: note: insert '_Nullable' if the pointer may be null
int      mblen(const char *__s, size_t __n);
                          ^
                            _Nullable 
/usr/local/include/stdlib.h:156:23: note: insert '_Nonnull' if the pointer should never be null
int      mblen(const char *__s, size_t __n);
                          ^
                            _Nonnull 
/usr/local/include/stdlib.h:157:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                          ^
/usr/local/include/stdlib.h:157:26: note: insert '_Nullable' if the pointer may be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                          ^
                            _Nullable
/usr/local/include/stdlib.h:157:26: note: insert '_Nonnull' if the pointer should never be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                          ^
                            _Nonnull
/usr/local/include/stdlib.h:157:52: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                                                    ^
/usr/local/include/stdlib.h:157:52: note: insert '_Nullable' if the pointer may be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                                                    ^
                                                      _Nullable
/usr/local/include/stdlib.h:157:52: note: insert '_Nonnull' if the pointer should never be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                                                    ^
                                                      _Nonnull
/usr/local/include/stdlib.h:158:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                        ^
/usr/local/include/stdlib.h:158:21: note: insert '_Nullable' if the pointer may be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                        ^
                          _Nullable
/usr/local/include/stdlib.h:158:21: note: insert '_Nonnull' if the pointer should never be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                        ^
                          _Nonnull
/usr/local/include/stdlib.h:158:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                                                 ^
/usr/local/include/stdlib.h:158:46: note: insert '_Nullable' if the pointer may be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                                                 ^
                                                   _Nullable
/usr/local/include/stdlib.h:158:46: note: insert '_Nonnull' if the pointer should never be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                                                 ^
                                                   _Nonnull
/usr/local/include/stdlib.h:160:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort(void *__base, size_t __nel, size_t __width,
                    ^
/usr/local/include/stdlib.h:160:18: note: insert '_Nullable' if the pointer may be null
void     qsort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nullable 
/usr/local/include/stdlib.h:160:18: note: insert '_Nonnull' if the pointer should never be null
void     qsort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nonnull 
/usr/local/include/stdlib.h:161:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
/usr/local/include/stdlib.h:161:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:161:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:161:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
/usr/local/include/stdlib.h:161:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:161:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:165:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                           ^
/usr/local/include/stdlib.h:165:27: note: insert '_Nullable' if the pointer may be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                           ^
                            _Nullable
/usr/local/include/stdlib.h:165:27: note: insert '_Nonnull' if the pointer should never be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:165:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                   ^
/usr/local/include/stdlib.h:165:35: note: insert '_Nullable' if the pointer may be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                   ^
                                    _Nullable
/usr/local/include/stdlib.h:165:35: note: insert '_Nonnull' if the pointer should never be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                   ^
                                    _Nonnull
/usr/local/include/stdlib.h:165:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                    ^
/usr/local/include/stdlib.h:165:36: note: insert '_Nullable' if the pointer may be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                    ^
                                     _Nullable
/usr/local/include/stdlib.h:165:36: note: insert '_Nonnull' if the pointer should never be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                    ^
                                     _Nonnull
/usr/local/include/stdlib.h:166:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                           ^
/usr/local/include/stdlib.h:166:26: note: insert '_Nullable' if the pointer may be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                           ^
                            _Nullable
/usr/local/include/stdlib.h:166:26: note: insert '_Nonnull' if the pointer should never be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:166:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                   ^
/usr/local/include/stdlib.h:166:34: note: insert '_Nullable' if the pointer may be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                   ^
                                    _Nullable
/usr/local/include/stdlib.h:166:34: note: insert '_Nonnull' if the pointer should never be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                   ^
                                    _Nonnull
/usr/local/include/stdlib.h:166:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                    ^
/usr/local/include/stdlib.h:166:35: note: insert '_Nullable' if the pointer may be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                    ^
                                     _Nullable
/usr/local/include/stdlib.h:166:35: note: insert '_Nonnull' if the pointer should never be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                    ^
                                     _Nonnull
/usr/local/include/stdlib.h:167:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     strtol(const char *__str, char **__endptr, int __base);
                           ^
/usr/local/include/stdlib.h:167:25: note: insert '_Nullable' if the pointer may be null
long     strtol(const char *__str, char **__endptr, int __base);
                           ^
                             _Nullable 
/usr/local/include/stdlib.h:167:25: note: insert '_Nonnull' if the pointer should never be null
long     strtol(const char *__str, char **__endptr, int __base);
                           ^
                             _Nonnull 
/usr/local/include/stdlib.h:167:38: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     strtol(const char *__str, char **__endptr, int __base);
                                        ^
/usr/local/include/stdlib.h:167:38: note: insert '_Nullable' if the pointer may be null
long     strtol(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nullable
/usr/local/include/stdlib.h:167:38: note: insert '_Nonnull' if the pointer should never be null
long     strtol(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nonnull
/usr/local/include/stdlib.h:167:39: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     strtol(const char *__str, char **__endptr, int __base);
                                         ^
/usr/local/include/stdlib.h:167:39: note: insert '_Nullable' if the pointer may be null
long     strtol(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nullable 
/usr/local/include/stdlib.h:167:39: note: insert '_Nonnull' if the pointer should never be null
long     strtol(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nonnull 
/usr/local/include/stdlib.h:169:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtold(const char *, char **);
                            ^
/usr/local/include/stdlib.h:169:22: note: insert '_Nullable' if the pointer may be null
         strtold(const char *, char **);
                            ^
                             _Nullable
/usr/local/include/stdlib.h:169:22: note: insert '_Nonnull' if the pointer should never be null
         strtold(const char *, char **);
                            ^
                             _Nonnull
/usr/local/include/stdlib.h:169:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtold(const char *, char **);
                                    ^
/usr/local/include/stdlib.h:169:30: note: insert '_Nullable' if the pointer may be null
         strtold(const char *, char **);
                                    ^
                                     _Nullable
/usr/local/include/stdlib.h:169:30: note: insert '_Nonnull' if the pointer should never be null
         strtold(const char *, char **);
                                    ^
                                     _Nonnull
/usr/local/include/stdlib.h:169:31: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtold(const char *, char **);
                                     ^
/usr/local/include/stdlib.h:169:31: note: insert '_Nullable' if the pointer may be null
         strtold(const char *, char **);
                                     ^
                                      _Nullable
/usr/local/include/stdlib.h:169:31: note: insert '_Nonnull' if the pointer should never be null
         strtold(const char *, char **);
                                     ^
                                      _Nonnull
/usr/local/include/stdlib.h:172:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoll(const char *__str, char **__endptr, int __base);
                            ^
/usr/local/include/stdlib.h:172:22: note: insert '_Nullable' if the pointer may be null
         strtoll(const char *__str, char **__endptr, int __base);
                            ^
                              _Nullable 
/usr/local/include/stdlib.h:172:22: note: insert '_Nonnull' if the pointer should never be null
         strtoll(const char *__str, char **__endptr, int __base);
                            ^
                              _Nonnull 
/usr/local/include/stdlib.h:172:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoll(const char *__str, char **__endptr, int __base);
                                         ^
/usr/local/include/stdlib.h:172:35: note: insert '_Nullable' if the pointer may be null
         strtoll(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nullable
/usr/local/include/stdlib.h:172:35: note: insert '_Nonnull' if the pointer should never be null
         strtoll(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nonnull
/usr/local/include/stdlib.h:172:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoll(const char *__str, char **__endptr, int __base);
                                          ^
/usr/local/include/stdlib.h:172:36: note: insert '_Nullable' if the pointer may be null
         strtoll(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nullable 
/usr/local/include/stdlib.h:172:36: note: insert '_Nonnull' if the pointer should never be null
         strtoll(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nonnull 
/usr/local/include/stdlib.h:175:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoul(const char *__str, char **__endptr, int __base);
                            ^
/usr/local/include/stdlib.h:175:22: note: insert '_Nullable' if the pointer may be null
         strtoul(const char *__str, char **__endptr, int __base);
                            ^
                              _Nullable 
/usr/local/include/stdlib.h:175:22: note: insert '_Nonnull' if the pointer should never be null
         strtoul(const char *__str, char **__endptr, int __base);
                            ^
                              _Nonnull 
/usr/local/include/stdlib.h:175:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoul(const char *__str, char **__endptr, int __base);
                                         ^
/usr/local/include/stdlib.h:175:35: note: insert '_Nullable' if the pointer may be null
         strtoul(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nullable
/usr/local/include/stdlib.h:175:35: note: insert '_Nonnull' if the pointer should never be null
         strtoul(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nonnull
/usr/local/include/stdlib.h:175:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoul(const char *__str, char **__endptr, int __base);
                                          ^
/usr/local/include/stdlib.h:175:36: note: insert '_Nullable' if the pointer may be null
         strtoul(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nullable 
/usr/local/include/stdlib.h:175:36: note: insert '_Nonnull' if the pointer should never be null
         strtoul(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nonnull 
/usr/local/include/stdlib.h:178:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoull(const char *__str, char **__endptr, int __base);
                             ^
/usr/local/include/stdlib.h:178:23: note: insert '_Nullable' if the pointer may be null
         strtoull(const char *__str, char **__endptr, int __base);
                             ^
                               _Nullable 
/usr/local/include/stdlib.h:178:23: note: insert '_Nonnull' if the pointer should never be null
         strtoull(const char *__str, char **__endptr, int __base);
                             ^
                               _Nonnull 
/usr/local/include/stdlib.h:178:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoull(const char *__str, char **__endptr, int __base);
                                          ^
/usr/local/include/stdlib.h:178:36: note: insert '_Nullable' if the pointer may be null
         strtoull(const char *__str, char **__endptr, int __base);
                                          ^
                                           _Nullable
/usr/local/include/stdlib.h:178:36: note: insert '_Nonnull' if the pointer should never be null
         strtoull(const char *__str, char **__endptr, int __base);
                                          ^
                                           _Nonnull
/usr/local/include/stdlib.h:178:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoull(const char *__str, char **__endptr, int __base);
                                           ^
/usr/local/include/stdlib.h:178:37: note: insert '_Nullable' if the pointer may be null
         strtoull(const char *__str, char **__endptr, int __base);
                                           ^
                                             _Nullable 
/usr/local/include/stdlib.h:178:37: note: insert '_Nonnull' if the pointer should never be null
         strtoull(const char *__str, char **__endptr, int __base);
                                           ^
                                             _Nonnull 
/usr/local/include/stdlib.h:190:24: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      system(const char *) __DARWIN_ALIAS_C(system);
                           ^
/usr/local/include/stdlib.h:190:24: note: insert '_Nullable' if the pointer may be null
int      system(const char *) __DARWIN_ALIAS_C(system);
                           ^
                            _Nullable
/usr/local/include/stdlib.h:190:24: note: insert '_Nonnull' if the pointer should never be null
int      system(const char *) __DARWIN_ALIAS_C(system);
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:194:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                       ^
/usr/local/include/stdlib.h:194:23: note: insert '_Nullable' if the pointer may be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                       ^
                         _Nullable
/usr/local/include/stdlib.h:194:23: note: insert '_Nonnull' if the pointer should never be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                       ^
                         _Nonnull
/usr/local/include/stdlib.h:194:51: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                                                   ^
/usr/local/include/stdlib.h:194:51: note: insert '_Nullable' if the pointer may be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                                                   ^
                                                     _Nullable
/usr/local/include/stdlib.h:194:51: note: insert '_Nonnull' if the pointer should never be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                                                   ^
                                                     _Nonnull
/usr/local/include/stdlib.h:195:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      wctomb(char *, wchar_t);
                     ^
/usr/local/include/stdlib.h:195:18: note: insert '_Nullable' if the pointer may be null
int      wctomb(char *, wchar_t);
                     ^
                      _Nullable
/usr/local/include/stdlib.h:195:18: note: insert '_Nonnull' if the pointer should never be null
int      wctomb(char *, wchar_t);
                     ^
                      _Nonnull
/usr/local/include/stdlib.h:199:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     a64l(const char *);
                         ^
/usr/local/include/stdlib.h:199:23: note: insert '_Nullable' if the pointer may be null
long     a64l(const char *);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:199:23: note: insert '_Nonnull' if the pointer should never be null
long     a64l(const char *);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:201:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
/usr/local/include/stdlib.h:201:29: note: insert '_Nullable' if the pointer may be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nullable 
/usr/local/include/stdlib.h:201:29: note: insert '_Nonnull' if the pointer should never be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nonnull 
/usr/local/include/stdlib.h:201:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
/usr/local/include/stdlib.h:201:46: note: insert '_Nullable' if the pointer may be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nullable 
/usr/local/include/stdlib.h:201:46: note: insert '_Nonnull' if the pointer should never be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nonnull 
/usr/local/include/stdlib.h:201:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
/usr/local/include/stdlib.h:201:6: note: insert '_Nullable' if the pointer may be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nullable 
/usr/local/include/stdlib.h:201:6: note: insert '_Nonnull' if the pointer should never be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nonnull 
/usr/local/include/stdlib.h:202:31: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
double   erand48(unsigned short[3]);
                               ^
/usr/local/include/stdlib.h:202:31: note: insert '_Nullable' if the array parameter may be null
double   erand48(unsigned short[3]);
                               ^
                                _Nullable 
/usr/local/include/stdlib.h:202:31: note: insert '_Nonnull' if the array parameter should never be null
double   erand48(unsigned short[3]);
                               ^
                                _Nonnull 
/usr/local/include/stdlib.h:203:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
/usr/local/include/stdlib.h:203:29: note: insert '_Nullable' if the pointer may be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nullable 
/usr/local/include/stdlib.h:203:29: note: insert '_Nonnull' if the pointer should never be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nonnull 
/usr/local/include/stdlib.h:203:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
/usr/local/include/stdlib.h:203:46: note: insert '_Nullable' if the pointer may be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nullable 
/usr/local/include/stdlib.h:203:46: note: insert '_Nonnull' if the pointer should never be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nonnull 
/usr/local/include/stdlib.h:203:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
/usr/local/include/stdlib.h:203:6: note: insert '_Nullable' if the pointer may be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nullable 
/usr/local/include/stdlib.h:203:6: note: insert '_Nonnull' if the pointer should never be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nonnull 
/usr/local/include/stdlib.h:204:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *gcvt(double, int, char *); /* LEGACY */
                                ^
/usr/local/include/stdlib.h:204:30: note: insert '_Nullable' if the pointer may be null
char    *gcvt(double, int, char *); /* LEGACY */
                                ^
                                 _Nullable
/usr/local/include/stdlib.h:204:30: note: insert '_Nonnull' if the pointer should never be null
char    *gcvt(double, int, char *); /* LEGACY */
                                ^
                                 _Nonnull
/usr/local/include/stdlib.h:204:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *gcvt(double, int, char *); /* LEGACY */
        ^
/usr/local/include/stdlib.h:204:6: note: insert '_Nullable' if the pointer may be null
char    *gcvt(double, int, char *); /* LEGACY */
        ^
          _Nullable 
/usr/local/include/stdlib.h:204:6: note: insert '_Nonnull' if the pointer should never be null
char    *gcvt(double, int, char *); /* LEGACY */
        ^
          _Nonnull 
/usr/local/include/stdlib.h:205:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                        ^
/usr/local/include/stdlib.h:205:21: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                        ^
                         _Nullable
/usr/local/include/stdlib.h:205:21: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                        ^
                         _Nonnull
/usr/local/include/stdlib.h:205:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                         ^
/usr/local/include/stdlib.h:205:22: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:205:22: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:205:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                 ^
/usr/local/include/stdlib.h:205:30: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                 ^
                                   _Nullable
/usr/local/include/stdlib.h:205:30: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                 ^
                                   _Nonnull
/usr/local/include/stdlib.h:205:38: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                         ^
/usr/local/include/stdlib.h:205:38: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                         ^
                                          _Nullable
/usr/local/include/stdlib.h:205:38: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                         ^
                                          _Nonnull
/usr/local/include/stdlib.h:205:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                                 ^
/usr/local/include/stdlib.h:205:46: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:205:46: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:205:47: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                                  ^
/usr/local/include/stdlib.h:205:47: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                                  ^
                                                   _Nullable
/usr/local/include/stdlib.h:205:47: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                                  ^
                                                   _Nonnull
/usr/local/include/stdlib.h:208:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
                                  ^
/usr/local/include/stdlib.h:208:32: note: insert '_Nullable' if the pointer may be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
                                  ^
                                   _Nullable
/usr/local/include/stdlib.h:208:32: note: insert '_Nonnull' if the pointer should never be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
                                  ^
                                   _Nonnull
/usr/local/include/stdlib.h:208:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
        ^
/usr/local/include/stdlib.h:208:6: note: insert '_Nullable' if the pointer may be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
        ^
          _Nullable 
/usr/local/include/stdlib.h:208:6: note: insert '_Nonnull' if the pointer should never be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
        ^
          _Nonnull 
/usr/local/include/stdlib.h:212:29: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
long     jrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
/usr/local/include/stdlib.h:212:29: note: insert '_Nullable' if the array parameter may be null
long     jrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nullable 
/usr/local/include/stdlib.h:212:29: note: insert '_Nonnull' if the array parameter should never be null
long     jrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nonnull 
/usr/local/include/stdlib.h:213:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *l64a(long);
        ^
/usr/local/include/stdlib.h:213:6: note: insert '_Nullable' if the pointer may be null
char    *l64a(long);
        ^
          _Nullable 
/usr/local/include/stdlib.h:213:6: note: insert '_Nonnull' if the pointer should never be null
char    *l64a(long);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:214:29: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
void     lcong48(unsigned short[7]);
                               ^
/usr/local/include/stdlib.h:214:29: note: insert '_Nullable' if the array parameter may be null
void     lcong48(unsigned short[7]);
                               ^
                                _Nullable 
/usr/local/include/stdlib.h:214:29: note: insert '_Nonnull' if the array parameter should never be null
void     lcong48(unsigned short[7]);
                               ^
                                _Nonnull 
/usr/local/include/stdlib.h:216:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *mktemp(char *);
                     ^
/usr/local/include/stdlib.h:216:19: note: insert '_Nullable' if the pointer may be null
char    *mktemp(char *);
                     ^
                      _Nullable
/usr/local/include/stdlib.h:216:19: note: insert '_Nonnull' if the pointer should never be null
char    *mktemp(char *);
                     ^
                      _Nonnull
/usr/local/include/stdlib.h:216:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *mktemp(char *);
        ^
/usr/local/include/stdlib.h:216:6: note: insert '_Nullable' if the pointer may be null
char    *mktemp(char *);
        ^
          _Nullable 
/usr/local/include/stdlib.h:216:6: note: insert '_Nonnull' if the pointer should never be null
char    *mktemp(char *);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:217:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mkstemp(char *);
                      ^
/usr/local/include/stdlib.h:217:19: note: insert '_Nullable' if the pointer may be null
int      mkstemp(char *);
                      ^
                       _Nullable
/usr/local/include/stdlib.h:217:19: note: insert '_Nonnull' if the pointer should never be null
int      mkstemp(char *);
                      ^
                       _Nonnull
/usr/local/include/stdlib.h:219:29: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
long     nrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
/usr/local/include/stdlib.h:219:29: note: insert '_Nullable' if the array parameter may be null
long     nrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nullable 
/usr/local/include/stdlib.h:219:29: note: insert '_Nonnull' if the array parameter should never be null
long     nrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nonnull 
/usr/local/include/stdlib.h:221:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ptsname(int);
        ^
/usr/local/include/stdlib.h:221:6: note: insert '_Nullable' if the pointer may be null
char    *ptsname(int);
        ^
          _Nullable 
/usr/local/include/stdlib.h:221:6: note: insert '_Nonnull' if the pointer should never be null
char    *ptsname(int);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:224:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int ptsname_r(int fildes, char *buffer, size_t buflen) __API_AVAILABLE(macos(10.13.4), ios(11.3), tvos(11.3), watchos(4.3));
                               ^
/usr/local/include/stdlib.h:224:32: note: insert '_Nullable' if the pointer may be null
int ptsname_r(int fildes, char *buffer, size_t buflen) __API_AVAILABLE(macos(10.13.4), ios(11.3), tvos(11.3), watchos(4.3));
                               ^
                                 _Nullable 
/usr/local/include/stdlib.h:224:32: note: insert '_Nonnull' if the pointer should never be null
int ptsname_r(int fildes, char *buffer, size_t buflen) __API_AVAILABLE(macos(10.13.4), ios(11.3), tvos(11.3), watchos(4.3));
                               ^
                                 _Nonnull 
/usr/local/include/stdlib.h:227:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      putenv(char *) __DARWIN_ALIAS(putenv);
                     ^
/usr/local/include/stdlib.h:227:18: note: insert '_Nullable' if the pointer may be null
int      putenv(char *) __DARWIN_ALIAS(putenv);
                     ^
                      _Nullable
/usr/local/include/stdlib.h:227:18: note: insert '_Nonnull' if the pointer should never be null
int      putenv(char *) __DARWIN_ALIAS(putenv);
                     ^
                      _Nonnull
/usr/local/include/stdlib.h:229:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      rand_r(unsigned *) __swift_unavailable("Use arc4random instead.");
                         ^
/usr/local/include/stdlib.h:229:22: note: insert '_Nullable' if the pointer may be null
int      rand_r(unsigned *) __swift_unavailable("Use arc4random instead.");
                         ^
                          _Nullable
/usr/local/include/stdlib.h:229:22: note: insert '_Nonnull' if the pointer should never be null
int      rand_r(unsigned *) __swift_unavailable("Use arc4random instead.");
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:231:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                             ^
/usr/local/include/stdlib.h:231:27: note: insert '_Nullable' if the pointer may be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                             ^
                               _Nullable
/usr/local/include/stdlib.h:231:27: note: insert '_Nonnull' if the pointer should never be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                             ^
                               _Nonnull
/usr/local/include/stdlib.h:231:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                                                ^
/usr/local/include/stdlib.h:231:46: note: insert '_Nullable' if the pointer may be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                                                ^
                                                  _Nullable
/usr/local/include/stdlib.h:231:46: note: insert '_Nonnull' if the pointer should never be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                                                ^
                                                  _Nonnull
/usr/local/include/stdlib.h:231:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
        ^
/usr/local/include/stdlib.h:231:6: note: insert '_Nullable' if the pointer may be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
        ^
          _Nullable 
/usr/local/include/stdlib.h:231:6: note: insert '_Nonnull' if the pointer should never be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:236:24: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
        *seed48(unsigned short[3]);
                              ^
/usr/local/include/stdlib.h:236:24: note: insert '_Nullable' if the array parameter may be null
        *seed48(unsigned short[3]);
                              ^
                               _Nullable 
/usr/local/include/stdlib.h:236:24: note: insert '_Nonnull' if the array parameter should never be null
        *seed48(unsigned short[3]);
                              ^
                               _Nonnull 
/usr/local/include/stdlib.h:236:2: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        *seed48(unsigned short[3]);
        ^
/usr/local/include/stdlib.h:236:2: note: insert '_Nullable' if the pointer may be null
        *seed48(unsigned short[3]);
        ^
          _Nullable 
/usr/local/include/stdlib.h:236:2: note: insert '_Nonnull' if the pointer should never be null
        *seed48(unsigned short[3]);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:237:24: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                           ^
/usr/local/include/stdlib.h:237:24: note: insert '_Nullable' if the pointer may be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                           ^
                             _Nullable
/usr/local/include/stdlib.h:237:24: note: insert '_Nonnull' if the pointer should never be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                           ^
                             _Nonnull
/usr/local/include/stdlib.h:237:45: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                                                ^
/usr/local/include/stdlib.h:237:45: note: insert '_Nullable' if the pointer may be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                                                ^
                                                  _Nullable
/usr/local/include/stdlib.h:237:45: note: insert '_Nonnull' if the pointer should never be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                                                ^
                                                  _Nonnull
/usr/local/include/stdlib.h:239:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     setkey(const char *) __DARWIN_ALIAS(setkey);
                           ^
/usr/local/include/stdlib.h:239:25: note: insert '_Nullable' if the pointer may be null
void     setkey(const char *) __DARWIN_ALIAS(setkey);
                           ^
                            _Nullable
/usr/local/include/stdlib.h:239:25: note: insert '_Nonnull' if the pointer should never be null
void     setkey(const char *) __DARWIN_ALIAS(setkey);
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:243:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *setstate(const char *);
                             ^
/usr/local/include/stdlib.h:243:27: note: insert '_Nullable' if the pointer may be null
char    *setstate(const char *);
                             ^
                              _Nullable
/usr/local/include/stdlib.h:243:27: note: insert '_Nonnull' if the pointer should never be null
char    *setstate(const char *);
                             ^
                              _Nonnull
/usr/local/include/stdlib.h:243:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *setstate(const char *);
        ^
/usr/local/include/stdlib.h:243:6: note: insert '_Nullable' if the pointer may be null
char    *setstate(const char *);
        ^
          _Nullable 
/usr/local/include/stdlib.h:243:6: note: insert '_Nonnull' if the pointer should never be null
char    *setstate(const char *);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:252:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      unsetenv(const char *) __DARWIN_ALIAS(unsetenv);
                             ^
/usr/local/include/stdlib.h:252:26: note: insert '_Nullable' if the pointer may be null
int      unsetenv(const char *) __DARWIN_ALIAS(unsetenv);
                             ^
                              _Nullable
/usr/local/include/stdlib.h:252:26: note: insert '_Nonnull' if the pointer should never be null
int      unsetenv(const char *) __DARWIN_ALIAS(unsetenv);
                             ^
                              _Nonnull
/usr/local/include/stdlib.h:265:42: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     arc4random_addrandom(unsigned char * /*dat*/, int /*datlen*/)
                                            ^
/usr/local/include/stdlib.h:265:42: note: insert '_Nullable' if the pointer may be null
void     arc4random_addrandom(unsigned char * /*dat*/, int /*datlen*/)
                                            ^
                                              _Nullable
/usr/local/include/stdlib.h:265:42: note: insert '_Nonnull' if the pointer should never be null
void     arc4random_addrandom(unsigned char * /*dat*/, int /*datlen*/)
                                            ^
                                              _Nonnull
/usr/local/include/stdlib.h:270:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     arc4random_buf(void * __buf, size_t __nbytes) __OSX_AVAILABLE_STARTING(__MAC_10_7, __IPHONE_4_3);
                             ^
/usr/local/include/stdlib.h:270:27: note: insert '_Nullable' if the pointer may be null
void     arc4random_buf(void * __buf, size_t __nbytes) __OSX_AVAILABLE_STARTING(__MAC_10_7, __IPHONE_4_3);
                             ^
                               _Nullable
/usr/local/include/stdlib.h:270:27: note: insert '_Nonnull' if the pointer should never be null
void     arc4random_buf(void * __buf, size_t __nbytes) __OSX_AVAILABLE_STARTING(__MAC_10_7, __IPHONE_4_3);
                             ^
                               _Nonnull
/usr/local/include/stdlib.h:276:28: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                              ^
/usr/local/include/stdlib.h:276:28: note: insert '_Nullable' if the pointer may be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                              ^
                                _Nullable 
/usr/local/include/stdlib.h:276:28: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                              ^
                                _Nonnull 
/usr/local/include/stdlib.h:276:47: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                                                 ^
/usr/local/include/stdlib.h:276:47: note: insert '_Nullable' if the pointer may be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                                                 ^
                                                   _Nullable 
/usr/local/include/stdlib.h:276:47: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                                                 ^
                                                   _Nonnull 
/usr/local/include/stdlib.h:277:59: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                 ^
/usr/local/include/stdlib.h:277:59: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                 ^
                                                                  _Nullable
/usr/local/include/stdlib.h:277:59: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                 ^
                                                                  _Nonnull
/usr/local/include/stdlib.h:277:73: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                               ^
/usr/local/include/stdlib.h:277:73: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                               ^
                                                                                _Nullable
/usr/local/include/stdlib.h:277:73: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                               ^
                                                                                _Nonnull
/usr/local/include/stdlib.h:276:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
        ^
/usr/local/include/stdlib.h:276:6: note: insert '_Nullable' if the pointer may be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
        ^
          _Nullable 
/usr/local/include/stdlib.h:276:6: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
        ^
          _Nonnull 
/usr/local/include/stdlib.h:281:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *cgetcap(char *, const char *, int);
                      ^
/usr/local/include/stdlib.h:281:20: note: insert '_Nullable' if the pointer may be null
char    *cgetcap(char *, const char *, int);
                      ^
                       _Nullable
/usr/local/include/stdlib.h:281:20: note: insert '_Nonnull' if the pointer should never be null
char    *cgetcap(char *, const char *, int);
                      ^
                       _Nonnull
/usr/local/include/stdlib.h:281:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *cgetcap(char *, const char *, int);
                                    ^
/usr/local/include/stdlib.h:281:34: note: insert '_Nullable' if the pointer may be null
char    *cgetcap(char *, const char *, int);
                                    ^
                                     _Nullable
/usr/local/include/stdlib.h:281:34: note: insert '_Nonnull' if the pointer should never be null
char    *cgetcap(char *, const char *, int);
                                    ^
                                     _Nonnull
/usr/local/include/stdlib.h:281:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *cgetcap(char *, const char *, int);
        ^
/usr/local/include/stdlib.h:281:6: note: insert '_Nullable' if the pointer may be null
char    *cgetcap(char *, const char *, int);
        ^
          _Nullable 
/usr/local/include/stdlib.h:281:6: note: insert '_Nonnull' if the pointer should never be null
char    *cgetcap(char *, const char *, int);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:283:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                      ^
/usr/local/include/stdlib.h:283:19: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                      ^
                       _Nullable
/usr/local/include/stdlib.h:283:19: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                      ^
                       _Nonnull
/usr/local/include/stdlib.h:283:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                       ^
/usr/local/include/stdlib.h:283:20: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                       ^
                        _Nullable
/usr/local/include/stdlib.h:283:20: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                       ^
                        _Nonnull
/usr/local/include/stdlib.h:283:28: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                               ^
/usr/local/include/stdlib.h:283:28: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                               ^
                                _Nullable
/usr/local/include/stdlib.h:283:28: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                               ^
                                _Nonnull
/usr/local/include/stdlib.h:283:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                                ^
/usr/local/include/stdlib.h:283:29: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                                ^
                                 _Nullable
/usr/local/include/stdlib.h:283:29: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                                ^
                                 _Nonnull
/usr/local/include/stdlib.h:283:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                                              ^
/usr/local/include/stdlib.h:283:43: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                                              ^
                                               _Nullable
/usr/local/include/stdlib.h:283:43: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                                              ^
                                               _Nonnull
/usr/local/include/stdlib.h:284:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                        ^
/usr/local/include/stdlib.h:284:21: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                        ^
                         _Nullable
/usr/local/include/stdlib.h:284:21: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                        ^
                         _Nonnull
/usr/local/include/stdlib.h:284:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                         ^
/usr/local/include/stdlib.h:284:22: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:284:22: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:284:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                                 ^
/usr/local/include/stdlib.h:284:30: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                                 ^
                                  _Nullable
/usr/local/include/stdlib.h:284:30: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                                 ^
                                  _Nonnull
/usr/local/include/stdlib.h:284:31: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                                  ^
/usr/local/include/stdlib.h:284:31: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                                  ^
                                   _Nullable
/usr/local/include/stdlib.h:284:31: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                                  ^
                                   _Nonnull
/usr/local/include/stdlib.h:285:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetmatch(const char *, const char *);
                              ^
/usr/local/include/stdlib.h:285:27: note: insert '_Nullable' if the pointer may be null
int      cgetmatch(const char *, const char *);
                              ^
                               _Nullable
/usr/local/include/stdlib.h:285:27: note: insert '_Nonnull' if the pointer should never be null
int      cgetmatch(const char *, const char *);
                              ^
                               _Nonnull
/usr/local/include/stdlib.h:285:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetmatch(const char *, const char *);
                                            ^
/usr/local/include/stdlib.h:285:41: note: insert '_Nullable' if the pointer may be null
int      cgetmatch(const char *, const char *);
                                            ^
                                             _Nullable
/usr/local/include/stdlib.h:285:41: note: insert '_Nonnull' if the pointer should never be null
int      cgetmatch(const char *, const char *);
                                            ^
                                             _Nonnull
/usr/local/include/stdlib.h:286:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                       ^
/usr/local/include/stdlib.h:286:20: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                       ^
                        _Nullable
/usr/local/include/stdlib.h:286:20: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                       ^
                        _Nonnull
/usr/local/include/stdlib.h:286:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                        ^
/usr/local/include/stdlib.h:286:21: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                        ^
                         _Nullable
/usr/local/include/stdlib.h:286:21: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                        ^
                         _Nonnull
/usr/local/include/stdlib.h:286:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                                ^
/usr/local/include/stdlib.h:286:29: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                                ^
                                 _Nullable
/usr/local/include/stdlib.h:286:29: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                                ^
                                 _Nonnull
/usr/local/include/stdlib.h:286:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                                 ^
/usr/local/include/stdlib.h:286:30: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                                 ^
                                  _Nullable
/usr/local/include/stdlib.h:286:30: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                                 ^
                                  _Nonnull
/usr/local/include/stdlib.h:287:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnum(char *, const char *, long *);
                      ^
/usr/local/include/stdlib.h:287:19: note: insert '_Nullable' if the pointer may be null
int      cgetnum(char *, const char *, long *);
                      ^
                       _Nullable
/usr/local/include/stdlib.h:287:19: note: insert '_Nonnull' if the pointer should never be null
int      cgetnum(char *, const char *, long *);
                      ^
                       _Nonnull
/usr/local/include/stdlib.h:287:33: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnum(char *, const char *, long *);
                                    ^
/usr/local/include/stdlib.h:287:33: note: insert '_Nullable' if the pointer may be null
int      cgetnum(char *, const char *, long *);
                                    ^
                                     _Nullable
/usr/local/include/stdlib.h:287:33: note: insert '_Nonnull' if the pointer should never be null
int      cgetnum(char *, const char *, long *);
                                    ^
                                     _Nonnull
/usr/local/include/stdlib.h:287:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnum(char *, const char *, long *);
                                            ^
/usr/local/include/stdlib.h:287:41: note: insert '_Nullable' if the pointer may be null
int      cgetnum(char *, const char *, long *);
                                            ^
                                             _Nullable
/usr/local/include/stdlib.h:287:41: note: insert '_Nonnull' if the pointer should never be null
int      cgetnum(char *, const char *, long *);
                                            ^
                                             _Nonnull
/usr/local/include/stdlib.h:288:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetset(const char *);
                            ^
/usr/local/include/stdlib.h:288:25: note: insert '_Nullable' if the pointer may be null
int      cgetset(const char *);
                            ^
                             _Nullable
/usr/local/include/stdlib.h:288:25: note: insert '_Nonnull' if the pointer should never be null
int      cgetset(const char *);
                            ^
                             _Nonnull
/usr/local/include/stdlib.h:289:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                      ^
/usr/local/include/stdlib.h:289:19: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                      ^
                       _Nullable
/usr/local/include/stdlib.h:289:19: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                      ^
                       _Nonnull
/usr/local/include/stdlib.h:289:33: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                                    ^
/usr/local/include/stdlib.h:289:33: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                                    ^
                                     _Nullable
/usr/local/include/stdlib.h:289:33: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                                    ^
                                     _Nonnull
/usr/local/include/stdlib.h:289:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                                            ^
/usr/local/include/stdlib.h:289:41: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                                            ^
                                             _Nullable
/usr/local/include/stdlib.h:289:41: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                                            ^
                                             _Nonnull
/usr/local/include/stdlib.h:289:42: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                                             ^
/usr/local/include/stdlib.h:289:42: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                                             ^
                                              _Nullable
/usr/local/include/stdlib.h:289:42: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                                             ^
                                              _Nonnull
/usr/local/include/stdlib.h:290:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                       ^
/usr/local/include/stdlib.h:290:20: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                       ^
                        _Nullable
/usr/local/include/stdlib.h:290:20: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                       ^
                        _Nonnull
/usr/local/include/stdlib.h:290:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                                     ^
/usr/local/include/stdlib.h:290:34: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                                     ^
                                      _Nullable
/usr/local/include/stdlib.h:290:34: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                                     ^
                                      _Nonnull
/usr/local/include/stdlib.h:290:42: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                                             ^
/usr/local/include/stdlib.h:290:42: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                                             ^
                                              _Nullable
/usr/local/include/stdlib.h:290:42: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                                             ^
                                              _Nonnull
/usr/local/include/stdlib.h:290:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                                              ^
/usr/local/include/stdlib.h:290:43: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                                              ^
                                               _Nullable
/usr/local/include/stdlib.h:290:43: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                                              ^
                                               _Nonnull
/usr/local/include/stdlib.h:293:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *devname(dev_t, mode_t);
        ^
/usr/local/include/stdlib.h:293:6: note: insert '_Nullable' if the pointer may be null
char    *devname(dev_t, mode_t);
        ^
          _Nullable 
/usr/local/include/stdlib.h:293:6: note: insert '_Nonnull' if the pointer should never be null
char    *devname(dev_t, mode_t);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:294:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *devname_r(dev_t, mode_t, char *buf, int len);
                                       ^
/usr/local/include/stdlib.h:294:37: note: insert '_Nullable' if the pointer may be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
                                       ^
                                         _Nullable 
/usr/local/include/stdlib.h:294:37: note: insert '_Nonnull' if the pointer should never be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
                                       ^
                                         _Nonnull 
/usr/local/include/stdlib.h:294:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *devname_r(dev_t, mode_t, char *buf, int len);
        ^
/usr/local/include/stdlib.h:294:6: note: insert '_Nullable' if the pointer may be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
        ^
          _Nullable 
/usr/local/include/stdlib.h:294:6: note: insert '_Nonnull' if the pointer should never be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:295:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getbsize(int *, long *);
                      ^
/usr/local/include/stdlib.h:295:20: note: insert '_Nullable' if the pointer may be null
char    *getbsize(int *, long *);
                      ^
                       _Nullable
/usr/local/include/stdlib.h:295:20: note: insert '_Nonnull' if the pointer should never be null
char    *getbsize(int *, long *);
                      ^
                       _Nonnull
/usr/local/include/stdlib.h:295:28: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getbsize(int *, long *);
                              ^
/usr/local/include/stdlib.h:295:28: note: insert '_Nullable' if the pointer may be null
char    *getbsize(int *, long *);
                              ^
                               _Nullable
/usr/local/include/stdlib.h:295:28: note: insert '_Nonnull' if the pointer should never be null
char    *getbsize(int *, long *);
                              ^
                               _Nonnull
/usr/local/include/stdlib.h:295:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getbsize(int *, long *);
        ^
/usr/local/include/stdlib.h:295:6: note: insert '_Nullable' if the pointer may be null
char    *getbsize(int *, long *);
        ^
          _Nullable 
/usr/local/include/stdlib.h:295:6: note: insert '_Nonnull' if the pointer should never be null
char    *getbsize(int *, long *);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:296:24: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
int      getloadavg(double [], int);
                           ^
/usr/local/include/stdlib.h:296:24: note: insert '_Nullable' if the array parameter may be null
int      getloadavg(double [], int);
                           ^
                            _Nullable
/usr/local/include/stdlib.h:296:24: note: insert '_Nonnull' if the array parameter should never be null
int      getloadavg(double [], int);
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:298:2: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        *getprogname(void);
        ^
/usr/local/include/stdlib.h:298:2: note: insert '_Nullable' if the pointer may be null
        *getprogname(void);
        ^
          _Nullable 
/usr/local/include/stdlib.h:298:2: note: insert '_Nonnull' if the pointer should never be null
        *getprogname(void);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:299:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     setprogname(const char *);
                                ^
/usr/local/include/stdlib.h:299:30: note: insert '_Nullable' if the pointer may be null
void     setprogname(const char *);
                                ^
                                 _Nullable
/usr/local/include/stdlib.h:299:30: note: insert '_Nonnull' if the pointer should never be null
void     setprogname(const char *);
                                ^
                                 _Nonnull
/usr/local/include/stdlib.h:309:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      heapsort(void *__base, size_t __nel, size_t __width,
                       ^
/usr/local/include/stdlib.h:309:20: note: insert '_Nullable' if the pointer may be null
int      heapsort(void *__base, size_t __nel, size_t __width,
                       ^
                         _Nullable 
/usr/local/include/stdlib.h:309:20: note: insert '_Nonnull' if the pointer should never be null
int      heapsort(void *__base, size_t __nel, size_t __width,
                       ^
                         _Nonnull 
/usr/local/include/stdlib.h:310:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
/usr/local/include/stdlib.h:310:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:310:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:310:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
/usr/local/include/stdlib.h:310:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:310:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:312:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      heapsort_b(void *__base, size_t __nel, size_t __width,
                         ^
/usr/local/include/stdlib.h:312:22: note: insert '_Nullable' if the pointer may be null
int      heapsort_b(void *__base, size_t __nel, size_t __width,
                         ^
                           _Nullable 
/usr/local/include/stdlib.h:312:22: note: insert '_Nonnull' if the pointer should never be null
int      heapsort_b(void *__base, size_t __nel, size_t __width,
                         ^
                           _Nonnull 
/usr/local/include/stdlib.h:313:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
/usr/local/include/stdlib.h:313:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:313:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:313:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
/usr/local/include/stdlib.h:313:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:313:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:316:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mergesort(void *__base, size_t __nel, size_t __width,
                        ^
/usr/local/include/stdlib.h:316:21: note: insert '_Nullable' if the pointer may be null
int      mergesort(void *__base, size_t __nel, size_t __width,
                        ^
                          _Nullable 
/usr/local/include/stdlib.h:316:21: note: insert '_Nonnull' if the pointer should never be null
int      mergesort(void *__base, size_t __nel, size_t __width,
                        ^
                          _Nonnull 
/usr/local/include/stdlib.h:317:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
/usr/local/include/stdlib.h:317:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:317:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:317:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
/usr/local/include/stdlib.h:317:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:317:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:319:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mergesort_b(void *__base, size_t __nel, size_t __width,
                          ^
/usr/local/include/stdlib.h:319:23: note: insert '_Nullable' if the pointer may be null
int      mergesort_b(void *__base, size_t __nel, size_t __width,
                          ^
                            _Nullable 
/usr/local/include/stdlib.h:319:23: note: insert '_Nonnull' if the pointer should never be null
int      mergesort_b(void *__base, size_t __nel, size_t __width,
                          ^
                            _Nonnull 
/usr/local/include/stdlib.h:320:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
/usr/local/include/stdlib.h:320:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:320:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:320:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
/usr/local/include/stdlib.h:320:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:320:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:323:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort(void *__base, size_t __nel, size_t __width,
                    ^
/usr/local/include/stdlib.h:323:18: note: insert '_Nullable' if the pointer may be null
void     psort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nullable 
/usr/local/include/stdlib.h:323:18: note: insert '_Nonnull' if the pointer should never be null
void     psort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nonnull 
/usr/local/include/stdlib.h:324:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *))
                                                 ^
/usr/local/include/stdlib.h:324:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *))
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:324:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *))
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:324:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *))
                                                               ^
/usr/local/include/stdlib.h:324:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *))
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:324:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *))
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:327:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort_b(void *__base, size_t __nel, size_t __width,
                      ^
/usr/local/include/stdlib.h:327:20: note: insert '_Nullable' if the pointer may be null
void     psort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nullable 
/usr/local/include/stdlib.h:327:20: note: insert '_Nonnull' if the pointer should never be null
void     psort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nonnull 
/usr/local/include/stdlib.h:328:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
/usr/local/include/stdlib.h:328:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:328:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:328:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
/usr/local/include/stdlib.h:328:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:328:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:331:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
/usr/local/include/stdlib.h:331:20: note: insert '_Nullable' if the pointer may be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nullable 
/usr/local/include/stdlib.h:331:20: note: insert '_Nonnull' if the pointer should never be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nonnull 
/usr/local/include/stdlib.h:331:64: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
/usr/local/include/stdlib.h:331:64: note: insert '_Nullable' if the pointer may be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nullable
/usr/local/include/stdlib.h:331:64: note: insert '_Nonnull' if the pointer should never be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nonnull
/usr/local/include/stdlib.h:332:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                           ^
/usr/local/include/stdlib.h:332:37: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                           ^
                                            _Nullable
/usr/local/include/stdlib.h:332:37: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                           ^
                                            _Nonnull
/usr/local/include/stdlib.h:332:51: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                                         ^
/usr/local/include/stdlib.h:332:51: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                                         ^
                                                          _Nullable
/usr/local/include/stdlib.h:332:51: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                                         ^
                                                          _Nonnull
/usr/local/include/stdlib.h:332:65: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                                                       ^
/usr/local/include/stdlib.h:332:65: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                                                       ^
                                                                        _Nullable
/usr/local/include/stdlib.h:332:65: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                                                       ^
                                                                        _Nonnull
/usr/local/include/stdlib.h:335:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort_b(void *__base, size_t __nel, size_t __width,
                      ^
/usr/local/include/stdlib.h:335:20: note: insert '_Nullable' if the pointer may be null
void     qsort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nullable 
/usr/local/include/stdlib.h:335:20: note: insert '_Nonnull' if the pointer should never be null
void     qsort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nonnull 
/usr/local/include/stdlib.h:336:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
/usr/local/include/stdlib.h:336:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:336:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:336:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
/usr/local/include/stdlib.h:336:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:336:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:339:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
/usr/local/include/stdlib.h:339:20: note: insert '_Nullable' if the pointer may be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nullable 
/usr/local/include/stdlib.h:339:20: note: insert '_Nonnull' if the pointer should never be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nonnull 
/usr/local/include/stdlib.h:339:64: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
/usr/local/include/stdlib.h:339:64: note: insert '_Nullable' if the pointer may be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nullable
/usr/local/include/stdlib.h:339:64: note: insert '_Nonnull' if the pointer should never be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nonnull
/usr/local/include/stdlib.h:340:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                           ^
/usr/local/include/stdlib.h:340:37: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                           ^
                                            _Nullable
/usr/local/include/stdlib.h:340:37: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                           ^
                                            _Nonnull
/usr/local/include/stdlib.h:340:51: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                         ^
/usr/local/include/stdlib.h:340:51: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                         ^
                                                          _Nullable
/usr/local/include/stdlib.h:340:51: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                         ^
                                                          _Nonnull
/usr/local/include/stdlib.h:340:65: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                                       ^
/usr/local/include/stdlib.h:340:65: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                                       ^
                                                                        _Nullable
/usr/local/include/stdlib.h:340:65: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                                       ^
                                                                        _Nonnull
/usr/local/include/stdlib.h:341:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                       ^
/usr/local/include/stdlib.h:341:36: note: insert '_Nullable' if the pointer may be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                       ^
                                        _Nullable
/usr/local/include/stdlib.h:341:36: note: insert '_Nonnull' if the pointer should never be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                       ^
                                        _Nonnull
/usr/local/include/stdlib.h:341:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
/usr/local/include/stdlib.h:341:37: note: insert '_Nullable' if the pointer may be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                          _Nullable 
/usr/local/include/stdlib.h:341:37: note: insert '_Nonnull' if the pointer should never be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                          _Nonnull 
/usr/local/include/stdlib.h:341:77: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                ^
/usr/local/include/stdlib.h:341:77: note: insert '_Nullable' if the pointer may be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                ^
                                                                                  _Nullable 
/usr/local/include/stdlib.h:341:77: note: insert '_Nonnull' if the pointer should never be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                ^
                                                                                  _Nonnull 
/usr/local/include/stdlib.h:343:24: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int     rpmatch(const char *)
                           ^
/usr/local/include/stdlib.h:343:24: note: insert '_Nullable' if the pointer may be null
int     rpmatch(const char *)
                           ^
                            _Nullable
/usr/local/include/stdlib.h:343:24: note: insert '_Nonnull' if the pointer should never be null
int     rpmatch(const char *)
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:345:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
/usr/local/include/stdlib.h:345:37: note: insert '_Nullable' if the pointer may be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                         _Nullable
/usr/local/include/stdlib.h:345:37: note: insert '_Nonnull' if the pointer should never be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                         _Nonnull
/usr/local/include/stdlib.h:345:38: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                         ^
/usr/local/include/stdlib.h:345:38: note: insert '_Nullable' if the pointer may be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                         ^
                                           _Nullable 
/usr/local/include/stdlib.h:345:38: note: insert '_Nonnull' if the pointer should never be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                         ^
                                           _Nonnull 
/usr/local/include/stdlib.h:345:78: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                 ^
/usr/local/include/stdlib.h:345:78: note: insert '_Nullable' if the pointer may be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                 ^
                                                                                   _Nullable 
/usr/local/include/stdlib.h:345:78: note: insert '_Nonnull' if the pointer should never be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                 ^
                                                                                   _Nonnull 
/usr/local/include/stdlib.h:349:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
                       ^
/usr/local/include/stdlib.h:349:21: note: insert '_Nullable' if the pointer may be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
                       ^
                         _Nullable 
/usr/local/include/stdlib.h:349:21: note: insert '_Nonnull' if the pointer should never be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
                       ^
                         _Nonnull 
/usr/local/include/stdlib.h:349:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
        ^
/usr/local/include/stdlib.h:349:6: note: insert '_Nullable' if the pointer may be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
        ^
          _Nullable 
/usr/local/include/stdlib.h:349:6: note: insert '_Nonnull' if the pointer should never be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:351:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                            ^
/usr/local/include/stdlib.h:351:22: note: insert '_Nullable' if the pointer may be null
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                            ^
                              _Nullable 
/usr/local/include/stdlib.h:351:22: note: insert '_Nonnull' if the pointer should never be null
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                            ^
                              _Nonnull 
/usr/local/include/stdlib.h:351:84: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                                                                                          ^
/usr/local/include/stdlib.h:351:84: note: insert '_Nullable' if the pointer may be null
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                                                                                          ^
                                                                                           _Nullable
/usr/local/include/stdlib.h:351:84: note: insert '_Nonnull' if the pointer should never be null
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                                                                                          ^
                                                                                           _Nonnull
/usr/local/include/stdlib.h:351:85: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                                                                                           ^
/usr/local/include/stdlib.h:351:85: note: insert '_Nullable' if the pointer may be null
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                                                                                           ^
                                                                                             _Nullable 
/usr/local/include/stdlib.h:351:85: note: insert '_Nonnull' if the pointer should never be null
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                                                                                           ^
                                                                                             _Nonnull 
/usr/local/include/stdlib.h:355:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoq(const char *__str, char **__endptr, int __base);
                           ^
/usr/local/include/stdlib.h:355:21: note: insert '_Nullable' if the pointer may be null
         strtoq(const char *__str, char **__endptr, int __base);
                           ^
                             _Nullable 
/usr/local/include/stdlib.h:355:21: note: insert '_Nonnull' if the pointer should never be null
         strtoq(const char *__str, char **__endptr, int __base);
                           ^
                             _Nonnull 
/usr/local/include/stdlib.h:355:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoq(const char *__str, char **__endptr, int __base);
                                        ^
/usr/local/include/stdlib.h:355:34: note: insert '_Nullable' if the pointer may be null
         strtoq(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nullable
/usr/local/include/stdlib.h:355:34: note: insert '_Nonnull' if the pointer should never be null
         strtoq(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nonnull
/usr/local/include/stdlib.h:355:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoq(const char *__str, char **__endptr, int __base);
                                         ^
/usr/local/include/stdlib.h:355:35: note: insert '_Nullable' if the pointer may be null
         strtoq(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nullable 
/usr/local/include/stdlib.h:355:35: note: insert '_Nonnull' if the pointer should never be null
         strtoq(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nonnull 
/usr/local/include/stdlib.h:357:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtouq(const char *__str, char **__endptr, int __base);
                            ^
/usr/local/include/stdlib.h:357:22: note: insert '_Nullable' if the pointer may be null
         strtouq(const char *__str, char **__endptr, int __base);
                            ^
                              _Nullable 
/usr/local/include/stdlib.h:357:22: note: insert '_Nonnull' if the pointer should never be null
         strtouq(const char *__str, char **__endptr, int __base);
                            ^
                              _Nonnull 
/usr/local/include/stdlib.h:357:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtouq(const char *__str, char **__endptr, int __base);
                                         ^
/usr/local/include/stdlib.h:357:35: note: insert '_Nullable' if the pointer may be null
         strtouq(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nullable
/usr/local/include/stdlib.h:357:35: note: insert '_Nonnull' if the pointer should never be null
         strtouq(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nonnull
/usr/local/include/stdlib.h:357:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtouq(const char *__str, char **__endptr, int __base);
                                          ^
/usr/local/include/stdlib.h:357:36: note: insert '_Nullable' if the pointer may be null
         strtouq(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nullable 
/usr/local/include/stdlib.h:357:36: note: insert '_Nonnull' if the pointer should never be null
         strtouq(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nonnull 
/usr/local/include/stdlib.h:359:13: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
extern char *suboptarg;         /* getsubopt(3) external variable */
            ^
/usr/local/include/stdlib.h:359:13: note: insert '_Nullable' if the pointer may be null
extern char *suboptarg;         /* getsubopt(3) external variable */
            ^
              _Nullable 
/usr/local/include/stdlib.h:359:13: note: insert '_Nonnull' if the pointer should never be null
extern char *suboptarg;         /* getsubopt(3) external variable */
            ^
              _Nonnull 
193 warnings generated.
checked program was:
/* begin */
1: #include "ruby.h"
2: 
3: #include <mysql.h>
4: 
5: /*top*/
6: typedef int conftest_type;
7: conftest_type conftestval = (int)MYSQL_OPTION_MULTI_STATEMENTS_ON;
/* end */

--------------------

have_const: checking for MYSQL_OPTION_MULTI_STATEMENTS_OFF in mysql.h... -------------------- yes

"gcc -I/Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/x86_64-darwin19 -I/Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/backward -I/Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0 -I. -I/usr/local/opt/mysql-client/include/mysql  -I/usr/local/opt/libyaml/include -I/usr/local/opt/libksba/include -I/usr/local/opt/readline/include -I/usr/local/opt/zlib/include -I/usr/local/opt/openssl@1.1/include -D_XOPEN_SOURCE -D_DARWIN_C_SOURCE -D_DARWIN_UNLIMITED_SELECT -D_REENTRANT   -O3 -ggdb3 -Wall -Wextra -Wdeprecated-declarations -Wdivision-by-zero -Wimplicit-function-declaration -Wimplicit-int -Wpointer-arith -Wshorten-64-to-32 -Wwrite-strings -Wmissing-noreturn -Wno-constant-logical-operand -Wno-long-long -Wno-missing-field-initializers -Wno-overlength-strings -Wno-parentheses-equality -Wno-self-assign -Wno-tautological-compare -Wno-unused-parameter -Wno-unused-value -Wunused-variable -Wextra-tokens  -fno-common -pipe -DFULL_SSL_MODE_SUPPORT   -c conftest.c"
In file included from conftest.c:1:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby.h:33:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/ruby.h:29:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/defines.h:126:
In file included from /usr/local/include/stdio.h:64:
/usr/local/include/_stdio.h:93:16: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        unsigned char   *_base;
                        ^
/usr/local/include/_stdio.h:93:16: note: insert '_Nullable' if the pointer may be null
        unsigned char   *_base;
                        ^
                          _Nullable 
/usr/local/include/_stdio.h:93:16: note: insert '_Nonnull' if the pointer should never be null
        unsigned char   *_base;
                        ^
                          _Nonnull 
/usr/local/include/_stdio.h:138:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
/usr/local/include/_stdio.h:138:32: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
                                           _Nullable
/usr/local/include/_stdio.h:138:32: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
                                           _Nonnull
/usr/local/include/_stdio.h:138:40: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
/usr/local/include/_stdio.h:138:40: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
                                                   _Nullable
/usr/local/include/_stdio.h:138:40: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
                                                   _Nonnull
/usr/local/include/_stdio.h:139:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
/usr/local/include/_stdio.h:139:35: note: insert '_Nullable' if the pointer may be null
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
                                           _Nullable
/usr/local/include/_stdio.h:139:35: note: insert '_Nonnull' if the pointer should never be null
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
                                           _Nonnull
/usr/local/include/_stdio.h:140:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
/usr/local/include/_stdio.h:140:32: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
                                           _Nullable
/usr/local/include/_stdio.h:140:32: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
                                           _Nonnull
/usr/local/include/_stdio.h:140:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
/usr/local/include/_stdio.h:140:46: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
                                                         _Nullable
/usr/local/include/_stdio.h:140:46: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
                                                         _Nonnull
/usr/local/include/_stdio.h:144:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
/usr/local/include/_stdio.h:144:18: note: insert '_Nullable' if the pointer may be null
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
                          _Nullable 
/usr/local/include/_stdio.h:144:18: note: insert '_Nonnull' if the pointer should never be null
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
                          _Nonnull 
In file included from conftest.c:1:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby.h:33:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/ruby.h:29:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/defines.h:126:
/usr/local/include/stdio.h:67:13: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
extern FILE *__stdinp;
            ^
/usr/local/include/stdio.h:67:13: note: insert '_Nullable' if the pointer may be null
extern FILE *__stdinp;
            ^
              _Nullable 
/usr/local/include/stdio.h:67:13: note: insert '_Nonnull' if the pointer should never be null
extern FILE *__stdinp;
            ^
              _Nonnull 
/usr/local/include/stdio.h:386:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 int (* _Nullable)(void *, const char *, int),
                                        ^
/usr/local/include/stdio.h:386:41: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *, const char *, int),
                                        ^
                                         _Nullable
/usr/local/include/stdio.h:386:41: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *, const char *, int),
                                        ^
                                         _Nonnull
/usr/local/include/stdio.h:386:55: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
/usr/local/include/stdio.h:386:55: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
                                                       _Nullable
/usr/local/include/stdio.h:386:55: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
                                                       _Nonnull
/usr/local/include/stdio.h:387:44: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
/usr/local/include/stdio.h:387:44: note: insert '_Nullable' if the pointer may be null
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
                                            _Nullable
/usr/local/include/stdio.h:387:44: note: insert '_Nonnull' if the pointer should never be null
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
                                            _Nonnull
/usr/local/include/stdio.h:388:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 int (* _Nullable)(void *));
                                        ^
/usr/local/include/stdio.h:388:41: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *));
                                        ^
                                         _Nullable
/usr/local/include/stdio.h:388:41: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *));
                                        ^
                                         _Nonnull
/usr/local/include/stdio.h:384:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
FILE    *funopen(const void *,
        ^
/usr/local/include/stdio.h:384:6: note: insert '_Nullable' if the pointer may be null
FILE    *funopen(const void *,
        ^
          _Nullable 
/usr/local/include/stdio.h:384:6: note: insert '_Nonnull' if the pointer should never be null
FILE    *funopen(const void *,
        ^
          _Nonnull 
In file included from conftest.c:1:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby.h:33:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/ruby.h:29:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/defines.h:134:
/usr/local/include/stdlib.h:134:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   atof(const char *);
                         ^
/usr/local/include/stdlib.h:134:25: note: insert '_Nullable' if the pointer may be null
double   atof(const char *);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:134:25: note: insert '_Nonnull' if the pointer should never be null
double   atof(const char *);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:135:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      atoi(const char *);
                         ^
/usr/local/include/stdlib.h:135:22: note: insert '_Nullable' if the pointer may be null
int      atoi(const char *);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:135:22: note: insert '_Nonnull' if the pointer should never be null
int      atoi(const char *);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:136:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     atol(const char *);
                         ^
/usr/local/include/stdlib.h:136:23: note: insert '_Nullable' if the pointer may be null
long     atol(const char *);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:136:23: note: insert '_Nonnull' if the pointer should never be null
long     atol(const char *);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:139:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         atoll(const char *);
                          ^
/usr/local/include/stdlib.h:139:20: note: insert '_Nullable' if the pointer may be null
         atoll(const char *);
                          ^
                           _Nullable
/usr/local/include/stdlib.h:139:20: note: insert '_Nonnull' if the pointer should never be null
         atoll(const char *);
                          ^
                           _Nonnull
/usr/local/include/stdlib.h:141:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                            ^
/usr/local/include/stdlib.h:141:26: note: insert '_Nullable' if the pointer may be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                            ^
                              _Nullable 
/usr/local/include/stdlib.h:141:26: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                            ^
                              _Nonnull 
/usr/local/include/stdlib.h:141:45: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                                               ^
/usr/local/include/stdlib.h:141:45: note: insert '_Nullable' if the pointer may be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                                               ^
                                                 _Nullable 
/usr/local/include/stdlib.h:141:45: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                                               ^
                                                 _Nonnull 
/usr/local/include/stdlib.h:142:59: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                 ^
/usr/local/include/stdlib.h:142:59: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                 ^
                                                                  _Nullable
/usr/local/include/stdlib.h:142:59: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                 ^
                                                                  _Nonnull
/usr/local/include/stdlib.h:142:73: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                               ^
/usr/local/include/stdlib.h:142:73: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                               ^
                                                                                _Nullable
/usr/local/include/stdlib.h:142:73: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                               ^
                                                                                _Nonnull
/usr/local/include/stdlib.h:141:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch(const void *__key, const void *__base, size_t __nel,
        ^
/usr/local/include/stdlib.h:141:6: note: insert '_Nullable' if the pointer may be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
        ^
          _Nullable 
/usr/local/include/stdlib.h:141:6: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
        ^
          _Nonnull 
/usr/local/include/stdlib.h:147:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getenv(const char *);
                           ^
/usr/local/include/stdlib.h:147:25: note: insert '_Nullable' if the pointer may be null
char    *getenv(const char *);
                           ^
                            _Nullable
/usr/local/include/stdlib.h:147:25: note: insert '_Nonnull' if the pointer should never be null
char    *getenv(const char *);
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:147:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getenv(const char *);
        ^
/usr/local/include/stdlib.h:147:6: note: insert '_Nullable' if the pointer may be null
char    *getenv(const char *);
        ^
          _Nullable 
/usr/local/include/stdlib.h:147:6: note: insert '_Nonnull' if the pointer should never be null
char    *getenv(const char *);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:156:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mblen(const char *__s, size_t __n);
                          ^
/usr/local/include/stdlib.h:156:23: note: insert '_Nullable' if the pointer may be null
int      mblen(const char *__s, size_t __n);
                          ^
                            _Nullable 
/usr/local/include/stdlib.h:156:23: note: insert '_Nonnull' if the pointer should never be null
int      mblen(const char *__s, size_t __n);
                          ^
                            _Nonnull 
/usr/local/include/stdlib.h:157:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                          ^
/usr/local/include/stdlib.h:157:26: note: insert '_Nullable' if the pointer may be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                          ^
                            _Nullable
/usr/local/include/stdlib.h:157:26: note: insert '_Nonnull' if the pointer should never be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                          ^
                            _Nonnull
/usr/local/include/stdlib.h:157:52: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                                                    ^
/usr/local/include/stdlib.h:157:52: note: insert '_Nullable' if the pointer may be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                                                    ^
                                                      _Nullable
/usr/local/include/stdlib.h:157:52: note: insert '_Nonnull' if the pointer should never be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                                                    ^
                                                      _Nonnull
/usr/local/include/stdlib.h:158:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                        ^
/usr/local/include/stdlib.h:158:21: note: insert '_Nullable' if the pointer may be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                        ^
                          _Nullable
/usr/local/include/stdlib.h:158:21: note: insert '_Nonnull' if the pointer should never be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                        ^
                          _Nonnull
/usr/local/include/stdlib.h:158:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                                                 ^
/usr/local/include/stdlib.h:158:46: note: insert '_Nullable' if the pointer may be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                                                 ^
                                                   _Nullable
/usr/local/include/stdlib.h:158:46: note: insert '_Nonnull' if the pointer should never be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                                                 ^
                                                   _Nonnull
/usr/local/include/stdlib.h:160:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort(void *__base, size_t __nel, size_t __width,
                    ^
/usr/local/include/stdlib.h:160:18: note: insert '_Nullable' if the pointer may be null
void     qsort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nullable 
/usr/local/include/stdlib.h:160:18: note: insert '_Nonnull' if the pointer should never be null
void     qsort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nonnull 
/usr/local/include/stdlib.h:161:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
/usr/local/include/stdlib.h:161:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:161:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:161:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
/usr/local/include/stdlib.h:161:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:161:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:165:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                           ^
/usr/local/include/stdlib.h:165:27: note: insert '_Nullable' if the pointer may be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                           ^
                            _Nullable
/usr/local/include/stdlib.h:165:27: note: insert '_Nonnull' if the pointer should never be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:165:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                   ^
/usr/local/include/stdlib.h:165:35: note: insert '_Nullable' if the pointer may be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                   ^
                                    _Nullable
/usr/local/include/stdlib.h:165:35: note: insert '_Nonnull' if the pointer should never be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                   ^
                                    _Nonnull
/usr/local/include/stdlib.h:165:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                    ^
/usr/local/include/stdlib.h:165:36: note: insert '_Nullable' if the pointer may be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                    ^
                                     _Nullable
/usr/local/include/stdlib.h:165:36: note: insert '_Nonnull' if the pointer should never be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                    ^
                                     _Nonnull
/usr/local/include/stdlib.h:166:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                           ^
/usr/local/include/stdlib.h:166:26: note: insert '_Nullable' if the pointer may be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                           ^
                            _Nullable
/usr/local/include/stdlib.h:166:26: note: insert '_Nonnull' if the pointer should never be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:166:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                   ^
/usr/local/include/stdlib.h:166:34: note: insert '_Nullable' if the pointer may be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                   ^
                                    _Nullable
/usr/local/include/stdlib.h:166:34: note: insert '_Nonnull' if the pointer should never be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                   ^
                                    _Nonnull
/usr/local/include/stdlib.h:166:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                    ^
/usr/local/include/stdlib.h:166:35: note: insert '_Nullable' if the pointer may be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                    ^
                                     _Nullable
/usr/local/include/stdlib.h:166:35: note: insert '_Nonnull' if the pointer should never be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                    ^
                                     _Nonnull
/usr/local/include/stdlib.h:167:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     strtol(const char *__str, char **__endptr, int __base);
                           ^
/usr/local/include/stdlib.h:167:25: note: insert '_Nullable' if the pointer may be null
long     strtol(const char *__str, char **__endptr, int __base);
                           ^
                             _Nullable 
/usr/local/include/stdlib.h:167:25: note: insert '_Nonnull' if the pointer should never be null
long     strtol(const char *__str, char **__endptr, int __base);
                           ^
                             _Nonnull 
/usr/local/include/stdlib.h:167:38: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     strtol(const char *__str, char **__endptr, int __base);
                                        ^
/usr/local/include/stdlib.h:167:38: note: insert '_Nullable' if the pointer may be null
long     strtol(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nullable
/usr/local/include/stdlib.h:167:38: note: insert '_Nonnull' if the pointer should never be null
long     strtol(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nonnull
/usr/local/include/stdlib.h:167:39: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     strtol(const char *__str, char **__endptr, int __base);
                                         ^
/usr/local/include/stdlib.h:167:39: note: insert '_Nullable' if the pointer may be null
long     strtol(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nullable 
/usr/local/include/stdlib.h:167:39: note: insert '_Nonnull' if the pointer should never be null
long     strtol(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nonnull 
/usr/local/include/stdlib.h:169:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtold(const char *, char **);
                            ^
/usr/local/include/stdlib.h:169:22: note: insert '_Nullable' if the pointer may be null
         strtold(const char *, char **);
                            ^
                             _Nullable
/usr/local/include/stdlib.h:169:22: note: insert '_Nonnull' if the pointer should never be null
         strtold(const char *, char **);
                            ^
                             _Nonnull
/usr/local/include/stdlib.h:169:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtold(const char *, char **);
                                    ^
/usr/local/include/stdlib.h:169:30: note: insert '_Nullable' if the pointer may be null
         strtold(const char *, char **);
                                    ^
                                     _Nullable
/usr/local/include/stdlib.h:169:30: note: insert '_Nonnull' if the pointer should never be null
         strtold(const char *, char **);
                                    ^
                                     _Nonnull
/usr/local/include/stdlib.h:169:31: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtold(const char *, char **);
                                     ^
/usr/local/include/stdlib.h:169:31: note: insert '_Nullable' if the pointer may be null
         strtold(const char *, char **);
                                     ^
                                      _Nullable
/usr/local/include/stdlib.h:169:31: note: insert '_Nonnull' if the pointer should never be null
         strtold(const char *, char **);
                                     ^
                                      _Nonnull
/usr/local/include/stdlib.h:172:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoll(const char *__str, char **__endptr, int __base);
                            ^
/usr/local/include/stdlib.h:172:22: note: insert '_Nullable' if the pointer may be null
         strtoll(const char *__str, char **__endptr, int __base);
                            ^
                              _Nullable 
/usr/local/include/stdlib.h:172:22: note: insert '_Nonnull' if the pointer should never be null
         strtoll(const char *__str, char **__endptr, int __base);
                            ^
                              _Nonnull 
/usr/local/include/stdlib.h:172:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoll(const char *__str, char **__endptr, int __base);
                                         ^
/usr/local/include/stdlib.h:172:35: note: insert '_Nullable' if the pointer may be null
         strtoll(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nullable
/usr/local/include/stdlib.h:172:35: note: insert '_Nonnull' if the pointer should never be null
         strtoll(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nonnull
/usr/local/include/stdlib.h:172:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoll(const char *__str, char **__endptr, int __base);
                                          ^
/usr/local/include/stdlib.h:172:36: note: insert '_Nullable' if the pointer may be null
         strtoll(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nullable 
/usr/local/include/stdlib.h:172:36: note: insert '_Nonnull' if the pointer should never be null
         strtoll(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nonnull 
/usr/local/include/stdlib.h:175:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoul(const char *__str, char **__endptr, int __base);
                            ^
/usr/local/include/stdlib.h:175:22: note: insert '_Nullable' if the pointer may be null
         strtoul(const char *__str, char **__endptr, int __base);
                            ^
                              _Nullable 
/usr/local/include/stdlib.h:175:22: note: insert '_Nonnull' if the pointer should never be null
         strtoul(const char *__str, char **__endptr, int __base);
                            ^
                              _Nonnull 
/usr/local/include/stdlib.h:175:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoul(const char *__str, char **__endptr, int __base);
                                         ^
/usr/local/include/stdlib.h:175:35: note: insert '_Nullable' if the pointer may be null
         strtoul(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nullable
/usr/local/include/stdlib.h:175:35: note: insert '_Nonnull' if the pointer should never be null
         strtoul(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nonnull
/usr/local/include/stdlib.h:175:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoul(const char *__str, char **__endptr, int __base);
                                          ^
/usr/local/include/stdlib.h:175:36: note: insert '_Nullable' if the pointer may be null
         strtoul(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nullable 
/usr/local/include/stdlib.h:175:36: note: insert '_Nonnull' if the pointer should never be null
         strtoul(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nonnull 
/usr/local/include/stdlib.h:178:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoull(const char *__str, char **__endptr, int __base);
                             ^
/usr/local/include/stdlib.h:178:23: note: insert '_Nullable' if the pointer may be null
         strtoull(const char *__str, char **__endptr, int __base);
                             ^
                               _Nullable 
/usr/local/include/stdlib.h:178:23: note: insert '_Nonnull' if the pointer should never be null
         strtoull(const char *__str, char **__endptr, int __base);
                             ^
                               _Nonnull 
/usr/local/include/stdlib.h:178:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoull(const char *__str, char **__endptr, int __base);
                                          ^
/usr/local/include/stdlib.h:178:36: note: insert '_Nullable' if the pointer may be null
         strtoull(const char *__str, char **__endptr, int __base);
                                          ^
                                           _Nullable
/usr/local/include/stdlib.h:178:36: note: insert '_Nonnull' if the pointer should never be null
         strtoull(const char *__str, char **__endptr, int __base);
                                          ^
                                           _Nonnull
/usr/local/include/stdlib.h:178:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoull(const char *__str, char **__endptr, int __base);
                                           ^
/usr/local/include/stdlib.h:178:37: note: insert '_Nullable' if the pointer may be null
         strtoull(const char *__str, char **__endptr, int __base);
                                           ^
                                             _Nullable 
/usr/local/include/stdlib.h:178:37: note: insert '_Nonnull' if the pointer should never be null
         strtoull(const char *__str, char **__endptr, int __base);
                                           ^
                                             _Nonnull 
/usr/local/include/stdlib.h:190:24: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      system(const char *) __DARWIN_ALIAS_C(system);
                           ^
/usr/local/include/stdlib.h:190:24: note: insert '_Nullable' if the pointer may be null
int      system(const char *) __DARWIN_ALIAS_C(system);
                           ^
                            _Nullable
/usr/local/include/stdlib.h:190:24: note: insert '_Nonnull' if the pointer should never be null
int      system(const char *) __DARWIN_ALIAS_C(system);
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:194:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                       ^
/usr/local/include/stdlib.h:194:23: note: insert '_Nullable' if the pointer may be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                       ^
                         _Nullable
/usr/local/include/stdlib.h:194:23: note: insert '_Nonnull' if the pointer should never be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                       ^
                         _Nonnull
/usr/local/include/stdlib.h:194:51: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                                                   ^
/usr/local/include/stdlib.h:194:51: note: insert '_Nullable' if the pointer may be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                                                   ^
                                                     _Nullable
/usr/local/include/stdlib.h:194:51: note: insert '_Nonnull' if the pointer should never be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                                                   ^
                                                     _Nonnull
/usr/local/include/stdlib.h:195:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      wctomb(char *, wchar_t);
                     ^
/usr/local/include/stdlib.h:195:18: note: insert '_Nullable' if the pointer may be null
int      wctomb(char *, wchar_t);
                     ^
                      _Nullable
/usr/local/include/stdlib.h:195:18: note: insert '_Nonnull' if the pointer should never be null
int      wctomb(char *, wchar_t);
                     ^
                      _Nonnull
/usr/local/include/stdlib.h:199:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     a64l(const char *);
                         ^
/usr/local/include/stdlib.h:199:23: note: insert '_Nullable' if the pointer may be null
long     a64l(const char *);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:199:23: note: insert '_Nonnull' if the pointer should never be null
long     a64l(const char *);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:201:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
/usr/local/include/stdlib.h:201:29: note: insert '_Nullable' if the pointer may be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nullable 
/usr/local/include/stdlib.h:201:29: note: insert '_Nonnull' if the pointer should never be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nonnull 
/usr/local/include/stdlib.h:201:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
/usr/local/include/stdlib.h:201:46: note: insert '_Nullable' if the pointer may be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nullable 
/usr/local/include/stdlib.h:201:46: note: insert '_Nonnull' if the pointer should never be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nonnull 
/usr/local/include/stdlib.h:201:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
/usr/local/include/stdlib.h:201:6: note: insert '_Nullable' if the pointer may be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nullable 
/usr/local/include/stdlib.h:201:6: note: insert '_Nonnull' if the pointer should never be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nonnull 
/usr/local/include/stdlib.h:202:31: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
double   erand48(unsigned short[3]);
                               ^
/usr/local/include/stdlib.h:202:31: note: insert '_Nullable' if the array parameter may be null
double   erand48(unsigned short[3]);
                               ^
                                _Nullable 
/usr/local/include/stdlib.h:202:31: note: insert '_Nonnull' if the array parameter should never be null
double   erand48(unsigned short[3]);
                               ^
                                _Nonnull 
/usr/local/include/stdlib.h:203:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
/usr/local/include/stdlib.h:203:29: note: insert '_Nullable' if the pointer may be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nullable 
/usr/local/include/stdlib.h:203:29: note: insert '_Nonnull' if the pointer should never be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nonnull 
/usr/local/include/stdlib.h:203:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
/usr/local/include/stdlib.h:203:46: note: insert '_Nullable' if the pointer may be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nullable 
/usr/local/include/stdlib.h:203:46: note: insert '_Nonnull' if the pointer should never be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nonnull 
/usr/local/include/stdlib.h:203:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
/usr/local/include/stdlib.h:203:6: note: insert '_Nullable' if the pointer may be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nullable 
/usr/local/include/stdlib.h:203:6: note: insert '_Nonnull' if the pointer should never be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nonnull 
/usr/local/include/stdlib.h:204:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *gcvt(double, int, char *); /* LEGACY */
                                ^
/usr/local/include/stdlib.h:204:30: note: insert '_Nullable' if the pointer may be null
char    *gcvt(double, int, char *); /* LEGACY */
                                ^
                                 _Nullable
/usr/local/include/stdlib.h:204:30: note: insert '_Nonnull' if the pointer should never be null
char    *gcvt(double, int, char *); /* LEGACY */
                                ^
                                 _Nonnull
/usr/local/include/stdlib.h:204:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *gcvt(double, int, char *); /* LEGACY */
        ^
/usr/local/include/stdlib.h:204:6: note: insert '_Nullable' if the pointer may be null
char    *gcvt(double, int, char *); /* LEGACY */
        ^
          _Nullable 
/usr/local/include/stdlib.h:204:6: note: insert '_Nonnull' if the pointer should never be null
char    *gcvt(double, int, char *); /* LEGACY */
        ^
          _Nonnull 
/usr/local/include/stdlib.h:205:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                        ^
/usr/local/include/stdlib.h:205:21: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                        ^
                         _Nullable
/usr/local/include/stdlib.h:205:21: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                        ^
                         _Nonnull
/usr/local/include/stdlib.h:205:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                         ^
/usr/local/include/stdlib.h:205:22: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:205:22: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:205:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                 ^
/usr/local/include/stdlib.h:205:30: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                 ^
                                   _Nullable
/usr/local/include/stdlib.h:205:30: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                 ^
                                   _Nonnull
/usr/local/include/stdlib.h:205:38: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                         ^
/usr/local/include/stdlib.h:205:38: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                         ^
                                          _Nullable
/usr/local/include/stdlib.h:205:38: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                         ^
                                          _Nonnull
/usr/local/include/stdlib.h:205:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                                 ^
/usr/local/include/stdlib.h:205:46: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:205:46: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:205:47: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                                  ^
/usr/local/include/stdlib.h:205:47: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                                  ^
                                                   _Nullable
/usr/local/include/stdlib.h:205:47: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                                  ^
                                                   _Nonnull
/usr/local/include/stdlib.h:208:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
                                  ^
/usr/local/include/stdlib.h:208:32: note: insert '_Nullable' if the pointer may be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
                                  ^
                                   _Nullable
/usr/local/include/stdlib.h:208:32: note: insert '_Nonnull' if the pointer should never be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
                                  ^
                                   _Nonnull
/usr/local/include/stdlib.h:208:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
        ^
/usr/local/include/stdlib.h:208:6: note: insert '_Nullable' if the pointer may be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
        ^
          _Nullable 
/usr/local/include/stdlib.h:208:6: note: insert '_Nonnull' if the pointer should never be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
        ^
          _Nonnull 
/usr/local/include/stdlib.h:212:29: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
long     jrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
/usr/local/include/stdlib.h:212:29: note: insert '_Nullable' if the array parameter may be null
long     jrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nullable 
/usr/local/include/stdlib.h:212:29: note: insert '_Nonnull' if the array parameter should never be null
long     jrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nonnull 
/usr/local/include/stdlib.h:213:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *l64a(long);
        ^
/usr/local/include/stdlib.h:213:6: note: insert '_Nullable' if the pointer may be null
char    *l64a(long);
        ^
          _Nullable 
/usr/local/include/stdlib.h:213:6: note: insert '_Nonnull' if the pointer should never be null
char    *l64a(long);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:214:29: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
void     lcong48(unsigned short[7]);
                               ^
/usr/local/include/stdlib.h:214:29: note: insert '_Nullable' if the array parameter may be null
void     lcong48(unsigned short[7]);
                               ^
                                _Nullable 
/usr/local/include/stdlib.h:214:29: note: insert '_Nonnull' if the array parameter should never be null
void     lcong48(unsigned short[7]);
                               ^
                                _Nonnull 
/usr/local/include/stdlib.h:216:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *mktemp(char *);
                     ^
/usr/local/include/stdlib.h:216:19: note: insert '_Nullable' if the pointer may be null
char    *mktemp(char *);
                     ^
                      _Nullable
/usr/local/include/stdlib.h:216:19: note: insert '_Nonnull' if the pointer should never be null
char    *mktemp(char *);
                     ^
                      _Nonnull
/usr/local/include/stdlib.h:216:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *mktemp(char *);
        ^
/usr/local/include/stdlib.h:216:6: note: insert '_Nullable' if the pointer may be null
char    *mktemp(char *);
        ^
          _Nullable 
/usr/local/include/stdlib.h:216:6: note: insert '_Nonnull' if the pointer should never be null
char    *mktemp(char *);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:217:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mkstemp(char *);
                      ^
/usr/local/include/stdlib.h:217:19: note: insert '_Nullable' if the pointer may be null
int      mkstemp(char *);
                      ^
                       _Nullable
/usr/local/include/stdlib.h:217:19: note: insert '_Nonnull' if the pointer should never be null
int      mkstemp(char *);
                      ^
                       _Nonnull
/usr/local/include/stdlib.h:219:29: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
long     nrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
/usr/local/include/stdlib.h:219:29: note: insert '_Nullable' if the array parameter may be null
long     nrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nullable 
/usr/local/include/stdlib.h:219:29: note: insert '_Nonnull' if the array parameter should never be null
long     nrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nonnull 
/usr/local/include/stdlib.h:221:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ptsname(int);
        ^
/usr/local/include/stdlib.h:221:6: note: insert '_Nullable' if the pointer may be null
char    *ptsname(int);
        ^
          _Nullable 
/usr/local/include/stdlib.h:221:6: note: insert '_Nonnull' if the pointer should never be null
char    *ptsname(int);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:224:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int ptsname_r(int fildes, char *buffer, size_t buflen) __API_AVAILABLE(macos(10.13.4), ios(11.3), tvos(11.3), watchos(4.3));
                               ^
/usr/local/include/stdlib.h:224:32: note: insert '_Nullable' if the pointer may be null
int ptsname_r(int fildes, char *buffer, size_t buflen) __API_AVAILABLE(macos(10.13.4), ios(11.3), tvos(11.3), watchos(4.3));
                               ^
                                 _Nullable 
/usr/local/include/stdlib.h:224:32: note: insert '_Nonnull' if the pointer should never be null
int ptsname_r(int fildes, char *buffer, size_t buflen) __API_AVAILABLE(macos(10.13.4), ios(11.3), tvos(11.3), watchos(4.3));
                               ^
                                 _Nonnull 
/usr/local/include/stdlib.h:227:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      putenv(char *) __DARWIN_ALIAS(putenv);
                     ^
/usr/local/include/stdlib.h:227:18: note: insert '_Nullable' if the pointer may be null
int      putenv(char *) __DARWIN_ALIAS(putenv);
                     ^
                      _Nullable
/usr/local/include/stdlib.h:227:18: note: insert '_Nonnull' if the pointer should never be null
int      putenv(char *) __DARWIN_ALIAS(putenv);
                     ^
                      _Nonnull
/usr/local/include/stdlib.h:229:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      rand_r(unsigned *) __swift_unavailable("Use arc4random instead.");
                         ^
/usr/local/include/stdlib.h:229:22: note: insert '_Nullable' if the pointer may be null
int      rand_r(unsigned *) __swift_unavailable("Use arc4random instead.");
                         ^
                          _Nullable
/usr/local/include/stdlib.h:229:22: note: insert '_Nonnull' if the pointer should never be null
int      rand_r(unsigned *) __swift_unavailable("Use arc4random instead.");
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:231:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                             ^
/usr/local/include/stdlib.h:231:27: note: insert '_Nullable' if the pointer may be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                             ^
                               _Nullable
/usr/local/include/stdlib.h:231:27: note: insert '_Nonnull' if the pointer should never be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                             ^
                               _Nonnull
/usr/local/include/stdlib.h:231:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                                                ^
/usr/local/include/stdlib.h:231:46: note: insert '_Nullable' if the pointer may be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                                                ^
                                                  _Nullable
/usr/local/include/stdlib.h:231:46: note: insert '_Nonnull' if the pointer should never be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                                                ^
                                                  _Nonnull
/usr/local/include/stdlib.h:231:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
        ^
/usr/local/include/stdlib.h:231:6: note: insert '_Nullable' if the pointer may be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
        ^
          _Nullable 
/usr/local/include/stdlib.h:231:6: note: insert '_Nonnull' if the pointer should never be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:236:24: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
        *seed48(unsigned short[3]);
                              ^
/usr/local/include/stdlib.h:236:24: note: insert '_Nullable' if the array parameter may be null
        *seed48(unsigned short[3]);
                              ^
                               _Nullable 
/usr/local/include/stdlib.h:236:24: note: insert '_Nonnull' if the array parameter should never be null
        *seed48(unsigned short[3]);
                              ^
                               _Nonnull 
/usr/local/include/stdlib.h:236:2: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        *seed48(unsigned short[3]);
        ^
/usr/local/include/stdlib.h:236:2: note: insert '_Nullable' if the pointer may be null
        *seed48(unsigned short[3]);
        ^
          _Nullable 
/usr/local/include/stdlib.h:236:2: note: insert '_Nonnull' if the pointer should never be null
        *seed48(unsigned short[3]);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:237:24: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                           ^
/usr/local/include/stdlib.h:237:24: note: insert '_Nullable' if the pointer may be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                           ^
                             _Nullable
/usr/local/include/stdlib.h:237:24: note: insert '_Nonnull' if the pointer should never be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                           ^
                             _Nonnull
/usr/local/include/stdlib.h:237:45: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                                                ^
/usr/local/include/stdlib.h:237:45: note: insert '_Nullable' if the pointer may be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                                                ^
                                                  _Nullable
/usr/local/include/stdlib.h:237:45: note: insert '_Nonnull' if the pointer should never be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                                                ^
                                                  _Nonnull
/usr/local/include/stdlib.h:239:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     setkey(const char *) __DARWIN_ALIAS(setkey);
                           ^
/usr/local/include/stdlib.h:239:25: note: insert '_Nullable' if the pointer may be null
void     setkey(const char *) __DARWIN_ALIAS(setkey);
                           ^
                            _Nullable
/usr/local/include/stdlib.h:239:25: note: insert '_Nonnull' if the pointer should never be null
void     setkey(const char *) __DARWIN_ALIAS(setkey);
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:243:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *setstate(const char *);
                             ^
/usr/local/include/stdlib.h:243:27: note: insert '_Nullable' if the pointer may be null
char    *setstate(const char *);
                             ^
                              _Nullable
/usr/local/include/stdlib.h:243:27: note: insert '_Nonnull' if the pointer should never be null
char    *setstate(const char *);
                             ^
                              _Nonnull
/usr/local/include/stdlib.h:243:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *setstate(const char *);
        ^
/usr/local/include/stdlib.h:243:6: note: insert '_Nullable' if the pointer may be null
char    *setstate(const char *);
        ^
          _Nullable 
/usr/local/include/stdlib.h:243:6: note: insert '_Nonnull' if the pointer should never be null
char    *setstate(const char *);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:252:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      unsetenv(const char *) __DARWIN_ALIAS(unsetenv);
                             ^
/usr/local/include/stdlib.h:252:26: note: insert '_Nullable' if the pointer may be null
int      unsetenv(const char *) __DARWIN_ALIAS(unsetenv);
                             ^
                              _Nullable
/usr/local/include/stdlib.h:252:26: note: insert '_Nonnull' if the pointer should never be null
int      unsetenv(const char *) __DARWIN_ALIAS(unsetenv);
                             ^
                              _Nonnull
/usr/local/include/stdlib.h:265:42: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     arc4random_addrandom(unsigned char * /*dat*/, int /*datlen*/)
                                            ^
/usr/local/include/stdlib.h:265:42: note: insert '_Nullable' if the pointer may be null
void     arc4random_addrandom(unsigned char * /*dat*/, int /*datlen*/)
                                            ^
                                              _Nullable
/usr/local/include/stdlib.h:265:42: note: insert '_Nonnull' if the pointer should never be null
void     arc4random_addrandom(unsigned char * /*dat*/, int /*datlen*/)
                                            ^
                                              _Nonnull
/usr/local/include/stdlib.h:270:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     arc4random_buf(void * __buf, size_t __nbytes) __OSX_AVAILABLE_STARTING(__MAC_10_7, __IPHONE_4_3);
                             ^
/usr/local/include/stdlib.h:270:27: note: insert '_Nullable' if the pointer may be null
void     arc4random_buf(void * __buf, size_t __nbytes) __OSX_AVAILABLE_STARTING(__MAC_10_7, __IPHONE_4_3);
                             ^
                               _Nullable
/usr/local/include/stdlib.h:270:27: note: insert '_Nonnull' if the pointer should never be null
void     arc4random_buf(void * __buf, size_t __nbytes) __OSX_AVAILABLE_STARTING(__MAC_10_7, __IPHONE_4_3);
                             ^
                               _Nonnull
/usr/local/include/stdlib.h:276:28: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                              ^
/usr/local/include/stdlib.h:276:28: note: insert '_Nullable' if the pointer may be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                              ^
                                _Nullable 
/usr/local/include/stdlib.h:276:28: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                              ^
                                _Nonnull 
/usr/local/include/stdlib.h:276:47: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                                                 ^
/usr/local/include/stdlib.h:276:47: note: insert '_Nullable' if the pointer may be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                                                 ^
                                                   _Nullable 
/usr/local/include/stdlib.h:276:47: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                                                 ^
                                                   _Nonnull 
/usr/local/include/stdlib.h:277:59: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                 ^
/usr/local/include/stdlib.h:277:59: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                 ^
                                                                  _Nullable
/usr/local/include/stdlib.h:277:59: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                 ^
                                                                  _Nonnull
/usr/local/include/stdlib.h:277:73: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                               ^
/usr/local/include/stdlib.h:277:73: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                               ^
                                                                                _Nullable
/usr/local/include/stdlib.h:277:73: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                               ^
                                                                                _Nonnull
/usr/local/include/stdlib.h:276:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
        ^
/usr/local/include/stdlib.h:276:6: note: insert '_Nullable' if the pointer may be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
        ^
          _Nullable 
/usr/local/include/stdlib.h:276:6: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
        ^
          _Nonnull 
/usr/local/include/stdlib.h:281:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *cgetcap(char *, const char *, int);
                      ^
/usr/local/include/stdlib.h:281:20: note: insert '_Nullable' if the pointer may be null
char    *cgetcap(char *, const char *, int);
                      ^
                       _Nullable
/usr/local/include/stdlib.h:281:20: note: insert '_Nonnull' if the pointer should never be null
char    *cgetcap(char *, const char *, int);
                      ^
                       _Nonnull
/usr/local/include/stdlib.h:281:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *cgetcap(char *, const char *, int);
                                    ^
/usr/local/include/stdlib.h:281:34: note: insert '_Nullable' if the pointer may be null
char    *cgetcap(char *, const char *, int);
                                    ^
                                     _Nullable
/usr/local/include/stdlib.h:281:34: note: insert '_Nonnull' if the pointer should never be null
char    *cgetcap(char *, const char *, int);
                                    ^
                                     _Nonnull
/usr/local/include/stdlib.h:281:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *cgetcap(char *, const char *, int);
        ^
/usr/local/include/stdlib.h:281:6: note: insert '_Nullable' if the pointer may be null
char    *cgetcap(char *, const char *, int);
        ^
          _Nullable 
/usr/local/include/stdlib.h:281:6: note: insert '_Nonnull' if the pointer should never be null
char    *cgetcap(char *, const char *, int);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:283:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                      ^
/usr/local/include/stdlib.h:283:19: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                      ^
                       _Nullable
/usr/local/include/stdlib.h:283:19: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                      ^
                       _Nonnull
/usr/local/include/stdlib.h:283:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                       ^
/usr/local/include/stdlib.h:283:20: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                       ^
                        _Nullable
/usr/local/include/stdlib.h:283:20: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                       ^
                        _Nonnull
/usr/local/include/stdlib.h:283:28: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                               ^
/usr/local/include/stdlib.h:283:28: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                               ^
                                _Nullable
/usr/local/include/stdlib.h:283:28: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                               ^
                                _Nonnull
/usr/local/include/stdlib.h:283:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                                ^
/usr/local/include/stdlib.h:283:29: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                                ^
                                 _Nullable
/usr/local/include/stdlib.h:283:29: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                                ^
                                 _Nonnull
/usr/local/include/stdlib.h:283:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                                              ^
/usr/local/include/stdlib.h:283:43: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                                              ^
                                               _Nullable
/usr/local/include/stdlib.h:283:43: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                                              ^
                                               _Nonnull
/usr/local/include/stdlib.h:284:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                        ^
/usr/local/include/stdlib.h:284:21: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                        ^
                         _Nullable
/usr/local/include/stdlib.h:284:21: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                        ^
                         _Nonnull
/usr/local/include/stdlib.h:284:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                         ^
/usr/local/include/stdlib.h:284:22: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:284:22: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:284:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                                 ^
/usr/local/include/stdlib.h:284:30: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                                 ^
                                  _Nullable
/usr/local/include/stdlib.h:284:30: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                                 ^
                                  _Nonnull
/usr/local/include/stdlib.h:284:31: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                                  ^
/usr/local/include/stdlib.h:284:31: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                                  ^
                                   _Nullable
/usr/local/include/stdlib.h:284:31: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                                  ^
                                   _Nonnull
/usr/local/include/stdlib.h:285:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetmatch(const char *, const char *);
                              ^
/usr/local/include/stdlib.h:285:27: note: insert '_Nullable' if the pointer may be null
int      cgetmatch(const char *, const char *);
                              ^
                               _Nullable
/usr/local/include/stdlib.h:285:27: note: insert '_Nonnull' if the pointer should never be null
int      cgetmatch(const char *, const char *);
                              ^
                               _Nonnull
/usr/local/include/stdlib.h:285:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetmatch(const char *, const char *);
                                            ^
/usr/local/include/stdlib.h:285:41: note: insert '_Nullable' if the pointer may be null
int      cgetmatch(const char *, const char *);
                                            ^
                                             _Nullable
/usr/local/include/stdlib.h:285:41: note: insert '_Nonnull' if the pointer should never be null
int      cgetmatch(const char *, const char *);
                                            ^
                                             _Nonnull
/usr/local/include/stdlib.h:286:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                       ^
/usr/local/include/stdlib.h:286:20: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                       ^
                        _Nullable
/usr/local/include/stdlib.h:286:20: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                       ^
                        _Nonnull
/usr/local/include/stdlib.h:286:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                        ^
/usr/local/include/stdlib.h:286:21: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                        ^
                         _Nullable
/usr/local/include/stdlib.h:286:21: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                        ^
                         _Nonnull
/usr/local/include/stdlib.h:286:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                                ^
/usr/local/include/stdlib.h:286:29: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                                ^
                                 _Nullable
/usr/local/include/stdlib.h:286:29: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                                ^
                                 _Nonnull
/usr/local/include/stdlib.h:286:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                                 ^
/usr/local/include/stdlib.h:286:30: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                                 ^
                                  _Nullable
/usr/local/include/stdlib.h:286:30: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                                 ^
                                  _Nonnull
/usr/local/include/stdlib.h:287:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnum(char *, const char *, long *);
                      ^
/usr/local/include/stdlib.h:287:19: note: insert '_Nullable' if the pointer may be null
int      cgetnum(char *, const char *, long *);
                      ^
                       _Nullable
/usr/local/include/stdlib.h:287:19: note: insert '_Nonnull' if the pointer should never be null
int      cgetnum(char *, const char *, long *);
                      ^
                       _Nonnull
/usr/local/include/stdlib.h:287:33: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnum(char *, const char *, long *);
                                    ^
/usr/local/include/stdlib.h:287:33: note: insert '_Nullable' if the pointer may be null
int      cgetnum(char *, const char *, long *);
                                    ^
                                     _Nullable
/usr/local/include/stdlib.h:287:33: note: insert '_Nonnull' if the pointer should never be null
int      cgetnum(char *, const char *, long *);
                                    ^
                                     _Nonnull
/usr/local/include/stdlib.h:287:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnum(char *, const char *, long *);
                                            ^
/usr/local/include/stdlib.h:287:41: note: insert '_Nullable' if the pointer may be null
int      cgetnum(char *, const char *, long *);
                                            ^
                                             _Nullable
/usr/local/include/stdlib.h:287:41: note: insert '_Nonnull' if the pointer should never be null
int      cgetnum(char *, const char *, long *);
                                            ^
                                             _Nonnull
/usr/local/include/stdlib.h:288:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetset(const char *);
                            ^
/usr/local/include/stdlib.h:288:25: note: insert '_Nullable' if the pointer may be null
int      cgetset(const char *);
                            ^
                             _Nullable
/usr/local/include/stdlib.h:288:25: note: insert '_Nonnull' if the pointer should never be null
int      cgetset(const char *);
                            ^
                             _Nonnull
/usr/local/include/stdlib.h:289:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                      ^
/usr/local/include/stdlib.h:289:19: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                      ^
                       _Nullable
/usr/local/include/stdlib.h:289:19: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                      ^
                       _Nonnull
/usr/local/include/stdlib.h:289:33: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                                    ^
/usr/local/include/stdlib.h:289:33: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                                    ^
                                     _Nullable
/usr/local/include/stdlib.h:289:33: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                                    ^
                                     _Nonnull
/usr/local/include/stdlib.h:289:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                                            ^
/usr/local/include/stdlib.h:289:41: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                                            ^
                                             _Nullable
/usr/local/include/stdlib.h:289:41: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                                            ^
                                             _Nonnull
/usr/local/include/stdlib.h:289:42: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                                             ^
/usr/local/include/stdlib.h:289:42: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                                             ^
                                              _Nullable
/usr/local/include/stdlib.h:289:42: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                                             ^
                                              _Nonnull
/usr/local/include/stdlib.h:290:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                       ^
/usr/local/include/stdlib.h:290:20: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                       ^
                        _Nullable
/usr/local/include/stdlib.h:290:20: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                       ^
                        _Nonnull
/usr/local/include/stdlib.h:290:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                                     ^
/usr/local/include/stdlib.h:290:34: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                                     ^
                                      _Nullable
/usr/local/include/stdlib.h:290:34: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                                     ^
                                      _Nonnull
/usr/local/include/stdlib.h:290:42: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                                             ^
/usr/local/include/stdlib.h:290:42: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                                             ^
                                              _Nullable
/usr/local/include/stdlib.h:290:42: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                                             ^
                                              _Nonnull
/usr/local/include/stdlib.h:290:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                                              ^
/usr/local/include/stdlib.h:290:43: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                                              ^
                                               _Nullable
/usr/local/include/stdlib.h:290:43: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                                              ^
                                               _Nonnull
/usr/local/include/stdlib.h:293:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *devname(dev_t, mode_t);
        ^
/usr/local/include/stdlib.h:293:6: note: insert '_Nullable' if the pointer may be null
char    *devname(dev_t, mode_t);
        ^
          _Nullable 
/usr/local/include/stdlib.h:293:6: note: insert '_Nonnull' if the pointer should never be null
char    *devname(dev_t, mode_t);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:294:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *devname_r(dev_t, mode_t, char *buf, int len);
                                       ^
/usr/local/include/stdlib.h:294:37: note: insert '_Nullable' if the pointer may be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
                                       ^
                                         _Nullable 
/usr/local/include/stdlib.h:294:37: note: insert '_Nonnull' if the pointer should never be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
                                       ^
                                         _Nonnull 
/usr/local/include/stdlib.h:294:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *devname_r(dev_t, mode_t, char *buf, int len);
        ^
/usr/local/include/stdlib.h:294:6: note: insert '_Nullable' if the pointer may be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
        ^
          _Nullable 
/usr/local/include/stdlib.h:294:6: note: insert '_Nonnull' if the pointer should never be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:295:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getbsize(int *, long *);
                      ^
/usr/local/include/stdlib.h:295:20: note: insert '_Nullable' if the pointer may be null
char    *getbsize(int *, long *);
                      ^
                       _Nullable
/usr/local/include/stdlib.h:295:20: note: insert '_Nonnull' if the pointer should never be null
char    *getbsize(int *, long *);
                      ^
                       _Nonnull
/usr/local/include/stdlib.h:295:28: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getbsize(int *, long *);
                              ^
/usr/local/include/stdlib.h:295:28: note: insert '_Nullable' if the pointer may be null
char    *getbsize(int *, long *);
                              ^
                               _Nullable
/usr/local/include/stdlib.h:295:28: note: insert '_Nonnull' if the pointer should never be null
char    *getbsize(int *, long *);
                              ^
                               _Nonnull
/usr/local/include/stdlib.h:295:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getbsize(int *, long *);
        ^
/usr/local/include/stdlib.h:295:6: note: insert '_Nullable' if the pointer may be null
char    *getbsize(int *, long *);
        ^
          _Nullable 
/usr/local/include/stdlib.h:295:6: note: insert '_Nonnull' if the pointer should never be null
char    *getbsize(int *, long *);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:296:24: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
int      getloadavg(double [], int);
                           ^
/usr/local/include/stdlib.h:296:24: note: insert '_Nullable' if the array parameter may be null
int      getloadavg(double [], int);
                           ^
                            _Nullable
/usr/local/include/stdlib.h:296:24: note: insert '_Nonnull' if the array parameter should never be null
int      getloadavg(double [], int);
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:298:2: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        *getprogname(void);
        ^
/usr/local/include/stdlib.h:298:2: note: insert '_Nullable' if the pointer may be null
        *getprogname(void);
        ^
          _Nullable 
/usr/local/include/stdlib.h:298:2: note: insert '_Nonnull' if the pointer should never be null
        *getprogname(void);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:299:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     setprogname(const char *);
                                ^
/usr/local/include/stdlib.h:299:30: note: insert '_Nullable' if the pointer may be null
void     setprogname(const char *);
                                ^
                                 _Nullable
/usr/local/include/stdlib.h:299:30: note: insert '_Nonnull' if the pointer should never be null
void     setprogname(const char *);
                                ^
                                 _Nonnull
/usr/local/include/stdlib.h:309:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      heapsort(void *__base, size_t __nel, size_t __width,
                       ^
/usr/local/include/stdlib.h:309:20: note: insert '_Nullable' if the pointer may be null
int      heapsort(void *__base, size_t __nel, size_t __width,
                       ^
                         _Nullable 
/usr/local/include/stdlib.h:309:20: note: insert '_Nonnull' if the pointer should never be null
int      heapsort(void *__base, size_t __nel, size_t __width,
                       ^
                         _Nonnull 
/usr/local/include/stdlib.h:310:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
/usr/local/include/stdlib.h:310:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:310:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:310:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
/usr/local/include/stdlib.h:310:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:310:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:312:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      heapsort_b(void *__base, size_t __nel, size_t __width,
                         ^
/usr/local/include/stdlib.h:312:22: note: insert '_Nullable' if the pointer may be null
int      heapsort_b(void *__base, size_t __nel, size_t __width,
                         ^
                           _Nullable 
/usr/local/include/stdlib.h:312:22: note: insert '_Nonnull' if the pointer should never be null
int      heapsort_b(void *__base, size_t __nel, size_t __width,
                         ^
                           _Nonnull 
/usr/local/include/stdlib.h:313:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
/usr/local/include/stdlib.h:313:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:313:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:313:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
/usr/local/include/stdlib.h:313:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:313:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:316:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mergesort(void *__base, size_t __nel, size_t __width,
                        ^
/usr/local/include/stdlib.h:316:21: note: insert '_Nullable' if the pointer may be null
int      mergesort(void *__base, size_t __nel, size_t __width,
                        ^
                          _Nullable 
/usr/local/include/stdlib.h:316:21: note: insert '_Nonnull' if the pointer should never be null
int      mergesort(void *__base, size_t __nel, size_t __width,
                        ^
                          _Nonnull 
/usr/local/include/stdlib.h:317:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
/usr/local/include/stdlib.h:317:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:317:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:317:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
/usr/local/include/stdlib.h:317:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:317:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:319:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mergesort_b(void *__base, size_t __nel, size_t __width,
                          ^
/usr/local/include/stdlib.h:319:23: note: insert '_Nullable' if the pointer may be null
int      mergesort_b(void *__base, size_t __nel, size_t __width,
                          ^
                            _Nullable 
/usr/local/include/stdlib.h:319:23: note: insert '_Nonnull' if the pointer should never be null
int      mergesort_b(void *__base, size_t __nel, size_t __width,
                          ^
                            _Nonnull 
/usr/local/include/stdlib.h:320:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
/usr/local/include/stdlib.h:320:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:320:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:320:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
/usr/local/include/stdlib.h:320:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:320:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:323:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort(void *__base, size_t __nel, size_t __width,
                    ^
/usr/local/include/stdlib.h:323:18: note: insert '_Nullable' if the pointer may be null
void     psort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nullable 
/usr/local/include/stdlib.h:323:18: note: insert '_Nonnull' if the pointer should never be null
void     psort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nonnull 
/usr/local/include/stdlib.h:324:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *))
                                                 ^
/usr/local/include/stdlib.h:324:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *))
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:324:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *))
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:324:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *))
                                                               ^
/usr/local/include/stdlib.h:324:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *))
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:324:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *))
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:327:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort_b(void *__base, size_t __nel, size_t __width,
                      ^
/usr/local/include/stdlib.h:327:20: note: insert '_Nullable' if the pointer may be null
void     psort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nullable 
/usr/local/include/stdlib.h:327:20: note: insert '_Nonnull' if the pointer should never be null
void     psort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nonnull 
/usr/local/include/stdlib.h:328:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
/usr/local/include/stdlib.h:328:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:328:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:328:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
/usr/local/include/stdlib.h:328:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:328:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:331:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
/usr/local/include/stdlib.h:331:20: note: insert '_Nullable' if the pointer may be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nullable 
/usr/local/include/stdlib.h:331:20: note: insert '_Nonnull' if the pointer should never be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nonnull 
/usr/local/include/stdlib.h:331:64: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
/usr/local/include/stdlib.h:331:64: note: insert '_Nullable' if the pointer may be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nullable
/usr/local/include/stdlib.h:331:64: note: insert '_Nonnull' if the pointer should never be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nonnull
/usr/local/include/stdlib.h:332:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                           ^
/usr/local/include/stdlib.h:332:37: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                           ^
                                            _Nullable
/usr/local/include/stdlib.h:332:37: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                           ^
                                            _Nonnull
/usr/local/include/stdlib.h:332:51: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                                         ^
/usr/local/include/stdlib.h:332:51: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                                         ^
                                                          _Nullable
/usr/local/include/stdlib.h:332:51: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                                         ^
                                                          _Nonnull
/usr/local/include/stdlib.h:332:65: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                                                       ^
/usr/local/include/stdlib.h:332:65: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                                                       ^
                                                                        _Nullable
/usr/local/include/stdlib.h:332:65: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                                                       ^
                                                                        _Nonnull
/usr/local/include/stdlib.h:335:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort_b(void *__base, size_t __nel, size_t __width,
                      ^
/usr/local/include/stdlib.h:335:20: note: insert '_Nullable' if the pointer may be null
void     qsort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nullable 
/usr/local/include/stdlib.h:335:20: note: insert '_Nonnull' if the pointer should never be null
void     qsort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nonnull 
/usr/local/include/stdlib.h:336:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
/usr/local/include/stdlib.h:336:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:336:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:336:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
/usr/local/include/stdlib.h:336:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:336:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:339:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
/usr/local/include/stdlib.h:339:20: note: insert '_Nullable' if the pointer may be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nullable 
/usr/local/include/stdlib.h:339:20: note: insert '_Nonnull' if the pointer should never be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nonnull 
/usr/local/include/stdlib.h:339:64: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
/usr/local/include/stdlib.h:339:64: note: insert '_Nullable' if the pointer may be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nullable
/usr/local/include/stdlib.h:339:64: note: insert '_Nonnull' if the pointer should never be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nonnull
/usr/local/include/stdlib.h:340:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                           ^
/usr/local/include/stdlib.h:340:37: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                           ^
                                            _Nullable
/usr/local/include/stdlib.h:340:37: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                           ^
                                            _Nonnull
/usr/local/include/stdlib.h:340:51: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                         ^
/usr/local/include/stdlib.h:340:51: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                         ^
                                                          _Nullable
/usr/local/include/stdlib.h:340:51: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                         ^
                                                          _Nonnull
/usr/local/include/stdlib.h:340:65: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                                       ^
/usr/local/include/stdlib.h:340:65: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                                       ^
                                                                        _Nullable
/usr/local/include/stdlib.h:340:65: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                                       ^
                                                                        _Nonnull
/usr/local/include/stdlib.h:341:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                       ^
/usr/local/include/stdlib.h:341:36: note: insert '_Nullable' if the pointer may be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                       ^
                                        _Nullable
/usr/local/include/stdlib.h:341:36: note: insert '_Nonnull' if the pointer should never be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                       ^
                                        _Nonnull
/usr/local/include/stdlib.h:341:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
/usr/local/include/stdlib.h:341:37: note: insert '_Nullable' if the pointer may be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                          _Nullable 
/usr/local/include/stdlib.h:341:37: note: insert '_Nonnull' if the pointer should never be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                          _Nonnull 
/usr/local/include/stdlib.h:341:77: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                ^
/usr/local/include/stdlib.h:341:77: note: insert '_Nullable' if the pointer may be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                ^
                                                                                  _Nullable 
/usr/local/include/stdlib.h:341:77: note: insert '_Nonnull' if the pointer should never be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                ^
                                                                                  _Nonnull 
/usr/local/include/stdlib.h:343:24: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int     rpmatch(const char *)
                           ^
/usr/local/include/stdlib.h:343:24: note: insert '_Nullable' if the pointer may be null
int     rpmatch(const char *)
                           ^
                            _Nullable
/usr/local/include/stdlib.h:343:24: note: insert '_Nonnull' if the pointer should never be null
int     rpmatch(const char *)
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:345:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
/usr/local/include/stdlib.h:345:37: note: insert '_Nullable' if the pointer may be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                         _Nullable
/usr/local/include/stdlib.h:345:37: note: insert '_Nonnull' if the pointer should never be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                         _Nonnull
/usr/local/include/stdlib.h:345:38: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                         ^
/usr/local/include/stdlib.h:345:38: note: insert '_Nullable' if the pointer may be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                         ^
                                           _Nullable 
/usr/local/include/stdlib.h:345:38: note: insert '_Nonnull' if the pointer should never be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                         ^
                                           _Nonnull 
/usr/local/include/stdlib.h:345:78: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                 ^
/usr/local/include/stdlib.h:345:78: note: insert '_Nullable' if the pointer may be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                 ^
                                                                                   _Nullable 
/usr/local/include/stdlib.h:345:78: note: insert '_Nonnull' if the pointer should never be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                 ^
                                                                                   _Nonnull 
/usr/local/include/stdlib.h:349:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
                       ^
/usr/local/include/stdlib.h:349:21: note: insert '_Nullable' if the pointer may be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
                       ^
                         _Nullable 
/usr/local/include/stdlib.h:349:21: note: insert '_Nonnull' if the pointer should never be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
                       ^
                         _Nonnull 
/usr/local/include/stdlib.h:349:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
        ^
/usr/local/include/stdlib.h:349:6: note: insert '_Nullable' if the pointer may be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
        ^
          _Nullable 
/usr/local/include/stdlib.h:349:6: note: insert '_Nonnull' if the pointer should never be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:351:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                            ^
/usr/local/include/stdlib.h:351:22: note: insert '_Nullable' if the pointer may be null
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                            ^
                              _Nullable 
/usr/local/include/stdlib.h:351:22: note: insert '_Nonnull' if the pointer should never be null
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                            ^
                              _Nonnull 
/usr/local/include/stdlib.h:351:84: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                                                                                          ^
/usr/local/include/stdlib.h:351:84: note: insert '_Nullable' if the pointer may be null
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                                                                                          ^
                                                                                           _Nullable
/usr/local/include/stdlib.h:351:84: note: insert '_Nonnull' if the pointer should never be null
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                                                                                          ^
                                                                                           _Nonnull
/usr/local/include/stdlib.h:351:85: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                                                                                           ^
/usr/local/include/stdlib.h:351:85: note: insert '_Nullable' if the pointer may be null
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                                                                                           ^
                                                                                             _Nullable 
/usr/local/include/stdlib.h:351:85: note: insert '_Nonnull' if the pointer should never be null
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                                                                                           ^
                                                                                             _Nonnull 
/usr/local/include/stdlib.h:355:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoq(const char *__str, char **__endptr, int __base);
                           ^
/usr/local/include/stdlib.h:355:21: note: insert '_Nullable' if the pointer may be null
         strtoq(const char *__str, char **__endptr, int __base);
                           ^
                             _Nullable 
/usr/local/include/stdlib.h:355:21: note: insert '_Nonnull' if the pointer should never be null
         strtoq(const char *__str, char **__endptr, int __base);
                           ^
                             _Nonnull 
/usr/local/include/stdlib.h:355:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoq(const char *__str, char **__endptr, int __base);
                                        ^
/usr/local/include/stdlib.h:355:34: note: insert '_Nullable' if the pointer may be null
         strtoq(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nullable
/usr/local/include/stdlib.h:355:34: note: insert '_Nonnull' if the pointer should never be null
         strtoq(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nonnull
/usr/local/include/stdlib.h:355:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoq(const char *__str, char **__endptr, int __base);
                                         ^
/usr/local/include/stdlib.h:355:35: note: insert '_Nullable' if the pointer may be null
         strtoq(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nullable 
/usr/local/include/stdlib.h:355:35: note: insert '_Nonnull' if the pointer should never be null
         strtoq(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nonnull 
/usr/local/include/stdlib.h:357:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtouq(const char *__str, char **__endptr, int __base);
                            ^
/usr/local/include/stdlib.h:357:22: note: insert '_Nullable' if the pointer may be null
         strtouq(const char *__str, char **__endptr, int __base);
                            ^
                              _Nullable 
/usr/local/include/stdlib.h:357:22: note: insert '_Nonnull' if the pointer should never be null
         strtouq(const char *__str, char **__endptr, int __base);
                            ^
                              _Nonnull 
/usr/local/include/stdlib.h:357:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtouq(const char *__str, char **__endptr, int __base);
                                         ^
/usr/local/include/stdlib.h:357:35: note: insert '_Nullable' if the pointer may be null
         strtouq(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nullable
/usr/local/include/stdlib.h:357:35: note: insert '_Nonnull' if the pointer should never be null
         strtouq(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nonnull
/usr/local/include/stdlib.h:357:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtouq(const char *__str, char **__endptr, int __base);
                                          ^
/usr/local/include/stdlib.h:357:36: note: insert '_Nullable' if the pointer may be null
         strtouq(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nullable 
/usr/local/include/stdlib.h:357:36: note: insert '_Nonnull' if the pointer should never be null
         strtouq(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nonnull 
/usr/local/include/stdlib.h:359:13: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
extern char *suboptarg;         /* getsubopt(3) external variable */
            ^
/usr/local/include/stdlib.h:359:13: note: insert '_Nullable' if the pointer may be null
extern char *suboptarg;         /* getsubopt(3) external variable */
            ^
              _Nullable 
/usr/local/include/stdlib.h:359:13: note: insert '_Nonnull' if the pointer should never be null
extern char *suboptarg;         /* getsubopt(3) external variable */
            ^
              _Nonnull 
193 warnings generated.
checked program was:
/* begin */
1: #include "ruby.h"
2: 
3: #include <mysql.h>
4: 
5: /*top*/
6: typedef int conftest_type;
7: conftest_type conftestval = (int)MYSQL_OPTION_MULTI_STATEMENTS_OFF;
/* end */

--------------------

have_type: checking for my_bool in mysql.h... -------------------- no

"gcc -I/Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/x86_64-darwin19 -I/Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/backward -I/Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0 -I. -I/usr/local/opt/mysql-client/include/mysql  -I/usr/local/opt/libyaml/include -I/usr/local/opt/libksba/include -I/usr/local/opt/readline/include -I/usr/local/opt/zlib/include -I/usr/local/opt/openssl@1.1/include -D_XOPEN_SOURCE -D_DARWIN_C_SOURCE -D_DARWIN_UNLIMITED_SELECT -D_REENTRANT   -O3 -ggdb3 -Wall -Wextra -Wdeprecated-declarations -Wdivision-by-zero -Wimplicit-function-declaration -Wimplicit-int -Wpointer-arith -Wshorten-64-to-32 -Wwrite-strings -Wmissing-noreturn -Wno-constant-logical-operand -Wno-long-long -Wno-missing-field-initializers -Wno-overlength-strings -Wno-parentheses-equality -Wno-self-assign -Wno-tautological-compare -Wno-unused-parameter -Wno-unused-value -Wunused-variable -Wextra-tokens  -fno-common -pipe -DFULL_SSL_MODE_SUPPORT   -c conftest.c"
In file included from conftest.c:1:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby.h:33:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/ruby.h:29:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/defines.h:126:
In file included from /usr/local/include/stdio.h:64:
/usr/local/include/_stdio.h:93:16: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        unsigned char   *_base;
                        ^
/usr/local/include/_stdio.h:93:16: note: insert '_Nullable' if the pointer may be null
        unsigned char   *_base;
                        ^
                          _Nullable 
/usr/local/include/_stdio.h:93:16: note: insert '_Nonnull' if the pointer should never be null
        unsigned char   *_base;
                        ^
                          _Nonnull 
/usr/local/include/_stdio.h:138:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
/usr/local/include/_stdio.h:138:32: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
                                           _Nullable
/usr/local/include/_stdio.h:138:32: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
                                           _Nonnull
/usr/local/include/_stdio.h:138:40: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
/usr/local/include/_stdio.h:138:40: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
                                                   _Nullable
/usr/local/include/_stdio.h:138:40: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
                                                   _Nonnull
/usr/local/include/_stdio.h:139:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
/usr/local/include/_stdio.h:139:35: note: insert '_Nullable' if the pointer may be null
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
                                           _Nullable
/usr/local/include/_stdio.h:139:35: note: insert '_Nonnull' if the pointer should never be null
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
                                           _Nonnull
/usr/local/include/_stdio.h:140:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
/usr/local/include/_stdio.h:140:32: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
                                           _Nullable
/usr/local/include/_stdio.h:140:32: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
                                           _Nonnull
/usr/local/include/_stdio.h:140:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
/usr/local/include/_stdio.h:140:46: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
                                                         _Nullable
/usr/local/include/_stdio.h:140:46: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
                                                         _Nonnull
/usr/local/include/_stdio.h:144:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
/usr/local/include/_stdio.h:144:18: note: insert '_Nullable' if the pointer may be null
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
                          _Nullable 
/usr/local/include/_stdio.h:144:18: note: insert '_Nonnull' if the pointer should never be null
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
                          _Nonnull 
In file included from conftest.c:1:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby.h:33:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/ruby.h:29:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/defines.h:126:
/usr/local/include/stdio.h:67:13: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
extern FILE *__stdinp;
            ^
/usr/local/include/stdio.h:67:13: note: insert '_Nullable' if the pointer may be null
extern FILE *__stdinp;
            ^
              _Nullable 
/usr/local/include/stdio.h:67:13: note: insert '_Nonnull' if the pointer should never be null
extern FILE *__stdinp;
            ^
              _Nonnull 
/usr/local/include/stdio.h:386:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 int (* _Nullable)(void *, const char *, int),
                                        ^
/usr/local/include/stdio.h:386:41: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *, const char *, int),
                                        ^
                                         _Nullable
/usr/local/include/stdio.h:386:41: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *, const char *, int),
                                        ^
                                         _Nonnull
/usr/local/include/stdio.h:386:55: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
/usr/local/include/stdio.h:386:55: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
                                                       _Nullable
/usr/local/include/stdio.h:386:55: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
                                                       _Nonnull
/usr/local/include/stdio.h:387:44: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
/usr/local/include/stdio.h:387:44: note: insert '_Nullable' if the pointer may be null
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
                                            _Nullable
/usr/local/include/stdio.h:387:44: note: insert '_Nonnull' if the pointer should never be null
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
                                            _Nonnull
/usr/local/include/stdio.h:388:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 int (* _Nullable)(void *));
                                        ^
/usr/local/include/stdio.h:388:41: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *));
                                        ^
                                         _Nullable
/usr/local/include/stdio.h:388:41: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *));
                                        ^
                                         _Nonnull
/usr/local/include/stdio.h:384:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
FILE    *funopen(const void *,
        ^
/usr/local/include/stdio.h:384:6: note: insert '_Nullable' if the pointer may be null
FILE    *funopen(const void *,
        ^
          _Nullable 
/usr/local/include/stdio.h:384:6: note: insert '_Nonnull' if the pointer should never be null
FILE    *funopen(const void *,
        ^
          _Nonnull 
In file included from conftest.c:1:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby.h:33:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/ruby.h:29:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/defines.h:134:
/usr/local/include/stdlib.h:134:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   atof(const char *);
                         ^
/usr/local/include/stdlib.h:134:25: note: insert '_Nullable' if the pointer may be null
double   atof(const char *);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:134:25: note: insert '_Nonnull' if the pointer should never be null
double   atof(const char *);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:135:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      atoi(const char *);
                         ^
/usr/local/include/stdlib.h:135:22: note: insert '_Nullable' if the pointer may be null
int      atoi(const char *);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:135:22: note: insert '_Nonnull' if the pointer should never be null
int      atoi(const char *);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:136:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     atol(const char *);
                         ^
/usr/local/include/stdlib.h:136:23: note: insert '_Nullable' if the pointer may be null
long     atol(const char *);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:136:23: note: insert '_Nonnull' if the pointer should never be null
long     atol(const char *);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:139:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         atoll(const char *);
                          ^
/usr/local/include/stdlib.h:139:20: note: insert '_Nullable' if the pointer may be null
         atoll(const char *);
                          ^
                           _Nullable
/usr/local/include/stdlib.h:139:20: note: insert '_Nonnull' if the pointer should never be null
         atoll(const char *);
                          ^
                           _Nonnull
/usr/local/include/stdlib.h:141:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                            ^
/usr/local/include/stdlib.h:141:26: note: insert '_Nullable' if the pointer may be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                            ^
                              _Nullable 
/usr/local/include/stdlib.h:141:26: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                            ^
                              _Nonnull 
/usr/local/include/stdlib.h:141:45: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                                               ^
/usr/local/include/stdlib.h:141:45: note: insert '_Nullable' if the pointer may be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                                               ^
                                                 _Nullable 
/usr/local/include/stdlib.h:141:45: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                                               ^
                                                 _Nonnull 
/usr/local/include/stdlib.h:142:59: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                 ^
/usr/local/include/stdlib.h:142:59: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                 ^
                                                                  _Nullable
/usr/local/include/stdlib.h:142:59: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                 ^
                                                                  _Nonnull
/usr/local/include/stdlib.h:142:73: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                               ^
/usr/local/include/stdlib.h:142:73: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                               ^
                                                                                _Nullable
/usr/local/include/stdlib.h:142:73: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                               ^
                                                                                _Nonnull
/usr/local/include/stdlib.h:141:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch(const void *__key, const void *__base, size_t __nel,
        ^
/usr/local/include/stdlib.h:141:6: note: insert '_Nullable' if the pointer may be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
        ^
          _Nullable 
/usr/local/include/stdlib.h:141:6: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
        ^
          _Nonnull 
/usr/local/include/stdlib.h:147:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getenv(const char *);
                           ^
/usr/local/include/stdlib.h:147:25: note: insert '_Nullable' if the pointer may be null
char    *getenv(const char *);
                           ^
                            _Nullable
/usr/local/include/stdlib.h:147:25: note: insert '_Nonnull' if the pointer should never be null
char    *getenv(const char *);
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:147:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getenv(const char *);
        ^
/usr/local/include/stdlib.h:147:6: note: insert '_Nullable' if the pointer may be null
char    *getenv(const char *);
        ^
          _Nullable 
/usr/local/include/stdlib.h:147:6: note: insert '_Nonnull' if the pointer should never be null
char    *getenv(const char *);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:156:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mblen(const char *__s, size_t __n);
                          ^
/usr/local/include/stdlib.h:156:23: note: insert '_Nullable' if the pointer may be null
int      mblen(const char *__s, size_t __n);
                          ^
                            _Nullable 
/usr/local/include/stdlib.h:156:23: note: insert '_Nonnull' if the pointer should never be null
int      mblen(const char *__s, size_t __n);
                          ^
                            _Nonnull 
/usr/local/include/stdlib.h:157:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                          ^
/usr/local/include/stdlib.h:157:26: note: insert '_Nullable' if the pointer may be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                          ^
                            _Nullable
/usr/local/include/stdlib.h:157:26: note: insert '_Nonnull' if the pointer should never be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                          ^
                            _Nonnull
/usr/local/include/stdlib.h:157:52: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                                                    ^
/usr/local/include/stdlib.h:157:52: note: insert '_Nullable' if the pointer may be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                                                    ^
                                                      _Nullable
/usr/local/include/stdlib.h:157:52: note: insert '_Nonnull' if the pointer should never be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                                                    ^
                                                      _Nonnull
/usr/local/include/stdlib.h:158:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                        ^
/usr/local/include/stdlib.h:158:21: note: insert '_Nullable' if the pointer may be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                        ^
                          _Nullable
/usr/local/include/stdlib.h:158:21: note: insert '_Nonnull' if the pointer should never be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                        ^
                          _Nonnull
/usr/local/include/stdlib.h:158:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                                                 ^
/usr/local/include/stdlib.h:158:46: note: insert '_Nullable' if the pointer may be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                                                 ^
                                                   _Nullable
/usr/local/include/stdlib.h:158:46: note: insert '_Nonnull' if the pointer should never be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                                                 ^
                                                   _Nonnull
/usr/local/include/stdlib.h:160:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort(void *__base, size_t __nel, size_t __width,
                    ^
/usr/local/include/stdlib.h:160:18: note: insert '_Nullable' if the pointer may be null
void     qsort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nullable 
/usr/local/include/stdlib.h:160:18: note: insert '_Nonnull' if the pointer should never be null
void     qsort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nonnull 
/usr/local/include/stdlib.h:161:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
/usr/local/include/stdlib.h:161:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:161:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:161:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
/usr/local/include/stdlib.h:161:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:161:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:165:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                           ^
/usr/local/include/stdlib.h:165:27: note: insert '_Nullable' if the pointer may be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                           ^
                            _Nullable
/usr/local/include/stdlib.h:165:27: note: insert '_Nonnull' if the pointer should never be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:165:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                   ^
/usr/local/include/stdlib.h:165:35: note: insert '_Nullable' if the pointer may be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                   ^
                                    _Nullable
/usr/local/include/stdlib.h:165:35: note: insert '_Nonnull' if the pointer should never be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                   ^
                                    _Nonnull
/usr/local/include/stdlib.h:165:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                    ^
/usr/local/include/stdlib.h:165:36: note: insert '_Nullable' if the pointer may be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                    ^
                                     _Nullable
/usr/local/include/stdlib.h:165:36: note: insert '_Nonnull' if the pointer should never be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                    ^
                                     _Nonnull
/usr/local/include/stdlib.h:166:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                           ^
/usr/local/include/stdlib.h:166:26: note: insert '_Nullable' if the pointer may be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                           ^
                            _Nullable
/usr/local/include/stdlib.h:166:26: note: insert '_Nonnull' if the pointer should never be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:166:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                   ^
/usr/local/include/stdlib.h:166:34: note: insert '_Nullable' if the pointer may be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                   ^
                                    _Nullable
/usr/local/include/stdlib.h:166:34: note: insert '_Nonnull' if the pointer should never be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                   ^
                                    _Nonnull
/usr/local/include/stdlib.h:166:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                    ^
/usr/local/include/stdlib.h:166:35: note: insert '_Nullable' if the pointer may be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                    ^
                                     _Nullable
/usr/local/include/stdlib.h:166:35: note: insert '_Nonnull' if the pointer should never be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                    ^
                                     _Nonnull
/usr/local/include/stdlib.h:167:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     strtol(const char *__str, char **__endptr, int __base);
                           ^
/usr/local/include/stdlib.h:167:25: note: insert '_Nullable' if the pointer may be null
long     strtol(const char *__str, char **__endptr, int __base);
                           ^
                             _Nullable 
/usr/local/include/stdlib.h:167:25: note: insert '_Nonnull' if the pointer should never be null
long     strtol(const char *__str, char **__endptr, int __base);
                           ^
                             _Nonnull 
/usr/local/include/stdlib.h:167:38: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     strtol(const char *__str, char **__endptr, int __base);
                                        ^
/usr/local/include/stdlib.h:167:38: note: insert '_Nullable' if the pointer may be null
long     strtol(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nullable
/usr/local/include/stdlib.h:167:38: note: insert '_Nonnull' if the pointer should never be null
long     strtol(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nonnull
/usr/local/include/stdlib.h:167:39: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     strtol(const char *__str, char **__endptr, int __base);
                                         ^
/usr/local/include/stdlib.h:167:39: note: insert '_Nullable' if the pointer may be null
long     strtol(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nullable 
/usr/local/include/stdlib.h:167:39: note: insert '_Nonnull' if the pointer should never be null
long     strtol(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nonnull 
/usr/local/include/stdlib.h:169:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtold(const char *, char **);
                            ^
/usr/local/include/stdlib.h:169:22: note: insert '_Nullable' if the pointer may be null
         strtold(const char *, char **);
                            ^
                             _Nullable
/usr/local/include/stdlib.h:169:22: note: insert '_Nonnull' if the pointer should never be null
         strtold(const char *, char **);
                            ^
                             _Nonnull
/usr/local/include/stdlib.h:169:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtold(const char *, char **);
                                    ^
/usr/local/include/stdlib.h:169:30: note: insert '_Nullable' if the pointer may be null
         strtold(const char *, char **);
                                    ^
                                     _Nullable
/usr/local/include/stdlib.h:169:30: note: insert '_Nonnull' if the pointer should never be null
         strtold(const char *, char **);
                                    ^
                                     _Nonnull
/usr/local/include/stdlib.h:169:31: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtold(const char *, char **);
                                     ^
/usr/local/include/stdlib.h:169:31: note: insert '_Nullable' if the pointer may be null
         strtold(const char *, char **);
                                     ^
                                      _Nullable
/usr/local/include/stdlib.h:169:31: note: insert '_Nonnull' if the pointer should never be null
         strtold(const char *, char **);
                                     ^
                                      _Nonnull
/usr/local/include/stdlib.h:172:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoll(const char *__str, char **__endptr, int __base);
                            ^
/usr/local/include/stdlib.h:172:22: note: insert '_Nullable' if the pointer may be null
         strtoll(const char *__str, char **__endptr, int __base);
                            ^
                              _Nullable 
/usr/local/include/stdlib.h:172:22: note: insert '_Nonnull' if the pointer should never be null
         strtoll(const char *__str, char **__endptr, int __base);
                            ^
                              _Nonnull 
/usr/local/include/stdlib.h:172:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoll(const char *__str, char **__endptr, int __base);
                                         ^
/usr/local/include/stdlib.h:172:35: note: insert '_Nullable' if the pointer may be null
         strtoll(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nullable
/usr/local/include/stdlib.h:172:35: note: insert '_Nonnull' if the pointer should never be null
         strtoll(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nonnull
/usr/local/include/stdlib.h:172:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoll(const char *__str, char **__endptr, int __base);
                                          ^
/usr/local/include/stdlib.h:172:36: note: insert '_Nullable' if the pointer may be null
         strtoll(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nullable 
/usr/local/include/stdlib.h:172:36: note: insert '_Nonnull' if the pointer should never be null
         strtoll(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nonnull 
/usr/local/include/stdlib.h:175:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoul(const char *__str, char **__endptr, int __base);
                            ^
/usr/local/include/stdlib.h:175:22: note: insert '_Nullable' if the pointer may be null
         strtoul(const char *__str, char **__endptr, int __base);
                            ^
                              _Nullable 
/usr/local/include/stdlib.h:175:22: note: insert '_Nonnull' if the pointer should never be null
         strtoul(const char *__str, char **__endptr, int __base);
                            ^
                              _Nonnull 
/usr/local/include/stdlib.h:175:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoul(const char *__str, char **__endptr, int __base);
                                         ^
/usr/local/include/stdlib.h:175:35: note: insert '_Nullable' if the pointer may be null
         strtoul(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nullable
/usr/local/include/stdlib.h:175:35: note: insert '_Nonnull' if the pointer should never be null
         strtoul(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nonnull
/usr/local/include/stdlib.h:175:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoul(const char *__str, char **__endptr, int __base);
                                          ^
/usr/local/include/stdlib.h:175:36: note: insert '_Nullable' if the pointer may be null
         strtoul(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nullable 
/usr/local/include/stdlib.h:175:36: note: insert '_Nonnull' if the pointer should never be null
         strtoul(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nonnull 
/usr/local/include/stdlib.h:178:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoull(const char *__str, char **__endptr, int __base);
                             ^
/usr/local/include/stdlib.h:178:23: note: insert '_Nullable' if the pointer may be null
         strtoull(const char *__str, char **__endptr, int __base);
                             ^
                               _Nullable 
/usr/local/include/stdlib.h:178:23: note: insert '_Nonnull' if the pointer should never be null
         strtoull(const char *__str, char **__endptr, int __base);
                             ^
                               _Nonnull 
/usr/local/include/stdlib.h:178:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoull(const char *__str, char **__endptr, int __base);
                                          ^
/usr/local/include/stdlib.h:178:36: note: insert '_Nullable' if the pointer may be null
         strtoull(const char *__str, char **__endptr, int __base);
                                          ^
                                           _Nullable
/usr/local/include/stdlib.h:178:36: note: insert '_Nonnull' if the pointer should never be null
         strtoull(const char *__str, char **__endptr, int __base);
                                          ^
                                           _Nonnull
/usr/local/include/stdlib.h:178:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoull(const char *__str, char **__endptr, int __base);
                                           ^
/usr/local/include/stdlib.h:178:37: note: insert '_Nullable' if the pointer may be null
         strtoull(const char *__str, char **__endptr, int __base);
                                           ^
                                             _Nullable 
/usr/local/include/stdlib.h:178:37: note: insert '_Nonnull' if the pointer should never be null
         strtoull(const char *__str, char **__endptr, int __base);
                                           ^
                                             _Nonnull 
/usr/local/include/stdlib.h:190:24: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      system(const char *) __DARWIN_ALIAS_C(system);
                           ^
/usr/local/include/stdlib.h:190:24: note: insert '_Nullable' if the pointer may be null
int      system(const char *) __DARWIN_ALIAS_C(system);
                           ^
                            _Nullable
/usr/local/include/stdlib.h:190:24: note: insert '_Nonnull' if the pointer should never be null
int      system(const char *) __DARWIN_ALIAS_C(system);
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:194:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                       ^
/usr/local/include/stdlib.h:194:23: note: insert '_Nullable' if the pointer may be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                       ^
                         _Nullable
/usr/local/include/stdlib.h:194:23: note: insert '_Nonnull' if the pointer should never be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                       ^
                         _Nonnull
/usr/local/include/stdlib.h:194:51: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                                                   ^
/usr/local/include/stdlib.h:194:51: note: insert '_Nullable' if the pointer may be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                                                   ^
                                                     _Nullable
/usr/local/include/stdlib.h:194:51: note: insert '_Nonnull' if the pointer should never be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                                                   ^
                                                     _Nonnull
/usr/local/include/stdlib.h:195:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      wctomb(char *, wchar_t);
                     ^
/usr/local/include/stdlib.h:195:18: note: insert '_Nullable' if the pointer may be null
int      wctomb(char *, wchar_t);
                     ^
                      _Nullable
/usr/local/include/stdlib.h:195:18: note: insert '_Nonnull' if the pointer should never be null
int      wctomb(char *, wchar_t);
                     ^
                      _Nonnull
/usr/local/include/stdlib.h:199:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     a64l(const char *);
                         ^
/usr/local/include/stdlib.h:199:23: note: insert '_Nullable' if the pointer may be null
long     a64l(const char *);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:199:23: note: insert '_Nonnull' if the pointer should never be null
long     a64l(const char *);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:201:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
/usr/local/include/stdlib.h:201:29: note: insert '_Nullable' if the pointer may be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nullable 
/usr/local/include/stdlib.h:201:29: note: insert '_Nonnull' if the pointer should never be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nonnull 
/usr/local/include/stdlib.h:201:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
/usr/local/include/stdlib.h:201:46: note: insert '_Nullable' if the pointer may be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nullable 
/usr/local/include/stdlib.h:201:46: note: insert '_Nonnull' if the pointer should never be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nonnull 
/usr/local/include/stdlib.h:201:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
/usr/local/include/stdlib.h:201:6: note: insert '_Nullable' if the pointer may be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nullable 
/usr/local/include/stdlib.h:201:6: note: insert '_Nonnull' if the pointer should never be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nonnull 
/usr/local/include/stdlib.h:202:31: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
double   erand48(unsigned short[3]);
                               ^
/usr/local/include/stdlib.h:202:31: note: insert '_Nullable' if the array parameter may be null
double   erand48(unsigned short[3]);
                               ^
                                _Nullable 
/usr/local/include/stdlib.h:202:31: note: insert '_Nonnull' if the array parameter should never be null
double   erand48(unsigned short[3]);
                               ^
                                _Nonnull 
/usr/local/include/stdlib.h:203:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
/usr/local/include/stdlib.h:203:29: note: insert '_Nullable' if the pointer may be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nullable 
/usr/local/include/stdlib.h:203:29: note: insert '_Nonnull' if the pointer should never be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nonnull 
/usr/local/include/stdlib.h:203:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
/usr/local/include/stdlib.h:203:46: note: insert '_Nullable' if the pointer may be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nullable 
/usr/local/include/stdlib.h:203:46: note: insert '_Nonnull' if the pointer should never be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nonnull 
/usr/local/include/stdlib.h:203:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
/usr/local/include/stdlib.h:203:6: note: insert '_Nullable' if the pointer may be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nullable 
/usr/local/include/stdlib.h:203:6: note: insert '_Nonnull' if the pointer should never be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nonnull 
/usr/local/include/stdlib.h:204:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *gcvt(double, int, char *); /* LEGACY */
                                ^
/usr/local/include/stdlib.h:204:30: note: insert '_Nullable' if the pointer may be null
char    *gcvt(double, int, char *); /* LEGACY */
                                ^
                                 _Nullable
/usr/local/include/stdlib.h:204:30: note: insert '_Nonnull' if the pointer should never be null
char    *gcvt(double, int, char *); /* LEGACY */
                                ^
                                 _Nonnull
/usr/local/include/stdlib.h:204:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *gcvt(double, int, char *); /* LEGACY */
        ^
/usr/local/include/stdlib.h:204:6: note: insert '_Nullable' if the pointer may be null
char    *gcvt(double, int, char *); /* LEGACY */
        ^
          _Nullable 
/usr/local/include/stdlib.h:204:6: note: insert '_Nonnull' if the pointer should never be null
char    *gcvt(double, int, char *); /* LEGACY */
        ^
          _Nonnull 
/usr/local/include/stdlib.h:205:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                        ^
/usr/local/include/stdlib.h:205:21: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                        ^
                         _Nullable
/usr/local/include/stdlib.h:205:21: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                        ^
                         _Nonnull
/usr/local/include/stdlib.h:205:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                         ^
/usr/local/include/stdlib.h:205:22: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:205:22: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:205:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                 ^
/usr/local/include/stdlib.h:205:30: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                 ^
                                   _Nullable
/usr/local/include/stdlib.h:205:30: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                 ^
                                   _Nonnull
/usr/local/include/stdlib.h:205:38: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                         ^
/usr/local/include/stdlib.h:205:38: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                         ^
                                          _Nullable
/usr/local/include/stdlib.h:205:38: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                         ^
                                          _Nonnull
/usr/local/include/stdlib.h:205:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                                 ^
/usr/local/include/stdlib.h:205:46: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:205:46: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:205:47: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                                  ^
/usr/local/include/stdlib.h:205:47: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                                  ^
                                                   _Nullable
/usr/local/include/stdlib.h:205:47: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                                  ^
                                                   _Nonnull
/usr/local/include/stdlib.h:208:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
                                  ^
/usr/local/include/stdlib.h:208:32: note: insert '_Nullable' if the pointer may be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
                                  ^
                                   _Nullable
/usr/local/include/stdlib.h:208:32: note: insert '_Nonnull' if the pointer should never be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
                                  ^
                                   _Nonnull
/usr/local/include/stdlib.h:208:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
        ^
/usr/local/include/stdlib.h:208:6: note: insert '_Nullable' if the pointer may be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
        ^
          _Nullable 
/usr/local/include/stdlib.h:208:6: note: insert '_Nonnull' if the pointer should never be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
        ^
          _Nonnull 
/usr/local/include/stdlib.h:212:29: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
long     jrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
/usr/local/include/stdlib.h:212:29: note: insert '_Nullable' if the array parameter may be null
long     jrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nullable 
/usr/local/include/stdlib.h:212:29: note: insert '_Nonnull' if the array parameter should never be null
long     jrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nonnull 
/usr/local/include/stdlib.h:213:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *l64a(long);
        ^
/usr/local/include/stdlib.h:213:6: note: insert '_Nullable' if the pointer may be null
char    *l64a(long);
        ^
          _Nullable 
/usr/local/include/stdlib.h:213:6: note: insert '_Nonnull' if the pointer should never be null
char    *l64a(long);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:214:29: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
void     lcong48(unsigned short[7]);
                               ^
/usr/local/include/stdlib.h:214:29: note: insert '_Nullable' if the array parameter may be null
void     lcong48(unsigned short[7]);
                               ^
                                _Nullable 
/usr/local/include/stdlib.h:214:29: note: insert '_Nonnull' if the array parameter should never be null
void     lcong48(unsigned short[7]);
                               ^
                                _Nonnull 
/usr/local/include/stdlib.h:216:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *mktemp(char *);
                     ^
/usr/local/include/stdlib.h:216:19: note: insert '_Nullable' if the pointer may be null
char    *mktemp(char *);
                     ^
                      _Nullable
/usr/local/include/stdlib.h:216:19: note: insert '_Nonnull' if the pointer should never be null
char    *mktemp(char *);
                     ^
                      _Nonnull
/usr/local/include/stdlib.h:216:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *mktemp(char *);
        ^
/usr/local/include/stdlib.h:216:6: note: insert '_Nullable' if the pointer may be null
char    *mktemp(char *);
        ^
          _Nullable 
/usr/local/include/stdlib.h:216:6: note: insert '_Nonnull' if the pointer should never be null
char    *mktemp(char *);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:217:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mkstemp(char *);
                      ^
/usr/local/include/stdlib.h:217:19: note: insert '_Nullable' if the pointer may be null
int      mkstemp(char *);
                      ^
                       _Nullable
/usr/local/include/stdlib.h:217:19: note: insert '_Nonnull' if the pointer should never be null
int      mkstemp(char *);
                      ^
                       _Nonnull
/usr/local/include/stdlib.h:219:29: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
long     nrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
/usr/local/include/stdlib.h:219:29: note: insert '_Nullable' if the array parameter may be null
long     nrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nullable 
/usr/local/include/stdlib.h:219:29: note: insert '_Nonnull' if the array parameter should never be null
long     nrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nonnull 
/usr/local/include/stdlib.h:221:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ptsname(int);
        ^
/usr/local/include/stdlib.h:221:6: note: insert '_Nullable' if the pointer may be null
char    *ptsname(int);
        ^
          _Nullable 
/usr/local/include/stdlib.h:221:6: note: insert '_Nonnull' if the pointer should never be null
char    *ptsname(int);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:224:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int ptsname_r(int fildes, char *buffer, size_t buflen) __API_AVAILABLE(macos(10.13.4), ios(11.3), tvos(11.3), watchos(4.3));
                               ^
/usr/local/include/stdlib.h:224:32: note: insert '_Nullable' if the pointer may be null
int ptsname_r(int fildes, char *buffer, size_t buflen) __API_AVAILABLE(macos(10.13.4), ios(11.3), tvos(11.3), watchos(4.3));
                               ^
                                 _Nullable 
/usr/local/include/stdlib.h:224:32: note: insert '_Nonnull' if the pointer should never be null
int ptsname_r(int fildes, char *buffer, size_t buflen) __API_AVAILABLE(macos(10.13.4), ios(11.3), tvos(11.3), watchos(4.3));
                               ^
                                 _Nonnull 
/usr/local/include/stdlib.h:227:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      putenv(char *) __DARWIN_ALIAS(putenv);
                     ^
/usr/local/include/stdlib.h:227:18: note: insert '_Nullable' if the pointer may be null
int      putenv(char *) __DARWIN_ALIAS(putenv);
                     ^
                      _Nullable
/usr/local/include/stdlib.h:227:18: note: insert '_Nonnull' if the pointer should never be null
int      putenv(char *) __DARWIN_ALIAS(putenv);
                     ^
                      _Nonnull
/usr/local/include/stdlib.h:229:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      rand_r(unsigned *) __swift_unavailable("Use arc4random instead.");
                         ^
/usr/local/include/stdlib.h:229:22: note: insert '_Nullable' if the pointer may be null
int      rand_r(unsigned *) __swift_unavailable("Use arc4random instead.");
                         ^
                          _Nullable
/usr/local/include/stdlib.h:229:22: note: insert '_Nonnull' if the pointer should never be null
int      rand_r(unsigned *) __swift_unavailable("Use arc4random instead.");
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:231:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                             ^
/usr/local/include/stdlib.h:231:27: note: insert '_Nullable' if the pointer may be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                             ^
                               _Nullable
/usr/local/include/stdlib.h:231:27: note: insert '_Nonnull' if the pointer should never be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                             ^
                               _Nonnull
/usr/local/include/stdlib.h:231:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                                                ^
/usr/local/include/stdlib.h:231:46: note: insert '_Nullable' if the pointer may be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                                                ^
                                                  _Nullable
/usr/local/include/stdlib.h:231:46: note: insert '_Nonnull' if the pointer should never be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                                                ^
                                                  _Nonnull
/usr/local/include/stdlib.h:231:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
        ^
/usr/local/include/stdlib.h:231:6: note: insert '_Nullable' if the pointer may be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
        ^
          _Nullable 
/usr/local/include/stdlib.h:231:6: note: insert '_Nonnull' if the pointer should never be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:236:24: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
        *seed48(unsigned short[3]);
                              ^
/usr/local/include/stdlib.h:236:24: note: insert '_Nullable' if the array parameter may be null
        *seed48(unsigned short[3]);
                              ^
                               _Nullable 
/usr/local/include/stdlib.h:236:24: note: insert '_Nonnull' if the array parameter should never be null
        *seed48(unsigned short[3]);
                              ^
                               _Nonnull 
/usr/local/include/stdlib.h:236:2: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        *seed48(unsigned short[3]);
        ^
/usr/local/include/stdlib.h:236:2: note: insert '_Nullable' if the pointer may be null
        *seed48(unsigned short[3]);
        ^
          _Nullable 
/usr/local/include/stdlib.h:236:2: note: insert '_Nonnull' if the pointer should never be null
        *seed48(unsigned short[3]);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:237:24: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                           ^
/usr/local/include/stdlib.h:237:24: note: insert '_Nullable' if the pointer may be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                           ^
                             _Nullable
/usr/local/include/stdlib.h:237:24: note: insert '_Nonnull' if the pointer should never be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                           ^
                             _Nonnull
/usr/local/include/stdlib.h:237:45: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                                                ^
/usr/local/include/stdlib.h:237:45: note: insert '_Nullable' if the pointer may be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                                                ^
                                                  _Nullable
/usr/local/include/stdlib.h:237:45: note: insert '_Nonnull' if the pointer should never be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                                                ^
                                                  _Nonnull
/usr/local/include/stdlib.h:239:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     setkey(const char *) __DARWIN_ALIAS(setkey);
                           ^
/usr/local/include/stdlib.h:239:25: note: insert '_Nullable' if the pointer may be null
void     setkey(const char *) __DARWIN_ALIAS(setkey);
                           ^
                            _Nullable
/usr/local/include/stdlib.h:239:25: note: insert '_Nonnull' if the pointer should never be null
void     setkey(const char *) __DARWIN_ALIAS(setkey);
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:243:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *setstate(const char *);
                             ^
/usr/local/include/stdlib.h:243:27: note: insert '_Nullable' if the pointer may be null
char    *setstate(const char *);
                             ^
                              _Nullable
/usr/local/include/stdlib.h:243:27: note: insert '_Nonnull' if the pointer should never be null
char    *setstate(const char *);
                             ^
                              _Nonnull
/usr/local/include/stdlib.h:243:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *setstate(const char *);
        ^
/usr/local/include/stdlib.h:243:6: note: insert '_Nullable' if the pointer may be null
char    *setstate(const char *);
        ^
          _Nullable 
/usr/local/include/stdlib.h:243:6: note: insert '_Nonnull' if the pointer should never be null
char    *setstate(const char *);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:252:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      unsetenv(const char *) __DARWIN_ALIAS(unsetenv);
                             ^
/usr/local/include/stdlib.h:252:26: note: insert '_Nullable' if the pointer may be null
int      unsetenv(const char *) __DARWIN_ALIAS(unsetenv);
                             ^
                              _Nullable
/usr/local/include/stdlib.h:252:26: note: insert '_Nonnull' if the pointer should never be null
int      unsetenv(const char *) __DARWIN_ALIAS(unsetenv);
                             ^
                              _Nonnull
/usr/local/include/stdlib.h:265:42: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     arc4random_addrandom(unsigned char * /*dat*/, int /*datlen*/)
                                            ^
/usr/local/include/stdlib.h:265:42: note: insert '_Nullable' if the pointer may be null
void     arc4random_addrandom(unsigned char * /*dat*/, int /*datlen*/)
                                            ^
                                              _Nullable
/usr/local/include/stdlib.h:265:42: note: insert '_Nonnull' if the pointer should never be null
void     arc4random_addrandom(unsigned char * /*dat*/, int /*datlen*/)
                                            ^
                                              _Nonnull
/usr/local/include/stdlib.h:270:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     arc4random_buf(void * __buf, size_t __nbytes) __OSX_AVAILABLE_STARTING(__MAC_10_7, __IPHONE_4_3);
                             ^
/usr/local/include/stdlib.h:270:27: note: insert '_Nullable' if the pointer may be null
void     arc4random_buf(void * __buf, size_t __nbytes) __OSX_AVAILABLE_STARTING(__MAC_10_7, __IPHONE_4_3);
                             ^
                               _Nullable
/usr/local/include/stdlib.h:270:27: note: insert '_Nonnull' if the pointer should never be null
void     arc4random_buf(void * __buf, size_t __nbytes) __OSX_AVAILABLE_STARTING(__MAC_10_7, __IPHONE_4_3);
                             ^
                               _Nonnull
/usr/local/include/stdlib.h:276:28: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                              ^
/usr/local/include/stdlib.h:276:28: note: insert '_Nullable' if the pointer may be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                              ^
                                _Nullable 
/usr/local/include/stdlib.h:276:28: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                              ^
                                _Nonnull 
/usr/local/include/stdlib.h:276:47: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                                                 ^
/usr/local/include/stdlib.h:276:47: note: insert '_Nullable' if the pointer may be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                                                 ^
                                                   _Nullable 
/usr/local/include/stdlib.h:276:47: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                                                 ^
                                                   _Nonnull 
/usr/local/include/stdlib.h:277:59: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                 ^
/usr/local/include/stdlib.h:277:59: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                 ^
                                                                  _Nullable
/usr/local/include/stdlib.h:277:59: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                 ^
                                                                  _Nonnull
/usr/local/include/stdlib.h:277:73: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                               ^
/usr/local/include/stdlib.h:277:73: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                               ^
                                                                                _Nullable
/usr/local/include/stdlib.h:277:73: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                               ^
                                                                                _Nonnull
/usr/local/include/stdlib.h:276:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
        ^
/usr/local/include/stdlib.h:276:6: note: insert '_Nullable' if the pointer may be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
        ^
          _Nullable 
/usr/local/include/stdlib.h:276:6: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
        ^
          _Nonnull 
/usr/local/include/stdlib.h:281:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *cgetcap(char *, const char *, int);
                      ^
/usr/local/include/stdlib.h:281:20: note: insert '_Nullable' if the pointer may be null
char    *cgetcap(char *, const char *, int);
                      ^
                       _Nullable
/usr/local/include/stdlib.h:281:20: note: insert '_Nonnull' if the pointer should never be null
char    *cgetcap(char *, const char *, int);
                      ^
                       _Nonnull
/usr/local/include/stdlib.h:281:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *cgetcap(char *, const char *, int);
                                    ^
/usr/local/include/stdlib.h:281:34: note: insert '_Nullable' if the pointer may be null
char    *cgetcap(char *, const char *, int);
                                    ^
                                     _Nullable
/usr/local/include/stdlib.h:281:34: note: insert '_Nonnull' if the pointer should never be null
char    *cgetcap(char *, const char *, int);
                                    ^
                                     _Nonnull
/usr/local/include/stdlib.h:281:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *cgetcap(char *, const char *, int);
        ^
/usr/local/include/stdlib.h:281:6: note: insert '_Nullable' if the pointer may be null
char    *cgetcap(char *, const char *, int);
        ^
          _Nullable 
/usr/local/include/stdlib.h:281:6: note: insert '_Nonnull' if the pointer should never be null
char    *cgetcap(char *, const char *, int);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:283:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                      ^
/usr/local/include/stdlib.h:283:19: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                      ^
                       _Nullable
/usr/local/include/stdlib.h:283:19: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                      ^
                       _Nonnull
/usr/local/include/stdlib.h:283:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                       ^
/usr/local/include/stdlib.h:283:20: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                       ^
                        _Nullable
/usr/local/include/stdlib.h:283:20: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                       ^
                        _Nonnull
/usr/local/include/stdlib.h:283:28: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                               ^
/usr/local/include/stdlib.h:283:28: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                               ^
                                _Nullable
/usr/local/include/stdlib.h:283:28: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                               ^
                                _Nonnull
/usr/local/include/stdlib.h:283:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                                ^
/usr/local/include/stdlib.h:283:29: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                                ^
                                 _Nullable
/usr/local/include/stdlib.h:283:29: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                                ^
                                 _Nonnull
/usr/local/include/stdlib.h:283:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                                              ^
/usr/local/include/stdlib.h:283:43: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                                              ^
                                               _Nullable
/usr/local/include/stdlib.h:283:43: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                                              ^
                                               _Nonnull
/usr/local/include/stdlib.h:284:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                        ^
/usr/local/include/stdlib.h:284:21: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                        ^
                         _Nullable
/usr/local/include/stdlib.h:284:21: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                        ^
                         _Nonnull
/usr/local/include/stdlib.h:284:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                         ^
/usr/local/include/stdlib.h:284:22: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:284:22: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:284:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                                 ^
/usr/local/include/stdlib.h:284:30: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                                 ^
                                  _Nullable
/usr/local/include/stdlib.h:284:30: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                                 ^
                                  _Nonnull
/usr/local/include/stdlib.h:284:31: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                                  ^
/usr/local/include/stdlib.h:284:31: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                                  ^
                                   _Nullable
/usr/local/include/stdlib.h:284:31: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                                  ^
                                   _Nonnull
/usr/local/include/stdlib.h:285:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetmatch(const char *, const char *);
                              ^
/usr/local/include/stdlib.h:285:27: note: insert '_Nullable' if the pointer may be null
int      cgetmatch(const char *, const char *);
                              ^
                               _Nullable
/usr/local/include/stdlib.h:285:27: note: insert '_Nonnull' if the pointer should never be null
int      cgetmatch(const char *, const char *);
                              ^
                               _Nonnull
/usr/local/include/stdlib.h:285:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetmatch(const char *, const char *);
                                            ^
/usr/local/include/stdlib.h:285:41: note: insert '_Nullable' if the pointer may be null
int      cgetmatch(const char *, const char *);
                                            ^
                                             _Nullable
/usr/local/include/stdlib.h:285:41: note: insert '_Nonnull' if the pointer should never be null
int      cgetmatch(const char *, const char *);
                                            ^
                                             _Nonnull
/usr/local/include/stdlib.h:286:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                       ^
/usr/local/include/stdlib.h:286:20: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                       ^
                        _Nullable
/usr/local/include/stdlib.h:286:20: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                       ^
                        _Nonnull
/usr/local/include/stdlib.h:286:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                        ^
/usr/local/include/stdlib.h:286:21: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                        ^
                         _Nullable
/usr/local/include/stdlib.h:286:21: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                        ^
                         _Nonnull
/usr/local/include/stdlib.h:286:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                                ^
/usr/local/include/stdlib.h:286:29: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                                ^
                                 _Nullable
/usr/local/include/stdlib.h:286:29: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                                ^
                                 _Nonnull
/usr/local/include/stdlib.h:286:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                                 ^
/usr/local/include/stdlib.h:286:30: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                                 ^
                                  _Nullable
/usr/local/include/stdlib.h:286:30: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                                 ^
                                  _Nonnull
/usr/local/include/stdlib.h:287:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnum(char *, const char *, long *);
                      ^
/usr/local/include/stdlib.h:287:19: note: insert '_Nullable' if the pointer may be null
int      cgetnum(char *, const char *, long *);
                      ^
                       _Nullable
/usr/local/include/stdlib.h:287:19: note: insert '_Nonnull' if the pointer should never be null
int      cgetnum(char *, const char *, long *);
                      ^
                       _Nonnull
/usr/local/include/stdlib.h:287:33: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnum(char *, const char *, long *);
                                    ^
/usr/local/include/stdlib.h:287:33: note: insert '_Nullable' if the pointer may be null
int      cgetnum(char *, const char *, long *);
                                    ^
                                     _Nullable
/usr/local/include/stdlib.h:287:33: note: insert '_Nonnull' if the pointer should never be null
int      cgetnum(char *, const char *, long *);
                                    ^
                                     _Nonnull
/usr/local/include/stdlib.h:287:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnum(char *, const char *, long *);
                                            ^
/usr/local/include/stdlib.h:287:41: note: insert '_Nullable' if the pointer may be null
int      cgetnum(char *, const char *, long *);
                                            ^
                                             _Nullable
/usr/local/include/stdlib.h:287:41: note: insert '_Nonnull' if the pointer should never be null
int      cgetnum(char *, const char *, long *);
                                            ^
                                             _Nonnull
/usr/local/include/stdlib.h:288:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetset(const char *);
                            ^
/usr/local/include/stdlib.h:288:25: note: insert '_Nullable' if the pointer may be null
int      cgetset(const char *);
                            ^
                             _Nullable
/usr/local/include/stdlib.h:288:25: note: insert '_Nonnull' if the pointer should never be null
int      cgetset(const char *);
                            ^
                             _Nonnull
/usr/local/include/stdlib.h:289:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                      ^
/usr/local/include/stdlib.h:289:19: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                      ^
                       _Nullable
/usr/local/include/stdlib.h:289:19: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                      ^
                       _Nonnull
/usr/local/include/stdlib.h:289:33: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                                    ^
/usr/local/include/stdlib.h:289:33: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                                    ^
                                     _Nullable
/usr/local/include/stdlib.h:289:33: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                                    ^
                                     _Nonnull
/usr/local/include/stdlib.h:289:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                                            ^
/usr/local/include/stdlib.h:289:41: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                                            ^
                                             _Nullable
/usr/local/include/stdlib.h:289:41: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                                            ^
                                             _Nonnull
/usr/local/include/stdlib.h:289:42: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                                             ^
/usr/local/include/stdlib.h:289:42: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                                             ^
                                              _Nullable
/usr/local/include/stdlib.h:289:42: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                                             ^
                                              _Nonnull
/usr/local/include/stdlib.h:290:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                       ^
/usr/local/include/stdlib.h:290:20: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                       ^
                        _Nullable
/usr/local/include/stdlib.h:290:20: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                       ^
                        _Nonnull
/usr/local/include/stdlib.h:290:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                                     ^
/usr/local/include/stdlib.h:290:34: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                                     ^
                                      _Nullable
/usr/local/include/stdlib.h:290:34: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                                     ^
                                      _Nonnull
/usr/local/include/stdlib.h:290:42: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                                             ^
/usr/local/include/stdlib.h:290:42: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                                             ^
                                              _Nullable
/usr/local/include/stdlib.h:290:42: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                                             ^
                                              _Nonnull
/usr/local/include/stdlib.h:290:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                                              ^
/usr/local/include/stdlib.h:290:43: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                                              ^
                                               _Nullable
/usr/local/include/stdlib.h:290:43: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                                              ^
                                               _Nonnull
/usr/local/include/stdlib.h:293:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *devname(dev_t, mode_t);
        ^
/usr/local/include/stdlib.h:293:6: note: insert '_Nullable' if the pointer may be null
char    *devname(dev_t, mode_t);
        ^
          _Nullable 
/usr/local/include/stdlib.h:293:6: note: insert '_Nonnull' if the pointer should never be null
char    *devname(dev_t, mode_t);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:294:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *devname_r(dev_t, mode_t, char *buf, int len);
                                       ^
/usr/local/include/stdlib.h:294:37: note: insert '_Nullable' if the pointer may be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
                                       ^
                                         _Nullable 
/usr/local/include/stdlib.h:294:37: note: insert '_Nonnull' if the pointer should never be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
                                       ^
                                         _Nonnull 
/usr/local/include/stdlib.h:294:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *devname_r(dev_t, mode_t, char *buf, int len);
        ^
/usr/local/include/stdlib.h:294:6: note: insert '_Nullable' if the pointer may be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
        ^
          _Nullable 
/usr/local/include/stdlib.h:294:6: note: insert '_Nonnull' if the pointer should never be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:295:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getbsize(int *, long *);
                      ^
/usr/local/include/stdlib.h:295:20: note: insert '_Nullable' if the pointer may be null
char    *getbsize(int *, long *);
                      ^
                       _Nullable
/usr/local/include/stdlib.h:295:20: note: insert '_Nonnull' if the pointer should never be null
char    *getbsize(int *, long *);
                      ^
                       _Nonnull
/usr/local/include/stdlib.h:295:28: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getbsize(int *, long *);
                              ^
/usr/local/include/stdlib.h:295:28: note: insert '_Nullable' if the pointer may be null
char    *getbsize(int *, long *);
                              ^
                               _Nullable
/usr/local/include/stdlib.h:295:28: note: insert '_Nonnull' if the pointer should never be null
char    *getbsize(int *, long *);
                              ^
                               _Nonnull
/usr/local/include/stdlib.h:295:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getbsize(int *, long *);
        ^
/usr/local/include/stdlib.h:295:6: note: insert '_Nullable' if the pointer may be null
char    *getbsize(int *, long *);
        ^
          _Nullable 
/usr/local/include/stdlib.h:295:6: note: insert '_Nonnull' if the pointer should never be null
char    *getbsize(int *, long *);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:296:24: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
int      getloadavg(double [], int);
                           ^
/usr/local/include/stdlib.h:296:24: note: insert '_Nullable' if the array parameter may be null
int      getloadavg(double [], int);
                           ^
                            _Nullable
/usr/local/include/stdlib.h:296:24: note: insert '_Nonnull' if the array parameter should never be null
int      getloadavg(double [], int);
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:298:2: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        *getprogname(void);
        ^
/usr/local/include/stdlib.h:298:2: note: insert '_Nullable' if the pointer may be null
        *getprogname(void);
        ^
          _Nullable 
/usr/local/include/stdlib.h:298:2: note: insert '_Nonnull' if the pointer should never be null
        *getprogname(void);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:299:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     setprogname(const char *);
                                ^
/usr/local/include/stdlib.h:299:30: note: insert '_Nullable' if the pointer may be null
void     setprogname(const char *);
                                ^
                                 _Nullable
/usr/local/include/stdlib.h:299:30: note: insert '_Nonnull' if the pointer should never be null
void     setprogname(const char *);
                                ^
                                 _Nonnull
/usr/local/include/stdlib.h:309:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      heapsort(void *__base, size_t __nel, size_t __width,
                       ^
/usr/local/include/stdlib.h:309:20: note: insert '_Nullable' if the pointer may be null
int      heapsort(void *__base, size_t __nel, size_t __width,
                       ^
                         _Nullable 
/usr/local/include/stdlib.h:309:20: note: insert '_Nonnull' if the pointer should never be null
int      heapsort(void *__base, size_t __nel, size_t __width,
                       ^
                         _Nonnull 
/usr/local/include/stdlib.h:310:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
/usr/local/include/stdlib.h:310:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:310:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:310:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
/usr/local/include/stdlib.h:310:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:310:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:312:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      heapsort_b(void *__base, size_t __nel, size_t __width,
                         ^
/usr/local/include/stdlib.h:312:22: note: insert '_Nullable' if the pointer may be null
int      heapsort_b(void *__base, size_t __nel, size_t __width,
                         ^
                           _Nullable 
/usr/local/include/stdlib.h:312:22: note: insert '_Nonnull' if the pointer should never be null
int      heapsort_b(void *__base, size_t __nel, size_t __width,
                         ^
                           _Nonnull 
/usr/local/include/stdlib.h:313:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
/usr/local/include/stdlib.h:313:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:313:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:313:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
/usr/local/include/stdlib.h:313:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:313:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:316:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mergesort(void *__base, size_t __nel, size_t __width,
                        ^
/usr/local/include/stdlib.h:316:21: note: insert '_Nullable' if the pointer may be null
int      mergesort(void *__base, size_t __nel, size_t __width,
                        ^
                          _Nullable 
/usr/local/include/stdlib.h:316:21: note: insert '_Nonnull' if the pointer should never be null
int      mergesort(void *__base, size_t __nel, size_t __width,
                        ^
                          _Nonnull 
/usr/local/include/stdlib.h:317:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
/usr/local/include/stdlib.h:317:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:317:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:317:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
/usr/local/include/stdlib.h:317:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:317:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:319:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mergesort_b(void *__base, size_t __nel, size_t __width,
                          ^
/usr/local/include/stdlib.h:319:23: note: insert '_Nullable' if the pointer may be null
int      mergesort_b(void *__base, size_t __nel, size_t __width,
                          ^
                            _Nullable 
/usr/local/include/stdlib.h:319:23: note: insert '_Nonnull' if the pointer should never be null
int      mergesort_b(void *__base, size_t __nel, size_t __width,
                          ^
                            _Nonnull 
/usr/local/include/stdlib.h:320:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
/usr/local/include/stdlib.h:320:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:320:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:320:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
/usr/local/include/stdlib.h:320:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:320:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:323:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort(void *__base, size_t __nel, size_t __width,
                    ^
/usr/local/include/stdlib.h:323:18: note: insert '_Nullable' if the pointer may be null
void     psort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nullable 
/usr/local/include/stdlib.h:323:18: note: insert '_Nonnull' if the pointer should never be null
void     psort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nonnull 
/usr/local/include/stdlib.h:324:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *))
                                                 ^
/usr/local/include/stdlib.h:324:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *))
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:324:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *))
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:324:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *))
                                                               ^
/usr/local/include/stdlib.h:324:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *))
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:324:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *))
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:327:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort_b(void *__base, size_t __nel, size_t __width,
                      ^
/usr/local/include/stdlib.h:327:20: note: insert '_Nullable' if the pointer may be null
void     psort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nullable 
/usr/local/include/stdlib.h:327:20: note: insert '_Nonnull' if the pointer should never be null
void     psort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nonnull 
/usr/local/include/stdlib.h:328:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
/usr/local/include/stdlib.h:328:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:328:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:328:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
/usr/local/include/stdlib.h:328:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:328:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:331:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
/usr/local/include/stdlib.h:331:20: note: insert '_Nullable' if the pointer may be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nullable 
/usr/local/include/stdlib.h:331:20: note: insert '_Nonnull' if the pointer should never be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nonnull 
/usr/local/include/stdlib.h:331:64: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
/usr/local/include/stdlib.h:331:64: note: insert '_Nullable' if the pointer may be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nullable
/usr/local/include/stdlib.h:331:64: note: insert '_Nonnull' if the pointer should never be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nonnull
/usr/local/include/stdlib.h:332:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                           ^
/usr/local/include/stdlib.h:332:37: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                           ^
                                            _Nullable
/usr/local/include/stdlib.h:332:37: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                           ^
                                            _Nonnull
/usr/local/include/stdlib.h:332:51: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                                         ^
/usr/local/include/stdlib.h:332:51: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                                         ^
                                                          _Nullable
/usr/local/include/stdlib.h:332:51: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                                         ^
                                                          _Nonnull
/usr/local/include/stdlib.h:332:65: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                                                       ^
/usr/local/include/stdlib.h:332:65: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                                                       ^
                                                                        _Nullable
/usr/local/include/stdlib.h:332:65: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                                                       ^
                                                                        _Nonnull
/usr/local/include/stdlib.h:335:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort_b(void *__base, size_t __nel, size_t __width,
                      ^
/usr/local/include/stdlib.h:335:20: note: insert '_Nullable' if the pointer may be null
void     qsort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nullable 
/usr/local/include/stdlib.h:335:20: note: insert '_Nonnull' if the pointer should never be null
void     qsort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nonnull 
/usr/local/include/stdlib.h:336:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
/usr/local/include/stdlib.h:336:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:336:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:336:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
/usr/local/include/stdlib.h:336:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:336:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:339:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
/usr/local/include/stdlib.h:339:20: note: insert '_Nullable' if the pointer may be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nullable 
/usr/local/include/stdlib.h:339:20: note: insert '_Nonnull' if the pointer should never be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nonnull 
/usr/local/include/stdlib.h:339:64: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
/usr/local/include/stdlib.h:339:64: note: insert '_Nullable' if the pointer may be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nullable
/usr/local/include/stdlib.h:339:64: note: insert '_Nonnull' if the pointer should never be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nonnull
/usr/local/include/stdlib.h:340:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                           ^
/usr/local/include/stdlib.h:340:37: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                           ^
                                            _Nullable
/usr/local/include/stdlib.h:340:37: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                           ^
                                            _Nonnull
/usr/local/include/stdlib.h:340:51: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                         ^
/usr/local/include/stdlib.h:340:51: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                         ^
                                                          _Nullable
/usr/local/include/stdlib.h:340:51: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                         ^
                                                          _Nonnull
/usr/local/include/stdlib.h:340:65: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                                       ^
/usr/local/include/stdlib.h:340:65: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                                       ^
                                                                        _Nullable
/usr/local/include/stdlib.h:340:65: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                                       ^
                                                                        _Nonnull
/usr/local/include/stdlib.h:341:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                       ^
/usr/local/include/stdlib.h:341:36: note: insert '_Nullable' if the pointer may be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                       ^
                                        _Nullable
/usr/local/include/stdlib.h:341:36: note: insert '_Nonnull' if the pointer should never be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                       ^
                                        _Nonnull
/usr/local/include/stdlib.h:341:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
/usr/local/include/stdlib.h:341:37: note: insert '_Nullable' if the pointer may be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                          _Nullable 
/usr/local/include/stdlib.h:341:37: note: insert '_Nonnull' if the pointer should never be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                          _Nonnull 
/usr/local/include/stdlib.h:341:77: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                ^
/usr/local/include/stdlib.h:341:77: note: insert '_Nullable' if the pointer may be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                ^
                                                                                  _Nullable 
/usr/local/include/stdlib.h:341:77: note: insert '_Nonnull' if the pointer should never be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                ^
                                                                                  _Nonnull 
/usr/local/include/stdlib.h:343:24: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int     rpmatch(const char *)
                           ^
/usr/local/include/stdlib.h:343:24: note: insert '_Nullable' if the pointer may be null
int     rpmatch(const char *)
                           ^
                            _Nullable
/usr/local/include/stdlib.h:343:24: note: insert '_Nonnull' if the pointer should never be null
int     rpmatch(const char *)
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:345:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
/usr/local/include/stdlib.h:345:37: note: insert '_Nullable' if the pointer may be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                         _Nullable
/usr/local/include/stdlib.h:345:37: note: insert '_Nonnull' if the pointer should never be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                         _Nonnull
/usr/local/include/stdlib.h:345:38: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                         ^
/usr/local/include/stdlib.h:345:38: note: insert '_Nullable' if the pointer may be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                         ^
                                           _Nullable 
/usr/local/include/stdlib.h:345:38: note: insert '_Nonnull' if the pointer should never be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                         ^
                                           _Nonnull 
/usr/local/include/stdlib.h:345:78: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                 ^
/usr/local/include/stdlib.h:345:78: note: insert '_Nullable' if the pointer may be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                 ^
                                                                                   _Nullable 
/usr/local/include/stdlib.h:345:78: note: insert '_Nonnull' if the pointer should never be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                 ^
                                                                                   _Nonnull 
/usr/local/include/stdlib.h:349:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
                       ^
/usr/local/include/stdlib.h:349:21: note: insert '_Nullable' if the pointer may be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
                       ^
                         _Nullable 
/usr/local/include/stdlib.h:349:21: note: insert '_Nonnull' if the pointer should never be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
                       ^
                         _Nonnull 
/usr/local/include/stdlib.h:349:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
        ^
/usr/local/include/stdlib.h:349:6: note: insert '_Nullable' if the pointer may be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
        ^
          _Nullable 
/usr/local/include/stdlib.h:349:6: note: insert '_Nonnull' if the pointer should never be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:351:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                            ^
/usr/local/include/stdlib.h:351:22: note: insert '_Nullable' if the pointer may be null
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                            ^
                              _Nullable 
/usr/local/include/stdlib.h:351:22: note: insert '_Nonnull' if the pointer should never be null
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                            ^
                              _Nonnull 
/usr/local/include/stdlib.h:351:84: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                                                                                          ^
/usr/local/include/stdlib.h:351:84: note: insert '_Nullable' if the pointer may be null
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                                                                                          ^
                                                                                           _Nullable
/usr/local/include/stdlib.h:351:84: note: insert '_Nonnull' if the pointer should never be null
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                                                                                          ^
                                                                                           _Nonnull
/usr/local/include/stdlib.h:351:85: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                                                                                           ^
/usr/local/include/stdlib.h:351:85: note: insert '_Nullable' if the pointer may be null
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                                                                                           ^
                                                                                             _Nullable 
/usr/local/include/stdlib.h:351:85: note: insert '_Nonnull' if the pointer should never be null
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                                                                                           ^
                                                                                             _Nonnull 
/usr/local/include/stdlib.h:355:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoq(const char *__str, char **__endptr, int __base);
                           ^
/usr/local/include/stdlib.h:355:21: note: insert '_Nullable' if the pointer may be null
         strtoq(const char *__str, char **__endptr, int __base);
                           ^
                             _Nullable 
/usr/local/include/stdlib.h:355:21: note: insert '_Nonnull' if the pointer should never be null
         strtoq(const char *__str, char **__endptr, int __base);
                           ^
                             _Nonnull 
/usr/local/include/stdlib.h:355:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoq(const char *__str, char **__endptr, int __base);
                                        ^
/usr/local/include/stdlib.h:355:34: note: insert '_Nullable' if the pointer may be null
         strtoq(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nullable
/usr/local/include/stdlib.h:355:34: note: insert '_Nonnull' if the pointer should never be null
         strtoq(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nonnull
/usr/local/include/stdlib.h:355:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoq(const char *__str, char **__endptr, int __base);
                                         ^
/usr/local/include/stdlib.h:355:35: note: insert '_Nullable' if the pointer may be null
         strtoq(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nullable 
/usr/local/include/stdlib.h:355:35: note: insert '_Nonnull' if the pointer should never be null
         strtoq(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nonnull 
/usr/local/include/stdlib.h:357:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtouq(const char *__str, char **__endptr, int __base);
                            ^
/usr/local/include/stdlib.h:357:22: note: insert '_Nullable' if the pointer may be null
         strtouq(const char *__str, char **__endptr, int __base);
                            ^
                              _Nullable 
/usr/local/include/stdlib.h:357:22: note: insert '_Nonnull' if the pointer should never be null
         strtouq(const char *__str, char **__endptr, int __base);
                            ^
                              _Nonnull 
/usr/local/include/stdlib.h:357:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtouq(const char *__str, char **__endptr, int __base);
                                         ^
/usr/local/include/stdlib.h:357:35: note: insert '_Nullable' if the pointer may be null
         strtouq(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nullable
/usr/local/include/stdlib.h:357:35: note: insert '_Nonnull' if the pointer should never be null
         strtouq(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nonnull
/usr/local/include/stdlib.h:357:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtouq(const char *__str, char **__endptr, int __base);
                                          ^
/usr/local/include/stdlib.h:357:36: note: insert '_Nullable' if the pointer may be null
         strtouq(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nullable 
/usr/local/include/stdlib.h:357:36: note: insert '_Nonnull' if the pointer should never be null
         strtouq(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nonnull 
/usr/local/include/stdlib.h:359:13: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
extern char *suboptarg;         /* getsubopt(3) external variable */
            ^
/usr/local/include/stdlib.h:359:13: note: insert '_Nullable' if the pointer may be null
extern char *suboptarg;         /* getsubopt(3) external variable */
            ^
              _Nullable 
/usr/local/include/stdlib.h:359:13: note: insert '_Nonnull' if the pointer should never be null
extern char *suboptarg;         /* getsubopt(3) external variable */
            ^
              _Nonnull 
conftest.c:6:9: error: unknown type name 'my_bool'
typedef my_bool conftest_type;
        ^
193 warnings and 1 error generated.
checked program was:
/* begin */
1: #include "ruby.h"
2: 
3: #include <mysql.h>
4: 
5: /*top*/
6: typedef my_bool conftest_type;
7: int conftestval[sizeof(conftest_type)?1:-1];
/* end */

--------------------

"gcc -o conftest -I/Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/x86_64-darwin19 -I/Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/backward -I/Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0 -I. -I/usr/local/opt/mysql-client/include/mysql  -I/usr/local/opt/libyaml/include -I/usr/local/opt/libksba/include -I/usr/local/opt/readline/include -I/usr/local/opt/zlib/include -I/usr/local/opt/openssl@1.1/include -D_XOPEN_SOURCE -D_DARWIN_C_SOURCE -D_DARWIN_UNLIMITED_SELECT -D_REENTRANT   -O3 -ggdb3 -Wall -Wextra -Wdeprecated-declarations -Wdivision-by-zero -Wimplicit-function-declaration -Wimplicit-int -Wpointer-arith -Wshorten-64-to-32 -Wwrite-strings -Wmissing-noreturn -Wno-constant-logical-operand -Wno-long-long -Wno-missing-field-initializers -Wno-overlength-strings -Wno-parentheses-equality -Wno-self-assign -Wno-tautological-compare -Wno-unused-parameter -Wno-unused-value -Wunused-variable -Wextra-tokens  -fno-common -pipe -DFULL_SSL_MODE_SUPPORT conftest.c  -L. -L/Users/dileepkumar/.rvm/rubies/ruby-2.7.0/lib -L/usr/local/opt/libyaml/lib -L/usr/local/opt/libksba/lib -L/usr/local/opt/readline/lib -L/usr/local/opt/zlib/lib -L/usr/local/opt/openssl@1.1/lib -L. -fstack-protector-strong -L/usr/local/lib -L/usr/local/opt/libyaml/lib -L/usr/local/opt/libksba/lib -L/usr/local/opt/readline/lib -L/usr/local/opt/zlib/lib -L/usr/local/opt/openssl@1.1/lib    -L/usr/local/opt/mysql-client/lib -lmysqlclient -lssl -lcrypto  -lruby.2.7 -Werror -Weverything  "
error: include location '/usr/local/include' is unsafe for cross-compilation [-Werror,-Wpoison-system-directories]
In file included from conftest.c:1:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby.h:33:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/ruby.h:24:
/Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/x86_64-darwin19/ruby/config.h:14:9: error: macro name is a reserved identifier [-Werror,-Wreserved-id-macro]
#define __EXTENSIONS__ 1
        ^
/Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/x86_64-darwin19/ruby/config.h:15:9: error: macro name is a reserved identifier [-Werror,-Wreserved-id-macro]
#define _ALL_SOURCE 1
        ^
/Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/x86_64-darwin19/ruby/config.h:16:9: error: macro name is a reserved identifier [-Werror,-Wreserved-id-macro]
#define _GNU_SOURCE 1
        ^
/Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/x86_64-darwin19/ruby/config.h:17:9: error: macro name is a reserved identifier [-Werror,-Wreserved-id-macro]
#define _POSIX_PTHREAD_SEMANTICS 1
        ^
/Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/x86_64-darwin19/ruby/config.h:18:9: error: macro name is a reserved identifier [-Werror,-Wreserved-id-macro]
#define _TANDEM_SOURCE 1
        ^
/Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/x86_64-darwin19/ruby/config.h:342:9: error: macro name is a reserved identifier [-Werror,-Wreserved-id-macro]
#define __STDC_WANT_LIB_EXT1__ 1
        ^
/Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/x86_64-darwin19/ruby/config.h:378:9: error: macro name is a reserved identifier [-Werror,-Wreserved-id-macro]
#define _REENTRANT 1
        ^
/Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/x86_64-darwin19/ruby/config.h:379:9: error: macro name is a reserved identifier [-Werror,-Wreserved-id-macro]
#define _THREAD_SAFE 1
        ^
In file included from conftest.c:1:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby.h:33:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/ruby.h:29:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/defines.h:126:
/usr/local/include/stdio.h:62:9: error: macro name is a reserved identifier [-Werror,-Wreserved-id-macro]
#define _STDIO_H_
        ^
In file included from conftest.c:1:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby.h:33:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/ruby.h:29:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/defines.h:126:
In file included from /usr/local/include/stdio.h:64:
/usr/local/include/_stdio.h:66:9: error: macro name is a reserved identifier [-Werror,-Wreserved-id-macro]
#define __STDIO_H_
        ^
In file included from conftest.c:1:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby.h:33:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/ruby.h:29:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/defines.h:126:
In file included from /usr/local/include/stdio.h:64:
In file included from /usr/local/include/_stdio.h:68:
/usr/local/include/sys/cdefs.h:68:9: error: macro name is a reserved identifier [-Werror,-Wreserved-id-macro]
#define _CDEFS_H_
        ^
/usr/local/include/sys/cdefs.h:74:9: error: macro name is a reserved identifier [-Werror,-Wreserved-id-macro]
#define __BEGIN_DECLS
        ^
/usr/local/include/sys/cdefs.h:75:9: error: macro name is a reserved identifier [-Werror,-Wreserved-id-macro]
#define __END_DECLS
        ^
/usr/local/include/sys/cdefs.h:112:9: error: macro name is a reserved identifier [-Werror,-Wreserved-id-macro]
#define __P(protos)     protos          /* full-blown ANSI C */
        ^
/usr/local/include/sys/cdefs.h:113:9: error: macro name is a reserved identifier [-Werror,-Wreserved-id-macro]
#define __CONCAT(x, y)   x ## y
        ^
/usr/local/include/sys/cdefs.h:114:9: error: macro name is a reserved identifier [-Werror,-Wreserved-id-macro]
#define __STRING(x)     #x
        ^
/usr/local/include/sys/cdefs.h:116:9: error: macro name is a reserved identifier [-Werror,-Wreserved-id-macro]
#define __const         const           /* define reserved names to standard */
        ^
/usr/local/include/sys/cdefs.h:117:9: error: macro name is a reserved identifier [-Werror,-Wreserved-id-macro]
#define __signed        signed
        ^
fatal error: too many errors emitted, stopping now [-ferror-limit=]
20 errors generated.
checked program was:
/* begin */
1: #include "ruby.h"
2: 
3: int main() {return 0;}
/* end */

"gcc -o conftest -I/Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/x86_64-darwin19 -I/Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/backward -I/Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0 -I. -I/usr/local/opt/mysql-client/include/mysql  -I/usr/local/opt/libyaml/include -I/usr/local/opt/libksba/include -I/usr/local/opt/readline/include -I/usr/local/opt/zlib/include -I/usr/local/opt/openssl@1.1/include -D_XOPEN_SOURCE -D_DARWIN_C_SOURCE -D_DARWIN_UNLIMITED_SELECT -D_REENTRANT   -O3 -ggdb3 -Wall -Wextra -Wdeprecated-declarations -Wdivision-by-zero -Wimplicit-function-declaration -Wimplicit-int -Wpointer-arith -Wshorten-64-to-32 -Wwrite-strings -Wmissing-noreturn -Wno-constant-logical-operand -Wno-long-long -Wno-missing-field-initializers -Wno-overlength-strings -Wno-parentheses-equality -Wno-self-assign -Wno-tautological-compare -Wno-unused-parameter -Wno-unused-value -Wunused-variable -Wextra-tokens  -fno-common -pipe -DFULL_SSL_MODE_SUPPORT conftest.c  -L. -L/Users/dileepkumar/.rvm/rubies/ruby-2.7.0/lib -L/usr/local/opt/libyaml/lib -L/usr/local/opt/libksba/lib -L/usr/local/opt/readline/lib -L/usr/local/opt/zlib/lib -L/usr/local/opt/openssl@1.1/lib -L. -fstack-protector-strong -L/usr/local/lib -L/usr/local/opt/libyaml/lib -L/usr/local/opt/libksba/lib -L/usr/local/opt/readline/lib -L/usr/local/opt/zlib/lib -L/usr/local/opt/openssl@1.1/lib    -L/usr/local/opt/mysql-client/lib -lmysqlclient -lssl -lcrypto  -lruby.2.7 -Werror -Wno-bad-function-cast  "
In file included from conftest.c:1:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby.h:33:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/ruby.h:29:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/defines.h:126:
In file included from /usr/local/include/stdio.h:64:
/usr/local/include/_stdio.h:93:16: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
        unsigned char   *_base;
                        ^
/usr/local/include/_stdio.h:93:16: note: insert '_Nullable' if the pointer may be null
        unsigned char   *_base;
                        ^
                          _Nullable 
/usr/local/include/_stdio.h:93:16: note: insert '_Nonnull' if the pointer should never be null
        unsigned char   *_base;
                        ^
                          _Nonnull 
/usr/local/include/_stdio.h:138:32: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
/usr/local/include/_stdio.h:138:32: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
                                           _Nullable
/usr/local/include/_stdio.h:138:32: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
                                           _Nonnull
/usr/local/include/_stdio.h:138:40: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
/usr/local/include/_stdio.h:138:40: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
                                                   _Nullable
/usr/local/include/_stdio.h:138:40: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
                                                   _Nonnull
/usr/local/include/_stdio.h:139:35: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
/usr/local/include/_stdio.h:139:35: note: insert '_Nullable' if the pointer may be null
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
                                           _Nullable
/usr/local/include/_stdio.h:139:35: note: insert '_Nonnull' if the pointer should never be null
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
                                           _Nonnull
/usr/local/include/_stdio.h:140:32: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
/usr/local/include/_stdio.h:140:32: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
                                           _Nullable
/usr/local/include/_stdio.h:140:32: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
                                           _Nonnull
/usr/local/include/_stdio.h:140:46: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
/usr/local/include/_stdio.h:140:46: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
                                                         _Nullable
/usr/local/include/_stdio.h:140:46: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
                                                         _Nonnull
/usr/local/include/_stdio.h:144:18: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
/usr/local/include/_stdio.h:144:18: note: insert '_Nullable' if the pointer may be null
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
                          _Nullable 
/usr/local/include/_stdio.h:144:18: note: insert '_Nonnull' if the pointer should never be null
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
                          _Nonnull 
In file included from conftest.c:1:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby.h:33:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/ruby.h:29:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/defines.h:126:
/usr/local/include/stdio.h:67:13: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
extern FILE *__stdinp;
            ^
/usr/local/include/stdio.h:67:13: note: insert '_Nullable' if the pointer may be null
extern FILE *__stdinp;
            ^
              _Nullable 
/usr/local/include/stdio.h:67:13: note: insert '_Nonnull' if the pointer should never be null
extern FILE *__stdinp;
            ^
              _Nonnull 
/usr/local/include/stdio.h:386:41: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
                 int (* _Nullable)(void *, const char *, int),
                                        ^
/usr/local/include/stdio.h:386:41: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *, const char *, int),
                                        ^
                                         _Nullable
/usr/local/include/stdio.h:386:41: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *, const char *, int),
                                        ^
                                         _Nonnull
/usr/local/include/stdio.h:386:55: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
/usr/local/include/stdio.h:386:55: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
                                                       _Nullable
/usr/local/include/stdio.h:386:55: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
                                                       _Nonnull
/usr/local/include/stdio.h:387:44: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
/usr/local/include/stdio.h:387:44: note: insert '_Nullable' if the pointer may be null
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
                                            _Nullable
/usr/local/include/stdio.h:387:44: note: insert '_Nonnull' if the pointer should never be null
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
                                            _Nonnull
/usr/local/include/stdio.h:388:41: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
                 int (* _Nullable)(void *));
                                        ^
/usr/local/include/stdio.h:388:41: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *));
                                        ^
                                         _Nullable
/usr/local/include/stdio.h:388:41: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *));
                                        ^
                                         _Nonnull
/usr/local/include/stdio.h:384:6: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
FILE    *funopen(const void *,
        ^
/usr/local/include/stdio.h:384:6: note: insert '_Nullable' if the pointer may be null
FILE    *funopen(const void *,
        ^
          _Nullable 
/usr/local/include/stdio.h:384:6: note: insert '_Nonnull' if the pointer should never be null
FILE    *funopen(const void *,
        ^
          _Nonnull 
In file included from conftest.c:1:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby.h:33:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/ruby.h:29:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/defines.h:134:
/usr/local/include/stdlib.h:134:25: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
double   atof(const char *);
                         ^
/usr/local/include/stdlib.h:134:25: note: insert '_Nullable' if the pointer may be null
double   atof(const char *);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:134:25: note: insert '_Nonnull' if the pointer should never be null
double   atof(const char *);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:135:22: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
int      atoi(const char *);
                         ^
/usr/local/include/stdlib.h:135:22: note: insert '_Nullable' if the pointer may be null
int      atoi(const char *);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:135:22: note: insert '_Nonnull' if the pointer should never be null
int      atoi(const char *);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:136:23: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
long     atol(const char *);
                         ^
/usr/local/include/stdlib.h:136:23: note: insert '_Nullable' if the pointer may be null
long     atol(const char *);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:136:23: note: insert '_Nonnull' if the pointer should never be null
long     atol(const char *);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:139:20: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
         atoll(const char *);
                          ^
/usr/local/include/stdlib.h:139:20: note: insert '_Nullable' if the pointer may be null
         atoll(const char *);
                          ^
                           _Nullable
/usr/local/include/stdlib.h:139:20: note: insert '_Nonnull' if the pointer should never be null
         atoll(const char *);
                          ^
                           _Nonnull
/usr/local/include/stdlib.h:141:26: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                            ^
/usr/local/include/stdlib.h:141:26: note: insert '_Nullable' if the pointer may be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                            ^
                              _Nullable 
/usr/local/include/stdlib.h:141:26: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                            ^
                              _Nonnull 
/usr/local/include/stdlib.h:141:45: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                                               ^
/usr/local/include/stdlib.h:141:45: note: insert '_Nullable' if the pointer may be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                                               ^
                                                 _Nullable 
/usr/local/include/stdlib.h:141:45: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                                               ^
                                                 _Nonnull 
fatal error: too many errors emitted, stopping now [-ferror-limit=]
20 errors generated.
checked program was:
/* begin */
1: #include "ruby.h"
2: 
3: int main() {return 0;}
/* end */

"gcc -o conftest -I/Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/x86_64-darwin19 -I/Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/backward -I/Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0 -I. -I/usr/local/opt/mysql-client/include/mysql  -I/usr/local/opt/libyaml/include -I/usr/local/opt/libksba/include -I/usr/local/opt/readline/include -I/usr/local/opt/zlib/include -I/usr/local/opt/openssl@1.1/include -D_XOPEN_SOURCE -D_DARWIN_C_SOURCE -D_DARWIN_UNLIMITED_SELECT -D_REENTRANT   -O3 -ggdb3 -Wall -Wextra -Wdeprecated-declarations -Wdivision-by-zero -Wimplicit-function-declaration -Wimplicit-int -Wpointer-arith -Wshorten-64-to-32 -Wwrite-strings -Wmissing-noreturn -Wno-constant-logical-operand -Wno-long-long -Wno-missing-field-initializers -Wno-overlength-strings -Wno-parentheses-equality -Wno-self-assign -Wno-tautological-compare -Wno-unused-parameter -Wno-unused-value -Wunused-variable -Wextra-tokens  -fno-common -pipe -DFULL_SSL_MODE_SUPPORT conftest.c  -L. -L/Users/dileepkumar/.rvm/rubies/ruby-2.7.0/lib -L/usr/local/opt/libyaml/lib -L/usr/local/opt/libksba/lib -L/usr/local/opt/readline/lib -L/usr/local/opt/zlib/lib -L/usr/local/opt/openssl@1.1/lib -L. -fstack-protector-strong -L/usr/local/lib -L/usr/local/opt/libyaml/lib -L/usr/local/opt/libksba/lib -L/usr/local/opt/readline/lib -L/usr/local/opt/zlib/lib -L/usr/local/opt/openssl@1.1/lib    -L/usr/local/opt/mysql-client/lib -lmysqlclient -lssl -lcrypto  -lruby.2.7 -Werror -Wno-conditional-uninitialized  "
In file included from conftest.c:1:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby.h:33:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/ruby.h:29:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/defines.h:126:
In file included from /usr/local/include/stdio.h:64:
/usr/local/include/_stdio.h:93:16: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
        unsigned char   *_base;
                        ^
/usr/local/include/_stdio.h:93:16: note: insert '_Nullable' if the pointer may be null
        unsigned char   *_base;
                        ^
                          _Nullable 
/usr/local/include/_stdio.h:93:16: note: insert '_Nonnull' if the pointer should never be null
        unsigned char   *_base;
                        ^
                          _Nonnull 
/usr/local/include/_stdio.h:138:32: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
/usr/local/include/_stdio.h:138:32: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
                                           _Nullable
/usr/local/include/_stdio.h:138:32: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
                                           _Nonnull
/usr/local/include/_stdio.h:138:40: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
/usr/local/include/_stdio.h:138:40: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
                                                   _Nullable
/usr/local/include/_stdio.h:138:40: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
                                                   _Nonnull
/usr/local/include/_stdio.h:139:35: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
/usr/local/include/_stdio.h:139:35: note: insert '_Nullable' if the pointer may be null
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
                                           _Nullable
/usr/local/include/_stdio.h:139:35: note: insert '_Nonnull' if the pointer should never be null
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
                                           _Nonnull
/usr/local/include/_stdio.h:140:32: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
/usr/local/include/_stdio.h:140:32: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
                                           _Nullable
/usr/local/include/_stdio.h:140:32: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
                                           _Nonnull
/usr/local/include/_stdio.h:140:46: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
/usr/local/include/_stdio.h:140:46: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
                                                         _Nullable
/usr/local/include/_stdio.h:140:46: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
                                                         _Nonnull
/usr/local/include/_stdio.h:144:18: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
/usr/local/include/_stdio.h:144:18: note: insert '_Nullable' if the pointer may be null
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
                          _Nullable 
/usr/local/include/_stdio.h:144:18: note: insert '_Nonnull' if the pointer should never be null
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
                          _Nonnull 
In file included from conftest.c:1:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby.h:33:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/ruby.h:29:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/defines.h:126:
/usr/local/include/stdio.h:67:13: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
extern FILE *__stdinp;
            ^
/usr/local/include/stdio.h:67:13: note: insert '_Nullable' if the pointer may be null
extern FILE *__stdinp;
            ^
              _Nullable 
/usr/local/include/stdio.h:67:13: note: insert '_Nonnull' if the pointer should never be null
extern FILE *__stdinp;
            ^
              _Nonnull 
/usr/local/include/stdio.h:386:41: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
                 int (* _Nullable)(void *, const char *, int),
                                        ^
/usr/local/include/stdio.h:386:41: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *, const char *, int),
                                        ^
                                         _Nullable
/usr/local/include/stdio.h:386:41: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *, const char *, int),
                                        ^
                                         _Nonnull
/usr/local/include/stdio.h:386:55: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
/usr/local/include/stdio.h:386:55: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
                                                       _Nullable
/usr/local/include/stdio.h:386:55: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
                                                       _Nonnull
/usr/local/include/stdio.h:387:44: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
/usr/local/include/stdio.h:387:44: note: insert '_Nullable' if the pointer may be null
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
                                            _Nullable
/usr/local/include/stdio.h:387:44: note: insert '_Nonnull' if the pointer should never be null
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
                                            _Nonnull
/usr/local/include/stdio.h:388:41: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
                 int (* _Nullable)(void *));
                                        ^
/usr/local/include/stdio.h:388:41: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *));
                                        ^
                                         _Nullable
/usr/local/include/stdio.h:388:41: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *));
                                        ^
                                         _Nonnull
/usr/local/include/stdio.h:384:6: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
FILE    *funopen(const void *,
        ^
/usr/local/include/stdio.h:384:6: note: insert '_Nullable' if the pointer may be null
FILE    *funopen(const void *,
        ^
          _Nullable 
/usr/local/include/stdio.h:384:6: note: insert '_Nonnull' if the pointer should never be null
FILE    *funopen(const void *,
        ^
          _Nonnull 
In file included from conftest.c:1:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby.h:33:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/ruby.h:29:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/defines.h:134:
/usr/local/include/stdlib.h:134:25: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
double   atof(const char *);
                         ^
/usr/local/include/stdlib.h:134:25: note: insert '_Nullable' if the pointer may be null
double   atof(const char *);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:134:25: note: insert '_Nonnull' if the pointer should never be null
double   atof(const char *);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:135:22: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
int      atoi(const char *);
                         ^
/usr/local/include/stdlib.h:135:22: note: insert '_Nullable' if the pointer may be null
int      atoi(const char *);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:135:22: note: insert '_Nonnull' if the pointer should never be null
int      atoi(const char *);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:136:23: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
long     atol(const char *);
                         ^
/usr/local/include/stdlib.h:136:23: note: insert '_Nullable' if the pointer may be null
long     atol(const char *);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:136:23: note: insert '_Nonnull' if the pointer should never be null
long     atol(const char *);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:139:20: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
         atoll(const char *);
                          ^
/usr/local/include/stdlib.h:139:20: note: insert '_Nullable' if the pointer may be null
         atoll(const char *);
                          ^
                           _Nullable
/usr/local/include/stdlib.h:139:20: note: insert '_Nonnull' if the pointer should never be null
         atoll(const char *);
                          ^
                           _Nonnull
/usr/local/include/stdlib.h:141:26: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                            ^
/usr/local/include/stdlib.h:141:26: note: insert '_Nullable' if the pointer may be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                            ^
                              _Nullable 
/usr/local/include/stdlib.h:141:26: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                            ^
                              _Nonnull 
/usr/local/include/stdlib.h:141:45: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                                               ^
/usr/local/include/stdlib.h:141:45: note: insert '_Nullable' if the pointer may be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                                               ^
                                                 _Nullable 
/usr/local/include/stdlib.h:141:45: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                                               ^
                                                 _Nonnull 
fatal error: too many errors emitted, stopping now [-ferror-limit=]
20 errors generated.
checked program was:
/* begin */
1: #include "ruby.h"
2: 
3: int main() {return 0;}
/* end */

"gcc -o conftest -I/Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/x86_64-darwin19 -I/Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/backward -I/Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0 -I. -I/usr/local/opt/mysql-client/include/mysql  -I/usr/local/opt/libyaml/include -I/usr/local/opt/libksba/include -I/usr/local/opt/readline/include -I/usr/local/opt/zlib/include -I/usr/local/opt/openssl@1.1/include -D_XOPEN_SOURCE -D_DARWIN_C_SOURCE -D_DARWIN_UNLIMITED_SELECT -D_REENTRANT   -O3 -ggdb3 -Wall -Wextra -Wdeprecated-declarations -Wdivision-by-zero -Wimplicit-function-declaration -Wimplicit-int -Wpointer-arith -Wshorten-64-to-32 -Wwrite-strings -Wmissing-noreturn -Wno-constant-logical-operand -Wno-long-long -Wno-missing-field-initializers -Wno-overlength-strings -Wno-parentheses-equality -Wno-self-assign -Wno-tautological-compare -Wno-unused-parameter -Wno-unused-value -Wunused-variable -Wextra-tokens  -fno-common -pipe -DFULL_SSL_MODE_SUPPORT conftest.c  -L. -L/Users/dileepkumar/.rvm/rubies/ruby-2.7.0/lib -L/usr/local/opt/libyaml/lib -L/usr/local/opt/libksba/lib -L/usr/local/opt/readline/lib -L/usr/local/opt/zlib/lib -L/usr/local/opt/openssl@1.1/lib -L. -fstack-protector-strong -L/usr/local/lib -L/usr/local/opt/libyaml/lib -L/usr/local/opt/libksba/lib -L/usr/local/opt/readline/lib -L/usr/local/opt/zlib/lib -L/usr/local/opt/openssl@1.1/lib    -L/usr/local/opt/mysql-client/lib -lmysqlclient -lssl -lcrypto  -lruby.2.7 -Werror -Wno-covered-switch-default  "
In file included from conftest.c:1:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby.h:33:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/ruby.h:29:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/defines.h:126:
In file included from /usr/local/include/stdio.h:64:
/usr/local/include/_stdio.h:93:16: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
        unsigned char   *_base;
                        ^
/usr/local/include/_stdio.h:93:16: note: insert '_Nullable' if the pointer may be null
        unsigned char   *_base;
                        ^
                          _Nullable 
/usr/local/include/_stdio.h:93:16: note: insert '_Nonnull' if the pointer should never be null
        unsigned char   *_base;
                        ^
                          _Nonnull 
/usr/local/include/_stdio.h:138:32: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
/usr/local/include/_stdio.h:138:32: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
                                           _Nullable
/usr/local/include/_stdio.h:138:32: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
                                           _Nonnull
/usr/local/include/_stdio.h:138:40: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
/usr/local/include/_stdio.h:138:40: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
                                                   _Nullable
/usr/local/include/_stdio.h:138:40: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
                                                   _Nonnull
/usr/local/include/_stdio.h:139:35: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
/usr/local/include/_stdio.h:139:35: note: insert '_Nullable' if the pointer may be null
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
                                           _Nullable
/usr/local/include/_stdio.h:139:35: note: insert '_Nonnull' if the pointer should never be null
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
                                           _Nonnull
/usr/local/include/_stdio.h:140:32: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
/usr/local/include/_stdio.h:140:32: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
                                           _Nullable
/usr/local/include/_stdio.h:140:32: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
                                           _Nonnull
/usr/local/include/_stdio.h:140:46: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
/usr/local/include/_stdio.h:140:46: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
                                                         _Nullable
/usr/local/include/_stdio.h:140:46: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
                                                         _Nonnull
/usr/local/include/_stdio.h:144:18: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
/usr/local/include/_stdio.h:144:18: note: insert '_Nullable' if the pointer may be null
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
                          _Nullable 
/usr/local/include/_stdio.h:144:18: note: insert '_Nonnull' if the pointer should never be null
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
                          _Nonnull 
In file included from conftest.c:1:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby.h:33:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/ruby.h:29:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/defines.h:126:
/usr/local/include/stdio.h:67:13: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
extern FILE *__stdinp;
            ^
/usr/local/include/stdio.h:67:13: note: insert '_Nullable' if the pointer may be null
extern FILE *__stdinp;
            ^
              _Nullable 
/usr/local/include/stdio.h:67:13: note: insert '_Nonnull' if the pointer should never be null
extern FILE *__stdinp;
            ^
              _Nonnull 
/usr/local/include/stdio.h:386:41: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
                 int (* _Nullable)(void *, const char *, int),
                                        ^
/usr/local/include/stdio.h:386:41: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *, const char *, int),
                                        ^
                                         _Nullable
/usr/local/include/stdio.h:386:41: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *, const char *, int),
                                        ^
                                         _Nonnull
/usr/local/include/stdio.h:386:55: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
/usr/local/include/stdio.h:386:55: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
                                                       _Nullable
/usr/local/include/stdio.h:386:55: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
                                                       _Nonnull
/usr/local/include/stdio.h:387:44: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
/usr/local/include/stdio.h:387:44: note: insert '_Nullable' if the pointer may be null
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
                                            _Nullable
/usr/local/include/stdio.h:387:44: note: insert '_Nonnull' if the pointer should never be null
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
                                            _Nonnull
/usr/local/include/stdio.h:388:41: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
                 int (* _Nullable)(void *));
                                        ^
/usr/local/include/stdio.h:388:41: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *));
                                        ^
                                         _Nullable
/usr/local/include/stdio.h:388:41: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *));
                                        ^
                                         _Nonnull
/usr/local/include/stdio.h:384:6: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
FILE    *funopen(const void *,
        ^
/usr/local/include/stdio.h:384:6: note: insert '_Nullable' if the pointer may be null
FILE    *funopen(const void *,
        ^
          _Nullable 
/usr/local/include/stdio.h:384:6: note: insert '_Nonnull' if the pointer should never be null
FILE    *funopen(const void *,
        ^
          _Nonnull 
In file included from conftest.c:1:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby.h:33:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/ruby.h:29:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/defines.h:134:
/usr/local/include/stdlib.h:134:25: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
double   atof(const char *);
                         ^
/usr/local/include/stdlib.h:134:25: note: insert '_Nullable' if the pointer may be null
double   atof(const char *);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:134:25: note: insert '_Nonnull' if the pointer should never be null
double   atof(const char *);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:135:22: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
int      atoi(const char *);
                         ^
/usr/local/include/stdlib.h:135:22: note: insert '_Nullable' if the pointer may be null
int      atoi(const char *);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:135:22: note: insert '_Nonnull' if the pointer should never be null
int      atoi(const char *);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:136:23: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
long     atol(const char *);
                         ^
/usr/local/include/stdlib.h:136:23: note: insert '_Nullable' if the pointer may be null
long     atol(const char *);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:136:23: note: insert '_Nonnull' if the pointer should never be null
long     atol(const char *);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:139:20: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
         atoll(const char *);
                          ^
/usr/local/include/stdlib.h:139:20: note: insert '_Nullable' if the pointer may be null
         atoll(const char *);
                          ^
                           _Nullable
/usr/local/include/stdlib.h:139:20: note: insert '_Nonnull' if the pointer should never be null
         atoll(const char *);
                          ^
                           _Nonnull
/usr/local/include/stdlib.h:141:26: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                            ^
/usr/local/include/stdlib.h:141:26: note: insert '_Nullable' if the pointer may be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                            ^
                              _Nullable 
/usr/local/include/stdlib.h:141:26: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                            ^
                              _Nonnull 
/usr/local/include/stdlib.h:141:45: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                                               ^
/usr/local/include/stdlib.h:141:45: note: insert '_Nullable' if the pointer may be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                                               ^
                                                 _Nullable 
/usr/local/include/stdlib.h:141:45: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                                               ^
                                                 _Nonnull 
fatal error: too many errors emitted, stopping now [-ferror-limit=]
20 errors generated.
checked program was:
/* begin */
1: #include "ruby.h"
2: 
3: int main() {return 0;}
/* end */

"gcc -o conftest -I/Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/x86_64-darwin19 -I/Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/backward -I/Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0 -I. -I/usr/local/opt/mysql-client/include/mysql  -I/usr/local/opt/libyaml/include -I/usr/local/opt/libksba/include -I/usr/local/opt/readline/include -I/usr/local/opt/zlib/include -I/usr/local/opt/openssl@1.1/include -D_XOPEN_SOURCE -D_DARWIN_C_SOURCE -D_DARWIN_UNLIMITED_SELECT -D_REENTRANT   -O3 -ggdb3 -Wall -Wextra -Wdeprecated-declarations -Wdivision-by-zero -Wimplicit-function-declaration -Wimplicit-int -Wpointer-arith -Wshorten-64-to-32 -Wwrite-strings -Wmissing-noreturn -Wno-constant-logical-operand -Wno-long-long -Wno-missing-field-initializers -Wno-overlength-strings -Wno-parentheses-equality -Wno-self-assign -Wno-tautological-compare -Wno-unused-parameter -Wno-unused-value -Wunused-variable -Wextra-tokens  -fno-common -pipe -DFULL_SSL_MODE_SUPPORT conftest.c  -L. -L/Users/dileepkumar/.rvm/rubies/ruby-2.7.0/lib -L/usr/local/opt/libyaml/lib -L/usr/local/opt/libksba/lib -L/usr/local/opt/readline/lib -L/usr/local/opt/zlib/lib -L/usr/local/opt/openssl@1.1/lib -L. -fstack-protector-strong -L/usr/local/lib -L/usr/local/opt/libyaml/lib -L/usr/local/opt/libksba/lib -L/usr/local/opt/readline/lib -L/usr/local/opt/zlib/lib -L/usr/local/opt/openssl@1.1/lib    -L/usr/local/opt/mysql-client/lib -lmysqlclient -lssl -lcrypto  -lruby.2.7 -Werror -Wno-declaration-after-statement  "
In file included from conftest.c:1:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby.h:33:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/ruby.h:29:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/defines.h:126:
In file included from /usr/local/include/stdio.h:64:
/usr/local/include/_stdio.h:93:16: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
        unsigned char   *_base;
                        ^
/usr/local/include/_stdio.h:93:16: note: insert '_Nullable' if the pointer may be null
        unsigned char   *_base;
                        ^
                          _Nullable 
/usr/local/include/_stdio.h:93:16: note: insert '_Nonnull' if the pointer should never be null
        unsigned char   *_base;
                        ^
                          _Nonnull 
/usr/local/include/_stdio.h:138:32: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
/usr/local/include/_stdio.h:138:32: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
                                           _Nullable
/usr/local/include/_stdio.h:138:32: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
                                           _Nonnull
/usr/local/include/_stdio.h:138:40: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
/usr/local/include/_stdio.h:138:40: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
                                                   _Nullable
/usr/local/include/_stdio.h:138:40: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
                                                   _Nonnull
/usr/local/include/_stdio.h:139:35: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
/usr/local/include/_stdio.h:139:35: note: insert '_Nullable' if the pointer may be null
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
                                           _Nullable
/usr/local/include/_stdio.h:139:35: note: insert '_Nonnull' if the pointer should never be null
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
                                           _Nonnull
/usr/local/include/_stdio.h:140:32: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
/usr/local/include/_stdio.h:140:32: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
                                           _Nullable
/usr/local/include/_stdio.h:140:32: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
                                           _Nonnull
/usr/local/include/_stdio.h:140:46: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
/usr/local/include/_stdio.h:140:46: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
                                                         _Nullable
/usr/local/include/_stdio.h:140:46: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
                                                         _Nonnull
/usr/local/include/_stdio.h:144:18: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
/usr/local/include/_stdio.h:144:18: note: insert '_Nullable' if the pointer may be null
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
                          _Nullable 
/usr/local/include/_stdio.h:144:18: note: insert '_Nonnull' if the pointer should never be null
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
                          _Nonnull 
In file included from conftest.c:1:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby.h:33:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/ruby.h:29:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/defines.h:126:
/usr/local/include/stdio.h:67:13: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
extern FILE *__stdinp;
            ^
/usr/local/include/stdio.h:67:13: note: insert '_Nullable' if the pointer may be null
extern FILE *__stdinp;
            ^
              _Nullable 
/usr/local/include/stdio.h:67:13: note: insert '_Nonnull' if the pointer should never be null
extern FILE *__stdinp;
            ^
              _Nonnull 
/usr/local/include/stdio.h:386:41: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
                 int (* _Nullable)(void *, const char *, int),
                                        ^
/usr/local/include/stdio.h:386:41: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *, const char *, int),
                                        ^
                                         _Nullable
/usr/local/include/stdio.h:386:41: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *, const char *, int),
                                        ^
                                         _Nonnull
/usr/local/include/stdio.h:386:55: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
/usr/local/include/stdio.h:386:55: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
                                                       _Nullable
/usr/local/include/stdio.h:386:55: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
                                                       _Nonnull
/usr/local/include/stdio.h:387:44: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
/usr/local/include/stdio.h:387:44: note: insert '_Nullable' if the pointer may be null
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
                                            _Nullable
/usr/local/include/stdio.h:387:44: note: insert '_Nonnull' if the pointer should never be null
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
                                            _Nonnull
/usr/local/include/stdio.h:388:41: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
                 int (* _Nullable)(void *));
                                        ^
/usr/local/include/stdio.h:388:41: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *));
                                        ^
                                         _Nullable
/usr/local/include/stdio.h:388:41: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *));
                                        ^
                                         _Nonnull
/usr/local/include/stdio.h:384:6: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
FILE    *funopen(const void *,
        ^
/usr/local/include/stdio.h:384:6: note: insert '_Nullable' if the pointer may be null
FILE    *funopen(const void *,
        ^
          _Nullable 
/usr/local/include/stdio.h:384:6: note: insert '_Nonnull' if the pointer should never be null
FILE    *funopen(const void *,
        ^
          _Nonnull 
In file included from conftest.c:1:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby.h:33:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/ruby.h:29:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/defines.h:134:
/usr/local/include/stdlib.h:134:25: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
double   atof(const char *);
                         ^
/usr/local/include/stdlib.h:134:25: note: insert '_Nullable' if the pointer may be null
double   atof(const char *);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:134:25: note: insert '_Nonnull' if the pointer should never be null
double   atof(const char *);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:135:22: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
int      atoi(const char *);
                         ^
/usr/local/include/stdlib.h:135:22: note: insert '_Nullable' if the pointer may be null
int      atoi(const char *);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:135:22: note: insert '_Nonnull' if the pointer should never be null
int      atoi(const char *);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:136:23: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
long     atol(const char *);
                         ^
/usr/local/include/stdlib.h:136:23: note: insert '_Nullable' if the pointer may be null
long     atol(const char *);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:136:23: note: insert '_Nonnull' if the pointer should never be null
long     atol(const char *);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:139:20: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
         atoll(const char *);
                          ^
/usr/local/include/stdlib.h:139:20: note: insert '_Nullable' if the pointer may be null
         atoll(const char *);
                          ^
                           _Nullable
/usr/local/include/stdlib.h:139:20: note: insert '_Nonnull' if the pointer should never be null
         atoll(const char *);
                          ^
                           _Nonnull
/usr/local/include/stdlib.h:141:26: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                            ^
/usr/local/include/stdlib.h:141:26: note: insert '_Nullable' if the pointer may be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                            ^
                              _Nullable 
/usr/local/include/stdlib.h:141:26: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                            ^
                              _Nonnull 
/usr/local/include/stdlib.h:141:45: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                                               ^
/usr/local/include/stdlib.h:141:45: note: insert '_Nullable' if the pointer may be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                                               ^
                                                 _Nullable 
/usr/local/include/stdlib.h:141:45: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                                               ^
                                                 _Nonnull 
fatal error: too many errors emitted, stopping now [-ferror-limit=]
20 errors generated.
checked program was:
/* begin */
1: #include "ruby.h"
2: 
3: int main() {return 0;}
/* end */

"gcc -o conftest -I/Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/x86_64-darwin19 -I/Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/backward -I/Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0 -I. -I/usr/local/opt/mysql-client/include/mysql  -I/usr/local/opt/libyaml/include -I/usr/local/opt/libksba/include -I/usr/local/opt/readline/include -I/usr/local/opt/zlib/include -I/usr/local/opt/openssl@1.1/include -D_XOPEN_SOURCE -D_DARWIN_C_SOURCE -D_DARWIN_UNLIMITED_SELECT -D_REENTRANT   -O3 -ggdb3 -Wall -Wextra -Wdeprecated-declarations -Wdivision-by-zero -Wimplicit-function-declaration -Wimplicit-int -Wpointer-arith -Wshorten-64-to-32 -Wwrite-strings -Wmissing-noreturn -Wno-constant-logical-operand -Wno-long-long -Wno-missing-field-initializers -Wno-overlength-strings -Wno-parentheses-equality -Wno-self-assign -Wno-tautological-compare -Wno-unused-parameter -Wno-unused-value -Wunused-variable -Wextra-tokens  -fno-common -pipe -DFULL_SSL_MODE_SUPPORT conftest.c  -L. -L/Users/dileepkumar/.rvm/rubies/ruby-2.7.0/lib -L/usr/local/opt/libyaml/lib -L/usr/local/opt/libksba/lib -L/usr/local/opt/readline/lib -L/usr/local/opt/zlib/lib -L/usr/local/opt/openssl@1.1/lib -L. -fstack-protector-strong -L/usr/local/lib -L/usr/local/opt/libyaml/lib -L/usr/local/opt/libksba/lib -L/usr/local/opt/readline/lib -L/usr/local/opt/zlib/lib -L/usr/local/opt/openssl@1.1/lib    -L/usr/local/opt/mysql-client/lib -lmysqlclient -lssl -lcrypto  -lruby.2.7 -Werror -Wno-disabled-macro-expansion  "
In file included from conftest.c:1:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby.h:33:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/ruby.h:29:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/defines.h:126:
In file included from /usr/local/include/stdio.h:64:
/usr/local/include/_stdio.h:93:16: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
        unsigned char   *_base;
                        ^
/usr/local/include/_stdio.h:93:16: note: insert '_Nullable' if the pointer may be null
        unsigned char   *_base;
                        ^
                          _Nullable 
/usr/local/include/_stdio.h:93:16: note: insert '_Nonnull' if the pointer should never be null
        unsigned char   *_base;
                        ^
                          _Nonnull 
/usr/local/include/_stdio.h:138:32: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
/usr/local/include/_stdio.h:138:32: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
                                           _Nullable
/usr/local/include/_stdio.h:138:32: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
                                           _Nonnull
/usr/local/include/_stdio.h:138:40: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
/usr/local/include/_stdio.h:138:40: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
                                                   _Nullable
/usr/local/include/_stdio.h:138:40: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
                                                   _Nonnull
/usr/local/include/_stdio.h:139:35: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
/usr/local/include/_stdio.h:139:35: note: insert '_Nullable' if the pointer may be null
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
                                           _Nullable
/usr/local/include/_stdio.h:139:35: note: insert '_Nonnull' if the pointer should never be null
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
                                           _Nonnull
/usr/local/include/_stdio.h:140:32: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
/usr/local/include/_stdio.h:140:32: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
                                           _Nullable
/usr/local/include/_stdio.h:140:32: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
                                           _Nonnull
/usr/local/include/_stdio.h:140:46: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
/usr/local/include/_stdio.h:140:46: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
                                                         _Nullable
/usr/local/include/_stdio.h:140:46: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
                                                         _Nonnull
/usr/local/include/_stdio.h:144:18: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
/usr/local/include/_stdio.h:144:18: note: insert '_Nullable' if the pointer may be null
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
                          _Nullable 
/usr/local/include/_stdio.h:144:18: note: insert '_Nonnull' if the pointer should never be null
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
                          _Nonnull 
In file included from conftest.c:1:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby.h:33:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/ruby.h:29:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/defines.h:126:
/usr/local/include/stdio.h:67:13: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
extern FILE *__stdinp;
            ^
/usr/local/include/stdio.h:67:13: note: insert '_Nullable' if the pointer may be null
extern FILE *__stdinp;
            ^
              _Nullable 
/usr/local/include/stdio.h:67:13: note: insert '_Nonnull' if the pointer should never be null
extern FILE *__stdinp;
            ^
              _Nonnull 
/usr/local/include/stdio.h:386:41: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
                 int (* _Nullable)(void *, const char *, int),
                                        ^
/usr/local/include/stdio.h:386:41: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *, const char *, int),
                                        ^
                                         _Nullable
/usr/local/include/stdio.h:386:41: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *, const char *, int),
                                        ^
                                         _Nonnull
/usr/local/include/stdio.h:386:55: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
/usr/local/include/stdio.h:386:55: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
                                                       _Nullable
/usr/local/include/stdio.h:386:55: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
                                                       _Nonnull
/usr/local/include/stdio.h:387:44: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
/usr/local/include/stdio.h:387:44: note: insert '_Nullable' if the pointer may be null
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
                                            _Nullable
/usr/local/include/stdio.h:387:44: note: insert '_Nonnull' if the pointer should never be null
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
                                            _Nonnull
/usr/local/include/stdio.h:388:41: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
                 int (* _Nullable)(void *));
                                        ^
/usr/local/include/stdio.h:388:41: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *));
                                        ^
                                         _Nullable
/usr/local/include/stdio.h:388:41: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *));
                                        ^
                                         _Nonnull
/usr/local/include/stdio.h:384:6: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
FILE    *funopen(const void *,
        ^
/usr/local/include/stdio.h:384:6: note: insert '_Nullable' if the pointer may be null
FILE    *funopen(const void *,
        ^
          _Nullable 
/usr/local/include/stdio.h:384:6: note: insert '_Nonnull' if the pointer should never be null
FILE    *funopen(const void *,
        ^
          _Nonnull 
In file included from conftest.c:1:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby.h:33:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/ruby.h:29:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/defines.h:134:
/usr/local/include/stdlib.h:134:25: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
double   atof(const char *);
                         ^
/usr/local/include/stdlib.h:134:25: note: insert '_Nullable' if the pointer may be null
double   atof(const char *);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:134:25: note: insert '_Nonnull' if the pointer should never be null
double   atof(const char *);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:135:22: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
int      atoi(const char *);
                         ^
/usr/local/include/stdlib.h:135:22: note: insert '_Nullable' if the pointer may be null
int      atoi(const char *);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:135:22: note: insert '_Nonnull' if the pointer should never be null
int      atoi(const char *);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:136:23: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
long     atol(const char *);
                         ^
/usr/local/include/stdlib.h:136:23: note: insert '_Nullable' if the pointer may be null
long     atol(const char *);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:136:23: note: insert '_Nonnull' if the pointer should never be null
long     atol(const char *);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:139:20: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
         atoll(const char *);
                          ^
/usr/local/include/stdlib.h:139:20: note: insert '_Nullable' if the pointer may be null
         atoll(const char *);
                          ^
                           _Nullable
/usr/local/include/stdlib.h:139:20: note: insert '_Nonnull' if the pointer should never be null
         atoll(const char *);
                          ^
                           _Nonnull
/usr/local/include/stdlib.h:141:26: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                            ^
/usr/local/include/stdlib.h:141:26: note: insert '_Nullable' if the pointer may be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                            ^
                              _Nullable 
/usr/local/include/stdlib.h:141:26: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                            ^
                              _Nonnull 
/usr/local/include/stdlib.h:141:45: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                                               ^
/usr/local/include/stdlib.h:141:45: note: insert '_Nullable' if the pointer may be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                                               ^
                                                 _Nullable 
/usr/local/include/stdlib.h:141:45: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                                               ^
                                                 _Nonnull 
fatal error: too many errors emitted, stopping now [-ferror-limit=]
20 errors generated.
checked program was:
/* begin */
1: #include "ruby.h"
2: 
3: int main() {return 0;}
/* end */

"gcc -o conftest -I/Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/x86_64-darwin19 -I/Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/backward -I/Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0 -I. -I/usr/local/opt/mysql-client/include/mysql  -I/usr/local/opt/libyaml/include -I/usr/local/opt/libksba/include -I/usr/local/opt/readline/include -I/usr/local/opt/zlib/include -I/usr/local/opt/openssl@1.1/include -D_XOPEN_SOURCE -D_DARWIN_C_SOURCE -D_DARWIN_UNLIMITED_SELECT -D_REENTRANT   -O3 -ggdb3 -Wall -Wextra -Wdeprecated-declarations -Wdivision-by-zero -Wimplicit-function-declaration -Wimplicit-int -Wpointer-arith -Wshorten-64-to-32 -Wwrite-strings -Wmissing-noreturn -Wno-constant-logical-operand -Wno-long-long -Wno-missing-field-initializers -Wno-overlength-strings -Wno-parentheses-equality -Wno-self-assign -Wno-tautological-compare -Wno-unused-parameter -Wno-unused-value -Wunused-variable -Wextra-tokens  -fno-common -pipe -DFULL_SSL_MODE_SUPPORT conftest.c  -L. -L/Users/dileepkumar/.rvm/rubies/ruby-2.7.0/lib -L/usr/local/opt/libyaml/lib -L/usr/local/opt/libksba/lib -L/usr/local/opt/readline/lib -L/usr/local/opt/zlib/lib -L/usr/local/opt/openssl@1.1/lib -L. -fstack-protector-strong -L/usr/local/lib -L/usr/local/opt/libyaml/lib -L/usr/local/opt/libksba/lib -L/usr/local/opt/readline/lib -L/usr/local/opt/zlib/lib -L/usr/local/opt/openssl@1.1/lib    -L/usr/local/opt/mysql-client/lib -lmysqlclient -lssl -lcrypto  -lruby.2.7 -Werror -Wno-documentation-unknown-command  "
In file included from conftest.c:1:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby.h:33:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/ruby.h:29:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/defines.h:126:
In file included from /usr/local/include/stdio.h:64:
/usr/local/include/_stdio.h:93:16: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
        unsigned char   *_base;
                        ^
/usr/local/include/_stdio.h:93:16: note: insert '_Nullable' if the pointer may be null
        unsigned char   *_base;
                        ^
                          _Nullable 
/usr/local/include/_stdio.h:93:16: note: insert '_Nonnull' if the pointer should never be null
        unsigned char   *_base;
                        ^
                          _Nonnull 
/usr/local/include/_stdio.h:138:32: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
/usr/local/include/_stdio.h:138:32: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
                                           _Nullable
/usr/local/include/_stdio.h:138:32: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
                                           _Nonnull
/usr/local/include/_stdio.h:138:40: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
/usr/local/include/_stdio.h:138:40: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
                                                   _Nullable
/usr/local/include/_stdio.h:138:40: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
                                                   _Nonnull
/usr/local/include/_stdio.h:139:35: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
/usr/local/include/_stdio.h:139:35: note: insert '_Nullable' if the pointer may be null
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
                                           _Nullable
/usr/local/include/_stdio.h:139:35: note: insert '_Nonnull' if the pointer should never be null
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
                                           _Nonnull
/usr/local/include/_stdio.h:140:32: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
/usr/local/include/_stdio.h:140:32: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
                                           _Nullable
/usr/local/include/_stdio.h:140:32: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
                                           _Nonnull
/usr/local/include/_stdio.h:140:46: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
/usr/local/include/_stdio.h:140:46: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
                                                         _Nullable
/usr/local/include/_stdio.h:140:46: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
                                                         _Nonnull
/usr/local/include/_stdio.h:144:18: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
/usr/local/include/_stdio.h:144:18: note: insert '_Nullable' if the pointer may be null
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
                          _Nullable 
/usr/local/include/_stdio.h:144:18: note: insert '_Nonnull' if the pointer should never be null
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
                          _Nonnull 
In file included from conftest.c:1:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby.h:33:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/ruby.h:29:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/defines.h:126:
/usr/local/include/stdio.h:67:13: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
extern FILE *__stdinp;
            ^
/usr/local/include/stdio.h:67:13: note: insert '_Nullable' if the pointer may be null
extern FILE *__stdinp;
            ^
              _Nullable 
/usr/local/include/stdio.h:67:13: note: insert '_Nonnull' if the pointer should never be null
extern FILE *__stdinp;
            ^
              _Nonnull 
/usr/local/include/stdio.h:386:41: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
                 int (* _Nullable)(void *, const char *, int),
                                        ^
/usr/local/include/stdio.h:386:41: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *, const char *, int),
                                        ^
                                         _Nullable
/usr/local/include/stdio.h:386:41: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *, const char *, int),
                                        ^
                                         _Nonnull
/usr/local/include/stdio.h:386:55: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
/usr/local/include/stdio.h:386:55: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
                                                       _Nullable
/usr/local/include/stdio.h:386:55: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
                                                       _Nonnull
/usr/local/include/stdio.h:387:44: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
/usr/local/include/stdio.h:387:44: note: insert '_Nullable' if the pointer may be null
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
                                            _Nullable
/usr/local/include/stdio.h:387:44: note: insert '_Nonnull' if the pointer should never be null
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
                                            _Nonnull
/usr/local/include/stdio.h:388:41: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
                 int (* _Nullable)(void *));
                                        ^
/usr/local/include/stdio.h:388:41: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *));
                                        ^
                                         _Nullable
/usr/local/include/stdio.h:388:41: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *));
                                        ^
                                         _Nonnull
/usr/local/include/stdio.h:384:6: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
FILE    *funopen(const void *,
        ^
/usr/local/include/stdio.h:384:6: note: insert '_Nullable' if the pointer may be null
FILE    *funopen(const void *,
        ^
          _Nullable 
/usr/local/include/stdio.h:384:6: note: insert '_Nonnull' if the pointer should never be null
FILE    *funopen(const void *,
        ^
          _Nonnull 
In file included from conftest.c:1:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby.h:33:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/ruby.h:29:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/defines.h:134:
/usr/local/include/stdlib.h:134:25: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
double   atof(const char *);
                         ^
/usr/local/include/stdlib.h:134:25: note: insert '_Nullable' if the pointer may be null
double   atof(const char *);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:134:25: note: insert '_Nonnull' if the pointer should never be null
double   atof(const char *);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:135:22: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
int      atoi(const char *);
                         ^
/usr/local/include/stdlib.h:135:22: note: insert '_Nullable' if the pointer may be null
int      atoi(const char *);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:135:22: note: insert '_Nonnull' if the pointer should never be null
int      atoi(const char *);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:136:23: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
long     atol(const char *);
                         ^
/usr/local/include/stdlib.h:136:23: note: insert '_Nullable' if the pointer may be null
long     atol(const char *);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:136:23: note: insert '_Nonnull' if the pointer should never be null
long     atol(const char *);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:139:20: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
         atoll(const char *);
                          ^
/usr/local/include/stdlib.h:139:20: note: insert '_Nullable' if the pointer may be null
         atoll(const char *);
                          ^
                           _Nullable
/usr/local/include/stdlib.h:139:20: note: insert '_Nonnull' if the pointer should never be null
         atoll(const char *);
                          ^
                           _Nonnull
/usr/local/include/stdlib.h:141:26: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                            ^
/usr/local/include/stdlib.h:141:26: note: insert '_Nullable' if the pointer may be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                            ^
                              _Nullable 
/usr/local/include/stdlib.h:141:26: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                            ^
                              _Nonnull 
/usr/local/include/stdlib.h:141:45: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                                               ^
/usr/local/include/stdlib.h:141:45: note: insert '_Nullable' if the pointer may be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                                               ^
                                                 _Nullable 
/usr/local/include/stdlib.h:141:45: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                                               ^
                                                 _Nonnull 
fatal error: too many errors emitted, stopping now [-ferror-limit=]
20 errors generated.
checked program was:
/* begin */
1: #include "ruby.h"
2: 
3: int main() {return 0;}
/* end */

"gcc -o conftest -I/Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/x86_64-darwin19 -I/Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/backward -I/Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0 -I. -I/usr/local/opt/mysql-client/include/mysql  -I/usr/local/opt/libyaml/include -I/usr/local/opt/libksba/include -I/usr/local/opt/readline/include -I/usr/local/opt/zlib/include -I/usr/local/opt/openssl@1.1/include -D_XOPEN_SOURCE -D_DARWIN_C_SOURCE -D_DARWIN_UNLIMITED_SELECT -D_REENTRANT   -O3 -ggdb3 -Wall -Wextra -Wdeprecated-declarations -Wdivision-by-zero -Wimplicit-function-declaration -Wimplicit-int -Wpointer-arith -Wshorten-64-to-32 -Wwrite-strings -Wmissing-noreturn -Wno-constant-logical-operand -Wno-long-long -Wno-missing-field-initializers -Wno-overlength-strings -Wno-parentheses-equality -Wno-self-assign -Wno-tautological-compare -Wno-unused-parameter -Wno-unused-value -Wunused-variable -Wextra-tokens  -fno-common -pipe -DFULL_SSL_MODE_SUPPORT conftest.c  -L. -L/Users/dileepkumar/.rvm/rubies/ruby-2.7.0/lib -L/usr/local/opt/libyaml/lib -L/usr/local/opt/libksba/lib -L/usr/local/opt/readline/lib -L/usr/local/opt/zlib/lib -L/usr/local/opt/openssl@1.1/lib -L. -fstack-protector-strong -L/usr/local/lib -L/usr/local/opt/libyaml/lib -L/usr/local/opt/libksba/lib -L/usr/local/opt/readline/lib -L/usr/local/opt/zlib/lib -L/usr/local/opt/openssl@1.1/lib    -L/usr/local/opt/mysql-client/lib -lmysqlclient -lssl -lcrypto  -lruby.2.7 -Werror -Wno-missing-field-initializers  "
In file included from conftest.c:1:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby.h:33:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/ruby.h:29:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/defines.h:126:
In file included from /usr/local/include/stdio.h:64:
/usr/local/include/_stdio.h:93:16: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
        unsigned char   *_base;
                        ^
/usr/local/include/_stdio.h:93:16: note: insert '_Nullable' if the pointer may be null
        unsigned char   *_base;
                        ^
                          _Nullable 
/usr/local/include/_stdio.h:93:16: note: insert '_Nonnull' if the pointer should never be null
        unsigned char   *_base;
                        ^
                          _Nonnull 
/usr/local/include/_stdio.h:138:32: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
/usr/local/include/_stdio.h:138:32: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
                                           _Nullable
/usr/local/include/_stdio.h:138:32: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
                                           _Nonnull
/usr/local/include/_stdio.h:138:40: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
/usr/local/include/_stdio.h:138:40: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
                                                   _Nullable
/usr/local/include/_stdio.h:138:40: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
                                                   _Nonnull
/usr/local/include/_stdio.h:139:35: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
/usr/local/include/_stdio.h:139:35: note: insert '_Nullable' if the pointer may be null
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
                                           _Nullable
/usr/local/include/_stdio.h:139:35: note: insert '_Nonnull' if the pointer should never be null
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
                                           _Nonnull
/usr/local/include/_stdio.h:140:32: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
/usr/local/include/_stdio.h:140:32: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
                                           _Nullable
/usr/local/include/_stdio.h:140:32: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
                                           _Nonnull
/usr/local/include/_stdio.h:140:46: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
/usr/local/include/_stdio.h:140:46: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
                                                         _Nullable
/usr/local/include/_stdio.h:140:46: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
                                                         _Nonnull
/usr/local/include/_stdio.h:144:18: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
/usr/local/include/_stdio.h:144:18: note: insert '_Nullable' if the pointer may be null
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
                          _Nullable 
/usr/local/include/_stdio.h:144:18: note: insert '_Nonnull' if the pointer should never be null
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
                          _Nonnull 
In file included from conftest.c:1:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby.h:33:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/ruby.h:29:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/defines.h:126:
/usr/local/include/stdio.h:67:13: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
extern FILE *__stdinp;
            ^
/usr/local/include/stdio.h:67:13: note: insert '_Nullable' if the pointer may be null
extern FILE *__stdinp;
            ^
              _Nullable 
/usr/local/include/stdio.h:67:13: note: insert '_Nonnull' if the pointer should never be null
extern FILE *__stdinp;
            ^
              _Nonnull 
/usr/local/include/stdio.h:386:41: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
                 int (* _Nullable)(void *, const char *, int),
                                        ^
/usr/local/include/stdio.h:386:41: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *, const char *, int),
                                        ^
                                         _Nullable
/usr/local/include/stdio.h:386:41: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *, const char *, int),
                                        ^
                                         _Nonnull
/usr/local/include/stdio.h:386:55: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
/usr/local/include/stdio.h:386:55: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
                                                       _Nullable
/usr/local/include/stdio.h:386:55: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
                                                       _Nonnull
/usr/local/include/stdio.h:387:44: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
/usr/local/include/stdio.h:387:44: note: insert '_Nullable' if the pointer may be null
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
                                            _Nullable
/usr/local/include/stdio.h:387:44: note: insert '_Nonnull' if the pointer should never be null
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
                                            _Nonnull
/usr/local/include/stdio.h:388:41: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
                 int (* _Nullable)(void *));
                                        ^
/usr/local/include/stdio.h:388:41: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *));
                                        ^
                                         _Nullable
/usr/local/include/stdio.h:388:41: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *));
                                        ^
                                         _Nonnull
/usr/local/include/stdio.h:384:6: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
FILE    *funopen(const void *,
        ^
/usr/local/include/stdio.h:384:6: note: insert '_Nullable' if the pointer may be null
FILE    *funopen(const void *,
        ^
          _Nullable 
/usr/local/include/stdio.h:384:6: note: insert '_Nonnull' if the pointer should never be null
FILE    *funopen(const void *,
        ^
          _Nonnull 
In file included from conftest.c:1:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby.h:33:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/ruby.h:29:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/defines.h:134:
/usr/local/include/stdlib.h:134:25: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
double   atof(const char *);
                         ^
/usr/local/include/stdlib.h:134:25: note: insert '_Nullable' if the pointer may be null
double   atof(const char *);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:134:25: note: insert '_Nonnull' if the pointer should never be null
double   atof(const char *);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:135:22: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
int      atoi(const char *);
                         ^
/usr/local/include/stdlib.h:135:22: note: insert '_Nullable' if the pointer may be null
int      atoi(const char *);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:135:22: note: insert '_Nonnull' if the pointer should never be null
int      atoi(const char *);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:136:23: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
long     atol(const char *);
                         ^
/usr/local/include/stdlib.h:136:23: note: insert '_Nullable' if the pointer may be null
long     atol(const char *);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:136:23: note: insert '_Nonnull' if the pointer should never be null
long     atol(const char *);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:139:20: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
         atoll(const char *);
                          ^
/usr/local/include/stdlib.h:139:20: note: insert '_Nullable' if the pointer may be null
         atoll(const char *);
                          ^
                           _Nullable
/usr/local/include/stdlib.h:139:20: note: insert '_Nonnull' if the pointer should never be null
         atoll(const char *);
                          ^
                           _Nonnull
/usr/local/include/stdlib.h:141:26: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                            ^
/usr/local/include/stdlib.h:141:26: note: insert '_Nullable' if the pointer may be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                            ^
                              _Nullable 
/usr/local/include/stdlib.h:141:26: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                            ^
                              _Nonnull 
/usr/local/include/stdlib.h:141:45: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                                               ^
/usr/local/include/stdlib.h:141:45: note: insert '_Nullable' if the pointer may be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                                               ^
                                                 _Nullable 
/usr/local/include/stdlib.h:141:45: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                                               ^
                                                 _Nonnull 
fatal error: too many errors emitted, stopping now [-ferror-limit=]
20 errors generated.
checked program was:
/* begin */
1: #include "ruby.h"
2: 
3: int main() {return 0;}
/* end */

"gcc -o conftest -I/Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/x86_64-darwin19 -I/Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/backward -I/Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0 -I. -I/usr/local/opt/mysql-client/include/mysql  -I/usr/local/opt/libyaml/include -I/usr/local/opt/libksba/include -I/usr/local/opt/readline/include -I/usr/local/opt/zlib/include -I/usr/local/opt/openssl@1.1/include -D_XOPEN_SOURCE -D_DARWIN_C_SOURCE -D_DARWIN_UNLIMITED_SELECT -D_REENTRANT   -O3 -ggdb3 -Wall -Wextra -Wdeprecated-declarations -Wdivision-by-zero -Wimplicit-function-declaration -Wimplicit-int -Wpointer-arith -Wshorten-64-to-32 -Wwrite-strings -Wmissing-noreturn -Wno-constant-logical-operand -Wno-long-long -Wno-missing-field-initializers -Wno-overlength-strings -Wno-parentheses-equality -Wno-self-assign -Wno-tautological-compare -Wno-unused-parameter -Wno-unused-value -Wunused-variable -Wextra-tokens  -fno-common -pipe -DFULL_SSL_MODE_SUPPORT conftest.c  -L. -L/Users/dileepkumar/.rvm/rubies/ruby-2.7.0/lib -L/usr/local/opt/libyaml/lib -L/usr/local/opt/libksba/lib -L/usr/local/opt/readline/lib -L/usr/local/opt/zlib/lib -L/usr/local/opt/openssl@1.1/lib -L. -fstack-protector-strong -L/usr/local/lib -L/usr/local/opt/libyaml/lib -L/usr/local/opt/libksba/lib -L/usr/local/opt/readline/lib -L/usr/local/opt/zlib/lib -L/usr/local/opt/openssl@1.1/lib    -L/usr/local/opt/mysql-client/lib -lmysqlclient -lssl -lcrypto  -lruby.2.7 -Werror -Wno-missing-variable-declarations  "
In file included from conftest.c:1:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby.h:33:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/ruby.h:29:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/defines.h:126:
In file included from /usr/local/include/stdio.h:64:
/usr/local/include/_stdio.h:93:16: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
        unsigned char   *_base;
                        ^
/usr/local/include/_stdio.h:93:16: note: insert '_Nullable' if the pointer may be null
        unsigned char   *_base;
                        ^
                          _Nullable 
/usr/local/include/_stdio.h:93:16: note: insert '_Nonnull' if the pointer should never be null
        unsigned char   *_base;
                        ^
                          _Nonnull 
/usr/local/include/_stdio.h:138:32: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
/usr/local/include/_stdio.h:138:32: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
                                           _Nullable
/usr/local/include/_stdio.h:138:32: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
                                           _Nonnull
/usr/local/include/_stdio.h:138:40: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
/usr/local/include/_stdio.h:138:40: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
                                                   _Nullable
/usr/local/include/_stdio.h:138:40: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
                                                   _Nonnull
/usr/local/include/_stdio.h:139:35: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
/usr/local/include/_stdio.h:139:35: note: insert '_Nullable' if the pointer may be null
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
                                           _Nullable
/usr/local/include/_stdio.h:139:35: note: insert '_Nonnull' if the pointer should never be null
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
                                           _Nonnull
/usr/local/include/_stdio.h:140:32: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
/usr/local/include/_stdio.h:140:32: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
                                           _Nullable
/usr/local/include/_stdio.h:140:32: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
                                           _Nonnull
/usr/local/include/_stdio.h:140:46: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
/usr/local/include/_stdio.h:140:46: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
                                                         _Nullable
/usr/local/include/_stdio.h:140:46: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
                                                         _Nonnull
/usr/local/include/_stdio.h:144:18: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
/usr/local/include/_stdio.h:144:18: note: insert '_Nullable' if the pointer may be null
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
                          _Nullable 
/usr/local/include/_stdio.h:144:18: note: insert '_Nonnull' if the pointer should never be null
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
                          _Nonnull 
In file included from conftest.c:1:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby.h:33:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/ruby.h:29:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/defines.h:126:
/usr/local/include/stdio.h:67:13: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
extern FILE *__stdinp;
            ^
/usr/local/include/stdio.h:67:13: note: insert '_Nullable' if the pointer may be null
extern FILE *__stdinp;
            ^
              _Nullable 
/usr/local/include/stdio.h:67:13: note: insert '_Nonnull' if the pointer should never be null
extern FILE *__stdinp;
            ^
              _Nonnull 
/usr/local/include/stdio.h:386:41: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
                 int (* _Nullable)(void *, const char *, int),
                                        ^
/usr/local/include/stdio.h:386:41: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *, const char *, int),
                                        ^
                                         _Nullable
/usr/local/include/stdio.h:386:41: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *, const char *, int),
                                        ^
                                         _Nonnull
/usr/local/include/stdio.h:386:55: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
/usr/local/include/stdio.h:386:55: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
                                                       _Nullable
/usr/local/include/stdio.h:386:55: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
                                                       _Nonnull
/usr/local/include/stdio.h:387:44: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
/usr/local/include/stdio.h:387:44: note: insert '_Nullable' if the pointer may be null
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
                                            _Nullable
/usr/local/include/stdio.h:387:44: note: insert '_Nonnull' if the pointer should never be null
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
                                            _Nonnull
/usr/local/include/stdio.h:388:41: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
                 int (* _Nullable)(void *));
                                        ^
/usr/local/include/stdio.h:388:41: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *));
                                        ^
                                         _Nullable
/usr/local/include/stdio.h:388:41: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *));
                                        ^
                                         _Nonnull
/usr/local/include/stdio.h:384:6: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
FILE    *funopen(const void *,
        ^
/usr/local/include/stdio.h:384:6: note: insert '_Nullable' if the pointer may be null
FILE    *funopen(const void *,
        ^
          _Nullable 
/usr/local/include/stdio.h:384:6: note: insert '_Nonnull' if the pointer should never be null
FILE    *funopen(const void *,
        ^
          _Nonnull 
In file included from conftest.c:1:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby.h:33:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/ruby.h:29:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/defines.h:134:
/usr/local/include/stdlib.h:134:25: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
double   atof(const char *);
                         ^
/usr/local/include/stdlib.h:134:25: note: insert '_Nullable' if the pointer may be null
double   atof(const char *);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:134:25: note: insert '_Nonnull' if the pointer should never be null
double   atof(const char *);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:135:22: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
int      atoi(const char *);
                         ^
/usr/local/include/stdlib.h:135:22: note: insert '_Nullable' if the pointer may be null
int      atoi(const char *);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:135:22: note: insert '_Nonnull' if the pointer should never be null
int      atoi(const char *);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:136:23: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
long     atol(const char *);
                         ^
/usr/local/include/stdlib.h:136:23: note: insert '_Nullable' if the pointer may be null
long     atol(const char *);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:136:23: note: insert '_Nonnull' if the pointer should never be null
long     atol(const char *);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:139:20: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
         atoll(const char *);
                          ^
/usr/local/include/stdlib.h:139:20: note: insert '_Nullable' if the pointer may be null
         atoll(const char *);
                          ^
                           _Nullable
/usr/local/include/stdlib.h:139:20: note: insert '_Nonnull' if the pointer should never be null
         atoll(const char *);
                          ^
                           _Nonnull
/usr/local/include/stdlib.h:141:26: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                            ^
/usr/local/include/stdlib.h:141:26: note: insert '_Nullable' if the pointer may be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                            ^
                              _Nullable 
/usr/local/include/stdlib.h:141:26: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                            ^
                              _Nonnull 
/usr/local/include/stdlib.h:141:45: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                                               ^
/usr/local/include/stdlib.h:141:45: note: insert '_Nullable' if the pointer may be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                                               ^
                                                 _Nullable 
/usr/local/include/stdlib.h:141:45: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                                               ^
                                                 _Nonnull 
fatal error: too many errors emitted, stopping now [-ferror-limit=]
20 errors generated.
checked program was:
/* begin */
1: #include "ruby.h"
2: 
3: int main() {return 0;}
/* end */

"gcc -o conftest -I/Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/x86_64-darwin19 -I/Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/backward -I/Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0 -I. -I/usr/local/opt/mysql-client/include/mysql  -I/usr/local/opt/libyaml/include -I/usr/local/opt/libksba/include -I/usr/local/opt/readline/include -I/usr/local/opt/zlib/include -I/usr/local/opt/openssl@1.1/include -D_XOPEN_SOURCE -D_DARWIN_C_SOURCE -D_DARWIN_UNLIMITED_SELECT -D_REENTRANT   -O3 -ggdb3 -Wall -Wextra -Wdeprecated-declarations -Wdivision-by-zero -Wimplicit-function-declaration -Wimplicit-int -Wpointer-arith -Wshorten-64-to-32 -Wwrite-strings -Wmissing-noreturn -Wno-constant-logical-operand -Wno-long-long -Wno-missing-field-initializers -Wno-overlength-strings -Wno-parentheses-equality -Wno-self-assign -Wno-tautological-compare -Wno-unused-parameter -Wno-unused-value -Wunused-variable -Wextra-tokens  -fno-common -pipe -DFULL_SSL_MODE_SUPPORT conftest.c  -L. -L/Users/dileepkumar/.rvm/rubies/ruby-2.7.0/lib -L/usr/local/opt/libyaml/lib -L/usr/local/opt/libksba/lib -L/usr/local/opt/readline/lib -L/usr/local/opt/zlib/lib -L/usr/local/opt/openssl@1.1/lib -L. -fstack-protector-strong -L/usr/local/lib -L/usr/local/opt/libyaml/lib -L/usr/local/opt/libksba/lib -L/usr/local/opt/readline/lib -L/usr/local/opt/zlib/lib -L/usr/local/opt/openssl@1.1/lib    -L/usr/local/opt/mysql-client/lib -lmysqlclient -lssl -lcrypto  -lruby.2.7 -Werror -Wno-padded  "
In file included from conftest.c:1:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby.h:33:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/ruby.h:29:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/defines.h:126:
In file included from /usr/local/include/stdio.h:64:
/usr/local/include/_stdio.h:93:16: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
        unsigned char   *_base;
                        ^
/usr/local/include/_stdio.h:93:16: note: insert '_Nullable' if the pointer may be null
        unsigned char   *_base;
                        ^
                          _Nullable 
/usr/local/include/_stdio.h:93:16: note: insert '_Nonnull' if the pointer should never be null
        unsigned char   *_base;
                        ^
                          _Nonnull 
/usr/local/include/_stdio.h:138:32: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
/usr/local/include/_stdio.h:138:32: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
                                           _Nullable
/usr/local/include/_stdio.h:138:32: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
                                           _Nonnull
/usr/local/include/_stdio.h:138:40: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
/usr/local/include/_stdio.h:138:40: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
                                                   _Nullable
/usr/local/include/_stdio.h:138:40: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
                                                   _Nonnull
/usr/local/include/_stdio.h:139:35: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
/usr/local/include/_stdio.h:139:35: note: insert '_Nullable' if the pointer may be null
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
                                           _Nullable
/usr/local/include/_stdio.h:139:35: note: insert '_Nonnull' if the pointer should never be null
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
                                           _Nonnull
/usr/local/include/_stdio.h:140:32: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
/usr/local/include/_stdio.h:140:32: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
                                           _Nullable
/usr/local/include/_stdio.h:140:32: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
                                           _Nonnull
/usr/local/include/_stdio.h:140:46: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
/usr/local/include/_stdio.h:140:46: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
                                                         _Nullable
/usr/local/include/_stdio.h:140:46: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
                                                         _Nonnull
/usr/local/include/_stdio.h:144:18: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
/usr/local/include/_stdio.h:144:18: note: insert '_Nullable' if the pointer may be null
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
                          _Nullable 
/usr/local/include/_stdio.h:144:18: note: insert '_Nonnull' if the pointer should never be null
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
                          _Nonnull 
In file included from conftest.c:1:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby.h:33:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/ruby.h:29:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/defines.h:126:
/usr/local/include/stdio.h:67:13: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
extern FILE *__stdinp;
            ^
/usr/local/include/stdio.h:67:13: note: insert '_Nullable' if the pointer may be null
extern FILE *__stdinp;
            ^
              _Nullable 
/usr/local/include/stdio.h:67:13: note: insert '_Nonnull' if the pointer should never be null
extern FILE *__stdinp;
            ^
              _Nonnull 
/usr/local/include/stdio.h:386:41: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
                 int (* _Nullable)(void *, const char *, int),
                                        ^
/usr/local/include/stdio.h:386:41: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *, const char *, int),
                                        ^
                                         _Nullable
/usr/local/include/stdio.h:386:41: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *, const char *, int),
                                        ^
                                         _Nonnull
/usr/local/include/stdio.h:386:55: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
/usr/local/include/stdio.h:386:55: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
                                                       _Nullable
/usr/local/include/stdio.h:386:55: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
                                                       _Nonnull
/usr/local/include/stdio.h:387:44: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
/usr/local/include/stdio.h:387:44: note: insert '_Nullable' if the pointer may be null
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
                                            _Nullable
/usr/local/include/stdio.h:387:44: note: insert '_Nonnull' if the pointer should never be null
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
                                            _Nonnull
/usr/local/include/stdio.h:388:41: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
                 int (* _Nullable)(void *));
                                        ^
/usr/local/include/stdio.h:388:41: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *));
                                        ^
                                         _Nullable
/usr/local/include/stdio.h:388:41: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *));
                                        ^
                                         _Nonnull
/usr/local/include/stdio.h:384:6: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
FILE    *funopen(const void *,
        ^
/usr/local/include/stdio.h:384:6: note: insert '_Nullable' if the pointer may be null
FILE    *funopen(const void *,
        ^
          _Nullable 
/usr/local/include/stdio.h:384:6: note: insert '_Nonnull' if the pointer should never be null
FILE    *funopen(const void *,
        ^
          _Nonnull 
In file included from conftest.c:1:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby.h:33:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/ruby.h:29:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/defines.h:134:
/usr/local/include/stdlib.h:134:25: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
double   atof(const char *);
                         ^
/usr/local/include/stdlib.h:134:25: note: insert '_Nullable' if the pointer may be null
double   atof(const char *);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:134:25: note: insert '_Nonnull' if the pointer should never be null
double   atof(const char *);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:135:22: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
int      atoi(const char *);
                         ^
/usr/local/include/stdlib.h:135:22: note: insert '_Nullable' if the pointer may be null
int      atoi(const char *);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:135:22: note: insert '_Nonnull' if the pointer should never be null
int      atoi(const char *);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:136:23: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
long     atol(const char *);
                         ^
/usr/local/include/stdlib.h:136:23: note: insert '_Nullable' if the pointer may be null
long     atol(const char *);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:136:23: note: insert '_Nonnull' if the pointer should never be null
long     atol(const char *);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:139:20: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
         atoll(const char *);
                          ^
/usr/local/include/stdlib.h:139:20: note: insert '_Nullable' if the pointer may be null
         atoll(const char *);
                          ^
                           _Nullable
/usr/local/include/stdlib.h:139:20: note: insert '_Nonnull' if the pointer should never be null
         atoll(const char *);
                          ^
                           _Nonnull
/usr/local/include/stdlib.h:141:26: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                            ^
/usr/local/include/stdlib.h:141:26: note: insert '_Nullable' if the pointer may be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                            ^
                              _Nullable 
/usr/local/include/stdlib.h:141:26: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                            ^
                              _Nonnull 
/usr/local/include/stdlib.h:141:45: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                                               ^
/usr/local/include/stdlib.h:141:45: note: insert '_Nullable' if the pointer may be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                                               ^
                                                 _Nullable 
/usr/local/include/stdlib.h:141:45: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                                               ^
                                                 _Nonnull 
fatal error: too many errors emitted, stopping now [-ferror-limit=]
20 errors generated.
checked program was:
/* begin */
1: #include "ruby.h"
2: 
3: int main() {return 0;}
/* end */

"gcc -o conftest -I/Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/x86_64-darwin19 -I/Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/backward -I/Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0 -I. -I/usr/local/opt/mysql-client/include/mysql  -I/usr/local/opt/libyaml/include -I/usr/local/opt/libksba/include -I/usr/local/opt/readline/include -I/usr/local/opt/zlib/include -I/usr/local/opt/openssl@1.1/include -D_XOPEN_SOURCE -D_DARWIN_C_SOURCE -D_DARWIN_UNLIMITED_SELECT -D_REENTRANT   -O3 -ggdb3 -Wall -Wextra -Wdeprecated-declarations -Wdivision-by-zero -Wimplicit-function-declaration -Wimplicit-int -Wpointer-arith -Wshorten-64-to-32 -Wwrite-strings -Wmissing-noreturn -Wno-constant-logical-operand -Wno-long-long -Wno-missing-field-initializers -Wno-overlength-strings -Wno-parentheses-equality -Wno-self-assign -Wno-tautological-compare -Wno-unused-parameter -Wno-unused-value -Wunused-variable -Wextra-tokens  -fno-common -pipe -DFULL_SSL_MODE_SUPPORT conftest.c  -L. -L/Users/dileepkumar/.rvm/rubies/ruby-2.7.0/lib -L/usr/local/opt/libyaml/lib -L/usr/local/opt/libksba/lib -L/usr/local/opt/readline/lib -L/usr/local/opt/zlib/lib -L/usr/local/opt/openssl@1.1/lib -L. -fstack-protector-strong -L/usr/local/lib -L/usr/local/opt/libyaml/lib -L/usr/local/opt/libksba/lib -L/usr/local/opt/readline/lib -L/usr/local/opt/zlib/lib -L/usr/local/opt/openssl@1.1/lib    -L/usr/local/opt/mysql-client/lib -lmysqlclient -lssl -lcrypto  -lruby.2.7 -Werror -Wno-reserved-id-macro  "
In file included from conftest.c:1:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby.h:33:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/ruby.h:29:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/defines.h:126:
In file included from /usr/local/include/stdio.h:64:
/usr/local/include/_stdio.h:93:16: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
        unsigned char   *_base;
                        ^
/usr/local/include/_stdio.h:93:16: note: insert '_Nullable' if the pointer may be null
        unsigned char   *_base;
                        ^
                          _Nullable 
/usr/local/include/_stdio.h:93:16: note: insert '_Nonnull' if the pointer should never be null
        unsigned char   *_base;
                        ^
                          _Nonnull 
/usr/local/include/_stdio.h:138:32: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
/usr/local/include/_stdio.h:138:32: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
                                           _Nullable
/usr/local/include/_stdio.h:138:32: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
                                           _Nonnull
/usr/local/include/_stdio.h:138:40: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
/usr/local/include/_stdio.h:138:40: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
                                                   _Nullable
/usr/local/include/_stdio.h:138:40: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
                                                   _Nonnull
/usr/local/include/_stdio.h:139:35: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
/usr/local/include/_stdio.h:139:35: note: insert '_Nullable' if the pointer may be null
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
                                           _Nullable
/usr/local/include/_stdio.h:139:35: note: insert '_Nonnull' if the pointer should never be null
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
                                           _Nonnull
/usr/local/include/_stdio.h:140:32: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
/usr/local/include/_stdio.h:140:32: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
                                           _Nullable
/usr/local/include/_stdio.h:140:32: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
                                           _Nonnull
/usr/local/include/_stdio.h:140:46: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
/usr/local/include/_stdio.h:140:46: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
                                                         _Nullable
/usr/local/include/_stdio.h:140:46: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
                                                         _Nonnull
/usr/local/include/_stdio.h:144:18: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
/usr/local/include/_stdio.h:144:18: note: insert '_Nullable' if the pointer may be null
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
                          _Nullable 
/usr/local/include/_stdio.h:144:18: note: insert '_Nonnull' if the pointer should never be null
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
                          _Nonnull 
In file included from conftest.c:1:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby.h:33:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/ruby.h:29:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/defines.h:126:
/usr/local/include/stdio.h:67:13: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
extern FILE *__stdinp;
            ^
/usr/local/include/stdio.h:67:13: note: insert '_Nullable' if the pointer may be null
extern FILE *__stdinp;
            ^
              _Nullable 
/usr/local/include/stdio.h:67:13: note: insert '_Nonnull' if the pointer should never be null
extern FILE *__stdinp;
            ^
              _Nonnull 
/usr/local/include/stdio.h:386:41: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
                 int (* _Nullable)(void *, const char *, int),
                                        ^
/usr/local/include/stdio.h:386:41: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *, const char *, int),
                                        ^
                                         _Nullable
/usr/local/include/stdio.h:386:41: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *, const char *, int),
                                        ^
                                         _Nonnull
/usr/local/include/stdio.h:386:55: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
/usr/local/include/stdio.h:386:55: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
                                                       _Nullable
/usr/local/include/stdio.h:386:55: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
                                                       _Nonnull
/usr/local/include/stdio.h:387:44: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
/usr/local/include/stdio.h:387:44: note: insert '_Nullable' if the pointer may be null
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
                                            _Nullable
/usr/local/include/stdio.h:387:44: note: insert '_Nonnull' if the pointer should never be null
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
                                            _Nonnull
/usr/local/include/stdio.h:388:41: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
                 int (* _Nullable)(void *));
                                        ^
/usr/local/include/stdio.h:388:41: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *));
                                        ^
                                         _Nullable
/usr/local/include/stdio.h:388:41: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *));
                                        ^
                                         _Nonnull
/usr/local/include/stdio.h:384:6: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
FILE    *funopen(const void *,
        ^
/usr/local/include/stdio.h:384:6: note: insert '_Nullable' if the pointer may be null
FILE    *funopen(const void *,
        ^
          _Nullable 
/usr/local/include/stdio.h:384:6: note: insert '_Nonnull' if the pointer should never be null
FILE    *funopen(const void *,
        ^
          _Nonnull 
In file included from conftest.c:1:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby.h:33:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/ruby.h:29:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/defines.h:134:
/usr/local/include/stdlib.h:134:25: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
double   atof(const char *);
                         ^
/usr/local/include/stdlib.h:134:25: note: insert '_Nullable' if the pointer may be null
double   atof(const char *);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:134:25: note: insert '_Nonnull' if the pointer should never be null
double   atof(const char *);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:135:22: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
int      atoi(const char *);
                         ^
/usr/local/include/stdlib.h:135:22: note: insert '_Nullable' if the pointer may be null
int      atoi(const char *);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:135:22: note: insert '_Nonnull' if the pointer should never be null
int      atoi(const char *);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:136:23: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
long     atol(const char *);
                         ^
/usr/local/include/stdlib.h:136:23: note: insert '_Nullable' if the pointer may be null
long     atol(const char *);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:136:23: note: insert '_Nonnull' if the pointer should never be null
long     atol(const char *);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:139:20: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
         atoll(const char *);
                          ^
/usr/local/include/stdlib.h:139:20: note: insert '_Nullable' if the pointer may be null
         atoll(const char *);
                          ^
                           _Nullable
/usr/local/include/stdlib.h:139:20: note: insert '_Nonnull' if the pointer should never be null
         atoll(const char *);
                          ^
                           _Nonnull
/usr/local/include/stdlib.h:141:26: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                            ^
/usr/local/include/stdlib.h:141:26: note: insert '_Nullable' if the pointer may be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                            ^
                              _Nullable 
/usr/local/include/stdlib.h:141:26: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                            ^
                              _Nonnull 
/usr/local/include/stdlib.h:141:45: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                                               ^
/usr/local/include/stdlib.h:141:45: note: insert '_Nullable' if the pointer may be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                                               ^
                                                 _Nullable 
/usr/local/include/stdlib.h:141:45: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                                               ^
                                                 _Nonnull 
fatal error: too many errors emitted, stopping now [-ferror-limit=]
20 errors generated.
checked program was:
/* begin */
1: #include "ruby.h"
2: 
3: int main() {return 0;}
/* end */

"gcc -o conftest -I/Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/x86_64-darwin19 -I/Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/backward -I/Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0 -I. -I/usr/local/opt/mysql-client/include/mysql  -I/usr/local/opt/libyaml/include -I/usr/local/opt/libksba/include -I/usr/local/opt/readline/include -I/usr/local/opt/zlib/include -I/usr/local/opt/openssl@1.1/include -D_XOPEN_SOURCE -D_DARWIN_C_SOURCE -D_DARWIN_UNLIMITED_SELECT -D_REENTRANT   -O3 -ggdb3 -Wall -Wextra -Wdeprecated-declarations -Wdivision-by-zero -Wimplicit-function-declaration -Wimplicit-int -Wpointer-arith -Wshorten-64-to-32 -Wwrite-strings -Wmissing-noreturn -Wno-constant-logical-operand -Wno-long-long -Wno-missing-field-initializers -Wno-overlength-strings -Wno-parentheses-equality -Wno-self-assign -Wno-tautological-compare -Wno-unused-parameter -Wno-unused-value -Wunused-variable -Wextra-tokens  -fno-common -pipe -DFULL_SSL_MODE_SUPPORT conftest.c  -L. -L/Users/dileepkumar/.rvm/rubies/ruby-2.7.0/lib -L/usr/local/opt/libyaml/lib -L/usr/local/opt/libksba/lib -L/usr/local/opt/readline/lib -L/usr/local/opt/zlib/lib -L/usr/local/opt/openssl@1.1/lib -L. -fstack-protector-strong -L/usr/local/lib -L/usr/local/opt/libyaml/lib -L/usr/local/opt/libksba/lib -L/usr/local/opt/readline/lib -L/usr/local/opt/zlib/lib -L/usr/local/opt/openssl@1.1/lib    -L/usr/local/opt/mysql-client/lib -lmysqlclient -lssl -lcrypto  -lruby.2.7 -Werror -Wno-sign-conversion  "
In file included from conftest.c:1:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby.h:33:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/ruby.h:29:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/defines.h:126:
In file included from /usr/local/include/stdio.h:64:
/usr/local/include/_stdio.h:93:16: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
        unsigned char   *_base;
                        ^
/usr/local/include/_stdio.h:93:16: note: insert '_Nullable' if the pointer may be null
        unsigned char   *_base;
                        ^
                          _Nullable 
/usr/local/include/_stdio.h:93:16: note: insert '_Nonnull' if the pointer should never be null
        unsigned char   *_base;
                        ^
                          _Nonnull 
/usr/local/include/_stdio.h:138:32: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
/usr/local/include/_stdio.h:138:32: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
                                           _Nullable
/usr/local/include/_stdio.h:138:32: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
                                           _Nonnull
/usr/local/include/_stdio.h:138:40: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
/usr/local/include/_stdio.h:138:40: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
                                                   _Nullable
/usr/local/include/_stdio.h:138:40: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
                                                   _Nonnull
/usr/local/include/_stdio.h:139:35: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
/usr/local/include/_stdio.h:139:35: note: insert '_Nullable' if the pointer may be null
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
                                           _Nullable
/usr/local/include/_stdio.h:139:35: note: insert '_Nonnull' if the pointer should never be null
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
                                           _Nonnull
/usr/local/include/_stdio.h:140:32: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
/usr/local/include/_stdio.h:140:32: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
                                           _Nullable
/usr/local/include/_stdio.h:140:32: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
                                           _Nonnull
/usr/local/include/_stdio.h:140:46: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
/usr/local/include/_stdio.h:140:46: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
                                                         _Nullable
/usr/local/include/_stdio.h:140:46: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
                                                         _Nonnull
/usr/local/include/_stdio.h:144:18: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
/usr/local/include/_stdio.h:144:18: note: insert '_Nullable' if the pointer may be null
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
                          _Nullable 
/usr/local/include/_stdio.h:144:18: note: insert '_Nonnull' if the pointer should never be null
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
                          _Nonnull 
In file included from conftest.c:1:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby.h:33:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/ruby.h:29:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/defines.h:126:
/usr/local/include/stdio.h:67:13: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
extern FILE *__stdinp;
            ^
/usr/local/include/stdio.h:67:13: note: insert '_Nullable' if the pointer may be null
extern FILE *__stdinp;
            ^
              _Nullable 
/usr/local/include/stdio.h:67:13: note: insert '_Nonnull' if the pointer should never be null
extern FILE *__stdinp;
            ^
              _Nonnull 
/usr/local/include/stdio.h:386:41: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
                 int (* _Nullable)(void *, const char *, int),
                                        ^
/usr/local/include/stdio.h:386:41: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *, const char *, int),
                                        ^
                                         _Nullable
/usr/local/include/stdio.h:386:41: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *, const char *, int),
                                        ^
                                         _Nonnull
/usr/local/include/stdio.h:386:55: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
/usr/local/include/stdio.h:386:55: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
                                                       _Nullable
/usr/local/include/stdio.h:386:55: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
                                                       _Nonnull
/usr/local/include/stdio.h:387:44: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
/usr/local/include/stdio.h:387:44: note: insert '_Nullable' if the pointer may be null
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
                                            _Nullable
/usr/local/include/stdio.h:387:44: note: insert '_Nonnull' if the pointer should never be null
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
                                            _Nonnull
/usr/local/include/stdio.h:388:41: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
                 int (* _Nullable)(void *));
                                        ^
/usr/local/include/stdio.h:388:41: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *));
                                        ^
                                         _Nullable
/usr/local/include/stdio.h:388:41: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *));
                                        ^
                                         _Nonnull
/usr/local/include/stdio.h:384:6: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
FILE    *funopen(const void *,
        ^
/usr/local/include/stdio.h:384:6: note: insert '_Nullable' if the pointer may be null
FILE    *funopen(const void *,
        ^
          _Nullable 
/usr/local/include/stdio.h:384:6: note: insert '_Nonnull' if the pointer should never be null
FILE    *funopen(const void *,
        ^
          _Nonnull 
In file included from conftest.c:1:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby.h:33:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/ruby.h:29:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/defines.h:134:
/usr/local/include/stdlib.h:134:25: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
double   atof(const char *);
                         ^
/usr/local/include/stdlib.h:134:25: note: insert '_Nullable' if the pointer may be null
double   atof(const char *);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:134:25: note: insert '_Nonnull' if the pointer should never be null
double   atof(const char *);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:135:22: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
int      atoi(const char *);
                         ^
/usr/local/include/stdlib.h:135:22: note: insert '_Nullable' if the pointer may be null
int      atoi(const char *);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:135:22: note: insert '_Nonnull' if the pointer should never be null
int      atoi(const char *);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:136:23: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
long     atol(const char *);
                         ^
/usr/local/include/stdlib.h:136:23: note: insert '_Nullable' if the pointer may be null
long     atol(const char *);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:136:23: note: insert '_Nonnull' if the pointer should never be null
long     atol(const char *);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:139:20: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
         atoll(const char *);
                          ^
/usr/local/include/stdlib.h:139:20: note: insert '_Nullable' if the pointer may be null
         atoll(const char *);
                          ^
                           _Nullable
/usr/local/include/stdlib.h:139:20: note: insert '_Nonnull' if the pointer should never be null
         atoll(const char *);
                          ^
                           _Nonnull
/usr/local/include/stdlib.h:141:26: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                            ^
/usr/local/include/stdlib.h:141:26: note: insert '_Nullable' if the pointer may be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                            ^
                              _Nullable 
/usr/local/include/stdlib.h:141:26: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                            ^
                              _Nonnull 
/usr/local/include/stdlib.h:141:45: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                                               ^
/usr/local/include/stdlib.h:141:45: note: insert '_Nullable' if the pointer may be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                                               ^
                                                 _Nullable 
/usr/local/include/stdlib.h:141:45: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                                               ^
                                                 _Nonnull 
fatal error: too many errors emitted, stopping now [-ferror-limit=]
20 errors generated.
checked program was:
/* begin */
1: #include "ruby.h"
2: 
3: int main() {return 0;}
/* end */

"gcc -o conftest -I/Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/x86_64-darwin19 -I/Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/backward -I/Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0 -I. -I/usr/local/opt/mysql-client/include/mysql  -I/usr/local/opt/libyaml/include -I/usr/local/opt/libksba/include -I/usr/local/opt/readline/include -I/usr/local/opt/zlib/include -I/usr/local/opt/openssl@1.1/include -D_XOPEN_SOURCE -D_DARWIN_C_SOURCE -D_DARWIN_UNLIMITED_SELECT -D_REENTRANT   -O3 -ggdb3 -Wall -Wextra -Wdeprecated-declarations -Wdivision-by-zero -Wimplicit-function-declaration -Wimplicit-int -Wpointer-arith -Wshorten-64-to-32 -Wwrite-strings -Wmissing-noreturn -Wno-constant-logical-operand -Wno-long-long -Wno-missing-field-initializers -Wno-overlength-strings -Wno-parentheses-equality -Wno-self-assign -Wno-tautological-compare -Wno-unused-parameter -Wno-unused-value -Wunused-variable -Wextra-tokens  -fno-common -pipe -DFULL_SSL_MODE_SUPPORT conftest.c  -L. -L/Users/dileepkumar/.rvm/rubies/ruby-2.7.0/lib -L/usr/local/opt/libyaml/lib -L/usr/local/opt/libksba/lib -L/usr/local/opt/readline/lib -L/usr/local/opt/zlib/lib -L/usr/local/opt/openssl@1.1/lib -L. -fstack-protector-strong -L/usr/local/lib -L/usr/local/opt/libyaml/lib -L/usr/local/opt/libksba/lib -L/usr/local/opt/readline/lib -L/usr/local/opt/zlib/lib -L/usr/local/opt/openssl@1.1/lib    -L/usr/local/opt/mysql-client/lib -lmysqlclient -lssl -lcrypto  -lruby.2.7 -Werror -Wno-static-in-inline  "
In file included from conftest.c:1:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby.h:33:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/ruby.h:29:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/defines.h:126:
In file included from /usr/local/include/stdio.h:64:
/usr/local/include/_stdio.h:93:16: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
        unsigned char   *_base;
                        ^
/usr/local/include/_stdio.h:93:16: note: insert '_Nullable' if the pointer may be null
        unsigned char   *_base;
                        ^
                          _Nullable 
/usr/local/include/_stdio.h:93:16: note: insert '_Nonnull' if the pointer should never be null
        unsigned char   *_base;
                        ^
                          _Nonnull 
/usr/local/include/_stdio.h:138:32: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
/usr/local/include/_stdio.h:138:32: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
                                           _Nullable
/usr/local/include/_stdio.h:138:32: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
                                           _Nonnull
/usr/local/include/_stdio.h:138:40: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
/usr/local/include/_stdio.h:138:40: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
                                                   _Nullable
/usr/local/include/_stdio.h:138:40: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
                                                   _Nonnull
/usr/local/include/_stdio.h:139:35: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
/usr/local/include/_stdio.h:139:35: note: insert '_Nullable' if the pointer may be null
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
                                           _Nullable
/usr/local/include/_stdio.h:139:35: note: insert '_Nonnull' if the pointer should never be null
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
                                           _Nonnull
/usr/local/include/_stdio.h:140:32: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
/usr/local/include/_stdio.h:140:32: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
                                           _Nullable
/usr/local/include/_stdio.h:140:32: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
                                           _Nonnull
/usr/local/include/_stdio.h:140:46: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
/usr/local/include/_stdio.h:140:46: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
                                                         _Nullable
/usr/local/include/_stdio.h:140:46: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
                                                         _Nonnull
/usr/local/include/_stdio.h:144:18: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
/usr/local/include/_stdio.h:144:18: note: insert '_Nullable' if the pointer may be null
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
                          _Nullable 
/usr/local/include/_stdio.h:144:18: note: insert '_Nonnull' if the pointer should never be null
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
                          _Nonnull 
In file included from conftest.c:1:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby.h:33:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/ruby.h:29:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/defines.h:126:
/usr/local/include/stdio.h:67:13: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
extern FILE *__stdinp;
            ^
/usr/local/include/stdio.h:67:13: note: insert '_Nullable' if the pointer may be null
extern FILE *__stdinp;
            ^
              _Nullable 
/usr/local/include/stdio.h:67:13: note: insert '_Nonnull' if the pointer should never be null
extern FILE *__stdinp;
            ^
              _Nonnull 
/usr/local/include/stdio.h:386:41: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
                 int (* _Nullable)(void *, const char *, int),
                                        ^
/usr/local/include/stdio.h:386:41: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *, const char *, int),
                                        ^
                                         _Nullable
/usr/local/include/stdio.h:386:41: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *, const char *, int),
                                        ^
                                         _Nonnull
/usr/local/include/stdio.h:386:55: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
/usr/local/include/stdio.h:386:55: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
                                                       _Nullable
/usr/local/include/stdio.h:386:55: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
                                                       _Nonnull
/usr/local/include/stdio.h:387:44: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
/usr/local/include/stdio.h:387:44: note: insert '_Nullable' if the pointer may be null
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
                                            _Nullable
/usr/local/include/stdio.h:387:44: note: insert '_Nonnull' if the pointer should never be null
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
                                            _Nonnull
/usr/local/include/stdio.h:388:41: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
                 int (* _Nullable)(void *));
                                        ^
/usr/local/include/stdio.h:388:41: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *));
                                        ^
                                         _Nullable
/usr/local/include/stdio.h:388:41: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *));
                                        ^
                                         _Nonnull
/usr/local/include/stdio.h:384:6: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
FILE    *funopen(const void *,
        ^
/usr/local/include/stdio.h:384:6: note: insert '_Nullable' if the pointer may be null
FILE    *funopen(const void *,
        ^
          _Nullable 
/usr/local/include/stdio.h:384:6: note: insert '_Nonnull' if the pointer should never be null
FILE    *funopen(const void *,
        ^
          _Nonnull 
In file included from conftest.c:1:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby.h:33:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/ruby.h:29:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/defines.h:134:
/usr/local/include/stdlib.h:134:25: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
double   atof(const char *);
                         ^
/usr/local/include/stdlib.h:134:25: note: insert '_Nullable' if the pointer may be null
double   atof(const char *);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:134:25: note: insert '_Nonnull' if the pointer should never be null
double   atof(const char *);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:135:22: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
int      atoi(const char *);
                         ^
/usr/local/include/stdlib.h:135:22: note: insert '_Nullable' if the pointer may be null
int      atoi(const char *);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:135:22: note: insert '_Nonnull' if the pointer should never be null
int      atoi(const char *);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:136:23: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
long     atol(const char *);
                         ^
/usr/local/include/stdlib.h:136:23: note: insert '_Nullable' if the pointer may be null
long     atol(const char *);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:136:23: note: insert '_Nonnull' if the pointer should never be null
long     atol(const char *);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:139:20: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
         atoll(const char *);
                          ^
/usr/local/include/stdlib.h:139:20: note: insert '_Nullable' if the pointer may be null
         atoll(const char *);
                          ^
                           _Nullable
/usr/local/include/stdlib.h:139:20: note: insert '_Nonnull' if the pointer should never be null
         atoll(const char *);
                          ^
                           _Nonnull
/usr/local/include/stdlib.h:141:26: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                            ^
/usr/local/include/stdlib.h:141:26: note: insert '_Nullable' if the pointer may be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                            ^
                              _Nullable 
/usr/local/include/stdlib.h:141:26: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                            ^
                              _Nonnull 
/usr/local/include/stdlib.h:141:45: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                                               ^
/usr/local/include/stdlib.h:141:45: note: insert '_Nullable' if the pointer may be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                                               ^
                                                 _Nullable 
/usr/local/include/stdlib.h:141:45: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                                               ^
                                                 _Nonnull 
fatal error: too many errors emitted, stopping now [-ferror-limit=]
20 errors generated.
checked program was:
/* begin */
1: #include "ruby.h"
2: 
3: int main() {return 0;}
/* end */

"gcc -o conftest -I/Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/x86_64-darwin19 -I/Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/backward -I/Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0 -I. -I/usr/local/opt/mysql-client/include/mysql  -I/usr/local/opt/libyaml/include -I/usr/local/opt/libksba/include -I/usr/local/opt/readline/include -I/usr/local/opt/zlib/include -I/usr/local/opt/openssl@1.1/include -D_XOPEN_SOURCE -D_DARWIN_C_SOURCE -D_DARWIN_UNLIMITED_SELECT -D_REENTRANT   -O3 -ggdb3 -Wall -Wextra -Wdeprecated-declarations -Wdivision-by-zero -Wimplicit-function-declaration -Wimplicit-int -Wpointer-arith -Wshorten-64-to-32 -Wwrite-strings -Wmissing-noreturn -Wno-constant-logical-operand -Wno-long-long -Wno-missing-field-initializers -Wno-overlength-strings -Wno-parentheses-equality -Wno-self-assign -Wno-tautological-compare -Wno-unused-parameter -Wno-unused-value -Wunused-variable -Wextra-tokens  -fno-common -pipe -DFULL_SSL_MODE_SUPPORT conftest.c  -L. -L/Users/dileepkumar/.rvm/rubies/ruby-2.7.0/lib -L/usr/local/opt/libyaml/lib -L/usr/local/opt/libksba/lib -L/usr/local/opt/readline/lib -L/usr/local/opt/zlib/lib -L/usr/local/opt/openssl@1.1/lib -L. -fstack-protector-strong -L/usr/local/lib -L/usr/local/opt/libyaml/lib -L/usr/local/opt/libksba/lib -L/usr/local/opt/readline/lib -L/usr/local/opt/zlib/lib -L/usr/local/opt/openssl@1.1/lib    -L/usr/local/opt/mysql-client/lib -lmysqlclient -lssl -lcrypto  -lruby.2.7 -Werror -Wno-switch-enum  "
In file included from conftest.c:1:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby.h:33:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/ruby.h:29:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/defines.h:126:
In file included from /usr/local/include/stdio.h:64:
/usr/local/include/_stdio.h:93:16: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
        unsigned char   *_base;
                        ^
/usr/local/include/_stdio.h:93:16: note: insert '_Nullable' if the pointer may be null
        unsigned char   *_base;
                        ^
                          _Nullable 
/usr/local/include/_stdio.h:93:16: note: insert '_Nonnull' if the pointer should never be null
        unsigned char   *_base;
                        ^
                          _Nonnull 
/usr/local/include/_stdio.h:138:32: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
/usr/local/include/_stdio.h:138:32: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
                                           _Nullable
/usr/local/include/_stdio.h:138:32: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
                                           _Nonnull
/usr/local/include/_stdio.h:138:40: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
/usr/local/include/_stdio.h:138:40: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
                                                   _Nullable
/usr/local/include/_stdio.h:138:40: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
                                                   _Nonnull
/usr/local/include/_stdio.h:139:35: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
/usr/local/include/_stdio.h:139:35: note: insert '_Nullable' if the pointer may be null
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
                                           _Nullable
/usr/local/include/_stdio.h:139:35: note: insert '_Nonnull' if the pointer should never be null
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
                                           _Nonnull
/usr/local/include/_stdio.h:140:32: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
/usr/local/include/_stdio.h:140:32: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
                                           _Nullable
/usr/local/include/_stdio.h:140:32: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
                                           _Nonnull
/usr/local/include/_stdio.h:140:46: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
/usr/local/include/_stdio.h:140:46: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
                                                         _Nullable
/usr/local/include/_stdio.h:140:46: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
                                                         _Nonnull
/usr/local/include/_stdio.h:144:18: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
/usr/local/include/_stdio.h:144:18: note: insert '_Nullable' if the pointer may be null
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
                          _Nullable 
/usr/local/include/_stdio.h:144:18: note: insert '_Nonnull' if the pointer should never be null
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
                          _Nonnull 
In file included from conftest.c:1:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby.h:33:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/ruby.h:29:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/defines.h:126:
/usr/local/include/stdio.h:67:13: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
extern FILE *__stdinp;
            ^
/usr/local/include/stdio.h:67:13: note: insert '_Nullable' if the pointer may be null
extern FILE *__stdinp;
            ^
              _Nullable 
/usr/local/include/stdio.h:67:13: note: insert '_Nonnull' if the pointer should never be null
extern FILE *__stdinp;
            ^
              _Nonnull 
/usr/local/include/stdio.h:386:41: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
                 int (* _Nullable)(void *, const char *, int),
                                        ^
/usr/local/include/stdio.h:386:41: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *, const char *, int),
                                        ^
                                         _Nullable
/usr/local/include/stdio.h:386:41: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *, const char *, int),
                                        ^
                                         _Nonnull
/usr/local/include/stdio.h:386:55: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
/usr/local/include/stdio.h:386:55: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
                                                       _Nullable
/usr/local/include/stdio.h:386:55: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
                                                       _Nonnull
/usr/local/include/stdio.h:387:44: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
/usr/local/include/stdio.h:387:44: note: insert '_Nullable' if the pointer may be null
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
                                            _Nullable
/usr/local/include/stdio.h:387:44: note: insert '_Nonnull' if the pointer should never be null
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
                                            _Nonnull
/usr/local/include/stdio.h:388:41: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
                 int (* _Nullable)(void *));
                                        ^
/usr/local/include/stdio.h:388:41: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *));
                                        ^
                                         _Nullable
/usr/local/include/stdio.h:388:41: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *));
                                        ^
                                         _Nonnull
/usr/local/include/stdio.h:384:6: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
FILE    *funopen(const void *,
        ^
/usr/local/include/stdio.h:384:6: note: insert '_Nullable' if the pointer may be null
FILE    *funopen(const void *,
        ^
          _Nullable 
/usr/local/include/stdio.h:384:6: note: insert '_Nonnull' if the pointer should never be null
FILE    *funopen(const void *,
        ^
          _Nonnull 
In file included from conftest.c:1:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby.h:33:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/ruby.h:29:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/defines.h:134:
/usr/local/include/stdlib.h:134:25: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
double   atof(const char *);
                         ^
/usr/local/include/stdlib.h:134:25: note: insert '_Nullable' if the pointer may be null
double   atof(const char *);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:134:25: note: insert '_Nonnull' if the pointer should never be null
double   atof(const char *);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:135:22: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
int      atoi(const char *);
                         ^
/usr/local/include/stdlib.h:135:22: note: insert '_Nullable' if the pointer may be null
int      atoi(const char *);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:135:22: note: insert '_Nonnull' if the pointer should never be null
int      atoi(const char *);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:136:23: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
long     atol(const char *);
                         ^
/usr/local/include/stdlib.h:136:23: note: insert '_Nullable' if the pointer may be null
long     atol(const char *);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:136:23: note: insert '_Nonnull' if the pointer should never be null
long     atol(const char *);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:139:20: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
         atoll(const char *);
                          ^
/usr/local/include/stdlib.h:139:20: note: insert '_Nullable' if the pointer may be null
         atoll(const char *);
                          ^
                           _Nullable
/usr/local/include/stdlib.h:139:20: note: insert '_Nonnull' if the pointer should never be null
         atoll(const char *);
                          ^
                           _Nonnull
/usr/local/include/stdlib.h:141:26: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                            ^
/usr/local/include/stdlib.h:141:26: note: insert '_Nullable' if the pointer may be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                            ^
                              _Nullable 
/usr/local/include/stdlib.h:141:26: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                            ^
                              _Nonnull 
/usr/local/include/stdlib.h:141:45: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                                               ^
/usr/local/include/stdlib.h:141:45: note: insert '_Nullable' if the pointer may be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                                               ^
                                                 _Nullable 
/usr/local/include/stdlib.h:141:45: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                                               ^
                                                 _Nonnull 
fatal error: too many errors emitted, stopping now [-ferror-limit=]
20 errors generated.
checked program was:
/* begin */
1: #include "ruby.h"
2: 
3: int main() {return 0;}
/* end */

"gcc -o conftest -I/Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/x86_64-darwin19 -I/Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/backward -I/Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0 -I. -I/usr/local/opt/mysql-client/include/mysql  -I/usr/local/opt/libyaml/include -I/usr/local/opt/libksba/include -I/usr/local/opt/readline/include -I/usr/local/opt/zlib/include -I/usr/local/opt/openssl@1.1/include -D_XOPEN_SOURCE -D_DARWIN_C_SOURCE -D_DARWIN_UNLIMITED_SELECT -D_REENTRANT   -O3 -ggdb3 -Wall -Wextra -Wdeprecated-declarations -Wdivision-by-zero -Wimplicit-function-declaration -Wimplicit-int -Wpointer-arith -Wshorten-64-to-32 -Wwrite-strings -Wmissing-noreturn -Wno-constant-logical-operand -Wno-long-long -Wno-missing-field-initializers -Wno-overlength-strings -Wno-parentheses-equality -Wno-self-assign -Wno-tautological-compare -Wno-unused-parameter -Wno-unused-value -Wunused-variable -Wextra-tokens  -fno-common -pipe -DFULL_SSL_MODE_SUPPORT conftest.c  -L. -L/Users/dileepkumar/.rvm/rubies/ruby-2.7.0/lib -L/usr/local/opt/libyaml/lib -L/usr/local/opt/libksba/lib -L/usr/local/opt/readline/lib -L/usr/local/opt/zlib/lib -L/usr/local/opt/openssl@1.1/lib -L. -fstack-protector-strong -L/usr/local/lib -L/usr/local/opt/libyaml/lib -L/usr/local/opt/libksba/lib -L/usr/local/opt/readline/lib -L/usr/local/opt/zlib/lib -L/usr/local/opt/openssl@1.1/lib    -L/usr/local/opt/mysql-client/lib -lmysqlclient -lssl -lcrypto  -lruby.2.7 -Werror -Wno-undef  "
In file included from conftest.c:1:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby.h:33:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/ruby.h:29:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/defines.h:126:
In file included from /usr/local/include/stdio.h:64:
/usr/local/include/_stdio.h:93:16: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
        unsigned char   *_base;
                        ^
/usr/local/include/_stdio.h:93:16: note: insert '_Nullable' if the pointer may be null
        unsigned char   *_base;
                        ^
                          _Nullable 
/usr/local/include/_stdio.h:93:16: note: insert '_Nonnull' if the pointer should never be null
        unsigned char   *_base;
                        ^
                          _Nonnull 
/usr/local/include/_stdio.h:138:32: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
/usr/local/include/_stdio.h:138:32: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
                                           _Nullable
/usr/local/include/_stdio.h:138:32: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
                                           _Nonnull
/usr/local/include/_stdio.h:138:40: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
/usr/local/include/_stdio.h:138:40: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
                                                   _Nullable
/usr/local/include/_stdio.h:138:40: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
                                                   _Nonnull
/usr/local/include/_stdio.h:139:35: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
/usr/local/include/_stdio.h:139:35: note: insert '_Nullable' if the pointer may be null
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
                                           _Nullable
/usr/local/include/_stdio.h:139:35: note: insert '_Nonnull' if the pointer should never be null
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
                                           _Nonnull
/usr/local/include/_stdio.h:140:32: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
/usr/local/include/_stdio.h:140:32: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
                                           _Nullable
/usr/local/include/_stdio.h:140:32: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
                                           _Nonnull
/usr/local/include/_stdio.h:140:46: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
/usr/local/include/_stdio.h:140:46: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
                                                         _Nullable
/usr/local/include/_stdio.h:140:46: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
                                                         _Nonnull
/usr/local/include/_stdio.h:144:18: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
/usr/local/include/_stdio.h:144:18: note: insert '_Nullable' if the pointer may be null
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
                          _Nullable 
/usr/local/include/_stdio.h:144:18: note: insert '_Nonnull' if the pointer should never be null
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
                          _Nonnull 
In file included from conftest.c:1:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby.h:33:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/ruby.h:29:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/defines.h:126:
/usr/local/include/stdio.h:67:13: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
extern FILE *__stdinp;
            ^
/usr/local/include/stdio.h:67:13: note: insert '_Nullable' if the pointer may be null
extern FILE *__stdinp;
            ^
              _Nullable 
/usr/local/include/stdio.h:67:13: note: insert '_Nonnull' if the pointer should never be null
extern FILE *__stdinp;
            ^
              _Nonnull 
/usr/local/include/stdio.h:386:41: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
                 int (* _Nullable)(void *, const char *, int),
                                        ^
/usr/local/include/stdio.h:386:41: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *, const char *, int),
                                        ^
                                         _Nullable
/usr/local/include/stdio.h:386:41: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *, const char *, int),
                                        ^
                                         _Nonnull
/usr/local/include/stdio.h:386:55: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
/usr/local/include/stdio.h:386:55: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
                                                       _Nullable
/usr/local/include/stdio.h:386:55: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
                                                       _Nonnull
/usr/local/include/stdio.h:387:44: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
/usr/local/include/stdio.h:387:44: note: insert '_Nullable' if the pointer may be null
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
                                            _Nullable
/usr/local/include/stdio.h:387:44: note: insert '_Nonnull' if the pointer should never be null
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
                                            _Nonnull
/usr/local/include/stdio.h:388:41: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
                 int (* _Nullable)(void *));
                                        ^
/usr/local/include/stdio.h:388:41: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *));
                                        ^
                                         _Nullable
/usr/local/include/stdio.h:388:41: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *));
                                        ^
                                         _Nonnull
/usr/local/include/stdio.h:384:6: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
FILE    *funopen(const void *,
        ^
/usr/local/include/stdio.h:384:6: note: insert '_Nullable' if the pointer may be null
FILE    *funopen(const void *,
        ^
          _Nullable 
/usr/local/include/stdio.h:384:6: note: insert '_Nonnull' if the pointer should never be null
FILE    *funopen(const void *,
        ^
          _Nonnull 
In file included from conftest.c:1:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby.h:33:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/ruby.h:29:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/defines.h:134:
/usr/local/include/stdlib.h:134:25: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
double   atof(const char *);
                         ^
/usr/local/include/stdlib.h:134:25: note: insert '_Nullable' if the pointer may be null
double   atof(const char *);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:134:25: note: insert '_Nonnull' if the pointer should never be null
double   atof(const char *);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:135:22: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
int      atoi(const char *);
                         ^
/usr/local/include/stdlib.h:135:22: note: insert '_Nullable' if the pointer may be null
int      atoi(const char *);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:135:22: note: insert '_Nonnull' if the pointer should never be null
int      atoi(const char *);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:136:23: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
long     atol(const char *);
                         ^
/usr/local/include/stdlib.h:136:23: note: insert '_Nullable' if the pointer may be null
long     atol(const char *);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:136:23: note: insert '_Nonnull' if the pointer should never be null
long     atol(const char *);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:139:20: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
         atoll(const char *);
                          ^
/usr/local/include/stdlib.h:139:20: note: insert '_Nullable' if the pointer may be null
         atoll(const char *);
                          ^
                           _Nullable
/usr/local/include/stdlib.h:139:20: note: insert '_Nonnull' if the pointer should never be null
         atoll(const char *);
                          ^
                           _Nonnull
/usr/local/include/stdlib.h:141:26: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                            ^
/usr/local/include/stdlib.h:141:26: note: insert '_Nullable' if the pointer may be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                            ^
                              _Nullable 
/usr/local/include/stdlib.h:141:26: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                            ^
                              _Nonnull 
/usr/local/include/stdlib.h:141:45: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                                               ^
/usr/local/include/stdlib.h:141:45: note: insert '_Nullable' if the pointer may be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                                               ^
                                                 _Nullable 
/usr/local/include/stdlib.h:141:45: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                                               ^
                                                 _Nonnull 
fatal error: too many errors emitted, stopping now [-ferror-limit=]
20 errors generated.
checked program was:
/* begin */
1: #include "ruby.h"
2: 
3: int main() {return 0;}
/* end */

"gcc -o conftest -I/Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/x86_64-darwin19 -I/Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/backward -I/Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0 -I. -I/usr/local/opt/mysql-client/include/mysql  -I/usr/local/opt/libyaml/include -I/usr/local/opt/libksba/include -I/usr/local/opt/readline/include -I/usr/local/opt/zlib/include -I/usr/local/opt/openssl@1.1/include -D_XOPEN_SOURCE -D_DARWIN_C_SOURCE -D_DARWIN_UNLIMITED_SELECT -D_REENTRANT   -O3 -ggdb3 -Wall -Wextra -Wdeprecated-declarations -Wdivision-by-zero -Wimplicit-function-declaration -Wimplicit-int -Wpointer-arith -Wshorten-64-to-32 -Wwrite-strings -Wmissing-noreturn -Wno-constant-logical-operand -Wno-long-long -Wno-missing-field-initializers -Wno-overlength-strings -Wno-parentheses-equality -Wno-self-assign -Wno-tautological-compare -Wno-unused-parameter -Wno-unused-value -Wunused-variable -Wextra-tokens  -fno-common -pipe -DFULL_SSL_MODE_SUPPORT conftest.c  -L. -L/Users/dileepkumar/.rvm/rubies/ruby-2.7.0/lib -L/usr/local/opt/libyaml/lib -L/usr/local/opt/libksba/lib -L/usr/local/opt/readline/lib -L/usr/local/opt/zlib/lib -L/usr/local/opt/openssl@1.1/lib -L. -fstack-protector-strong -L/usr/local/lib -L/usr/local/opt/libyaml/lib -L/usr/local/opt/libksba/lib -L/usr/local/opt/readline/lib -L/usr/local/opt/zlib/lib -L/usr/local/opt/openssl@1.1/lib    -L/usr/local/opt/mysql-client/lib -lmysqlclient -lssl -lcrypto  -lruby.2.7 -Werror -Wno-unreachable-code  "
In file included from conftest.c:1:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby.h:33:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/ruby.h:29:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/defines.h:126:
In file included from /usr/local/include/stdio.h:64:
/usr/local/include/_stdio.h:93:16: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
        unsigned char   *_base;
                        ^
/usr/local/include/_stdio.h:93:16: note: insert '_Nullable' if the pointer may be null
        unsigned char   *_base;
                        ^
                          _Nullable 
/usr/local/include/_stdio.h:93:16: note: insert '_Nonnull' if the pointer should never be null
        unsigned char   *_base;
                        ^
                          _Nonnull 
/usr/local/include/_stdio.h:138:32: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
/usr/local/include/_stdio.h:138:32: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
                                           _Nullable
/usr/local/include/_stdio.h:138:32: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
                                           _Nonnull
/usr/local/include/_stdio.h:138:40: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
/usr/local/include/_stdio.h:138:40: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
                                                   _Nullable
/usr/local/include/_stdio.h:138:40: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
                                                   _Nonnull
/usr/local/include/_stdio.h:139:35: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
/usr/local/include/_stdio.h:139:35: note: insert '_Nullable' if the pointer may be null
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
                                           _Nullable
/usr/local/include/_stdio.h:139:35: note: insert '_Nonnull' if the pointer should never be null
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
                                           _Nonnull
/usr/local/include/_stdio.h:140:32: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
/usr/local/include/_stdio.h:140:32: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
                                           _Nullable
/usr/local/include/_stdio.h:140:32: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
                                           _Nonnull
/usr/local/include/_stdio.h:140:46: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
/usr/local/include/_stdio.h:140:46: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
                                                         _Nullable
/usr/local/include/_stdio.h:140:46: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
                                                         _Nonnull
/usr/local/include/_stdio.h:144:18: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
/usr/local/include/_stdio.h:144:18: note: insert '_Nullable' if the pointer may be null
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
                          _Nullable 
/usr/local/include/_stdio.h:144:18: note: insert '_Nonnull' if the pointer should never be null
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
                          _Nonnull 
In file included from conftest.c:1:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby.h:33:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/ruby.h:29:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/defines.h:126:
/usr/local/include/stdio.h:67:13: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
extern FILE *__stdinp;
            ^
/usr/local/include/stdio.h:67:13: note: insert '_Nullable' if the pointer may be null
extern FILE *__stdinp;
            ^
              _Nullable 
/usr/local/include/stdio.h:67:13: note: insert '_Nonnull' if the pointer should never be null
extern FILE *__stdinp;
            ^
              _Nonnull 
/usr/local/include/stdio.h:386:41: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
                 int (* _Nullable)(void *, const char *, int),
                                        ^
/usr/local/include/stdio.h:386:41: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *, const char *, int),
                                        ^
                                         _Nullable
/usr/local/include/stdio.h:386:41: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *, const char *, int),
                                        ^
                                         _Nonnull
/usr/local/include/stdio.h:386:55: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
/usr/local/include/stdio.h:386:55: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
                                                       _Nullable
/usr/local/include/stdio.h:386:55: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
                                                       _Nonnull
/usr/local/include/stdio.h:387:44: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
/usr/local/include/stdio.h:387:44: note: insert '_Nullable' if the pointer may be null
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
                                            _Nullable
/usr/local/include/stdio.h:387:44: note: insert '_Nonnull' if the pointer should never be null
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
                                            _Nonnull
/usr/local/include/stdio.h:388:41: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
                 int (* _Nullable)(void *));
                                        ^
/usr/local/include/stdio.h:388:41: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *));
                                        ^
                                         _Nullable
/usr/local/include/stdio.h:388:41: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *));
                                        ^
                                         _Nonnull
/usr/local/include/stdio.h:384:6: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
FILE    *funopen(const void *,
        ^
/usr/local/include/stdio.h:384:6: note: insert '_Nullable' if the pointer may be null
FILE    *funopen(const void *,
        ^
          _Nullable 
/usr/local/include/stdio.h:384:6: note: insert '_Nonnull' if the pointer should never be null
FILE    *funopen(const void *,
        ^
          _Nonnull 
In file included from conftest.c:1:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby.h:33:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/ruby.h:29:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/defines.h:134:
/usr/local/include/stdlib.h:134:25: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
double   atof(const char *);
                         ^
/usr/local/include/stdlib.h:134:25: note: insert '_Nullable' if the pointer may be null
double   atof(const char *);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:134:25: note: insert '_Nonnull' if the pointer should never be null
double   atof(const char *);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:135:22: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
int      atoi(const char *);
                         ^
/usr/local/include/stdlib.h:135:22: note: insert '_Nullable' if the pointer may be null
int      atoi(const char *);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:135:22: note: insert '_Nonnull' if the pointer should never be null
int      atoi(const char *);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:136:23: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
long     atol(const char *);
                         ^
/usr/local/include/stdlib.h:136:23: note: insert '_Nullable' if the pointer may be null
long     atol(const char *);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:136:23: note: insert '_Nonnull' if the pointer should never be null
long     atol(const char *);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:139:20: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
         atoll(const char *);
                          ^
/usr/local/include/stdlib.h:139:20: note: insert '_Nullable' if the pointer may be null
         atoll(const char *);
                          ^
                           _Nullable
/usr/local/include/stdlib.h:139:20: note: insert '_Nonnull' if the pointer should never be null
         atoll(const char *);
                          ^
                           _Nonnull
/usr/local/include/stdlib.h:141:26: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                            ^
/usr/local/include/stdlib.h:141:26: note: insert '_Nullable' if the pointer may be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                            ^
                              _Nullable 
/usr/local/include/stdlib.h:141:26: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                            ^
                              _Nonnull 
/usr/local/include/stdlib.h:141:45: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                                               ^
/usr/local/include/stdlib.h:141:45: note: insert '_Nullable' if the pointer may be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                                               ^
                                                 _Nullable 
/usr/local/include/stdlib.h:141:45: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                                               ^
                                                 _Nonnull 
fatal error: too many errors emitted, stopping now [-ferror-limit=]
20 errors generated.
checked program was:
/* begin */
1: #include "ruby.h"
2: 
3: int main() {return 0;}
/* end */

"gcc -o conftest -I/Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/x86_64-darwin19 -I/Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/backward -I/Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0 -I. -I/usr/local/opt/mysql-client/include/mysql  -I/usr/local/opt/libyaml/include -I/usr/local/opt/libksba/include -I/usr/local/opt/readline/include -I/usr/local/opt/zlib/include -I/usr/local/opt/openssl@1.1/include -D_XOPEN_SOURCE -D_DARWIN_C_SOURCE -D_DARWIN_UNLIMITED_SELECT -D_REENTRANT   -O3 -ggdb3 -Wall -Wextra -Wdeprecated-declarations -Wdivision-by-zero -Wimplicit-function-declaration -Wimplicit-int -Wpointer-arith -Wshorten-64-to-32 -Wwrite-strings -Wmissing-noreturn -Wno-constant-logical-operand -Wno-long-long -Wno-missing-field-initializers -Wno-overlength-strings -Wno-parentheses-equality -Wno-self-assign -Wno-tautological-compare -Wno-unused-parameter -Wno-unused-value -Wunused-variable -Wextra-tokens  -fno-common -pipe -DFULL_SSL_MODE_SUPPORT conftest.c  -L. -L/Users/dileepkumar/.rvm/rubies/ruby-2.7.0/lib -L/usr/local/opt/libyaml/lib -L/usr/local/opt/libksba/lib -L/usr/local/opt/readline/lib -L/usr/local/opt/zlib/lib -L/usr/local/opt/openssl@1.1/lib -L. -fstack-protector-strong -L/usr/local/lib -L/usr/local/opt/libyaml/lib -L/usr/local/opt/libksba/lib -L/usr/local/opt/readline/lib -L/usr/local/opt/zlib/lib -L/usr/local/opt/openssl@1.1/lib    -L/usr/local/opt/mysql-client/lib -lmysqlclient -lssl -lcrypto  -lruby.2.7 -Werror -Wno-used-but-marked-unused  "
In file included from conftest.c:1:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby.h:33:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/ruby.h:29:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/defines.h:126:
In file included from /usr/local/include/stdio.h:64:
/usr/local/include/_stdio.h:93:16: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
        unsigned char   *_base;
                        ^
/usr/local/include/_stdio.h:93:16: note: insert '_Nullable' if the pointer may be null
        unsigned char   *_base;
                        ^
                          _Nullable 
/usr/local/include/_stdio.h:93:16: note: insert '_Nonnull' if the pointer should never be null
        unsigned char   *_base;
                        ^
                          _Nonnull 
/usr/local/include/_stdio.h:138:32: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
/usr/local/include/_stdio.h:138:32: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
                                           _Nullable
/usr/local/include/_stdio.h:138:32: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
                                           _Nonnull
/usr/local/include/_stdio.h:138:40: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
/usr/local/include/_stdio.h:138:40: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
                                                   _Nullable
/usr/local/include/_stdio.h:138:40: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
                                                   _Nonnull
/usr/local/include/_stdio.h:139:35: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
/usr/local/include/_stdio.h:139:35: note: insert '_Nullable' if the pointer may be null
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
                                           _Nullable
/usr/local/include/_stdio.h:139:35: note: insert '_Nonnull' if the pointer should never be null
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
                                           _Nonnull
/usr/local/include/_stdio.h:140:32: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
/usr/local/include/_stdio.h:140:32: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
                                           _Nullable
/usr/local/include/_stdio.h:140:32: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
                                           _Nonnull
/usr/local/include/_stdio.h:140:46: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
/usr/local/include/_stdio.h:140:46: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
                                                         _Nullable
/usr/local/include/_stdio.h:140:46: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
                                                         _Nonnull
/usr/local/include/_stdio.h:144:18: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
/usr/local/include/_stdio.h:144:18: note: insert '_Nullable' if the pointer may be null
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
                          _Nullable 
/usr/local/include/_stdio.h:144:18: note: insert '_Nonnull' if the pointer should never be null
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
                          _Nonnull 
In file included from conftest.c:1:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby.h:33:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/ruby.h:29:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/defines.h:126:
/usr/local/include/stdio.h:67:13: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
extern FILE *__stdinp;
            ^
/usr/local/include/stdio.h:67:13: note: insert '_Nullable' if the pointer may be null
extern FILE *__stdinp;
            ^
              _Nullable 
/usr/local/include/stdio.h:67:13: note: insert '_Nonnull' if the pointer should never be null
extern FILE *__stdinp;
            ^
              _Nonnull 
/usr/local/include/stdio.h:386:41: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
                 int (* _Nullable)(void *, const char *, int),
                                        ^
/usr/local/include/stdio.h:386:41: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *, const char *, int),
                                        ^
                                         _Nullable
/usr/local/include/stdio.h:386:41: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *, const char *, int),
                                        ^
                                         _Nonnull
/usr/local/include/stdio.h:386:55: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
/usr/local/include/stdio.h:386:55: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
                                                       _Nullable
/usr/local/include/stdio.h:386:55: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
                                                       _Nonnull
/usr/local/include/stdio.h:387:44: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
/usr/local/include/stdio.h:387:44: note: insert '_Nullable' if the pointer may be null
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
                                            _Nullable
/usr/local/include/stdio.h:387:44: note: insert '_Nonnull' if the pointer should never be null
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
                                            _Nonnull
/usr/local/include/stdio.h:388:41: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
                 int (* _Nullable)(void *));
                                        ^
/usr/local/include/stdio.h:388:41: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *));
                                        ^
                                         _Nullable
/usr/local/include/stdio.h:388:41: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *));
                                        ^
                                         _Nonnull
/usr/local/include/stdio.h:384:6: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
FILE    *funopen(const void *,
        ^
/usr/local/include/stdio.h:384:6: note: insert '_Nullable' if the pointer may be null
FILE    *funopen(const void *,
        ^
          _Nullable 
/usr/local/include/stdio.h:384:6: note: insert '_Nonnull' if the pointer should never be null
FILE    *funopen(const void *,
        ^
          _Nonnull 
In file included from conftest.c:1:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby.h:33:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/ruby.h:29:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/defines.h:134:
/usr/local/include/stdlib.h:134:25: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
double   atof(const char *);
                         ^
/usr/local/include/stdlib.h:134:25: note: insert '_Nullable' if the pointer may be null
double   atof(const char *);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:134:25: note: insert '_Nonnull' if the pointer should never be null
double   atof(const char *);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:135:22: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
int      atoi(const char *);
                         ^
/usr/local/include/stdlib.h:135:22: note: insert '_Nullable' if the pointer may be null
int      atoi(const char *);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:135:22: note: insert '_Nonnull' if the pointer should never be null
int      atoi(const char *);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:136:23: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
long     atol(const char *);
                         ^
/usr/local/include/stdlib.h:136:23: note: insert '_Nullable' if the pointer may be null
long     atol(const char *);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:136:23: note: insert '_Nonnull' if the pointer should never be null
long     atol(const char *);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:139:20: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
         atoll(const char *);
                          ^
/usr/local/include/stdlib.h:139:20: note: insert '_Nullable' if the pointer may be null
         atoll(const char *);
                          ^
                           _Nullable
/usr/local/include/stdlib.h:139:20: note: insert '_Nonnull' if the pointer should never be null
         atoll(const char *);
                          ^
                           _Nonnull
/usr/local/include/stdlib.h:141:26: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                            ^
/usr/local/include/stdlib.h:141:26: note: insert '_Nullable' if the pointer may be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                            ^
                              _Nullable 
/usr/local/include/stdlib.h:141:26: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                            ^
                              _Nonnull 
/usr/local/include/stdlib.h:141:45: error: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Werror,-Wnullability-completeness]
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                                               ^
/usr/local/include/stdlib.h:141:45: note: insert '_Nullable' if the pointer may be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                                               ^
                                                 _Nullable 
/usr/local/include/stdlib.h:141:45: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                                               ^
                                                 _Nonnull 
fatal error: too many errors emitted, stopping now [-ferror-limit=]
20 errors generated.
checked program was:
/* begin */
1: #include "ruby.h"
2: 
3: int main() {return 0;}
/* end */

"gcc -o conftest -I/Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/x86_64-darwin19 -I/Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/backward -I/Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0 -I. -I/usr/local/opt/mysql-client/include/mysql  -I/usr/local/opt/libyaml/include -I/usr/local/opt/libksba/include -I/usr/local/opt/readline/include -I/usr/local/opt/zlib/include -I/usr/local/opt/openssl@1.1/include -D_XOPEN_SOURCE -D_DARWIN_C_SOURCE -D_DARWIN_UNLIMITED_SELECT -D_REENTRANT   -O3 -ggdb3 -Wall -Wextra -Wdeprecated-declarations -Wdivision-by-zero -Wimplicit-function-declaration -Wimplicit-int -Wpointer-arith -Wshorten-64-to-32 -Wwrite-strings -Wmissing-noreturn -Wno-constant-logical-operand -Wno-long-long -Wno-missing-field-initializers -Wno-overlength-strings -Wno-parentheses-equality -Wno-self-assign -Wno-tautological-compare -Wno-unused-parameter -Wno-unused-value -Wunused-variable -Wextra-tokens  -fno-common -pipe -DFULL_SSL_MODE_SUPPORT  conftest.c  -L. -L/Users/dileepkumar/.rvm/rubies/ruby-2.7.0/lib -L/usr/local/opt/libyaml/lib -L/usr/local/opt/libksba/lib -L/usr/local/opt/readline/lib -L/usr/local/opt/zlib/lib -L/usr/local/opt/openssl@1.1/lib -L. -fstack-protector-strong -L/usr/local/lib -L/usr/local/opt/libyaml/lib -L/usr/local/opt/libksba/lib -L/usr/local/opt/readline/lib -L/usr/local/opt/zlib/lib -L/usr/local/opt/openssl@1.1/lib    -L/usr/local/opt/mysql-client/lib -lmysqlclient -lssl -lcrypto  -lruby.2.7  -Wl,-rpath,/usr/local/opt/mysql-client/lib  "
In file included from conftest.c:1:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby.h:33:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/ruby.h:29:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/defines.h:126:
In file included from /usr/local/include/stdio.h:64:
/usr/local/include/_stdio.h:93:16: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        unsigned char   *_base;
                        ^
/usr/local/include/_stdio.h:93:16: note: insert '_Nullable' if the pointer may be null
        unsigned char   *_base;
                        ^
                          _Nullable 
/usr/local/include/_stdio.h:93:16: note: insert '_Nonnull' if the pointer should never be null
        unsigned char   *_base;
                        ^
                          _Nonnull 
/usr/local/include/_stdio.h:138:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
/usr/local/include/_stdio.h:138:32: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
                                           _Nullable
/usr/local/include/_stdio.h:138:32: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _read) (void *, char *, int);
                                          ^
                                           _Nonnull
/usr/local/include/_stdio.h:138:40: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
/usr/local/include/_stdio.h:138:40: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
                                                   _Nullable
/usr/local/include/_stdio.h:138:40: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _read) (void *, char *, int);
                                                  ^
                                                   _Nonnull
/usr/local/include/_stdio.h:139:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
/usr/local/include/_stdio.h:139:35: note: insert '_Nullable' if the pointer may be null
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
                                           _Nullable
/usr/local/include/_stdio.h:139:35: note: insert '_Nonnull' if the pointer should never be null
        fpos_t  (* _Nullable _seek) (void *, fpos_t, int);
                                          ^
                                           _Nonnull
/usr/local/include/_stdio.h:140:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
/usr/local/include/_stdio.h:140:32: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
                                           _Nullable
/usr/local/include/_stdio.h:140:32: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _write)(void *, const char *, int);
                                          ^
                                           _Nonnull
/usr/local/include/_stdio.h:140:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
/usr/local/include/_stdio.h:140:46: note: insert '_Nullable' if the pointer may be null
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
                                                         _Nullable
/usr/local/include/_stdio.h:140:46: note: insert '_Nonnull' if the pointer should never be null
        int     (* _Nullable _write)(void *, const char *, int);
                                                        ^
                                                         _Nonnull
/usr/local/include/_stdio.h:144:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
/usr/local/include/_stdio.h:144:18: note: insert '_Nullable' if the pointer may be null
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
                          _Nullable 
/usr/local/include/_stdio.h:144:18: note: insert '_Nonnull' if the pointer should never be null
        struct __sFILEX *_extra; /* additions to FILE to not break ABI */
                        ^
                          _Nonnull 
In file included from conftest.c:1:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby.h:33:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/ruby.h:29:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/defines.h:126:
/usr/local/include/stdio.h:67:13: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
extern FILE *__stdinp;
            ^
/usr/local/include/stdio.h:67:13: note: insert '_Nullable' if the pointer may be null
extern FILE *__stdinp;
            ^
              _Nullable 
/usr/local/include/stdio.h:67:13: note: insert '_Nonnull' if the pointer should never be null
extern FILE *__stdinp;
            ^
              _Nonnull 
/usr/local/include/stdio.h:386:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 int (* _Nullable)(void *, const char *, int),
                                        ^
/usr/local/include/stdio.h:386:41: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *, const char *, int),
                                        ^
                                         _Nullable
/usr/local/include/stdio.h:386:41: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *, const char *, int),
                                        ^
                                         _Nonnull
/usr/local/include/stdio.h:386:55: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
/usr/local/include/stdio.h:386:55: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
                                                       _Nullable
/usr/local/include/stdio.h:386:55: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *, const char *, int),
                                                      ^
                                                       _Nonnull
/usr/local/include/stdio.h:387:44: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
/usr/local/include/stdio.h:387:44: note: insert '_Nullable' if the pointer may be null
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
                                            _Nullable
/usr/local/include/stdio.h:387:44: note: insert '_Nonnull' if the pointer should never be null
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                                           ^
                                            _Nonnull
/usr/local/include/stdio.h:388:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
                 int (* _Nullable)(void *));
                                        ^
/usr/local/include/stdio.h:388:41: note: insert '_Nullable' if the pointer may be null
                 int (* _Nullable)(void *));
                                        ^
                                         _Nullable
/usr/local/include/stdio.h:388:41: note: insert '_Nonnull' if the pointer should never be null
                 int (* _Nullable)(void *));
                                        ^
                                         _Nonnull
/usr/local/include/stdio.h:384:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
FILE    *funopen(const void *,
        ^
/usr/local/include/stdio.h:384:6: note: insert '_Nullable' if the pointer may be null
FILE    *funopen(const void *,
        ^
          _Nullable 
/usr/local/include/stdio.h:384:6: note: insert '_Nonnull' if the pointer should never be null
FILE    *funopen(const void *,
        ^
          _Nonnull 
In file included from conftest.c:1:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby.h:33:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/ruby.h:29:
In file included from /Users/dileepkumar/.rvm/rubies/ruby-2.7.0/include/ruby-2.7.0/ruby/defines.h:134:
/usr/local/include/stdlib.h:134:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   atof(const char *);
                         ^
/usr/local/include/stdlib.h:134:25: note: insert '_Nullable' if the pointer may be null
double   atof(const char *);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:134:25: note: insert '_Nonnull' if the pointer should never be null
double   atof(const char *);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:135:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      atoi(const char *);
                         ^
/usr/local/include/stdlib.h:135:22: note: insert '_Nullable' if the pointer may be null
int      atoi(const char *);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:135:22: note: insert '_Nonnull' if the pointer should never be null
int      atoi(const char *);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:136:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     atol(const char *);
                         ^
/usr/local/include/stdlib.h:136:23: note: insert '_Nullable' if the pointer may be null
long     atol(const char *);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:136:23: note: insert '_Nonnull' if the pointer should never be null
long     atol(const char *);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:139:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         atoll(const char *);
                          ^
/usr/local/include/stdlib.h:139:20: note: insert '_Nullable' if the pointer may be null
         atoll(const char *);
                          ^
                           _Nullable
/usr/local/include/stdlib.h:139:20: note: insert '_Nonnull' if the pointer should never be null
         atoll(const char *);
                          ^
                           _Nonnull
/usr/local/include/stdlib.h:141:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                            ^
/usr/local/include/stdlib.h:141:26: note: insert '_Nullable' if the pointer may be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                            ^
                              _Nullable 
/usr/local/include/stdlib.h:141:26: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                            ^
                              _Nonnull 
/usr/local/include/stdlib.h:141:45: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                                               ^
/usr/local/include/stdlib.h:141:45: note: insert '_Nullable' if the pointer may be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                                               ^
                                                 _Nullable 
/usr/local/include/stdlib.h:141:45: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
                                               ^
                                                 _Nonnull 
/usr/local/include/stdlib.h:142:59: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                 ^
/usr/local/include/stdlib.h:142:59: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                 ^
                                                                  _Nullable
/usr/local/include/stdlib.h:142:59: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                 ^
                                                                  _Nonnull
/usr/local/include/stdlib.h:142:73: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                               ^
/usr/local/include/stdlib.h:142:73: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                               ^
                                                                                _Nullable
/usr/local/include/stdlib.h:142:73: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (* _Nonnull __compar)(const void *, const void *));
                                                                               ^
                                                                                _Nonnull
/usr/local/include/stdlib.h:141:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch(const void *__key, const void *__base, size_t __nel,
        ^
/usr/local/include/stdlib.h:141:6: note: insert '_Nullable' if the pointer may be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
        ^
          _Nullable 
/usr/local/include/stdlib.h:141:6: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch(const void *__key, const void *__base, size_t __nel,
        ^
          _Nonnull 
/usr/local/include/stdlib.h:147:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getenv(const char *);
                           ^
/usr/local/include/stdlib.h:147:25: note: insert '_Nullable' if the pointer may be null
char    *getenv(const char *);
                           ^
                            _Nullable
/usr/local/include/stdlib.h:147:25: note: insert '_Nonnull' if the pointer should never be null
char    *getenv(const char *);
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:147:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getenv(const char *);
        ^
/usr/local/include/stdlib.h:147:6: note: insert '_Nullable' if the pointer may be null
char    *getenv(const char *);
        ^
          _Nullable 
/usr/local/include/stdlib.h:147:6: note: insert '_Nonnull' if the pointer should never be null
char    *getenv(const char *);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:156:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mblen(const char *__s, size_t __n);
                          ^
/usr/local/include/stdlib.h:156:23: note: insert '_Nullable' if the pointer may be null
int      mblen(const char *__s, size_t __n);
                          ^
                            _Nullable 
/usr/local/include/stdlib.h:156:23: note: insert '_Nonnull' if the pointer should never be null
int      mblen(const char *__s, size_t __n);
                          ^
                            _Nonnull 
/usr/local/include/stdlib.h:157:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                          ^
/usr/local/include/stdlib.h:157:26: note: insert '_Nullable' if the pointer may be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                          ^
                            _Nullable
/usr/local/include/stdlib.h:157:26: note: insert '_Nonnull' if the pointer should never be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                          ^
                            _Nonnull
/usr/local/include/stdlib.h:157:52: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                                                    ^
/usr/local/include/stdlib.h:157:52: note: insert '_Nullable' if the pointer may be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                                                    ^
                                                      _Nullable
/usr/local/include/stdlib.h:157:52: note: insert '_Nonnull' if the pointer should never be null
size_t   mbstowcs(wchar_t * __restrict , const char * __restrict, size_t);
                                                    ^
                                                      _Nonnull
/usr/local/include/stdlib.h:158:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                        ^
/usr/local/include/stdlib.h:158:21: note: insert '_Nullable' if the pointer may be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                        ^
                          _Nullable
/usr/local/include/stdlib.h:158:21: note: insert '_Nonnull' if the pointer should never be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                        ^
                          _Nonnull
/usr/local/include/stdlib.h:158:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                                                 ^
/usr/local/include/stdlib.h:158:46: note: insert '_Nullable' if the pointer may be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                                                 ^
                                                   _Nullable
/usr/local/include/stdlib.h:158:46: note: insert '_Nonnull' if the pointer should never be null
int      mbtowc(wchar_t * __restrict, const char * __restrict, size_t);
                                                 ^
                                                   _Nonnull
/usr/local/include/stdlib.h:160:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort(void *__base, size_t __nel, size_t __width,
                    ^
/usr/local/include/stdlib.h:160:18: note: insert '_Nullable' if the pointer may be null
void     qsort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nullable 
/usr/local/include/stdlib.h:160:18: note: insert '_Nonnull' if the pointer should never be null
void     qsort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nonnull 
/usr/local/include/stdlib.h:161:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
/usr/local/include/stdlib.h:161:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:161:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:161:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
/usr/local/include/stdlib.h:161:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:161:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:165:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                           ^
/usr/local/include/stdlib.h:165:27: note: insert '_Nullable' if the pointer may be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                           ^
                            _Nullable
/usr/local/include/stdlib.h:165:27: note: insert '_Nonnull' if the pointer should never be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:165:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                   ^
/usr/local/include/stdlib.h:165:35: note: insert '_Nullable' if the pointer may be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                   ^
                                    _Nullable
/usr/local/include/stdlib.h:165:35: note: insert '_Nonnull' if the pointer should never be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                   ^
                                    _Nonnull
/usr/local/include/stdlib.h:165:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                    ^
/usr/local/include/stdlib.h:165:36: note: insert '_Nullable' if the pointer may be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                    ^
                                     _Nullable
/usr/local/include/stdlib.h:165:36: note: insert '_Nonnull' if the pointer should never be null
double   strtod(const char *, char **) __DARWIN_ALIAS(strtod);
                                    ^
                                     _Nonnull
/usr/local/include/stdlib.h:166:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                           ^
/usr/local/include/stdlib.h:166:26: note: insert '_Nullable' if the pointer may be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                           ^
                            _Nullable
/usr/local/include/stdlib.h:166:26: note: insert '_Nonnull' if the pointer should never be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:166:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                   ^
/usr/local/include/stdlib.h:166:34: note: insert '_Nullable' if the pointer may be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                   ^
                                    _Nullable
/usr/local/include/stdlib.h:166:34: note: insert '_Nonnull' if the pointer should never be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                   ^
                                    _Nonnull
/usr/local/include/stdlib.h:166:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                    ^
/usr/local/include/stdlib.h:166:35: note: insert '_Nullable' if the pointer may be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                    ^
                                     _Nullable
/usr/local/include/stdlib.h:166:35: note: insert '_Nonnull' if the pointer should never be null
float    strtof(const char *, char **) __DARWIN_ALIAS(strtof);
                                    ^
                                     _Nonnull
/usr/local/include/stdlib.h:167:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     strtol(const char *__str, char **__endptr, int __base);
                           ^
/usr/local/include/stdlib.h:167:25: note: insert '_Nullable' if the pointer may be null
long     strtol(const char *__str, char **__endptr, int __base);
                           ^
                             _Nullable 
/usr/local/include/stdlib.h:167:25: note: insert '_Nonnull' if the pointer should never be null
long     strtol(const char *__str, char **__endptr, int __base);
                           ^
                             _Nonnull 
/usr/local/include/stdlib.h:167:38: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     strtol(const char *__str, char **__endptr, int __base);
                                        ^
/usr/local/include/stdlib.h:167:38: note: insert '_Nullable' if the pointer may be null
long     strtol(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nullable
/usr/local/include/stdlib.h:167:38: note: insert '_Nonnull' if the pointer should never be null
long     strtol(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nonnull
/usr/local/include/stdlib.h:167:39: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     strtol(const char *__str, char **__endptr, int __base);
                                         ^
/usr/local/include/stdlib.h:167:39: note: insert '_Nullable' if the pointer may be null
long     strtol(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nullable 
/usr/local/include/stdlib.h:167:39: note: insert '_Nonnull' if the pointer should never be null
long     strtol(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nonnull 
/usr/local/include/stdlib.h:169:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtold(const char *, char **);
                            ^
/usr/local/include/stdlib.h:169:22: note: insert '_Nullable' if the pointer may be null
         strtold(const char *, char **);
                            ^
                             _Nullable
/usr/local/include/stdlib.h:169:22: note: insert '_Nonnull' if the pointer should never be null
         strtold(const char *, char **);
                            ^
                             _Nonnull
/usr/local/include/stdlib.h:169:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtold(const char *, char **);
                                    ^
/usr/local/include/stdlib.h:169:30: note: insert '_Nullable' if the pointer may be null
         strtold(const char *, char **);
                                    ^
                                     _Nullable
/usr/local/include/stdlib.h:169:30: note: insert '_Nonnull' if the pointer should never be null
         strtold(const char *, char **);
                                    ^
                                     _Nonnull
/usr/local/include/stdlib.h:169:31: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtold(const char *, char **);
                                     ^
/usr/local/include/stdlib.h:169:31: note: insert '_Nullable' if the pointer may be null
         strtold(const char *, char **);
                                     ^
                                      _Nullable
/usr/local/include/stdlib.h:169:31: note: insert '_Nonnull' if the pointer should never be null
         strtold(const char *, char **);
                                     ^
                                      _Nonnull
/usr/local/include/stdlib.h:172:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoll(const char *__str, char **__endptr, int __base);
                            ^
/usr/local/include/stdlib.h:172:22: note: insert '_Nullable' if the pointer may be null
         strtoll(const char *__str, char **__endptr, int __base);
                            ^
                              _Nullable 
/usr/local/include/stdlib.h:172:22: note: insert '_Nonnull' if the pointer should never be null
         strtoll(const char *__str, char **__endptr, int __base);
                            ^
                              _Nonnull 
/usr/local/include/stdlib.h:172:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoll(const char *__str, char **__endptr, int __base);
                                         ^
/usr/local/include/stdlib.h:172:35: note: insert '_Nullable' if the pointer may be null
         strtoll(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nullable
/usr/local/include/stdlib.h:172:35: note: insert '_Nonnull' if the pointer should never be null
         strtoll(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nonnull
/usr/local/include/stdlib.h:172:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoll(const char *__str, char **__endptr, int __base);
                                          ^
/usr/local/include/stdlib.h:172:36: note: insert '_Nullable' if the pointer may be null
         strtoll(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nullable 
/usr/local/include/stdlib.h:172:36: note: insert '_Nonnull' if the pointer should never be null
         strtoll(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nonnull 
/usr/local/include/stdlib.h:175:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoul(const char *__str, char **__endptr, int __base);
                            ^
/usr/local/include/stdlib.h:175:22: note: insert '_Nullable' if the pointer may be null
         strtoul(const char *__str, char **__endptr, int __base);
                            ^
                              _Nullable 
/usr/local/include/stdlib.h:175:22: note: insert '_Nonnull' if the pointer should never be null
         strtoul(const char *__str, char **__endptr, int __base);
                            ^
                              _Nonnull 
/usr/local/include/stdlib.h:175:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoul(const char *__str, char **__endptr, int __base);
                                         ^
/usr/local/include/stdlib.h:175:35: note: insert '_Nullable' if the pointer may be null
         strtoul(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nullable
/usr/local/include/stdlib.h:175:35: note: insert '_Nonnull' if the pointer should never be null
         strtoul(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nonnull
/usr/local/include/stdlib.h:175:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoul(const char *__str, char **__endptr, int __base);
                                          ^
/usr/local/include/stdlib.h:175:36: note: insert '_Nullable' if the pointer may be null
         strtoul(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nullable 
/usr/local/include/stdlib.h:175:36: note: insert '_Nonnull' if the pointer should never be null
         strtoul(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nonnull 
/usr/local/include/stdlib.h:178:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoull(const char *__str, char **__endptr, int __base);
                             ^
/usr/local/include/stdlib.h:178:23: note: insert '_Nullable' if the pointer may be null
         strtoull(const char *__str, char **__endptr, int __base);
                             ^
                               _Nullable 
/usr/local/include/stdlib.h:178:23: note: insert '_Nonnull' if the pointer should never be null
         strtoull(const char *__str, char **__endptr, int __base);
                             ^
                               _Nonnull 
/usr/local/include/stdlib.h:178:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoull(const char *__str, char **__endptr, int __base);
                                          ^
/usr/local/include/stdlib.h:178:36: note: insert '_Nullable' if the pointer may be null
         strtoull(const char *__str, char **__endptr, int __base);
                                          ^
                                           _Nullable
/usr/local/include/stdlib.h:178:36: note: insert '_Nonnull' if the pointer should never be null
         strtoull(const char *__str, char **__endptr, int __base);
                                          ^
                                           _Nonnull
/usr/local/include/stdlib.h:178:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoull(const char *__str, char **__endptr, int __base);
                                           ^
/usr/local/include/stdlib.h:178:37: note: insert '_Nullable' if the pointer may be null
         strtoull(const char *__str, char **__endptr, int __base);
                                           ^
                                             _Nullable 
/usr/local/include/stdlib.h:178:37: note: insert '_Nonnull' if the pointer should never be null
         strtoull(const char *__str, char **__endptr, int __base);
                                           ^
                                             _Nonnull 
/usr/local/include/stdlib.h:190:24: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      system(const char *) __DARWIN_ALIAS_C(system);
                           ^
/usr/local/include/stdlib.h:190:24: note: insert '_Nullable' if the pointer may be null
int      system(const char *) __DARWIN_ALIAS_C(system);
                           ^
                            _Nullable
/usr/local/include/stdlib.h:190:24: note: insert '_Nonnull' if the pointer should never be null
int      system(const char *) __DARWIN_ALIAS_C(system);
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:194:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                       ^
/usr/local/include/stdlib.h:194:23: note: insert '_Nullable' if the pointer may be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                       ^
                         _Nullable
/usr/local/include/stdlib.h:194:23: note: insert '_Nonnull' if the pointer should never be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                       ^
                         _Nonnull
/usr/local/include/stdlib.h:194:51: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                                                   ^
/usr/local/include/stdlib.h:194:51: note: insert '_Nullable' if the pointer may be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                                                   ^
                                                     _Nullable
/usr/local/include/stdlib.h:194:51: note: insert '_Nonnull' if the pointer should never be null
size_t   wcstombs(char * __restrict, const wchar_t * __restrict, size_t);
                                                   ^
                                                     _Nonnull
/usr/local/include/stdlib.h:195:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      wctomb(char *, wchar_t);
                     ^
/usr/local/include/stdlib.h:195:18: note: insert '_Nullable' if the pointer may be null
int      wctomb(char *, wchar_t);
                     ^
                      _Nullable
/usr/local/include/stdlib.h:195:18: note: insert '_Nonnull' if the pointer should never be null
int      wctomb(char *, wchar_t);
                     ^
                      _Nonnull
/usr/local/include/stdlib.h:199:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
long     a64l(const char *);
                         ^
/usr/local/include/stdlib.h:199:23: note: insert '_Nullable' if the pointer may be null
long     a64l(const char *);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:199:23: note: insert '_Nonnull' if the pointer should never be null
long     a64l(const char *);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:201:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
/usr/local/include/stdlib.h:201:29: note: insert '_Nullable' if the pointer may be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nullable 
/usr/local/include/stdlib.h:201:29: note: insert '_Nonnull' if the pointer should never be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nonnull 
/usr/local/include/stdlib.h:201:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
/usr/local/include/stdlib.h:201:46: note: insert '_Nullable' if the pointer may be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nullable 
/usr/local/include/stdlib.h:201:46: note: insert '_Nonnull' if the pointer should never be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nonnull 
/usr/local/include/stdlib.h:201:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
/usr/local/include/stdlib.h:201:6: note: insert '_Nullable' if the pointer may be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nullable 
/usr/local/include/stdlib.h:201:6: note: insert '_Nonnull' if the pointer should never be null
char    *ecvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nonnull 
/usr/local/include/stdlib.h:202:31: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
double   erand48(unsigned short[3]);
                               ^
/usr/local/include/stdlib.h:202:31: note: insert '_Nullable' if the array parameter may be null
double   erand48(unsigned short[3]);
                               ^
                                _Nullable 
/usr/local/include/stdlib.h:202:31: note: insert '_Nonnull' if the array parameter should never be null
double   erand48(unsigned short[3]);
                               ^
                                _Nonnull 
/usr/local/include/stdlib.h:203:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
/usr/local/include/stdlib.h:203:29: note: insert '_Nullable' if the pointer may be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nullable 
/usr/local/include/stdlib.h:203:29: note: insert '_Nonnull' if the pointer should never be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                               ^
                                 _Nonnull 
/usr/local/include/stdlib.h:203:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
/usr/local/include/stdlib.h:203:46: note: insert '_Nullable' if the pointer may be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nullable 
/usr/local/include/stdlib.h:203:46: note: insert '_Nonnull' if the pointer should never be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
                                                ^
                                                  _Nonnull 
/usr/local/include/stdlib.h:203:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
/usr/local/include/stdlib.h:203:6: note: insert '_Nullable' if the pointer may be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nullable 
/usr/local/include/stdlib.h:203:6: note: insert '_Nonnull' if the pointer should never be null
char    *fcvt(double, int, int *__restrict, int *__restrict); /* LEGACY */
        ^
          _Nonnull 
/usr/local/include/stdlib.h:204:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *gcvt(double, int, char *); /* LEGACY */
                                ^
/usr/local/include/stdlib.h:204:30: note: insert '_Nullable' if the pointer may be null
char    *gcvt(double, int, char *); /* LEGACY */
                                ^
                                 _Nullable
/usr/local/include/stdlib.h:204:30: note: insert '_Nonnull' if the pointer should never be null
char    *gcvt(double, int, char *); /* LEGACY */
                                ^
                                 _Nonnull
/usr/local/include/stdlib.h:204:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *gcvt(double, int, char *); /* LEGACY */
        ^
/usr/local/include/stdlib.h:204:6: note: insert '_Nullable' if the pointer may be null
char    *gcvt(double, int, char *); /* LEGACY */
        ^
          _Nullable 
/usr/local/include/stdlib.h:204:6: note: insert '_Nonnull' if the pointer should never be null
char    *gcvt(double, int, char *); /* LEGACY */
        ^
          _Nonnull 
/usr/local/include/stdlib.h:205:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                        ^
/usr/local/include/stdlib.h:205:21: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                        ^
                         _Nullable
/usr/local/include/stdlib.h:205:21: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                        ^
                         _Nonnull
/usr/local/include/stdlib.h:205:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                         ^
/usr/local/include/stdlib.h:205:22: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:205:22: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:205:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                 ^
/usr/local/include/stdlib.h:205:30: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                 ^
                                   _Nullable
/usr/local/include/stdlib.h:205:30: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                 ^
                                   _Nonnull
/usr/local/include/stdlib.h:205:38: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                         ^
/usr/local/include/stdlib.h:205:38: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                         ^
                                          _Nullable
/usr/local/include/stdlib.h:205:38: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                         ^
                                          _Nonnull
/usr/local/include/stdlib.h:205:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                                 ^
/usr/local/include/stdlib.h:205:46: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:205:46: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:205:47: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      getsubopt(char **, char * const *, char **);
                                                  ^
/usr/local/include/stdlib.h:205:47: note: insert '_Nullable' if the pointer may be null
int      getsubopt(char **, char * const *, char **);
                                                  ^
                                                   _Nullable
/usr/local/include/stdlib.h:205:47: note: insert '_Nonnull' if the pointer should never be null
int      getsubopt(char **, char * const *, char **);
                                                  ^
                                                   _Nonnull
/usr/local/include/stdlib.h:208:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
                                  ^
/usr/local/include/stdlib.h:208:32: note: insert '_Nullable' if the pointer may be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
                                  ^
                                   _Nullable
/usr/local/include/stdlib.h:208:32: note: insert '_Nonnull' if the pointer should never be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
                                  ^
                                   _Nonnull
/usr/local/include/stdlib.h:208:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
        ^
/usr/local/include/stdlib.h:208:6: note: insert '_Nullable' if the pointer may be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
        ^
          _Nullable 
/usr/local/include/stdlib.h:208:6: note: insert '_Nonnull' if the pointer should never be null
char    *initstate(unsigned, char *, size_t); /* no  __DARWIN_ALIAS needed */
        ^
          _Nonnull 
/usr/local/include/stdlib.h:212:29: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
long     jrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
/usr/local/include/stdlib.h:212:29: note: insert '_Nullable' if the array parameter may be null
long     jrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nullable 
/usr/local/include/stdlib.h:212:29: note: insert '_Nonnull' if the array parameter should never be null
long     jrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nonnull 
/usr/local/include/stdlib.h:213:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *l64a(long);
        ^
/usr/local/include/stdlib.h:213:6: note: insert '_Nullable' if the pointer may be null
char    *l64a(long);
        ^
          _Nullable 
/usr/local/include/stdlib.h:213:6: note: insert '_Nonnull' if the pointer should never be null
char    *l64a(long);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:214:29: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
void     lcong48(unsigned short[7]);
                               ^
/usr/local/include/stdlib.h:214:29: note: insert '_Nullable' if the array parameter may be null
void     lcong48(unsigned short[7]);
                               ^
                                _Nullable 
/usr/local/include/stdlib.h:214:29: note: insert '_Nonnull' if the array parameter should never be null
void     lcong48(unsigned short[7]);
                               ^
                                _Nonnull 
/usr/local/include/stdlib.h:216:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *mktemp(char *);
                     ^
/usr/local/include/stdlib.h:216:19: note: insert '_Nullable' if the pointer may be null
char    *mktemp(char *);
                     ^
                      _Nullable
/usr/local/include/stdlib.h:216:19: note: insert '_Nonnull' if the pointer should never be null
char    *mktemp(char *);
                     ^
                      _Nonnull
/usr/local/include/stdlib.h:216:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *mktemp(char *);
        ^
/usr/local/include/stdlib.h:216:6: note: insert '_Nullable' if the pointer may be null
char    *mktemp(char *);
        ^
          _Nullable 
/usr/local/include/stdlib.h:216:6: note: insert '_Nonnull' if the pointer should never be null
char    *mktemp(char *);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:217:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mkstemp(char *);
                      ^
/usr/local/include/stdlib.h:217:19: note: insert '_Nullable' if the pointer may be null
int      mkstemp(char *);
                      ^
                       _Nullable
/usr/local/include/stdlib.h:217:19: note: insert '_Nonnull' if the pointer should never be null
int      mkstemp(char *);
                      ^
                       _Nonnull
/usr/local/include/stdlib.h:219:29: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
long     nrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
/usr/local/include/stdlib.h:219:29: note: insert '_Nullable' if the array parameter may be null
long     nrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nullable 
/usr/local/include/stdlib.h:219:29: note: insert '_Nonnull' if the array parameter should never be null
long     nrand48(unsigned short[3]) __swift_unavailable("Use arc4random instead.");
                               ^
                                _Nonnull 
/usr/local/include/stdlib.h:221:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *ptsname(int);
        ^
/usr/local/include/stdlib.h:221:6: note: insert '_Nullable' if the pointer may be null
char    *ptsname(int);
        ^
          _Nullable 
/usr/local/include/stdlib.h:221:6: note: insert '_Nonnull' if the pointer should never be null
char    *ptsname(int);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:224:32: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int ptsname_r(int fildes, char *buffer, size_t buflen) __API_AVAILABLE(macos(10.13.4), ios(11.3), tvos(11.3), watchos(4.3));
                               ^
/usr/local/include/stdlib.h:224:32: note: insert '_Nullable' if the pointer may be null
int ptsname_r(int fildes, char *buffer, size_t buflen) __API_AVAILABLE(macos(10.13.4), ios(11.3), tvos(11.3), watchos(4.3));
                               ^
                                 _Nullable 
/usr/local/include/stdlib.h:224:32: note: insert '_Nonnull' if the pointer should never be null
int ptsname_r(int fildes, char *buffer, size_t buflen) __API_AVAILABLE(macos(10.13.4), ios(11.3), tvos(11.3), watchos(4.3));
                               ^
                                 _Nonnull 
/usr/local/include/stdlib.h:227:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      putenv(char *) __DARWIN_ALIAS(putenv);
                     ^
/usr/local/include/stdlib.h:227:18: note: insert '_Nullable' if the pointer may be null
int      putenv(char *) __DARWIN_ALIAS(putenv);
                     ^
                      _Nullable
/usr/local/include/stdlib.h:227:18: note: insert '_Nonnull' if the pointer should never be null
int      putenv(char *) __DARWIN_ALIAS(putenv);
                     ^
                      _Nonnull
/usr/local/include/stdlib.h:229:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      rand_r(unsigned *) __swift_unavailable("Use arc4random instead.");
                         ^
/usr/local/include/stdlib.h:229:22: note: insert '_Nullable' if the pointer may be null
int      rand_r(unsigned *) __swift_unavailable("Use arc4random instead.");
                         ^
                          _Nullable
/usr/local/include/stdlib.h:229:22: note: insert '_Nonnull' if the pointer should never be null
int      rand_r(unsigned *) __swift_unavailable("Use arc4random instead.");
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:231:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                             ^
/usr/local/include/stdlib.h:231:27: note: insert '_Nullable' if the pointer may be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                             ^
                               _Nullable
/usr/local/include/stdlib.h:231:27: note: insert '_Nonnull' if the pointer should never be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                             ^
                               _Nonnull
/usr/local/include/stdlib.h:231:46: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                                                ^
/usr/local/include/stdlib.h:231:46: note: insert '_Nullable' if the pointer may be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                                                ^
                                                  _Nullable
/usr/local/include/stdlib.h:231:46: note: insert '_Nonnull' if the pointer should never be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
                                                ^
                                                  _Nonnull
/usr/local/include/stdlib.h:231:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
        ^
/usr/local/include/stdlib.h:231:6: note: insert '_Nullable' if the pointer may be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
        ^
          _Nullable 
/usr/local/include/stdlib.h:231:6: note: insert '_Nonnull' if the pointer should never be null
char    *realpath(const char * __restrict, char * __restrict) __DARWIN_EXTSN(realpath);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:236:24: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
        *seed48(unsigned short[3]);
                              ^
/usr/local/include/stdlib.h:236:24: note: insert '_Nullable' if the array parameter may be null
        *seed48(unsigned short[3]);
                              ^
                               _Nullable 
/usr/local/include/stdlib.h:236:24: note: insert '_Nonnull' if the array parameter should never be null
        *seed48(unsigned short[3]);
                              ^
                               _Nonnull 
/usr/local/include/stdlib.h:236:2: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        *seed48(unsigned short[3]);
        ^
/usr/local/include/stdlib.h:236:2: note: insert '_Nullable' if the pointer may be null
        *seed48(unsigned short[3]);
        ^
          _Nullable 
/usr/local/include/stdlib.h:236:2: note: insert '_Nonnull' if the pointer should never be null
        *seed48(unsigned short[3]);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:237:24: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                           ^
/usr/local/include/stdlib.h:237:24: note: insert '_Nullable' if the pointer may be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                           ^
                             _Nullable
/usr/local/include/stdlib.h:237:24: note: insert '_Nonnull' if the pointer should never be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                           ^
                             _Nonnull
/usr/local/include/stdlib.h:237:45: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                                                ^
/usr/local/include/stdlib.h:237:45: note: insert '_Nullable' if the pointer may be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                                                ^
                                                  _Nullable
/usr/local/include/stdlib.h:237:45: note: insert '_Nonnull' if the pointer should never be null
int      setenv(const char * __name, const char * __value, int __overwrite) __DARWIN_ALIAS(setenv);
                                                ^
                                                  _Nonnull
/usr/local/include/stdlib.h:239:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     setkey(const char *) __DARWIN_ALIAS(setkey);
                           ^
/usr/local/include/stdlib.h:239:25: note: insert '_Nullable' if the pointer may be null
void     setkey(const char *) __DARWIN_ALIAS(setkey);
                           ^
                            _Nullable
/usr/local/include/stdlib.h:239:25: note: insert '_Nonnull' if the pointer should never be null
void     setkey(const char *) __DARWIN_ALIAS(setkey);
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:243:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *setstate(const char *);
                             ^
/usr/local/include/stdlib.h:243:27: note: insert '_Nullable' if the pointer may be null
char    *setstate(const char *);
                             ^
                              _Nullable
/usr/local/include/stdlib.h:243:27: note: insert '_Nonnull' if the pointer should never be null
char    *setstate(const char *);
                             ^
                              _Nonnull
/usr/local/include/stdlib.h:243:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *setstate(const char *);
        ^
/usr/local/include/stdlib.h:243:6: note: insert '_Nullable' if the pointer may be null
char    *setstate(const char *);
        ^
          _Nullable 
/usr/local/include/stdlib.h:243:6: note: insert '_Nonnull' if the pointer should never be null
char    *setstate(const char *);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:252:26: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      unsetenv(const char *) __DARWIN_ALIAS(unsetenv);
                             ^
/usr/local/include/stdlib.h:252:26: note: insert '_Nullable' if the pointer may be null
int      unsetenv(const char *) __DARWIN_ALIAS(unsetenv);
                             ^
                              _Nullable
/usr/local/include/stdlib.h:252:26: note: insert '_Nonnull' if the pointer should never be null
int      unsetenv(const char *) __DARWIN_ALIAS(unsetenv);
                             ^
                              _Nonnull
/usr/local/include/stdlib.h:265:42: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     arc4random_addrandom(unsigned char * /*dat*/, int /*datlen*/)
                                            ^
/usr/local/include/stdlib.h:265:42: note: insert '_Nullable' if the pointer may be null
void     arc4random_addrandom(unsigned char * /*dat*/, int /*datlen*/)
                                            ^
                                              _Nullable
/usr/local/include/stdlib.h:265:42: note: insert '_Nonnull' if the pointer should never be null
void     arc4random_addrandom(unsigned char * /*dat*/, int /*datlen*/)
                                            ^
                                              _Nonnull
/usr/local/include/stdlib.h:270:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     arc4random_buf(void * __buf, size_t __nbytes) __OSX_AVAILABLE_STARTING(__MAC_10_7, __IPHONE_4_3);
                             ^
/usr/local/include/stdlib.h:270:27: note: insert '_Nullable' if the pointer may be null
void     arc4random_buf(void * __buf, size_t __nbytes) __OSX_AVAILABLE_STARTING(__MAC_10_7, __IPHONE_4_3);
                             ^
                               _Nullable
/usr/local/include/stdlib.h:270:27: note: insert '_Nonnull' if the pointer should never be null
void     arc4random_buf(void * __buf, size_t __nbytes) __OSX_AVAILABLE_STARTING(__MAC_10_7, __IPHONE_4_3);
                             ^
                               _Nonnull
/usr/local/include/stdlib.h:276:28: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                              ^
/usr/local/include/stdlib.h:276:28: note: insert '_Nullable' if the pointer may be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                              ^
                                _Nullable 
/usr/local/include/stdlib.h:276:28: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                              ^
                                _Nonnull 
/usr/local/include/stdlib.h:276:47: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                                                 ^
/usr/local/include/stdlib.h:276:47: note: insert '_Nullable' if the pointer may be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                                                 ^
                                                   _Nullable 
/usr/local/include/stdlib.h:276:47: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
                                                 ^
                                                   _Nonnull 
/usr/local/include/stdlib.h:277:59: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                 ^
/usr/local/include/stdlib.h:277:59: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                 ^
                                                                  _Nullable
/usr/local/include/stdlib.h:277:59: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                 ^
                                                                  _Nonnull
/usr/local/include/stdlib.h:277:73: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                               ^
/usr/local/include/stdlib.h:277:73: note: insert '_Nullable' if the pointer may be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                               ^
                                                                                _Nullable
/usr/local/include/stdlib.h:277:73: note: insert '_Nonnull' if the pointer should never be null
            size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __OSX_AVAILABLE_STARTING(__MAC_10_6, __IPHONE_3_2);
                                                                               ^
                                                                                _Nonnull
/usr/local/include/stdlib.h:276:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
        ^
/usr/local/include/stdlib.h:276:6: note: insert '_Nullable' if the pointer may be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
        ^
          _Nullable 
/usr/local/include/stdlib.h:276:6: note: insert '_Nonnull' if the pointer should never be null
void    *bsearch_b(const void *__key, const void *__base, size_t __nel,
        ^
          _Nonnull 
/usr/local/include/stdlib.h:281:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *cgetcap(char *, const char *, int);
                      ^
/usr/local/include/stdlib.h:281:20: note: insert '_Nullable' if the pointer may be null
char    *cgetcap(char *, const char *, int);
                      ^
                       _Nullable
/usr/local/include/stdlib.h:281:20: note: insert '_Nonnull' if the pointer should never be null
char    *cgetcap(char *, const char *, int);
                      ^
                       _Nonnull
/usr/local/include/stdlib.h:281:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *cgetcap(char *, const char *, int);
                                    ^
/usr/local/include/stdlib.h:281:34: note: insert '_Nullable' if the pointer may be null
char    *cgetcap(char *, const char *, int);
                                    ^
                                     _Nullable
/usr/local/include/stdlib.h:281:34: note: insert '_Nonnull' if the pointer should never be null
char    *cgetcap(char *, const char *, int);
                                    ^
                                     _Nonnull
/usr/local/include/stdlib.h:281:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *cgetcap(char *, const char *, int);
        ^
/usr/local/include/stdlib.h:281:6: note: insert '_Nullable' if the pointer may be null
char    *cgetcap(char *, const char *, int);
        ^
          _Nullable 
/usr/local/include/stdlib.h:281:6: note: insert '_Nonnull' if the pointer should never be null
char    *cgetcap(char *, const char *, int);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:283:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                      ^
/usr/local/include/stdlib.h:283:19: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                      ^
                       _Nullable
/usr/local/include/stdlib.h:283:19: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                      ^
                       _Nonnull
/usr/local/include/stdlib.h:283:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                       ^
/usr/local/include/stdlib.h:283:20: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                       ^
                        _Nullable
/usr/local/include/stdlib.h:283:20: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                       ^
                        _Nonnull
/usr/local/include/stdlib.h:283:28: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                               ^
/usr/local/include/stdlib.h:283:28: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                               ^
                                _Nullable
/usr/local/include/stdlib.h:283:28: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                               ^
                                _Nonnull
/usr/local/include/stdlib.h:283:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                                ^
/usr/local/include/stdlib.h:283:29: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                                ^
                                 _Nullable
/usr/local/include/stdlib.h:283:29: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                                ^
                                 _Nonnull
/usr/local/include/stdlib.h:283:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetent(char **, char **, const char *);
                                              ^
/usr/local/include/stdlib.h:283:43: note: insert '_Nullable' if the pointer may be null
int      cgetent(char **, char **, const char *);
                                              ^
                                               _Nullable
/usr/local/include/stdlib.h:283:43: note: insert '_Nonnull' if the pointer should never be null
int      cgetent(char **, char **, const char *);
                                              ^
                                               _Nonnull
/usr/local/include/stdlib.h:284:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                        ^
/usr/local/include/stdlib.h:284:21: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                        ^
                         _Nullable
/usr/local/include/stdlib.h:284:21: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                        ^
                         _Nonnull
/usr/local/include/stdlib.h:284:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                         ^
/usr/local/include/stdlib.h:284:22: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                         ^
                          _Nullable
/usr/local/include/stdlib.h:284:22: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                         ^
                          _Nonnull
/usr/local/include/stdlib.h:284:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                                 ^
/usr/local/include/stdlib.h:284:30: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                                 ^
                                  _Nullable
/usr/local/include/stdlib.h:284:30: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                                 ^
                                  _Nonnull
/usr/local/include/stdlib.h:284:31: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetfirst(char **, char **);
                                  ^
/usr/local/include/stdlib.h:284:31: note: insert '_Nullable' if the pointer may be null
int      cgetfirst(char **, char **);
                                  ^
                                   _Nullable
/usr/local/include/stdlib.h:284:31: note: insert '_Nonnull' if the pointer should never be null
int      cgetfirst(char **, char **);
                                  ^
                                   _Nonnull
/usr/local/include/stdlib.h:285:27: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetmatch(const char *, const char *);
                              ^
/usr/local/include/stdlib.h:285:27: note: insert '_Nullable' if the pointer may be null
int      cgetmatch(const char *, const char *);
                              ^
                               _Nullable
/usr/local/include/stdlib.h:285:27: note: insert '_Nonnull' if the pointer should never be null
int      cgetmatch(const char *, const char *);
                              ^
                               _Nonnull
/usr/local/include/stdlib.h:285:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetmatch(const char *, const char *);
                                            ^
/usr/local/include/stdlib.h:285:41: note: insert '_Nullable' if the pointer may be null
int      cgetmatch(const char *, const char *);
                                            ^
                                             _Nullable
/usr/local/include/stdlib.h:285:41: note: insert '_Nonnull' if the pointer should never be null
int      cgetmatch(const char *, const char *);
                                            ^
                                             _Nonnull
/usr/local/include/stdlib.h:286:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                       ^
/usr/local/include/stdlib.h:286:20: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                       ^
                        _Nullable
/usr/local/include/stdlib.h:286:20: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                       ^
                        _Nonnull
/usr/local/include/stdlib.h:286:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                        ^
/usr/local/include/stdlib.h:286:21: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                        ^
                         _Nullable
/usr/local/include/stdlib.h:286:21: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                        ^
                         _Nonnull
/usr/local/include/stdlib.h:286:29: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                                ^
/usr/local/include/stdlib.h:286:29: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                                ^
                                 _Nullable
/usr/local/include/stdlib.h:286:29: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                                ^
                                 _Nonnull
/usr/local/include/stdlib.h:286:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnext(char **, char **);
                                 ^
/usr/local/include/stdlib.h:286:30: note: insert '_Nullable' if the pointer may be null
int      cgetnext(char **, char **);
                                 ^
                                  _Nullable
/usr/local/include/stdlib.h:286:30: note: insert '_Nonnull' if the pointer should never be null
int      cgetnext(char **, char **);
                                 ^
                                  _Nonnull
/usr/local/include/stdlib.h:287:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnum(char *, const char *, long *);
                      ^
/usr/local/include/stdlib.h:287:19: note: insert '_Nullable' if the pointer may be null
int      cgetnum(char *, const char *, long *);
                      ^
                       _Nullable
/usr/local/include/stdlib.h:287:19: note: insert '_Nonnull' if the pointer should never be null
int      cgetnum(char *, const char *, long *);
                      ^
                       _Nonnull
/usr/local/include/stdlib.h:287:33: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnum(char *, const char *, long *);
                                    ^
/usr/local/include/stdlib.h:287:33: note: insert '_Nullable' if the pointer may be null
int      cgetnum(char *, const char *, long *);
                                    ^
                                     _Nullable
/usr/local/include/stdlib.h:287:33: note: insert '_Nonnull' if the pointer should never be null
int      cgetnum(char *, const char *, long *);
                                    ^
                                     _Nonnull
/usr/local/include/stdlib.h:287:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetnum(char *, const char *, long *);
                                            ^
/usr/local/include/stdlib.h:287:41: note: insert '_Nullable' if the pointer may be null
int      cgetnum(char *, const char *, long *);
                                            ^
                                             _Nullable
/usr/local/include/stdlib.h:287:41: note: insert '_Nonnull' if the pointer should never be null
int      cgetnum(char *, const char *, long *);
                                            ^
                                             _Nonnull
/usr/local/include/stdlib.h:288:25: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetset(const char *);
                            ^
/usr/local/include/stdlib.h:288:25: note: insert '_Nullable' if the pointer may be null
int      cgetset(const char *);
                            ^
                             _Nullable
/usr/local/include/stdlib.h:288:25: note: insert '_Nonnull' if the pointer should never be null
int      cgetset(const char *);
                            ^
                             _Nonnull
/usr/local/include/stdlib.h:289:19: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                      ^
/usr/local/include/stdlib.h:289:19: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                      ^
                       _Nullable
/usr/local/include/stdlib.h:289:19: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                      ^
                       _Nonnull
/usr/local/include/stdlib.h:289:33: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                                    ^
/usr/local/include/stdlib.h:289:33: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                                    ^
                                     _Nullable
/usr/local/include/stdlib.h:289:33: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                                    ^
                                     _Nonnull
/usr/local/include/stdlib.h:289:41: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                                            ^
/usr/local/include/stdlib.h:289:41: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                                            ^
                                             _Nullable
/usr/local/include/stdlib.h:289:41: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                                            ^
                                             _Nonnull
/usr/local/include/stdlib.h:289:42: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetstr(char *, const char *, char **);
                                             ^
/usr/local/include/stdlib.h:289:42: note: insert '_Nullable' if the pointer may be null
int      cgetstr(char *, const char *, char **);
                                             ^
                                              _Nullable
/usr/local/include/stdlib.h:289:42: note: insert '_Nonnull' if the pointer should never be null
int      cgetstr(char *, const char *, char **);
                                             ^
                                              _Nonnull
/usr/local/include/stdlib.h:290:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                       ^
/usr/local/include/stdlib.h:290:20: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                       ^
                        _Nullable
/usr/local/include/stdlib.h:290:20: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                       ^
                        _Nonnull
/usr/local/include/stdlib.h:290:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                                     ^
/usr/local/include/stdlib.h:290:34: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                                     ^
                                      _Nullable
/usr/local/include/stdlib.h:290:34: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                                     ^
                                      _Nonnull
/usr/local/include/stdlib.h:290:42: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                                             ^
/usr/local/include/stdlib.h:290:42: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                                             ^
                                              _Nullable
/usr/local/include/stdlib.h:290:42: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                                             ^
                                              _Nonnull
/usr/local/include/stdlib.h:290:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      cgetustr(char *, const char *, char **);
                                              ^
/usr/local/include/stdlib.h:290:43: note: insert '_Nullable' if the pointer may be null
int      cgetustr(char *, const char *, char **);
                                              ^
                                               _Nullable
/usr/local/include/stdlib.h:290:43: note: insert '_Nonnull' if the pointer should never be null
int      cgetustr(char *, const char *, char **);
                                              ^
                                               _Nonnull
/usr/local/include/stdlib.h:293:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *devname(dev_t, mode_t);
        ^
/usr/local/include/stdlib.h:293:6: note: insert '_Nullable' if the pointer may be null
char    *devname(dev_t, mode_t);
        ^
          _Nullable 
/usr/local/include/stdlib.h:293:6: note: insert '_Nonnull' if the pointer should never be null
char    *devname(dev_t, mode_t);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:294:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *devname_r(dev_t, mode_t, char *buf, int len);
                                       ^
/usr/local/include/stdlib.h:294:37: note: insert '_Nullable' if the pointer may be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
                                       ^
                                         _Nullable 
/usr/local/include/stdlib.h:294:37: note: insert '_Nonnull' if the pointer should never be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
                                       ^
                                         _Nonnull 
/usr/local/include/stdlib.h:294:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *devname_r(dev_t, mode_t, char *buf, int len);
        ^
/usr/local/include/stdlib.h:294:6: note: insert '_Nullable' if the pointer may be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
        ^
          _Nullable 
/usr/local/include/stdlib.h:294:6: note: insert '_Nonnull' if the pointer should never be null
char    *devname_r(dev_t, mode_t, char *buf, int len);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:295:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getbsize(int *, long *);
                      ^
/usr/local/include/stdlib.h:295:20: note: insert '_Nullable' if the pointer may be null
char    *getbsize(int *, long *);
                      ^
                       _Nullable
/usr/local/include/stdlib.h:295:20: note: insert '_Nonnull' if the pointer should never be null
char    *getbsize(int *, long *);
                      ^
                       _Nonnull
/usr/local/include/stdlib.h:295:28: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getbsize(int *, long *);
                              ^
/usr/local/include/stdlib.h:295:28: note: insert '_Nullable' if the pointer may be null
char    *getbsize(int *, long *);
                              ^
                               _Nullable
/usr/local/include/stdlib.h:295:28: note: insert '_Nonnull' if the pointer should never be null
char    *getbsize(int *, long *);
                              ^
                               _Nonnull
/usr/local/include/stdlib.h:295:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
char    *getbsize(int *, long *);
        ^
/usr/local/include/stdlib.h:295:6: note: insert '_Nullable' if the pointer may be null
char    *getbsize(int *, long *);
        ^
          _Nullable 
/usr/local/include/stdlib.h:295:6: note: insert '_Nonnull' if the pointer should never be null
char    *getbsize(int *, long *);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:296:24: warning: array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness-on-arrays]
int      getloadavg(double [], int);
                           ^
/usr/local/include/stdlib.h:296:24: note: insert '_Nullable' if the array parameter may be null
int      getloadavg(double [], int);
                           ^
                            _Nullable
/usr/local/include/stdlib.h:296:24: note: insert '_Nonnull' if the array parameter should never be null
int      getloadavg(double [], int);
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:298:2: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        *getprogname(void);
        ^
/usr/local/include/stdlib.h:298:2: note: insert '_Nullable' if the pointer may be null
        *getprogname(void);
        ^
          _Nullable 
/usr/local/include/stdlib.h:298:2: note: insert '_Nonnull' if the pointer should never be null
        *getprogname(void);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:299:30: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     setprogname(const char *);
                                ^
/usr/local/include/stdlib.h:299:30: note: insert '_Nullable' if the pointer may be null
void     setprogname(const char *);
                                ^
                                 _Nullable
/usr/local/include/stdlib.h:299:30: note: insert '_Nonnull' if the pointer should never be null
void     setprogname(const char *);
                                ^
                                 _Nonnull
/usr/local/include/stdlib.h:309:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      heapsort(void *__base, size_t __nel, size_t __width,
                       ^
/usr/local/include/stdlib.h:309:20: note: insert '_Nullable' if the pointer may be null
int      heapsort(void *__base, size_t __nel, size_t __width,
                       ^
                         _Nullable 
/usr/local/include/stdlib.h:309:20: note: insert '_Nonnull' if the pointer should never be null
int      heapsort(void *__base, size_t __nel, size_t __width,
                       ^
                         _Nonnull 
/usr/local/include/stdlib.h:310:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
/usr/local/include/stdlib.h:310:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:310:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:310:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
/usr/local/include/stdlib.h:310:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:310:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:312:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      heapsort_b(void *__base, size_t __nel, size_t __width,
                         ^
/usr/local/include/stdlib.h:312:22: note: insert '_Nullable' if the pointer may be null
int      heapsort_b(void *__base, size_t __nel, size_t __width,
                         ^
                           _Nullable 
/usr/local/include/stdlib.h:312:22: note: insert '_Nonnull' if the pointer should never be null
int      heapsort_b(void *__base, size_t __nel, size_t __width,
                         ^
                           _Nonnull 
/usr/local/include/stdlib.h:313:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
/usr/local/include/stdlib.h:313:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:313:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:313:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
/usr/local/include/stdlib.h:313:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:313:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:316:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mergesort(void *__base, size_t __nel, size_t __width,
                        ^
/usr/local/include/stdlib.h:316:21: note: insert '_Nullable' if the pointer may be null
int      mergesort(void *__base, size_t __nel, size_t __width,
                        ^
                          _Nullable 
/usr/local/include/stdlib.h:316:21: note: insert '_Nonnull' if the pointer should never be null
int      mergesort(void *__base, size_t __nel, size_t __width,
                        ^
                          _Nonnull 
/usr/local/include/stdlib.h:317:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
/usr/local/include/stdlib.h:317:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:317:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:317:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
/usr/local/include/stdlib.h:317:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:317:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *));
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:319:23: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      mergesort_b(void *__base, size_t __nel, size_t __width,
                          ^
/usr/local/include/stdlib.h:319:23: note: insert '_Nullable' if the pointer may be null
int      mergesort_b(void *__base, size_t __nel, size_t __width,
                          ^
                            _Nullable 
/usr/local/include/stdlib.h:319:23: note: insert '_Nonnull' if the pointer should never be null
int      mergesort_b(void *__base, size_t __nel, size_t __width,
                          ^
                            _Nonnull 
/usr/local/include/stdlib.h:320:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
/usr/local/include/stdlib.h:320:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:320:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:320:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
/usr/local/include/stdlib.h:320:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:320:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:323:18: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort(void *__base, size_t __nel, size_t __width,
                    ^
/usr/local/include/stdlib.h:323:18: note: insert '_Nullable' if the pointer may be null
void     psort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nullable 
/usr/local/include/stdlib.h:323:18: note: insert '_Nonnull' if the pointer should never be null
void     psort(void *__base, size_t __nel, size_t __width,
                    ^
                      _Nonnull 
/usr/local/include/stdlib.h:324:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *))
                                                 ^
/usr/local/include/stdlib.h:324:43: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *))
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:324:43: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *))
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:324:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(const void *, const void *))
                                                               ^
/usr/local/include/stdlib.h:324:57: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(const void *, const void *))
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:324:57: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(const void *, const void *))
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:327:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort_b(void *__base, size_t __nel, size_t __width,
                      ^
/usr/local/include/stdlib.h:327:20: note: insert '_Nullable' if the pointer may be null
void     psort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nullable 
/usr/local/include/stdlib.h:327:20: note: insert '_Nonnull' if the pointer should never be null
void     psort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nonnull 
/usr/local/include/stdlib.h:328:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
/usr/local/include/stdlib.h:328:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:328:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:328:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
/usr/local/include/stdlib.h:328:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:328:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:331:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
/usr/local/include/stdlib.h:331:20: note: insert '_Nullable' if the pointer may be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nullable 
/usr/local/include/stdlib.h:331:20: note: insert '_Nonnull' if the pointer should never be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nonnull 
/usr/local/include/stdlib.h:331:64: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
/usr/local/include/stdlib.h:331:64: note: insert '_Nullable' if the pointer may be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nullable
/usr/local/include/stdlib.h:331:64: note: insert '_Nonnull' if the pointer should never be null
void     psort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nonnull
/usr/local/include/stdlib.h:332:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                           ^
/usr/local/include/stdlib.h:332:37: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                           ^
                                            _Nullable
/usr/local/include/stdlib.h:332:37: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                           ^
                                            _Nonnull
/usr/local/include/stdlib.h:332:51: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                                         ^
/usr/local/include/stdlib.h:332:51: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                                         ^
                                                          _Nullable
/usr/local/include/stdlib.h:332:51: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                                         ^
                                                          _Nonnull
/usr/local/include/stdlib.h:332:65: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                                                       ^
/usr/local/include/stdlib.h:332:65: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                                                       ^
                                                                        _Nullable
/usr/local/include/stdlib.h:332:65: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *))
                                                                       ^
                                                                        _Nonnull
/usr/local/include/stdlib.h:335:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort_b(void *__base, size_t __nel, size_t __width,
                      ^
/usr/local/include/stdlib.h:335:20: note: insert '_Nullable' if the pointer may be null
void     qsort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nullable 
/usr/local/include/stdlib.h:335:20: note: insert '_Nonnull' if the pointer should never be null
void     qsort_b(void *__base, size_t __nel, size_t __width,
                      ^
                        _Nonnull 
/usr/local/include/stdlib.h:336:43: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
/usr/local/include/stdlib.h:336:43: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nullable
/usr/local/include/stdlib.h:336:43: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                 ^
                                                  _Nonnull
/usr/local/include/stdlib.h:336:57: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
/usr/local/include/stdlib.h:336:57: note: insert '_Nullable' if the pointer may be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nullable
/usr/local/include/stdlib.h:336:57: note: insert '_Nonnull' if the pointer should never be null
            int (^ _Nonnull __compar)(const void *, const void *) __sort_noescape)
                                                               ^
                                                                _Nonnull
/usr/local/include/stdlib.h:339:20: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
/usr/local/include/stdlib.h:339:20: note: insert '_Nullable' if the pointer may be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nullable 
/usr/local/include/stdlib.h:339:20: note: insert '_Nonnull' if the pointer should never be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                      ^
                        _Nonnull 
/usr/local/include/stdlib.h:339:64: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
/usr/local/include/stdlib.h:339:64: note: insert '_Nullable' if the pointer may be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nullable
/usr/local/include/stdlib.h:339:64: note: insert '_Nonnull' if the pointer should never be null
void     qsort_r(void *__base, size_t __nel, size_t __width, void *,
                                                                  ^
                                                                   _Nonnull
/usr/local/include/stdlib.h:340:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                           ^
/usr/local/include/stdlib.h:340:37: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                           ^
                                            _Nullable
/usr/local/include/stdlib.h:340:37: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                           ^
                                            _Nonnull
/usr/local/include/stdlib.h:340:51: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                         ^
/usr/local/include/stdlib.h:340:51: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                         ^
                                                          _Nullable
/usr/local/include/stdlib.h:340:51: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                         ^
                                                          _Nonnull
/usr/local/include/stdlib.h:340:65: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                                       ^
/usr/local/include/stdlib.h:340:65: note: insert '_Nullable' if the pointer may be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                                       ^
                                                                        _Nullable
/usr/local/include/stdlib.h:340:65: note: insert '_Nonnull' if the pointer should never be null
            int (* _Nonnull __compar)(void *, const void *, const void *));
                                                                       ^
                                                                        _Nonnull
/usr/local/include/stdlib.h:341:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                       ^
/usr/local/include/stdlib.h:341:36: note: insert '_Nullable' if the pointer may be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                       ^
                                        _Nullable
/usr/local/include/stdlib.h:341:36: note: insert '_Nonnull' if the pointer should never be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                       ^
                                        _Nonnull
/usr/local/include/stdlib.h:341:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
/usr/local/include/stdlib.h:341:37: note: insert '_Nullable' if the pointer may be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                          _Nullable 
/usr/local/include/stdlib.h:341:37: note: insert '_Nonnull' if the pointer should never be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                          _Nonnull 
/usr/local/include/stdlib.h:341:77: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                ^
/usr/local/include/stdlib.h:341:77: note: insert '_Nullable' if the pointer may be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                ^
                                                                                  _Nullable 
/usr/local/include/stdlib.h:341:77: note: insert '_Nonnull' if the pointer should never be null
int      radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                ^
                                                                                  _Nonnull 
/usr/local/include/stdlib.h:343:24: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int     rpmatch(const char *)
                           ^
/usr/local/include/stdlib.h:343:24: note: insert '_Nullable' if the pointer may be null
int     rpmatch(const char *)
                           ^
                            _Nullable
/usr/local/include/stdlib.h:343:24: note: insert '_Nonnull' if the pointer should never be null
int     rpmatch(const char *)
                           ^
                            _Nonnull
/usr/local/include/stdlib.h:345:37: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
/usr/local/include/stdlib.h:345:37: note: insert '_Nullable' if the pointer may be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                         _Nullable
/usr/local/include/stdlib.h:345:37: note: insert '_Nonnull' if the pointer should never be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                        ^
                                         _Nonnull
/usr/local/include/stdlib.h:345:38: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                         ^
/usr/local/include/stdlib.h:345:38: note: insert '_Nullable' if the pointer may be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                         ^
                                           _Nullable 
/usr/local/include/stdlib.h:345:38: note: insert '_Nonnull' if the pointer should never be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                         ^
                                           _Nonnull 
/usr/local/include/stdlib.h:345:78: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                 ^
/usr/local/include/stdlib.h:345:78: note: insert '_Nullable' if the pointer may be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                 ^
                                                                                   _Nullable 
/usr/local/include/stdlib.h:345:78: note: insert '_Nonnull' if the pointer should never be null
int      sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
                                                                                 ^
                                                                                   _Nonnull 
/usr/local/include/stdlib.h:349:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
                       ^
/usr/local/include/stdlib.h:349:21: note: insert '_Nullable' if the pointer may be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
                       ^
                         _Nullable 
/usr/local/include/stdlib.h:349:21: note: insert '_Nonnull' if the pointer should never be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
                       ^
                         _Nonnull 
/usr/local/include/stdlib.h:349:6: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
        ^
/usr/local/include/stdlib.h:349:6: note: insert '_Nullable' if the pointer may be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
        ^
          _Nullable 
/usr/local/include/stdlib.h:349:6: note: insert '_Nonnull' if the pointer should never be null
void    *reallocf(void *__ptr, size_t __size) __alloc_size(2);
        ^
          _Nonnull 
/usr/local/include/stdlib.h:351:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                            ^
/usr/local/include/stdlib.h:351:22: note: insert '_Nullable' if the pointer may be null
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                            ^
                              _Nullable 
/usr/local/include/stdlib.h:351:22: note: insert '_Nonnull' if the pointer should never be null
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                            ^
                              _Nonnull 
/usr/local/include/stdlib.h:351:84: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                                                                                          ^
/usr/local/include/stdlib.h:351:84: note: insert '_Nullable' if the pointer may be null
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                                                                                          ^
                                                                                           _Nullable
/usr/local/include/stdlib.h:351:84: note: insert '_Nonnull' if the pointer should never be null
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                                                                                          ^
                                                                                           _Nonnull
/usr/local/include/stdlib.h:351:85: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                                                                                           ^
/usr/local/include/stdlib.h:351:85: note: insert '_Nullable' if the pointer may be null
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                                                                                           ^
                                                                                             _Nullable 
/usr/local/include/stdlib.h:351:85: note: insert '_Nonnull' if the pointer should never be null
        strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)
                                                                                           ^
                                                                                             _Nonnull 
/usr/local/include/stdlib.h:355:21: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoq(const char *__str, char **__endptr, int __base);
                           ^
/usr/local/include/stdlib.h:355:21: note: insert '_Nullable' if the pointer may be null
         strtoq(const char *__str, char **__endptr, int __base);
                           ^
                             _Nullable 
/usr/local/include/stdlib.h:355:21: note: insert '_Nonnull' if the pointer should never be null
         strtoq(const char *__str, char **__endptr, int __base);
                           ^
                             _Nonnull 
/usr/local/include/stdlib.h:355:34: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoq(const char *__str, char **__endptr, int __base);
                                        ^
/usr/local/include/stdlib.h:355:34: note: insert '_Nullable' if the pointer may be null
         strtoq(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nullable
/usr/local/include/stdlib.h:355:34: note: insert '_Nonnull' if the pointer should never be null
         strtoq(const char *__str, char **__endptr, int __base);
                                        ^
                                         _Nonnull
/usr/local/include/stdlib.h:355:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtoq(const char *__str, char **__endptr, int __base);
                                         ^
/usr/local/include/stdlib.h:355:35: note: insert '_Nullable' if the pointer may be null
         strtoq(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nullable 
/usr/local/include/stdlib.h:355:35: note: insert '_Nonnull' if the pointer should never be null
         strtoq(const char *__str, char **__endptr, int __base);
                                         ^
                                           _Nonnull 
/usr/local/include/stdlib.h:357:22: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtouq(const char *__str, char **__endptr, int __base);
                            ^
/usr/local/include/stdlib.h:357:22: note: insert '_Nullable' if the pointer may be null
         strtouq(const char *__str, char **__endptr, int __base);
                            ^
                              _Nullable 
/usr/local/include/stdlib.h:357:22: note: insert '_Nonnull' if the pointer should never be null
         strtouq(const char *__str, char **__endptr, int __base);
                            ^
                              _Nonnull 
/usr/local/include/stdlib.h:357:35: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtouq(const char *__str, char **__endptr, int __base);
                                         ^
/usr/local/include/stdlib.h:357:35: note: insert '_Nullable' if the pointer may be null
         strtouq(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nullable
/usr/local/include/stdlib.h:357:35: note: insert '_Nonnull' if the pointer should never be null
         strtouq(const char *__str, char **__endptr, int __base);
                                         ^
                                          _Nonnull
/usr/local/include/stdlib.h:357:36: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
         strtouq(const char *__str, char **__endptr, int __base);
                                          ^
/usr/local/include/stdlib.h:357:36: note: insert '_Nullable' if the pointer may be null
         strtouq(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nullable 
/usr/local/include/stdlib.h:357:36: note: insert '_Nonnull' if the pointer should never be null
         strtouq(const char *__str, char **__endptr, int __base);
                                          ^
                                            _Nonnull 
/usr/local/include/stdlib.h:359:13: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
extern char *suboptarg;         /* getsubopt(3) external variable */
            ^
/usr/local/include/stdlib.h:359:13: note: insert '_Nullable' if the pointer may be null
extern char *suboptarg;         /* getsubopt(3) external variable */
            ^
              _Nullable 
/usr/local/include/stdlib.h:359:13: note: insert '_Nonnull' if the pointer should never be null
extern char *suboptarg;         /* getsubopt(3) external variable */
            ^
              _Nonnull 
193 warnings generated.
checked program was:
/* begin */
1: #include "ruby.h"
2: 
3: int main() {return 0;}
/* end */

